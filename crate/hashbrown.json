{"root":1619,"crate_version":"0.16.0","includes_private":false,"index":{"1485":{"id":1485,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"IterHashMut","id":1258,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"604":{"id":604,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":539,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"327":{"id":327,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoIter","id":237,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1208":{"id":1208,"crate_id":0,"name":"into_value","span":{"filename":"src/set.rs","begin":[2509,5],"end":[2511,6]},"visibility":"public","docs":"Take ownership of the value.\n\n# Examples\n\n```\nuse hashbrown::hash_set::{Entry, HashSet};\n\nlet mut set: HashSet<&str> = HashSet::new();\n\nmatch set.entry(\"poneyland\") {\n    Entry::Occupied(_) => panic!(),\n    Entry::Vacant(v) => assert_eq!(v.into_value(), \"poneyland\"),\n}\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"931":{"id":931,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1529,1],"end":[1558,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BitAndAssign","id":932,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[930],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1535":{"id":1535,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"Drain","id":1261,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"654":{"id":654,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4399,1],"end":[4484,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"VacantEntryRef","id":621,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[651,652,653],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"377":{"id":377,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"IntoValues","id":155,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1258":{"id":1258,"crate_id":0,"name":"IterHashMut","span":{"filename":"src/table.rs","begin":[2164,1],"end":[2167,2]},"visibility":"public","docs":"A mutable iterator over the entries of a `HashTable` that could match a given hash.\nThe iterator element type is `&'a mut T`.\n\nThis `struct` is created by the [`iter_hash_mut`] method on [`HashTable`]. See its\ndocumentation for more.\n\n[`iter_hash_mut`]: struct.HashTable.html#method.iter_hash_mut\n[`HashTable`]: struct.HashTable.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"impls":[1481,1482,1483,1484,1485,1486,1487,1488,1489,1490,1491,1492,1493,1494,1496,1500,1501,1503]}}},"100":{"id":100,"crate_id":0,"name":"write_i32","span":{"filename":"src/hasher.rs","begin":[50,5],"end":[64,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Always)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["arg",{"primitive":"i32"}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"981":{"id":981,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":945,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"704":{"id":704,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"RawEntryBuilderMut","id":188,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1585":{"id":1585,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[86,1],"end":[86,38]},"visibility":"public","docs":null,"links":{},"attrs":[{"other":"#[<cfg>(feature = \"default-hasher\")]"}],"deprecation":null,"inner":{"use":{"source":"crate::hasher::DefaultHasher","name":"DefaultHasher","id":69,"is_glob":false}}},"427":{"id":427,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3309,1],"end":[3332,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[423,424,425,426],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1308":{"id":1308,"crate_id":0,"name":"or_insert","span":{"filename":"src/table.rs","begin":[1397,5],"end":[1402,6]},"visibility":"public","docs":"Ensures a value is in the entry by inserting if it was vacant.\n\nReturns an [`OccupiedEntry`] pointing to the now-occupied entry.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table: HashTable<&str> = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\n\n// nonexistent key\ntable\n    .entry(hasher(&\"poneyland\"), |&x| x == \"poneyland\", hasher)\n    .or_insert(\"poneyland\");\nassert!(table\n    .find(hasher(&\"poneyland\"), |&x| x == \"poneyland\")\n    .is_some());\n\n// existing key\ntable\n    .entry(hasher(&\"poneyland\"), |&x| x == \"poneyland\", hasher)\n    .or_insert(\"poneyland\");\nassert!(table\n    .find(hasher(&\"poneyland\"), |&x| x == \"poneyland\")\n    .is_some());\nassert_eq!(table.len(), 1);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{"`OccupiedEntry`":1239},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"T"}]],"output":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"150":{"id":150,"crate_id":0,"name":"ExtractIf","span":{"filename":"src/map.rs","begin":[2598,1],"end":[2601,2]},"visibility":"public","docs":"A draining iterator over entries of a `HashMap` which don't satisfy the predicate\n`f(&k, &mut v)` in arbitrary order. The iterator element type is `(K, V)`.\n\nThis `struct` is created by the [`extract_if`] method on [`HashMap`]. See its\ndocumentation for more.\n\n[`extract_if`]: struct.HashMap.html#method.extract_if\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<i32, &str> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();\n\nlet mut extract_if = map.extract_if(|k, _v| k % 2 != 0);\nlet mut vec = vec![extract_if.next(), extract_if.next()];\n\n// The `ExtractIf` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [Some((1, \"a\")),Some((3, \"c\"))]);\n\n// It is fused iterator\nassert_eq!(extract_if.next(), None);\nassert_eq!(extract_if.next(), None);\ndrop(extract_if);\n\nassert_eq!(map.len(), 1);\n```","links":{},"attrs":[{"must_use":{"reason":"Iterators are lazy unless consumed"}}],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[489,490,491,492,493,494,495,496,497,498,499,500,501,502,506,507]}}},"754":{"id":754,"crate_id":0,"name":"get_mut","span":{"filename":"src/raw_entry.rs","begin":[1050,5],"end":[1052,6]},"visibility":"public","docs":"Gets a mutable reference to the value in the entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\n\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(mut o) => *o.get_mut() += 900,\n}\n\nassert_eq!(map[&\"a\"], 1000);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"V"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"477":{"id":477,"crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[3430,5],"end":[3430,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}}},"1358":{"id":1358,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":1305,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"200":{"id":200,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":32,"args":null},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[29],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"804":{"id":804,"crate_id":0,"name":"from_hash","span":{"filename":"src/raw_entry.rs","begin":[702,5],"end":[707,6]},"visibility":"public","docs":"Access an immutable entry by hash and matching function.\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::HashMap;\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nlet map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\nlet key = \"a\";\nlet hash = compute_hash(map.hasher(), &key);\nassert_eq!(map.raw_entry().from_hash(hash, |k| k == &key), Some((&\"a\", &100)));\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[allow(clippy::wrong_self_convention)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["hash",{"primitive":"u64"}],["is_match",{"generic":"F"}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"V"}}}]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1408":{"id":1408,"crate_id":0,"name":"default","span":{"filename":"src/table.rs","begin":[1963,5],"end":[1968,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"527":{"id":527,"crate_id":0,"name":"size_hint","span":{"filename":"src/map.rs","begin":[3401,5],"end":[3403,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"250":{"id":250,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4654,1],"end":[4710,2]},"visibility":"default","docs":"Inserts all new key-values from the iterator and replaces values with existing\nkeys with new values returned from the iterator.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Copy","id":248,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Copy","id":248,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["extend_one","extend_reserve","extend_one_unchecked"],"trait":{"path":"Extend","id":245,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[249],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1131":{"id":1131,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2082,1],"end":[2108,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"SymmetricDifference","id":856,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1127,1128,1129,1130],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"854":{"id":854,"crate_id":0,"name":"Difference","span":{"filename":"src/set.rs","begin":[1707,1],"end":[1712,2]},"visibility":"public","docs":"A lazy iterator producing elements in the difference of `HashSet`s.\n\nThis `struct` is created by the [`difference`] method on [`HashSet`].\nSee its documentation for more.\n\n[`HashSet`]: struct.HashSet.html\n[`difference`]: struct.HashSet.html#method.difference","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1099,1104,1105,1107]}}},"1458":{"id":1458,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"577":{"id":577,"crate_id":0,"name":"remove","span":{"filename":"src/map.rs","begin":[3960,5],"end":[3962,6]},"visibility":"public","docs":"Takes the value out of the entry, and returns it.\nKeeps the allocated memory for reuse.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::Entry;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n// The map is empty\nassert!(map.is_empty() && map.capacity() == 0);\n\nmap.entry(\"poneyland\").or_insert(12);\n\nif let Entry::Occupied(o) = map.entry(\"poneyland\") {\n    assert_eq!(o.remove(), 12);\n}\n\nassert_eq!(map.contains_key(\"poneyland\"), false);\n// Now map hold none elements\nassert!(map.is_empty());\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"V"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"300":{"id":300,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1181":{"id":1181,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Entry","id":866,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"904":{"id":904,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1281,1],"end":[1298,2]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg>(feature = \"default-hasher\")]"}],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"N","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Default","id":67,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"array":{"type":{"generic":"T"},"len":"N"}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"path":"crate::DefaultHashBuilder","id":9,"args":null}}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[903],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"23":{"id":23,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1508":{"id":1508,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":1285,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"627":{"id":627,"crate_id":0,"name":"key","span":{"filename":"src/map.rs","begin":[4287,5],"end":[4295,6]},"visibility":"public","docs":"Returns a reference to this entry's key.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<String, u32> = HashMap::new();\nmap.entry_ref(\"poneyland\").or_insert(3);\n// existing key\nassert_eq!(map.entry_ref(\"poneyland\").key(), \"poneyland\");\n// nonexistent key\nassert_eq!(map.entry_ref(\"horseland\").key(), \"horseland\");\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Q"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"350":{"id":350,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"IntoKeys","id":153,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1231":{"id":1231,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[54,1],"end":[92,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}}}],"constraints":[]}}}},"items":[1229,1230],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"954":{"id":954,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1558":{"id":1558,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":1263,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"677":{"id":677,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"OccupiedError","id":181,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1281":{"id":1281,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1004":{"id":1004,"crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[1869,5],"end":[1872,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"123":{"id":123,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[262,1],"end":[322,2]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg>(feature = \"default-hasher\")]"}],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"resolved_path":{"path":"crate::DefaultHashBuilder","id":9,"args":null}}}],"constraints":[]}}}},"items":[120,122],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1608":{"id":1608,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":57,"args":null},"for":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"items":[53,54,55],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"727":{"id":727,"crate_id":0,"name":"or_insert_with","span":{"filename":"src/raw_entry.rs","begin":[783,5],"end":[796,6]},"visibility":"public","docs":"Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns mutable references to the key and value in the entry.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, String> = HashMap::new();\n\nmap.raw_entry_mut().from_key(\"poneyland\").or_insert_with(|| {\n    (\"poneyland\", \"hoho\".to_string())\n});\n\nassert_eq!(map[\"poneyland\"], \"hoho\".to_string());\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"F"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}}]},"is_c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnOnce","id":545,"args":{"parenthesized":{"inputs":[],"output":{"tuple":[{"generic":"K"},{"generic":"V"}]}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"450":{"id":450,"crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[2518,5],"end":[2520,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1331":{"id":1331,"crate_id":0,"name":"get","span":{"filename":"src/table.rs","begin":[1658,5],"end":[1660,6]},"visibility":"public","docs":"Gets a reference to the value in the entry.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::hash_table::Entry;\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table: HashTable<&str> = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\ntable.insert_unique(hasher(&\"poneyland\"), \"poneyland\", hasher);\n\nmatch table.entry(hasher(&\"poneyland\"), |&x| x == \"poneyland\", hasher) {\n    Entry::Vacant(_) => panic!(),\n    Entry::Occupied(entry) => assert_eq!(entry.get(), &\"poneyland\"),\n}\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1054":{"id":1054,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"Intersection","id":858,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"173":{"id":173,"crate_id":0,"name":"get_mut","span":{"filename":"src/map.rs","begin":[1452,5],"end":[1466,6]},"visibility":"public","docs":"Returns a mutable reference to the value corresponding to the key.\n\nThe key may be any borrowed form of the map's key type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe key type.\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(1, \"a\");\nif let Some(x) = map.get_mut(&1) {\n    *x = \"b\";\n}\nassert_eq!(map[&1], \"b\");\n\nassert_eq!(map.get_mut(&2), None);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["k",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"V"}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"777":{"id":777,"crate_id":0,"name":"fmt","span":{"filename":"src/raw_entry.rs","begin":[1465,5],"end":[1470,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"500":{"id":500,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ExtractIf","id":150,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1381":{"id":1381,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"AbsentEntry","id":1240,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1104":{"id":1104,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2014,1],"end":[2052,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"Difference","id":854,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1100,1101,1102,1103],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"827":{"id":827,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[131,1],"end":[192,2]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg>(feature = \"default-hasher\")]"}],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"path":"crate::DefaultHashBuilder","id":9,"args":null}}}],"constraints":[]}}}},"items":[824,826],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"550":{"id":550,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3468,1],"end":[3745,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"Entry","id":163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[541,542,543,544,546,547,548,549],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1431":{"id":1431,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"273":{"id":273,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"1154":{"id":1154,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2138,1],"end":[2144,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"Union","id":860,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"877":{"id":877,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"600":{"id":600,"crate_id":0,"name":"insert","span":{"filename":"src/map.rs","begin":[4097,5],"end":[4109,6]},"visibility":"public","docs":"Sets the value of the entry with the [`VacantEntry`]'s key,\nand returns a mutable reference to it.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::Entry;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n\nif let Entry::Vacant(o) = map.entry(\"poneyland\") {\n    o.insert(37);\n}\nassert_eq!(map[\"poneyland\"], 37);\n```","links":{"`VacantEntry`":539},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["value",{"generic":"V"}]],"output":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1481":{"id":1481,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"IterHashMut","id":1258,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"323":{"id":323,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":237,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1204":{"id":1204,"crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[2306,5],"end":[2310,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"927":{"id":927,"crate_id":0,"name":"bitor_assign","span":{"filename":"src/set.rs","begin":[1520,5],"end":[1526,6]},"visibility":"default","docs":"Modifies this set to contain the union of `self` and `rhs`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut a: HashSet<_> = vec![1, 2, 3].into_iter().collect();\nlet b: HashSet<_> = vec![3, 4, 5].into_iter().collect();\n\na |= &b;\n\nlet mut i = 0;\nlet expected = [1, 2, 3, 4, 5];\nfor x in &a {\n    assert!(expected.contains(x));\n    i += 1;\n}\nassert_eq!(i, expected.len());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1254":{"id":1254,"crate_id":0,"name":"IterMut","span":{"filename":"src/table.rs","begin":[2029,1],"end":[2032,2]},"visibility":"public","docs":"A mutable iterator over the entries of a `HashTable` in arbitrary order.\nThe iterator element type is `&'a mut T`.\n\nThis `struct` is created by the [`iter_mut`] method on [`HashTable`]. See its\ndocumentation for more.\n\n[`iter_mut`]: struct.HashTable.html#method.iter_mut\n[`HashTable`]: struct.HashTable.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"impls":[1424,1425,1426,1427,1428,1429,1430,1431,1432,1433,1434,1435,1436,1437,1439,1444,1446,1447,1449]}}},"977":{"id":977,"crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[1823,5],"end":[1825,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"96":{"id":96,"crate_id":0,"name":"write_u128","span":{"filename":"src/hasher.rs","begin":[50,5],"end":[64,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Always)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["arg",{"primitive":"u128"}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"700":{"id":700,"crate_id":0,"name":"from_key_hashed_nocheck","span":{"filename":"src/raw_entry.rs","begin":[558,5],"end":[563,6]},"visibility":"public","docs":"Creates a `RawEntryMut` from the given key and its hash.\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nlet key = \"a\";\nlet hash = compute_hash(map.hasher(), &key);\nlet entry: RawEntryMut<&str, u32, _> = map.raw_entry_mut().from_key_hashed_nocheck(hash, &key);\nentry.insert(key, 100);\nassert_eq!(map[&\"a\"], 100);\n```","links":{},"attrs":[{"other":"#[allow(clippy::wrong_self_convention)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["hash",{"primitive":"u64"}],["k",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"path":"RawEntryMut","id":699,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1581":{"id":1581,"crate_id":0,"name":"hash_set","span":{"filename":"src/lib.rs","begin":[105,1],"end":[105,17]},"visibility":"public","docs":"A hash set implemented as a `HashMap` where the value is `()`.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[1580],"is_stripped":false}}},"423":{"id":423,"crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[3310,5],"end":[3310,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"K"}}}}}},"1304":{"id":1304,"crate_id":0,"name":"0","span":{"filename":"src/table.rs","begin":[1307,12],"end":[1307,33]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"VacantEntry","id":1305,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"1027":{"id":1027,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1899,1],"end":[1904,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"path":"ExactSizeIterator","id":288,"args":null},"for":{"resolved_path":{"path":"Drain","id":839,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1026],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"146":{"id":146,"crate_id":0,"name":"Drain","span":{"filename":"src/map.rs","begin":[2551,1],"end":[2553,2]},"visibility":"public","docs":"A draining iterator over the entries of a `HashMap` in arbitrary\norder. The iterator element type is `(K, V)`.\n\nThis `struct` is created by the [`drain`] method on [`HashMap`]. See its\ndocumentation for more.\n\n[`drain`]: struct.HashMap.html#method.drain\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();\n\nlet mut drain_iter = map.drain();\nlet mut vec = vec![drain_iter.next(), drain_iter.next(), drain_iter.next()];\n\n// The `Drain` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [Some((1, \"a\")), Some((2, \"b\")), Some((3, \"c\"))]);\n\n// It is fused iterator\nassert_eq!(drain_iter.next(), None);\nassert_eq!(drain_iter.next(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[463,464,465,466,467,468,469,470,471,472,473,474,475,476,481,483,484,486]}}},"750":{"id":750,"crate_id":0,"name":"key_mut","span":{"filename":"src/raw_entry.rs","begin":[951,5],"end":[953,6]},"visibility":"public","docs":"Gets a mutable reference to the key in the entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\nuse std::rc::Rc;\n\nlet key_one = Rc::new(\"a\");\nlet key_two = Rc::new(\"a\");\n\nlet mut map: HashMap<Rc<&str>, u32> = HashMap::new();\nmap.insert(key_one.clone(), 10);\n\nassert_eq!(map[&key_one], 10);\nassert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);\n\nmatch map.raw_entry_mut().from_key(&key_one) {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(mut o) => {\n        *o.key_mut() = key_two.clone();\n    }\n}\nassert_eq!(map[&key_two], 10);\nassert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"K"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"473":{"id":473,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Drain","id":146,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1354":{"id":1354,"crate_id":0,"name":"insert","span":{"filename":"src/table.rs","begin":[1863,5],"end":[1874,6]},"visibility":"public","docs":"Inserts a new element into the table with the hash that was used to\nobtain the `VacantEntry`.\n\nAn `OccupiedEntry` is returned for the newly inserted element.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::hash_table::Entry;\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table: HashTable<&str> = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\n\nif let Entry::Vacant(o) = table.entry(hasher(&\"poneyland\"), |&x| x == \"poneyland\", hasher) {\n    o.insert(\"poneyland\");\n}\nassert_eq!(\n    table.find(hasher(&\"poneyland\"), |&x| x == \"poneyland\"),\n    Some(&\"poneyland\")\n);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["value",{"generic":"T"}]],"output":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1077":{"id":1077,"crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[1991,5],"end":[1993,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"196":{"id":196,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"800":{"id":800,"crate_id":0,"name":null,"span":{"filename":"src/raw_entry.rs","begin":[1473,1],"end":[1477,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"RawVacantEntryMut","id":723,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[799],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"523":{"id":523,"crate_id":0,"name":"default","span":{"filename":"src/map.rs","begin":[3383,5],"end":[3387,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1404":{"id":1404,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1127":{"id":1127,"crate_id":0,"name":"Item","span":{"filename":"src/set.rs","begin":[2088,5],"end":[2088,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"T"}}}}}},"246":{"id":246,"crate_id":0,"name":"extend","span":{"filename":"src/map.rs","begin":[4635,5],"end":[4637,6]},"visibility":"default","docs":"Inserts all new key-values from the iterator to existing `HashMap<K, V, S, A>`.\nReplace values with existing keys with new values returned from the iterator.\nThe keys and values must implement [`Copy`] trait.\n\n[`Copy`]: https://doc.rust-lang.org/core/marker/trait.Copy.html\n\n# Examples\n\n```\nuse hashbrown::hash_map::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(1, 100);\n\nlet arr = [(1, 1), (2, 2)];\nlet some_iter = arr.iter().map(|(k, v)| (k, v));\nmap.extend(some_iter);\n// Replace values with existing keys with new values returned from the iterator.\n// So that the map.get(&1) doesn't return Some(&100).\nassert_eq!(map.get(&1), Some(&1));\n\nlet some_vec: Vec<_> = vec![(3, 3), (4, 4)];\nmap.extend(some_vec.iter().map(|(k, v)| (k, v)));\n\nlet some_arr = [(5, 5), (6, 6)];\nmap.extend(some_arr.iter().map(|(k, v)| (k, v)));\n\n// You can also extend from another HashMap\nlet mut new_map = HashMap::new();\nnew_map.extend(&map);\nassert_eq!(new_map, map);\n\nlet mut vec: Vec<_> = new_map.into_iter().collect();\n// The `IntoIter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"T"}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"IntoIterator","id":230,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":null,"binding":{"equality":{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"V"}}}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"850":{"id":850,"crate_id":0,"name":"reserve","span":{"filename":"src/set.rs","begin":[649,5],"end":[651,6]},"visibility":"public","docs":"Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.\n\n# Panics\n\nPanics if the new capacity exceeds [`isize::MAX`] bytes and [`abort`] the program\nin case of allocation error. Use [`try_reserve`](HashSet::try_reserve) instead\nif you want to handle memory allocation failure.\n\n[`isize::MAX`]: https://doc.rust-lang.org/std/primitive.isize.html\n[`abort`]: https://doc.rust-lang.org/alloc/alloc/fn.handle_alloc_error.html\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet mut set: HashSet<i32> = HashSet::new();\nset.reserve(10);\nassert!(set.capacity() >= 10);\n```","links":{"HashSet::try_reserve":849},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["additional",{"primitive":"usize"}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"573":{"id":573,"crate_id":0,"name":"get","span":{"filename":"src/map.rs","begin":[3847,5],"end":[3849,6]},"visibility":"public","docs":"Gets a reference to the value in the entry.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::Entry;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nmap.entry(\"poneyland\").or_insert(12);\n\nmatch map.entry(\"poneyland\") {\n    Entry::Vacant(_) => panic!(),\n    Entry::Occupied(entry) => assert_eq!(entry.get(), &12),\n}\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"V"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1454":{"id":1454,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1177":{"id":1177,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"Entry","id":866,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"296":{"id":296,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"900":{"id":900,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1246,1],"end":[1254,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[899],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"623":{"id":623,"crate_id":0,"name":"insert","span":{"filename":"src/map.rs","begin":[4160,5],"end":[4173,6]},"visibility":"public","docs":"Sets the value of the entry, and returns an `OccupiedEntry`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<String, u32> = HashMap::new();\nlet entry = map.entry_ref(\"horseyland\").insert(37);\n\nassert_eq!(entry.key(), \"horseyland\");\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["value",{"generic":"V"}]],"output":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"generic":"Q"}}},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"69":{"id":69,"crate_id":0,"name":"DefaultHasher","span":{"filename":"src/hasher.rs","begin":[34,1],"end":[36,2]},"visibility":"public","docs":"Default hasher for [`HashMap`](crate::HashMap) and [`HashSet`](crate::HashSet).","links":{"crate::HashMap":7,"crate::HashSet":8},"attrs":[{"other":"#[<cfg>(feature = \"default-hasher\")]"}],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[],"where_predicates":[]},"impls":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,105]}}},"950":{"id":950,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"673":{"id":673,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"OccupiedError","id":181,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1554":{"id":1554,"crate_id":0,"name":"fmt","span":{"filename":"src/table.rs","begin":[2331,5],"end":[2338,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"396":{"id":396,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2410,1],"end":[2415,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"path":"ExactSizeIterator","id":288,"args":null},"for":{"resolved_path":{"path":"IntoValues","id":155,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[395],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1277":{"id":1277,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"119":{"id":119,"crate_id":0,"name":"with_hasher","span":{"filename":"src/map.rs","begin":[457,5],"end":[462,6]},"visibility":"public","docs":"Creates an empty `HashMap` which will use the given hash builder to hash\nkeys.\n\nThe hash map is initially created with a capacity of 0, so it will not\nallocate until it is first inserted into.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashMap` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashMap`].\n\nThe `hash_builder` passed should implement the [`BuildHasher`] trait for\nthe `HashMap` to be useful, see its documentation for details.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n[`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::DefaultHashBuilder;\n\nlet s = DefaultHashBuilder::default();\nlet mut map = HashMap::with_hasher(s);\nassert_eq!(map.len(), 0);\nassert_eq!(map.capacity(), 0);\n\nmap.insert(1, 2);\n```","links":{"`HashMap`":7},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[<cfg_attr>(feature = \"rustc-dep-of-std\", rustc_const_stable_indirect)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["hash_builder",{"generic":"S"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1000":{"id":1000,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1836,1],"end":[1859,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":945,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[996,997,998,999],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"723":{"id":723,"crate_id":0,"name":"RawVacantEntryMut","span":{"filename":"src/raw_entry.rs","begin":[466,1],"end":[469,2]},"visibility":"public","docs":"A view into a vacant entry in a `HashMap`.\nIt is part of the [`RawEntryMut`] enum.\n\n[`RawEntryMut`]: enum.RawEntryMut.html\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::hash_map::{HashMap, RawEntryMut, RawVacantEntryMut};\n\nlet mut map = HashMap::<&str, i32>::new();\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nlet raw_v: RawVacantEntryMut<_, _, _> = match map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(view) => view,\n    RawEntryMut::Occupied(_) => unreachable!(),\n};\nraw_v.insert(\"a\", 10);\nassert!(map[&\"a\"] == 10 && map.len() == 1);\n\n// Nonexistent key (insert and update)\nlet hash = compute_hash(map.hasher(), &\"b\");\nmatch map.raw_entry_mut().from_key_hashed_nocheck(hash, &\"b\") {\n    RawEntryMut::Occupied(_) => unreachable!(),\n    RawEntryMut::Vacant(view) => {\n        let (k, value) = view.insert(\"b\", 2);\n        assert_eq!((*k, *value), (\"b\", 2));\n        *value = 20;\n    }\n}\nassert!(map[&\"b\"] == 20 && map.len() == 2);\n\nlet hash = compute_hash(map.hasher(), &\"c\");\nmatch map.raw_entry_mut().from_hash(hash, |q| *q == \"c\") {\n    RawEntryMut::Occupied(_) => unreachable!(),\n    RawEntryMut::Vacant(view) => {\n        assert_eq!(view.insert(\"c\", 30), (&mut \"c\", &mut 30));\n    }\n}\nassert!(map[&\"c\"] == 30 && map.len() == 3);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[785,786,787,788,789,790,791,792,793,794,795,796,797,798,800]}}},"1604":{"id":1604,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"446":{"id":446,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"1050":{"id":1050,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1914,1],"end":[1931,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":842,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1047,1048,1049],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"773":{"id":773,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawOccupiedEntryMut","id":720,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"496":{"id":496,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ExtractIf","id":150,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1377":{"id":1377,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"AbsentEntry","id":1240,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1100":{"id":1100,"crate_id":0,"name":"Item","span":{"filename":"src/set.rs","begin":[2020,5],"end":[2020,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"T"}}}}}},"219":{"id":219,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2048,1],"end":[2072,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Default","id":67,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Default","id":67,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Default","id":67,"args":null},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[218],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"823":{"id":823,"crate_id":0,"name":"with_hasher","span":{"filename":"src/set.rs","begin":[469,5],"end":[473,6]},"visibility":"public","docs":"Creates a new empty hash set which will use the given hasher to hash\nkeys.\n\nThe hash set is initially created with a capacity of 0, so it will not\nallocate until it is first inserted into.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashSet` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashSet`].\n\nThe `hash_builder` passed should implement the [`BuildHasher`] trait for\nthe `HashSet` to be useful, see its documentation for details.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n[`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nuse hashbrown::DefaultHashBuilder;\n\nlet s = DefaultHashBuilder::default();\nlet mut set = HashSet::with_hasher(s);\nset.insert(2);\n```","links":{"`HashSet`":8},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[<cfg_attr>(feature = \"rustc-dep-of-std\", rustc_const_stable_indirect)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["hasher",{"generic":"S"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"546":{"id":546,"crate_id":0,"name":"or_insert_with_key","span":{"filename":"src/map.rs","begin":[3611,5],"end":[3623,6]},"visibility":"public","docs":"Ensures a value is in the entry by inserting, if empty, the result of the default function.\nThis method allows for generating key-derived values for insertion by providing the default\nfunction a reference to the key that was moved during the `.entry(key)` method call.\n\nThe reference to the moved key is provided so that cloning or copying the key is\nunnecessary, unlike with `.or_insert_with(|| ... )`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, usize> = HashMap::new();\n\n// nonexistent key\nmap.entry(\"poneyland\").or_insert_with_key(|key| key.chars().count());\nassert_eq!(map[\"poneyland\"], 9);\n\n// existing key\n*map.entry(\"poneyland\").or_insert_with_key(|key| key.chars().count() * 10) *= 2;\nassert_eq!(map[\"poneyland\"], 18);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}},"is_c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"FnOnce","id":545,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}}],"output":{"generic":"V"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1427":{"id":1427,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1150":{"id":1150,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"Union","id":860,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"269":{"id":269,"crate_id":1,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"I"},"trait":{"path":"Iterator","id":270,"args":null}}}}}},"873":{"id":873,"crate_id":0,"name":"remove","span":{"filename":"src/set.rs","begin":[1175,5],"end":[1180,6]},"visibility":"public","docs":"Removes a value from the set. Returns whether the value was\npresent in the set.\n\nThe value may be any borrowed form of the set's value type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe value type.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set = HashSet::new();\n\nset.insert(2);\nassert_eq!(set.remove(&2), true);\nassert_eq!(set.remove(&2), false);\n```\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1477":{"id":1477,"crate_id":0,"name":"fmt","span":{"filename":"src/table.rs","begin":[2151,5],"end":[2153,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1200":{"id":1200,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedEntry","id":1163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"923":{"id":923,"crate_id":0,"name":"Output","span":{"filename":"src/set.rs","begin":[1467,5],"end":[1467,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}},"646":{"id":646,"crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[2947,5],"end":[2952,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1527":{"id":1527,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2265,1],"end":[2272,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["len","is_empty"],"trait":{"path":"ExactSizeIterator","id":288,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":1285,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1526],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1250":{"id":1250,"crate_id":0,"name":"is_empty","span":{"filename":"src/table.rs","begin":[655,5],"end":[657,6]},"visibility":"public","docs":"Returns `true` if the set contains no elements.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\nlet mut v = HashTable::new();\nassert!(v.is_empty());\nv.insert_unique(hasher(&1), 1, hasher);\nassert!(!v.is_empty());\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"369":{"id":369,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2332,1],"end":[2337,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"path":"ExactSizeIterator","id":288,"args":null},"for":{"resolved_path":{"path":"IntoKeys","id":153,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[368],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"92":{"id":92,"crate_id":0,"name":"write_u8","span":{"filename":"src/hasher.rs","begin":[50,5],"end":[64,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Always)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["arg",{"primitive":"u8"}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"973":{"id":973,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1794,1],"end":[1813,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[969,970,971,972],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"696":{"id":696,"crate_id":0,"name":"map","span":{"filename":"src/map.rs","begin":[1,1],"end":[6581,2]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[7,140,142,237,153,155,134,136,146,150,138,163,536,539,165,621,181,694],"is_stripped":true}}},"1577":{"id":1577,"crate_id":0,"name":"table","span":{"filename":"src/table.rs","begin":[1,1],"end":[2380,2]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[1228,1241,1239,1305,1240,1252,1254,1256,1258,1285,1261,1263],"is_stripped":true}}},"1300":{"id":1300,"crate_id":0,"name":"fmt","span":{"filename":"src/table.rs","begin":[1190,5],"end":[1192,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"419":{"id":419,"crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[2470,5],"end":[2472,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"142":{"id":142,"crate_id":0,"name":"IterMut","span":{"filename":"src/map.rs","begin":[2203,1],"end":[2207,2]},"visibility":"public","docs":"A mutable iterator over the entries of a `HashMap` in arbitrary order.\nThe iterator element type is `(&'a K, &'a mut V)`.\n\nThis `struct` is created by the [`iter_mut`] method on [`HashMap`]. See its\ndocumentation for more.\n\n[`iter_mut`]: struct.HashMap.html#method.iter_mut\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<_, _> = [(1, \"One\".to_owned()), (2, \"Two\".into())].into();\n\nlet mut iter = map.iter_mut();\niter.next().map(|(_, v)| v.push_str(\" Mississippi\"));\niter.next().map(|(_, v)| v.push_str(\" Mississippi\"));\n\n// It is fused iterator\nassert_eq!(iter.next(), None);\nassert_eq!(iter.next(), None);\n\nassert_eq!(map.get(&1).unwrap(), &\"One Mississippi\".to_owned());\nassert_eq!(map.get(&2).unwrap(), &\"Two Mississippi\".to_owned());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"impls":[293,294,295,296,297,298,299,300,301,302,303,304,305,306,308,313,315,316,318]}}},"1023":{"id":1023,"crate_id":0,"name":"size_hint","span":{"filename":"src/set.rs","begin":[1887,5],"end":[1889,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1350":{"id":1350,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[1569,1],"end":[1575,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1349],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"469":{"id":469,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Drain","id":146,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"192":{"id":192,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1073":{"id":1073,"crate_id":0,"name":"next","span":{"filename":"src/set.rs","begin":[1954,5],"end":[1961,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"T"}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"796":{"id":796,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawVacantEntryMut","id":723,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1400":{"id":1400,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":32,"args":null},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[29],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"519":{"id":519,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ValuesMut","id":138,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1123":{"id":1123,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"SymmetricDifference","id":856,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"846":{"id":846,"crate_id":0,"name":"allocator","span":{"filename":"src/set.rs","begin":[520,5],"end":[522,6]},"visibility":"public","docs":"Returns a reference to the underlying allocator.","links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"A"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1173":{"id":1173,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"Entry","id":866,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"896":{"id":896,"crate_id":0,"name":"eq","span":{"filename":"src/set.rs","begin":[1229,5],"end":[1235,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"619":{"id":619,"crate_id":0,"name":"Occupied","span":{"filename":"src/map.rs","begin":[2922,5],"end":[2922,44]},"visibility":"default","docs":"An occupied entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{EntryRef, HashMap};\nlet mut map: HashMap<_, _> = [(\"a\".to_owned(), 100), (\"b\".into(), 200)].into();\n\nmatch map.entry_ref(\"a\") {\n    EntryRef::Vacant(_) => unreachable!(),\n    EntryRef::Occupied(_) => { }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":[618]},"discriminant":null}}},"1500":{"id":1500,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2179,1],"end":[2198,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"IterHashMut","id":1258,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1497,1498,1499],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"342":{"id":342,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3287,1],"end":[3292,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"path":"ExactSizeIterator","id":288,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":237,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[341],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1223":{"id":1223,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":1166,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"65":{"id":65,"crate_id":0,"name":"default","span":{"filename":"src/hasher.rs","begin":[13,24],"end":[13,31]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"946":{"id":946,"crate_id":0,"name":"into_iter","span":{"filename":"src/set.rs","begin":[1771,5],"end":[1775,6]},"visibility":"default","docs":"Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet mut set = HashSet::new();\nset.insert(\"a\".to_string());\nset.insert(\"b\".to_string());\n\n// Not possible to collect to a Vec<String> with a regular `.iter()`.\nlet v: Vec<String> = set.into_iter().collect();\n\n// Will print in an arbitrary order.\nfor x in &v {\n    println!(\"{}\", x);\n}\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"IntoIter","id":945,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"669":{"id":669,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2991,1],"end":[3000,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Q"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"VacantEntryRef","id":621,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[668],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1550":{"id":1550,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2302,1],"end":[2320,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"Drain","id":1261,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1546,1547,1548,1549],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"392":{"id":392,"crate_id":0,"name":"size_hint","span":{"filename":"src/map.rs","begin":[2397,5],"end":[2399,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1273":{"id":1273,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"996":{"id":996,"crate_id":0,"name":"Item","span":{"filename":"src/set.rs","begin":[1837,5],"end":[1837,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"K"}}}},"719":{"id":719,"crate_id":0,"name":"0","span":{"filename":"src/raw_entry.rs","begin":[318,14],"end":[318,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"RawOccupiedEntryMut","id":720,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"1600":{"id":1600,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1323":{"id":1323,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Entry","id":1241,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"442":{"id":442,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"165":{"id":165,"crate_id":0,"name":"EntryRef","span":{"filename":"src/map.rs","begin":[2905,1],"end":[2938,2]},"visibility":"public","docs":"A view into a single entry in a map, which may either be vacant or occupied,\nwith any borrowed form of the map's key type.\n\n\nThis `enum` is constructed from the [`entry_ref`] method on [`HashMap`].\n\n[`Hash`] and [`Eq`] on the borrowed form of the map's key type *must* match those\nfor the key type. It also require that key may be constructed from the borrowed\nform through the [`From`] trait.\n\n[`HashMap`]: struct.HashMap.html\n[`entry_ref`]: struct.HashMap.html#method.entry_ref\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html\n[`From`]: https://doc.rust-lang.org/std/convert/trait.From.html\n\n# Examples\n\n```\nuse hashbrown::hash_map::{EntryRef, HashMap, OccupiedEntry};\n\nlet mut map = HashMap::new();\nmap.extend([(\"a\".to_owned(), 10), (\"b\".into(), 20), (\"c\".into(), 30)]);\nassert_eq!(map.len(), 3);\n\n// Existing key (insert)\nlet key = String::from(\"a\");\nlet entry: EntryRef<_, _, _, _> = map.entry_ref(&key);\nlet _raw_o: OccupiedEntry<_, _, _, _> = entry.insert(1);\nassert_eq!(map.len(), 3);\n// Nonexistent key (insert)\nmap.entry_ref(\"d\").insert(4);\n\n// Existing key (or_insert)\nlet v = map.entry_ref(\"b\").or_insert(2);\nassert_eq!(std::mem::replace(v, 2), 20);\n// Nonexistent key (or_insert)\nmap.entry_ref(\"e\").or_insert(5);\n\n// Existing key (or_insert_with)\nlet v = map.entry_ref(\"c\").or_insert_with(|| 3);\nassert_eq!(std::mem::replace(v, 3), 30);\n// Nonexistent key (or_insert_with)\nmap.entry_ref(\"f\").or_insert_with(|| 6);\n\nprintln!(\"Our HashMap: {:?}\", map);\n\nfor (key, value) in [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"].into_iter().zip(1..=6) {\n    assert_eq!(map[key], value)\n}\nassert_eq!(map.len(), 6);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"has_stripped_variants":false,"variants":[619,622],"impls":[629,632,633,634,635,636,637,638,639,640,641,642,643,644,645,647]}}},"1046":{"id":1046,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":842,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"769":{"id":769,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawOccupiedEntryMut","id":720,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1373":{"id":1373,"crate_id":0,"name":"into_table","span":{"filename":"src/table.rs","begin":[1943,5],"end":[1945,6]},"visibility":"public","docs":"Converts the `AbsentEntry` into a mutable reference to the underlying\ntable.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"492":{"id":492,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":150,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"215":{"id":215,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2028,1],"end":[2035,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":186,"args":null},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1096":{"id":1096,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"Difference","id":854,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"819":{"id":819,"crate_id":0,"name":"fmt","span":{"filename":"src/raw_entry.rs","begin":[1480,5],"end":[1482,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"542":{"id":542,"crate_id":0,"name":"or_insert","span":{"filename":"src/map.rs","begin":[3515,5],"end":[3524,6]},"visibility":"public","docs":"Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n\n// nonexistent key\nmap.entry(\"poneyland\").or_insert(3);\nassert_eq!(map[\"poneyland\"], 3);\n\n// existing key\n*map.entry(\"poneyland\").or_insert(10) *= 2;\nassert_eq!(map[\"poneyland\"], 6);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"V"}]],"output":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"265":{"id":265,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1146":{"id":1146,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Union","id":860,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"869":{"id":869,"crate_id":0,"name":"is_superset","span":{"filename":"src/set.rs","begin":[1070,5],"end":[1072,6]},"visibility":"public","docs":"Returns `true` if the set is a superset of another,\ni.e., `self` contains at least all the values in `other`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet sub: HashSet<_> = [1, 2].into_iter().collect();\nlet mut set = HashSet::new();\n\nassert_eq!(set.is_superset(&sub), false);\n\nset.insert(0);\nset.insert(1);\nassert_eq!(set.is_superset(&sub), false);\n\nset.insert(2);\nassert_eq!(set.is_superset(&sub), true);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1473":{"id":1473,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2113,1],"end":[2132,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1470,1471,1472],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"592":{"id":592,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2793,1],"end":[2800,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"315":{"id":315,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3241,1],"end":[3246,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"path":"ExactSizeIterator","id":288,"args":null},"for":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[314],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1196":{"id":1196,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":1163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"919":{"id":919,"crate_id":0,"name":"Output","span":{"filename":"src/set.rs","begin":[1434,5],"end":[1434,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}},"38":{"id":38,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1523":{"id":1523,"crate_id":0,"name":"size_hint","span":{"filename":"src/table.rs","begin":[2252,5],"end":[2254,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"642":{"id":642,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"EntryRef","id":165,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"365":{"id":365,"crate_id":0,"name":"size_hint","span":{"filename":"src/map.rs","begin":[2319,5],"end":[2321,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1246":{"id":1246,"crate_id":0,"name":"try_reserve","span":{"filename":"src/table.rs","begin":[586,5],"end":[592,6]},"visibility":"public","docs":"Tries to reserve capacity for at least `additional` more elements to be inserted\nin the given `HashTable`. The collection may reserve more space to avoid\nfrequent reallocations.\n\n`hasher` is called if entries need to be moved or copied to a new table.\nThis must return the same hash value that each entry was inserted with.\n\n# Errors\n\nIf the capacity overflows, or the allocator reports a failure, then an error\nis returned.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table: HashTable<i32> = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\ntable\n    .try_reserve(10, hasher)\n    .expect(\"why is the test harness OOMing on 10 bytes?\");\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["additional",{"primitive":"usize"}],["hasher",{"impl_trait":[{"trait_bound":{"trait":{"path":"Fn","id":784,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"path":"Result","id":42,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"impl Fn(&T) -> u64","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Fn","id":784,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":true}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"88":{"id":88,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":57,"args":null},"for":{"resolved_path":{"path":"DefaultHasher","id":69,"args":null}},"items":[53,54,55],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"969":{"id":969,"crate_id":0,"name":"Item","span":{"filename":"src/set.rs","begin":[1795,5],"end":[1795,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"K"}}}}}},"1573":{"id":1573,"crate_id":0,"name":"next","span":{"filename":"src/table.rs","begin":[2358,5],"end":[2360,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"692":{"id":692,"crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[3044,5],"end":[3052,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"415":{"id":415,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"1296":{"id":1296,"crate_id":0,"name":"default","span":{"filename":"src/table.rs","begin":[1166,5],"end":[1170,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"138":{"id":138,"crate_id":0,"name":"ValuesMut","span":{"filename":"src/map.rs","begin":[2650,1],"end":[2652,2]},"visibility":"public","docs":"A mutable iterator over the values of a `HashMap` in arbitrary order.\nThe iterator element type is `&'a mut V`.\n\nThis `struct` is created by the [`values_mut`] method on [`HashMap`]. See its\ndocumentation for more.\n\n[`values_mut`]: struct.HashMap.html#method.values_mut\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<_, _> = [(1, \"One\".to_owned()), (2, \"Two\".into())].into();\n\nlet mut values = map.values_mut();\nvalues.next().map(|v| v.push_str(\" Mississippi\"));\nvalues.next().map(|v| v.push_str(\" Mississippi\"));\n\n// It is fused iterator\nassert_eq!(values.next(), None);\nassert_eq!(values.next(), None);\n\nassert_eq!(map.get(&1).unwrap(), &\"One Mississippi\".to_owned());\nassert_eq!(map.get(&2).unwrap(), &\"Two Mississippi\".to_owned());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"impls":[509,510,511,512,513,514,515,516,517,518,519,520,521,522,524,529,531,532,534]}}},"1019":{"id":1019,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"Drain","id":839,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"742":{"id":742,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawEntryMut","id":699,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"465":{"id":465,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"Drain","id":146,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1346":{"id":1346,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"188":{"id":188,"crate_id":0,"name":"RawEntryBuilderMut","span":{"filename":"src/raw_entry.rs","begin":[216,1],"end":[218,2]},"visibility":"public","docs":"A builder for computing where in a [`HashMap`] a key-value pair would be stored.\n\nSee the [`HashMap::raw_entry_mut`] docs for usage examples.\n\n[`HashMap::raw_entry_mut`]: struct.HashMap.html#method.raw_entry_mut\n\n# Examples\n\n```\nuse hashbrown::hash_map::{RawEntryBuilderMut, RawEntryMut::Vacant, RawEntryMut::Occupied};\nuse hashbrown::HashMap;\nuse core::hash::{BuildHasher, Hash};\n\nlet mut map = HashMap::new();\nmap.extend([(1, 11), (2, 12), (3, 13), (4, 14), (5, 15), (6, 16)]);\nassert_eq!(map.len(), 6);\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nlet builder: RawEntryBuilderMut<_, _, _> = map.raw_entry_mut();\n\n// Existing key\nmatch builder.from_key(&6) {\n    Vacant(_) => unreachable!(),\n    Occupied(view) => assert_eq!(view.get(), &16),\n}\n\nfor key in 0..12 {\n    let hash = compute_hash(map.hasher(), &key);\n    let value = map.get(&key).cloned();\n    let key_value = value.as_ref().map(|v| (&key, v));\n\n    println!(\"Key: {} and value: {:?}\", key, value);\n\n    match map.raw_entry_mut().from_key(&key) {\n        Occupied(mut o) => assert_eq!(Some(o.get_key_value()), key_value),\n        Vacant(_) => assert_eq!(value, None),\n    }\n    match map.raw_entry_mut().from_key_hashed_nocheck(hash, &key) {\n        Occupied(mut o) => assert_eq!(Some(o.get_key_value()), key_value),\n        Vacant(_) => assert_eq!(value, None),\n    }\n    match map.raw_entry_mut().from_hash(hash, |q| *q == key) {\n        Occupied(mut o) => assert_eq!(Some(o.get_key_value()), key_value),\n        Vacant(_) => assert_eq!(value, None),\n    }\n}\n\nassert_eq!(map.len(), 6);\n```","links":{"`HashMap`":7},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[701,703,704,705,706,707,708,709,710,711,712,713,714,715,716,718]}}},"1069":{"id":1069,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":57,"args":null},"for":{"resolved_path":{"path":"Intersection","id":858,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[53,54,55],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"792":{"id":792,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawVacantEntryMut","id":723,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"515":{"id":515,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ValuesMut","id":138,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1396":{"id":1396,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"238":{"id":238,"crate_id":0,"name":"into_iter","span":{"filename":"src/map.rs","begin":[3147,5],"end":[3151,6]},"visibility":"default","docs":"Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet map: HashMap<_, _> = [(\"a\", 1), (\"b\", 2), (\"c\", 3)].into();\n\n// Not possible with .iter()\nlet mut vec: Vec<(&str, i32)> = map.into_iter().collect();\n// The `IntoIter` iterator produces items in arbitrary order, so\n// the items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [(\"a\", 1), (\"b\", 2), (\"c\", 3)]);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"IntoIter","id":237,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1119":{"id":1119,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"SymmetricDifference","id":856,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"842":{"id":842,"crate_id":0,"name":"ExtractIf","span":{"filename":"src/set.rs","begin":[1681,1],"end":[1684,2]},"visibility":"public","docs":"A draining iterator over entries of a `HashSet` which don't satisfy the predicate `f`.\n\nThis `struct` is created by the [`extract_if`] method on [`HashSet`]. See its\ndocumentation for more.\n\n[`extract_if`]: struct.HashSet.html#method.extract_if\n[`HashSet`]: struct.HashSet.html","links":{},"attrs":[{"must_use":{"reason":"Iterators are lazy unless consumed"}}],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1050,1051]}}},"565":{"id":565,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"Entry","id":163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1446":{"id":1446,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2068,1],"end":[2072,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"path":"ExactSizeIterator","id":288,"args":null},"for":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1445],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1169":{"id":1169,"crate_id":0,"name":"or_insert","span":{"filename":"src/set.rs","begin":[2393,5],"end":[2401,6]},"visibility":"public","docs":"Ensures a value is in the entry by inserting if it was vacant.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set: HashSet<&str> = HashSet::new();\n\n// nonexistent key\nset.entry(\"poneyland\").or_insert();\nassert!(set.contains(\"poneyland\"));\n\n// existing key\nset.entry(\"poneyland\").or_insert();\nassert!(set.contains(\"poneyland\"));\nassert_eq!(set.len(), 1);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"892":{"id":892,"crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/equivalent-1.0.2/src/lib.rs","begin":[82,1],"end":[85,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Q"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[207],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"Q"}}}},"1496":{"id":1496,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2169,1],"end":[2177,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":67,"args":null},"for":{"resolved_path":{"path":"IterHashMut","id":1258,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1495],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"615":{"id":615,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":539,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"338":{"id":338,"crate_id":0,"name":"size_hint","span":{"filename":"src/map.rs","begin":[3275,5],"end":[3277,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1219":{"id":1219,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntry","id":1166,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"942":{"id":942,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1736,1],"end":[1744,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"items":[939,940,941],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1546":{"id":1546,"crate_id":0,"name":"Item","span":{"filename":"src/table.rs","begin":[2303,5],"end":[2303,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"T"}}}},"665":{"id":665,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntryRef","id":621,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"388":{"id":388,"crate_id":0,"name":"default","span":{"filename":"src/map.rs","begin":[2383,5],"end":[2387,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1269":{"id":1269,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"992":{"id":992,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":945,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1596":{"id":1596,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"715":{"id":715,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawEntryBuilderMut","id":188,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"438":{"id":438,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1319":{"id":1319,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Entry","id":1241,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1042":{"id":1042,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ExtractIf","id":842,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"161":{"id":161,"crate_id":0,"name":"shrink_to","span":{"filename":"src/map.rs","begin":[1204,5],"end":[1207,6]},"visibility":"public","docs":"Shrinks the capacity of the map with a lower limit. It will drop\ndown no lower than the supplied limit while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.\n\nThis function does nothing if the current capacity is smaller than the\nsupplied minimum capacity.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<i32, i32> = HashMap::with_capacity(100);\nmap.insert(1, 2);\nmap.insert(3, 4);\nassert!(map.capacity() >= 100);\nmap.shrink_to(10);\nassert!(map.capacity() >= 10);\nmap.shrink_to(0);\nassert!(map.capacity() >= 2);\nmap.shrink_to(10);\nassert!(map.capacity() >= 2);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["min_capacity",{"primitive":"usize"}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"765":{"id":765,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"RawOccupiedEntryMut","id":720,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1369":{"id":1369,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":1305,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1092":{"id":1092,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Difference","id":854,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"211":{"id":211,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[190,1],"end":[204,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":31,"args":null},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[209,210],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"815":{"id":815,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawEntryBuilder","id":190,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"538":{"id":538,"crate_id":0,"name":"0","span":{"filename":"src/map.rs","begin":[2729,12],"end":[2729,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"VacantEntry","id":539,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"1419":{"id":1419,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2005,1],"end":[2013,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":31,"args":null},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1418],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1142":{"id":1142,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Union","id":860,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"261":{"id":261,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"865":{"id":865,"crate_id":0,"name":"entry","span":{"filename":"src/set.rs","begin":[1000,5],"end":[1005,6]},"visibility":"public","docs":"Gets the given value's corresponding entry in the set for in-place manipulation.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nuse hashbrown::hash_set::Entry::*;\n\nlet mut singles = HashSet::new();\nlet mut dupes = HashSet::new();\n\nfor ch in \"a short treatise on fungi\".chars() {\n    if let Vacant(dupe_entry) = dupes.entry(ch) {\n        // We haven't already seen a duplicate, so\n        // check if we've at least seen it once.\n        match singles.entry(ch) {\n            Vacant(single_entry) => {\n                // We found a new character for the first time.\n                single_entry.insert();\n            }\n            Occupied(single_entry) => {\n                // We've already seen this once, \"move\" it to dupes.\n                single_entry.remove();\n                dupe_entry.insert();\n            }\n        }\n    }\n}\n\nassert!(!singles.contains(&'t') && dupes.contains(&'t'));\nassert!(singles.contains(&'u') && !dupes.contains(&'u'));\nassert!(!singles.contains(&'v') && !dupes.contains(&'v'));\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"generic":"T"}]],"output":{"resolved_path":{"path":"Entry","id":866,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"588":{"id":588,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1469":{"id":1469,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2103,1],"end":[2111,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":67,"args":null},"for":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1468],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"311":{"id":311,"crate_id":0,"name":"size_hint","span":{"filename":"src/map.rs","begin":[3226,5],"end":[3228,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1192":{"id":1192,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":1163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"34":{"id":34,"crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":33},"attrs":[{"other":"#[attr = TrackCaller]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"915":{"id":915,"crate_id":0,"name":"Output","span":{"filename":"src/set.rs","begin":[1401,5],"end":[1401,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}},"638":{"id":638,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"EntryRef","id":165,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1519":{"id":1519,"crate_id":0,"name":"default","span":{"filename":"src/table.rs","begin":[2235,5],"end":[2239,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"361":{"id":361,"crate_id":0,"name":"default","span":{"filename":"src/map.rs","begin":[2305,5],"end":[2309,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1242":{"id":1242,"crate_id":0,"name":"insert_unique","span":{"filename":"src/table.rs","begin":[404,5],"end":[416,6]},"visibility":"public","docs":"Inserts an element into the `HashTable` with the given hash value, but\nwithout checking whether an equivalent element already exists within the\ntable.\n\n`hasher` is called if entries need to be moved or copied to a new table.\nThis must return the same hash value that each entry was inserted with.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut v = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\nv.insert_unique(hasher(&1), 1, hasher);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["hash",{"primitive":"u64"}],["value",{"generic":"T"}],["hasher",{"impl_trait":[{"trait_bound":{"trait":{"path":"Fn","id":784,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"impl Fn(&T) -> u64","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Fn","id":784,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":true}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"84":{"id":84,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DefaultHasher","id":69,"args":null}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"965":{"id":965,"crate_id":0,"name":"clone","span":{"filename":"src/set.rs","begin":[1780,5],"end":[1784,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1569":{"id":1569,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ExtractIf","id":1263,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"411":{"id":411,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1292":{"id":1292,"crate_id":0,"name":"Item","span":{"filename":"src/table.rs","begin":[1154,5],"end":[1154,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"T"}}}}}},"1015":{"id":1015,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Drain","id":839,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"134":{"id":134,"crate_id":0,"name":"Keys","span":{"filename":"src/map.rs","begin":[2455,1],"end":[2457,2]},"visibility":"public","docs":"An iterator over the keys of a `HashMap` in arbitrary order.\nThe iterator element type is `&'a K`.\n\nThis `struct` is created by the [`keys`] method on [`HashMap`]. See its\ndocumentation for more.\n\n[`keys`]: struct.HashMap.html#method.keys\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();\n\nlet mut keys = map.keys();\nlet mut vec = vec![keys.next(), keys.next(), keys.next()];\n\n// The `Keys` iterator produces keys in arbitrary order, so the\n// keys must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [Some(&1), Some(&2), Some(&3)]);\n\n// It is fused iterator\nassert_eq!(keys.next(), None);\nassert_eq!(keys.next(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"impls":[401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,418,420,422,427,429,430]}}},"738":{"id":738,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawEntryMut","id":699,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1619":{"id":1619,"crate_id":0,"name":"hashbrown","span":{"filename":"src/lib.rs","begin":[1,1],"end":[189,2]},"visibility":"public","docs":"This crate is a Rust port of Google's high-performance [SwissTable] hash\nmap, adapted to make it a drop-in replacement for Rust's standard `HashMap`\nand `HashSet` types.\n\nThe original C++ version of [SwissTable] can be found [here], and this\n[CppCon talk] gives an overview of how the algorithm works.\n\n[SwissTable]: https://abseil.io/blog/20180927-swisstables\n[here]: https://github.com/abseil/abseil-cpp/blob/master/absl/container/internal/raw_hash_set.h\n[CppCon talk]: https://www.youtube.com/watch?v=ncHmEUmJZf4","links":{},"attrs":[{"other":"#[no_std]"},{"other":"#[<cfg_attr>(feature = \"nightly\",\nfeature(test, core_intrinsics, dropck_eyepatch, min_specialization,\nextend_one, allocator_api, slice_ptr_get, maybe_uninit_array_assume_init,\nstrict_provenance_lints))]"},{"other":"#[<cfg_attr>(feature = \"rustc-dep-of-std\", feature(rustc_attrs))]"},{"other":"#[allow(clippy::doc_markdown, clippy::module_name_repetitions,\nclippy::must_use_candidate, clippy::option_if_let_else,\nclippy::redundant_else, clippy::manual_map, clippy::missing_safety_doc,\nclippy::missing_errors_doc)]"},{"other":"#[warn(missing_docs)]"},{"other":"#[warn(rust_2018_idioms)]"},{"other":"#[<cfg_attr>(feature = \"nightly\", warn(fuzzy_provenance_casts))]"},{"other":"#[<cfg_attr>(feature = \"nightly\",\nallow(clippy::incompatible_msrv, internal_features))]"},{"other":"#[<cfg_attr>(all(feature = \"nightly\", target_arch = \"loongarch64\"),\nfeature(stdarch_loongarch))]"},{"other":"#[<cfg_attr>(all(feature = \"nightly\", feature = \"default-hasher\"),\nfeature(hasher_prefixfree_extras))]"}],"deprecation":null,"inner":{"module":{"is_crate":true,"items":[1579,1581,1583,1584,1585,1586,1587,1588,1589,159],"is_stripped":false}}},"461":{"id":461,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3379,1],"end":[3379,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1342":{"id":1342,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1065":{"id":1065,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Intersection","id":858,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"184":{"id":184,"crate_id":0,"name":"allocation_size","span":{"filename":"src/map.rs","begin":[2006,5],"end":[2008,6]},"visibility":"public","docs":"Returns the total amount of memory allocated internally by the hash\nset, in bytes.\n\nThe returned number is informational only. It is intended to be\nprimarily used for memory profiling.","links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"788":{"id":788,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"RawVacantEntryMut","id":723,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"511":{"id":511,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"ValuesMut","id":138,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1392":{"id":1392,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1115":{"id":1115,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"SymmetricDifference","id":856,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"234":{"id":234,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3087,1],"end":[3122,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"items":[231,232,233],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"838":{"id":838,"crate_id":0,"name":"drain","span":{"filename":"src/set.rs","begin":[348,5],"end":[352,6]},"visibility":"public","docs":"Clears the set, returning all elements in an iterator.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set: HashSet<_> = [1, 2, 3].into_iter().collect();\nassert!(!set.is_empty());\n\n// print 1, 2, 3 in an arbitrary order\nfor i in set.drain() {\n    println!(\"{}\", i);\n}\n\nassert!(set.is_empty());\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Drain","id":839,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"561":{"id":561,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Entry","id":163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1442":{"id":1442,"crate_id":0,"name":"size_hint","span":{"filename":"src/table.rs","begin":[2054,5],"end":[2056,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1165":{"id":1165,"crate_id":0,"name":"0","span":{"filename":"src/set.rs","begin":[2253,12],"end":[2253,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"VacantEntry","id":1166,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"284":{"id":284,"crate_id":0,"name":"fold","span":{"filename":"src/map.rs","begin":[3182,5],"end":[3191,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"7":{"id":7,"crate_id":0,"name":"HashMap","span":{"filename":"src/map.rs","begin":[185,1],"end":[188,2]},"visibility":"public","docs":"A hash map implemented with quadratic probing and SIMD lookup.\n\nThe default hashing algorithm is currently [`foldhash`], though this is\nsubject to change at any point in the future. This hash function is very\nfast for all types of keys, but this algorithm will typically *not* protect\nagainst attacks such as HashDoS.\n\nThe hashing algorithm can be replaced on a per-`HashMap` basis using the\n[`default`], [`with_hasher`], and [`with_capacity_and_hasher`] methods. Many\nalternative algorithms are available on crates.io, such as the [`fnv`] crate.\n\nIt is required that the keys implement the [`Eq`] and [`Hash`] traits, although\nthis can frequently be achieved by using `#[derive(PartialEq, Eq, Hash)]`.\nIf you implement these yourself, it is important that the following\nproperty holds:\n\n```text\nk1 == k2 -> hash(k1) == hash(k2)\n```\n\nIn other words, if two keys are equal, their hashes must be equal.\n\nIt is a logic error for a key to be modified in such a way that the key's\nhash, as determined by the [`Hash`] trait, or its equality, as determined by\nthe [`Eq`] trait, changes while it is in the map. This is normally only\npossible through [`Cell`], [`RefCell`], global state, I/O, or unsafe code.\n\nIt is also a logic error for the [`Hash`] implementation of a key to panic.\nThis is generally only possible if the trait is implemented manually. If a\npanic does occur then the contents of the `HashMap` may become corrupted and\nsome items may be dropped from the table.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\n// Type inference lets us omit an explicit type signature (which\n// would be `HashMap<String, String>` in this example).\nlet mut book_reviews = HashMap::new();\n\n// Review some books.\nbook_reviews.insert(\n    \"Adventures of Huckleberry Finn\".to_string(),\n    \"My favorite book.\".to_string(),\n);\nbook_reviews.insert(\n    \"Grimms' Fairy Tales\".to_string(),\n    \"Masterpiece.\".to_string(),\n);\nbook_reviews.insert(\n    \"Pride and Prejudice\".to_string(),\n    \"Very enjoyable.\".to_string(),\n);\nbook_reviews.insert(\n    \"The Adventures of Sherlock Holmes\".to_string(),\n    \"Eye lyked it alot.\".to_string(),\n);\n\n// Check for a specific one.\n// When collections store owned values (String), they can still be\n// queried using references (&str).\nif !book_reviews.contains_key(\"Les Misérables\") {\n    println!(\"We've got {} reviews, but Les Misérables ain't one.\",\n             book_reviews.len());\n}\n\n// oops, this review has a lot of spelling mistakes, let's delete it.\nbook_reviews.remove(\"The Adventures of Sherlock Holmes\");\n\n// Look up the values associated with some keys.\nlet to_find = [\"Pride and Prejudice\", \"Alice's Adventure in Wonderland\"];\nfor &book in &to_find {\n    match book_reviews.get(book) {\n        Some(review) => println!(\"{}: {}\", book, review),\n        None => println!(\"{} is unreviewed.\", book)\n    }\n}\n\n// Look up the value for a key (will panic if the key is not found).\nprintln!(\"Review for Jane: {}\", book_reviews[\"Pride and Prejudice\"]);\n\n// Iterate over everything.\nfor (book, review) in &book_reviews {\n    println!(\"{}: \\\"{}\\\"\", book, review);\n}\n```\n\n`HashMap` also implements an [`Entry API`](#method.entry), which allows\nfor more complex methods of getting, setting, updating and removing keys and\ntheir values:\n\n```\nuse hashbrown::HashMap;\n\n// type inference lets us omit an explicit type signature (which\n// would be `HashMap<&str, u8>` in this example).\nlet mut player_stats = HashMap::new();\n\nfn random_stat_buff() -> u8 {\n    // could actually return some random value here - let's just return\n    // some fixed value for now\n    42\n}\n\n// insert a key only if it doesn't already exist\nplayer_stats.entry(\"health\").or_insert(100);\n\n// insert a key using a function that provides a new value only if it\n// doesn't already exist\nplayer_stats.entry(\"defence\").or_insert_with(random_stat_buff);\n\n// update a key, guarding against the key possibly not being set\nlet stat = player_stats.entry(\"attack\").or_insert(100);\n*stat += random_stat_buff();\n```\n\nThe easiest way to use `HashMap` with a custom key type is to derive [`Eq`] and [`Hash`].\nWe must also derive [`PartialEq`].\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html\n[`PartialEq`]: https://doc.rust-lang.org/std/cmp/trait.PartialEq.html\n[`RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html\n[`Cell`]: https://doc.rust-lang.org/std/cell/struct.Cell.html\n[`default`]: #method.default\n[`with_hasher`]: #method.with_hasher\n[`with_capacity_and_hasher`]: #method.with_capacity_and_hasher\n[`fnv`]: https://crates.io/crates/fnv\n[`foldhash`]: https://crates.io/crates/foldhash\n\n```\nuse hashbrown::HashMap;\n\n#[derive(Hash, Eq, PartialEq, Debug)]\nstruct Viking {\n    name: String,\n    country: String,\n}\n\nimpl Viking {\n    /// Creates a new Viking.\n    fn new(name: &str, country: &str) -> Viking {\n        Viking { name: name.to_string(), country: country.to_string() }\n    }\n}\n\n// Use a HashMap to store the vikings' health points.\nlet mut vikings = HashMap::new();\n\nvikings.insert(Viking::new(\"Einar\", \"Norway\"), 25);\nvikings.insert(Viking::new(\"Olaf\", \"Denmark\"), 24);\nvikings.insert(Viking::new(\"Harald\", \"Iceland\"), 12);\n\n// Use derived implementation to print the status of the vikings.\nfor (viking, health) in &vikings {\n    println!(\"{:?} has {} hp\", viking, health);\n}\n```\n\nA `HashMap` with fixed list of elements can be initialized from an array:\n\n```\nuse hashbrown::HashMap;\n\nlet timber_resources: HashMap<&str, i32> = [(\"Norway\", 100), (\"Denmark\", 50), (\"Iceland\", 10)]\n    .into_iter().collect();\n// use the values stored in map\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"crate::DefaultHashBuilder","id":9,"args":null}},"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[123,128,129,156,185,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,208,211,213,215,217,219,222,225,229,234,239,241,244,247,250,252]}}},"888":{"id":888,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"611":{"id":611,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntry","id":539,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1492":{"id":1492,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterHashMut","id":1258,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1215":{"id":1215,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":1166,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"334":{"id":334,"crate_id":0,"name":"default","span":{"filename":"src/map.rs","begin":[3261,5],"end":[3265,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"661":{"id":661,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntryRef","id":621,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1542":{"id":1542,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Drain","id":1261,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1265":{"id":1265,"crate_id":0,"name":"get_many_unchecked_mut","span":{"filename":"src/table.rs","begin":[1105,5],"end":[1111,6]},"visibility":"public","docs":"Attempts to get mutable references to `N` values in the map at once, without validating that\nthe values are unique.\n\nThe `eq` argument should be a closure such that `eq(i, k)` returns true if `k` is equal to\nthe `i`th key to be looked up.\n\nReturns an array of length `N` with the results of each query. `None` will be returned if\nany of the keys are missing.\n\nFor a safe alternative see [`get_many_mut`](`HashTable::get_many_mut`).\n\n# Safety\n\nCalling this method with overlapping keys is *[undefined behavior]* even if the resulting\nreferences are not used.\n\n[undefined behavior]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::hash_table::Entry;\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut libraries: HashTable<(&str, u32)> = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\nfor (k, v) in [\n    (\"Bodleian Library\", 1602),\n    (\"Athenæum\", 1807),\n    (\"Herzogin-Anna-Amalia-Bibliothek\", 1691),\n    (\"Library of Congress\", 1800),\n] {\n    libraries.insert_unique(hasher(&k), (k, v), |(k, _)| hasher(&k));\n}\n\nlet keys = [\"Athenæum\", \"Library of Congress\"];\nlet got = libraries.get_many_mut(keys.map(|k| hasher(&k)), |i, val| keys[i] == val.0);\nassert_eq!(\n    got,\n    [Some(&mut (\"Athenæum\", 1807)), Some(&mut (\"Library of Congress\", 1800))],\n);\n\n// Missing keys result in None\nlet keys = [\"Athenæum\", \"New York Public Library\"];\nlet got = libraries.get_many_mut(keys.map(|k| hasher(&k)), |i, val| keys[i] == val.0);\nassert_eq!(got, [Some(&mut (\"Athenæum\", 1807)), None]);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{"`HashTable::get_many_mut`":1264},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["hashes",{"array":{"type":{"primitive":"u64"},"len":"N"}}],["eq",{"impl_trait":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"array":{"type":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}}}],"constraints":[]}}}},"len":"N"}},"is_c_variadic":false},"generics":{"params":[{"name":"N","kind":{"const":{"type":{"primitive":"usize"},"default":null}}},{"name":"impl FnMut(usize, &T) -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":true}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"384":{"id":384,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoValues","id":155,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"988":{"id":988,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoIter","id":945,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"711":{"id":711,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawEntryBuilderMut","id":188,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1315":{"id":1315,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"Entry","id":1241,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"434":{"id":434,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"157":{"id":157,"crate_id":0,"name":"try_reserve","span":{"filename":"src/map.rs","begin":[1153,5],"end":[1156,6]},"visibility":"public","docs":"Tries to reserve capacity for at least `additional` more elements to be inserted\nin the given `HashMap<K,V>`. The collection may reserve more space to avoid\nfrequent reallocations.\n\n# Errors\n\nIf the capacity overflows, or the allocator reports a failure, then an error\nis returned.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, isize> = HashMap::new();\n// Map is empty and doesn't allocate memory\nassert_eq!(map.capacity(), 0);\n\nmap.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");\n\n// And now map can hold at least 10 elements\nassert!(map.capacity() >= 10);\n```\nIf the capacity overflows, or the allocator reports a failure, then an error\nis returned:\n```\n# fn test() {\nuse hashbrown::HashMap;\nuse hashbrown::TryReserveError;\nlet mut map: HashMap<i32, i32> = HashMap::new();\n\nmatch map.try_reserve(usize::MAX) {\n    Err(error) => match error {\n        TryReserveError::CapacityOverflow => {}\n        _ => panic!(\"TryReserveError::AllocError ?\"),\n    },\n    _ => panic!(),\n}\n# }\n# fn main() {\n#     #[cfg(not(miri))]\n#     test()\n# }\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["additional",{"primitive":"usize"}]],"output":{"resolved_path":{"path":"Result","id":42,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1038":{"id":1038,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":842,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"761":{"id":761,"crate_id":0,"name":"remove_entry","span":{"filename":"src/raw_entry.rs","begin":[1242,5],"end":[1244,6]},"visibility":"public","docs":"Take the ownership of the key and value from the map.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\n\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(o) => assert_eq!(o.remove_entry(), (\"a\", 100)),\n}\nassert_eq!(map.get(&\"a\"), None);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"tuple":[{"generic":"K"},{"generic":"V"}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"484":{"id":484,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3455,1],"end":[3455,65]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"Drain","id":146,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1365":{"id":1365,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntry","id":1305,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"207":{"id":207,"crate_id":6,"name":"equivalent","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/equivalent-1.0.2/src/lib.rs","begin":[88,5],"end":[88,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["key",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1088":{"id":1088,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Difference","id":854,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"811":{"id":811,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"RawEntryBuilder","id":190,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"534":{"id":534,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3421,1],"end":[3427,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"ValuesMut","id":138,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[533],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1415":{"id":1415,"crate_id":0,"name":"len","span":{"filename":"src/table.rs","begin":[1997,5],"end":[1999,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"257":{"id":257,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1138":{"id":1138,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"Union","id":860,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"861":{"id":861,"crate_id":0,"name":"contains","span":{"filename":"src/set.rs","begin":[862,5],"end":[867,6]},"visibility":"public","docs":"Returns `true` if the set contains a value.\n\nThe value may be any borrowed form of the set's value type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe value type.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet set: HashSet<_> = [1, 2, 3].into_iter().collect();\nassert_eq!(set.contains(&1), true);\nassert_eq!(set.contains(&4), false);\n```\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["value",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"584":{"id":584,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1465":{"id":1465,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1188":{"id":1188,"crate_id":0,"name":"get","span":{"filename":"src/set.rs","begin":[2443,5],"end":[2445,6]},"visibility":"public","docs":"Gets a reference to the value in the entry.\n\n# Examples\n\n```\nuse hashbrown::hash_set::{Entry, HashSet};\n\nlet mut set: HashSet<&str> = HashSet::new();\nset.entry(\"poneyland\").or_insert();\n\nmatch set.entry(\"poneyland\") {\n    Entry::Vacant(_) => panic!(),\n    Entry::Occupied(entry) => assert_eq!(entry.get(), &\"poneyland\"),\n}\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"307":{"id":307,"crate_id":0,"name":"default","span":{"filename":"src/map.rs","begin":[3204,5],"end":[3209,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"30":{"id":30,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":32,"args":null},"for":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"items":[29],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"911":{"id":911,"crate_id":0,"name":"Output","span":{"filename":"src/set.rs","begin":[1368,5],"end":[1368,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}},"634":{"id":634,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"EntryRef","id":165,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1515":{"id":1515,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoIter","id":1285,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1238":{"id":1238,"crate_id":0,"name":"find_entry","span":{"filename":"src/table.rs","begin":[299,5],"end":[312,6]},"visibility":"public","docs":"Returns an `OccupiedEntry` for an entry in the table with the given hash\nand which satisfies the equality function passed.\n\nThis can be used to remove the entry from the table. Call\n[`HashTable::entry`] instead if you wish to insert an entry if the\nlookup fails.\n\nThis method will call `eq` for all entries with the given hash, but may\nalso call it for entries with a different hash. `eq` should only return\ntrue for the desired entry, at which point the search is stopped.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\ntable.insert_unique(hasher(&1), (1, \"a\"), |val| hasher(&val.0));\nif let Ok(entry) = table.find_entry(hasher(&1), |val| val.0 == 1) {\n    entry.remove();\n}\nassert_eq!(table.find(hasher(&1), |val| val.0 == 1), None);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{"`HashTable::entry`":1237},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["hash",{"primitive":"u64"}],["eq",{"impl_trait":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"path":"Result","id":42,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}}},{"type":{"resolved_path":{"path":"AbsentEntry","id":1240,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"impl FnMut(&T) -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":true}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"357":{"id":357,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoKeys","id":153,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"80":{"id":80,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DefaultHasher","id":69,"args":null}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"961":{"id":961,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"684":{"id":684,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"OccupiedError","id":181,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1565":{"id":1565,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ExtractIf","id":1263,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1288":{"id":1288,"crate_id":0,"name":"Item","span":{"filename":"src/table.rs","begin":[1142,5],"end":[1142,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"T"}}}}}},"407":{"id":407,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"130":{"id":130,"crate_id":0,"name":"allocator","span":{"filename":"src/map.rs","begin":[510,5],"end":[512,6]},"visibility":"public","docs":"Returns a reference to the underlying allocator.","links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"A"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1011":{"id":1011,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"Drain","id":839,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"734":{"id":734,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"RawEntryMut","id":699,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1615":{"id":1615,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[178,17],"end":[178,26]},"visibility":"default","docs":null,"links":{},"attrs":["automatically_derived"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":214,"args":null},"for":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"items":[1614],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1338":{"id":1338,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"457":{"id":457,"crate_id":0,"name":"fold","span":{"filename":"src/map.rs","begin":[3365,5],"end":[3371,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"180":{"id":180,"crate_id":0,"name":"try_insert","span":{"filename":"src/map.rs","begin":[1914,5],"end":[1923,6]},"visibility":"public","docs":"Tries to insert a key-value pair into the map, and returns\na mutable reference to the value in the entry.\n\n# Errors\n\nIf the map already had this key present, nothing is updated, and\nan error containing the occupied entry and the value is returned.\n\n# Examples\n\nBasic usage:\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::OccupiedError;\n\nlet mut map = HashMap::new();\nassert_eq!(map.try_insert(37, \"a\").unwrap(), &\"a\");\n\nmatch map.try_insert(37, \"b\") {\n    Err(OccupiedError { entry, value }) => {\n        assert_eq!(entry.key(), &37);\n        assert_eq!(entry.get(), &\"a\");\n        assert_eq!(value, \"b\");\n    }\n    _ => panic!()\n}\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["key",{"generic":"K"}],["value",{"generic":"V"}]],"output":{"resolved_path":{"path":"Result","id":42,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"V"}}}},{"type":{"resolved_path":{"path":"OccupiedError","id":181,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1061":{"id":1061,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Intersection","id":858,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1388":{"id":1388,"crate_id":0,"name":"fmt","span":{"filename":"src/table.rs","begin":[1932,5],"end":[1934,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"507":{"id":507,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2621,1],"end":[2621,93]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"V"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":150,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1111":{"id":1111,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"SymmetricDifference","id":856,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"834":{"id":834,"crate_id":0,"name":"iter","span":{"filename":"src/set.rs","begin":[290,5],"end":[294,6]},"visibility":"public","docs":"An iterator visiting all elements in arbitrary order.\nThe iterator element type is `&'a T`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet mut set = HashSet::new();\nset.insert(\"a\");\nset.insert(\"b\");\n\n// Will print in an arbitrary order.\nfor x in set.iter() {\n    println!(\"{}\", x);\n}\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1438":{"id":1438,"crate_id":0,"name":"default","span":{"filename":"src/table.rs","begin":[2036,5],"end":[2041,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"557":{"id":557,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"Entry","id":163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"280":{"id":280,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3154,1],"end":[3162,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":67,"args":null},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[279],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1161":{"id":1161,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2157,1],"end":[2183,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"Union","id":860,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1157,1158,1159,1160],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"884":{"id":884,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1488":{"id":1488,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterHashMut","id":1258,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"607":{"id":607,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":539,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"330":{"id":330,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoIter","id":237,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1211":{"id":1211,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":1166,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"53":{"id":53,"crate_id":2,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"T"}}}},"934":{"id":934,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1560,1],"end":[1601,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BitXorAssign","id":935,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[933],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1538":{"id":1538,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Drain","id":1261,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"657":{"id":657,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"VacantEntryRef","id":621,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"380":{"id":380,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoValues","id":155,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1261":{"id":1261,"crate_id":0,"name":"Drain","span":{"filename":"src/table.rs","begin":[2298,1],"end":[2300,2]},"visibility":"public","docs":"A draining iterator over the items of a `HashTable`.\n\nThis `struct` is created by the [`drain`] method on [`HashTable`].\nSee its documentation for more.\n\n[`HashTable`]: struct.HashTable.html\n[`drain`]: struct.HashTable.html#method.drain","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[1532,1533,1534,1535,1536,1537,1538,1539,1540,1541,1542,1543,1544,1545,1550,1552,1553,1555]}}},"103":{"id":103,"crate_id":0,"name":"write_isize","span":{"filename":"src/hasher.rs","begin":[50,5],"end":[64,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Always)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["arg",{"primitive":"isize"}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"984":{"id":984,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":945,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"707":{"id":707,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"RawEntryBuilderMut","id":188,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1588":{"id":1588,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[136,1],"end":[136,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"crate::table::HashTable","name":"HashTable","id":1228,"is_glob":false}}},"430":{"id":430,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3339,1],"end":[3339,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1311":{"id":1311,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[1319,1],"end":[1495,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"Entry","id":1241,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1307,1308,1309,1310],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"153":{"id":153,"crate_id":0,"name":"IntoKeys","span":{"filename":"src/map.rs","begin":[2299,1],"end":[2301,2]},"visibility":"public","docs":"An owning iterator over the keys of a `HashMap` in arbitrary order.\nThe iterator element type is `K`.\n\nThis `struct` is created by the [`into_keys`] method on [`HashMap`].\nSee its documentation for more.\nThe map cannot be used after calling that method.\n\n[`into_keys`]: struct.HashMap.html#method.into_keys\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();\n\nlet mut keys = map.into_keys();\nlet mut vec = vec![keys.next(), keys.next(), keys.next()];\n\n// The `IntoKeys` iterator produces keys in arbitrary order, so the\n// keys must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [Some(1), Some(2), Some(3)]);\n\n// It is fused iterator\nassert_eq!(keys.next(), None);\nassert_eq!(keys.next(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[347,348,349,350,351,352,353,354,355,356,357,358,359,360,362,367,369,370,372]}}},"1034":{"id":1034,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":842,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"757":{"id":757,"crate_id":0,"name":"into_key_value","span":{"filename":"src/raw_entry.rs","begin":[1146,5],"end":[1151,6]},"visibility":"public","docs":"Converts the `OccupiedEntry` into a mutable reference to the key and value in the entry\nwith a lifetime bound to the map itself.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\nuse std::rc::Rc;\n\nlet key_one = Rc::new(\"a\");\nlet key_two = Rc::new(\"a\");\n\nlet mut map: HashMap<Rc<&str>, u32> = HashMap::new();\nmap.insert(key_one.clone(), 10);\n\nassert_eq!(map[&key_one], 10);\nassert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);\n\nlet inside_key: &mut Rc<&str>;\nlet inside_value: &mut u32;\nmatch map.raw_entry_mut().from_key(&key_one) {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(o) => {\n        let tuple = o.into_key_value();\n        inside_key = tuple.0;\n        inside_value = tuple.1;\n    }\n}\n*inside_key = key_two.clone();\n*inside_value = 100;\nassert_eq!(map[&key_two], 100);\nassert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"480":{"id":480,"crate_id":0,"name":"fold","span":{"filename":"src/map.rs","begin":[3441,5],"end":[3447,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1361":{"id":1361,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":1305,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"203":{"id":203,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1084":{"id":1084,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"Difference","id":854,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"807":{"id":807,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"RawEntryBuilder","id":190,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1411":{"id":1411,"crate_id":0,"name":"next","span":{"filename":"src/table.rs","begin":[1974,5],"end":[1980,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"530":{"id":530,"crate_id":0,"name":"len","span":{"filename":"src/map.rs","begin":[3415,5],"end":[3417,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1134":{"id":1134,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2118,1],"end":[2127,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"SymmetricDifference","id":856,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1133],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"857":{"id":857,"crate_id":0,"name":"intersection","span":{"filename":"src/set.rs","begin":[799,5],"end":[809,6]},"visibility":"public","docs":"Visits the values representing the intersection,\ni.e., the values that are both in `self` and `other`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet a: HashSet<_> = [1, 2, 3].into_iter().collect();\nlet b: HashSet<_> = [4, 2, 3, 4].into_iter().collect();\n\n// Print 2, 3 in arbitrary order.\nfor x in a.intersection(&b) {\n    println!(\"{}\", x);\n}\n\nlet intersection: HashSet<_> = a.intersection(&b).collect();\nassert_eq!(intersection, [2, 3].iter().collect());\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Intersection","id":858,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1461":{"id":1461,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"580":{"id":580,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"303":{"id":303,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1184":{"id":1184,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"Entry","id":866,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"907":{"id":907,"crate_id":0,"name":"extend","span":{"filename":"src/set.rs","begin":[1331,5],"end":[1333,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"I"}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"IntoIterator","id":230,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":null,"binding":{"equality":{"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"T"}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"26":{"id":26,"crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1511":{"id":1511,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoIter","id":1285,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"630":{"id":630,"crate_id":0,"name":"or_default","span":{"filename":"src/map.rs","begin":[4353,5],"end":[4363,6]},"visibility":"public","docs":"Ensures a value is in the entry by inserting the default value if empty,\nand returns a mutable reference to the value in the entry.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<String, Option<u32>> = HashMap::new();\n\n// nonexistent key\nmap.entry_ref(\"poneyland\").or_default();\nassert_eq!(map[\"poneyland\"], None);\n\nmap.insert(\"horseland\".to_string(), Some(3));\n\n// existing key\nassert_eq!(map.entry_ref(\"horseland\").or_default(), &mut Some(3));\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"generic":"Q"}}},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"353":{"id":353,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoKeys","id":153,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1234":{"id":1234,"crate_id":0,"name":"allocator","span":{"filename":"src/table.rs","begin":[190,5],"end":[192,6]},"visibility":"public","docs":"Returns a reference to the underlying allocator.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"A"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"957":{"id":957,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":32,"args":null},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[29],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"76":{"id":76,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"DefaultHasher","id":69,"args":null}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1561":{"id":1561,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":1263,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"680":{"id":680,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedError","id":181,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"403":{"id":403,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1284":{"id":1284,"crate_id":0,"name":"IntoIter","span":{"filename":"src/table.rs","begin":[1129,5],"end":[1129,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"IntoIter","id":1285,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}},"1007":{"id":1007,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"Drain","id":839,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"126":{"id":126,"crate_id":0,"name":"with_capacity_and_hasher_in","span":{"filename":"src/map.rs","begin":[578,5],"end":[583,6]},"visibility":"public","docs":"Creates an empty `HashMap` with the specified capacity, using `hash_builder`\nto hash the keys. It will be allocated with the given allocator.\n\nThe hash map will be able to hold at least `capacity` elements without\nreallocating. If `capacity` is 0, the hash map will not allocate.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashMap` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashMap`].\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::DefaultHashBuilder;\n\nlet s = DefaultHashBuilder::default();\nlet mut map = HashMap::with_capacity_and_hasher(10, s);\nmap.insert(1, 2);\n```","links":{"`HashMap`":7},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["capacity",{"primitive":"usize"}],["hash_builder",{"generic":"S"}],["alloc",{"generic":"A"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1611":{"id":1611,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[178,10],"end":[178,15]},"visibility":"default","docs":null,"links":{},"attrs":["automatically_derived"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":31,"args":null},"for":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"items":[1610],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"730":{"id":730,"crate_id":0,"name":null,"span":{"filename":"src/raw_entry.rs","begin":[710,1],"end":[902,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"RawEntryMut","id":699,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[725,726,727,728,729],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"453":{"id":453,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3341,1],"end":[3348,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":67,"args":null},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[452],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1334":{"id":1334,"crate_id":0,"name":"into_table","span":{"filename":"src/table.rs","begin":[1768,5],"end":[1770,6]},"visibility":"public","docs":"Converts the `OccupiedEntry` into a mutable reference to the underlying\ntable.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"176":{"id":176,"crate_id":0,"name":"get_many_key_value_mut","span":{"filename":"src/map.rs","begin":[1658,5],"end":[1667,6]},"visibility":"public","docs":"Attempts to get mutable references to `N` values in the map at once, with immutable\nreferences to the corresponding keys.\n\nReturns an array of length `N` with the results of each query. For soundness, at most one\nmutable reference will be returned to any value. `None` will be used if the key is missing.\n\n# Panics\n\nPanics if any keys are overlapping.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut libraries = HashMap::new();\nlibraries.insert(\"Bodleian Library\".to_string(), 1602);\nlibraries.insert(\"Athenæum\".to_string(), 1807);\nlibraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);\nlibraries.insert(\"Library of Congress\".to_string(), 1800);\n\nlet got = libraries.get_many_key_value_mut([\n    \"Bodleian Library\",\n    \"Herzogin-Anna-Amalia-Bibliothek\",\n]);\nassert_eq!(\n    got,\n    [\n        Some((&\"Bodleian Library\".to_string(), &mut 1602)),\n        Some((&\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), &mut 1691)),\n    ],\n);\n// Missing keys result in None\nlet got = libraries.get_many_key_value_mut([\n    \"Bodleian Library\",\n    \"Gewandhaus\",\n]);\nassert_eq!(got, [Some((&\"Bodleian Library\".to_string(), &mut 1602)), None]);\n```\n\n```should_panic\nuse hashbrown::HashMap;\n\nlet mut libraries = HashMap::new();\nlibraries.insert(\"Bodleian Library\".to_string(), 1602);\nlibraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);\n\n// Duplicate keys result in panic!\nlet got = libraries.get_many_key_value_mut([\n    \"Bodleian Library\",\n    \"Herzogin-Anna-Amalia-Bibliothek\",\n    \"Herzogin-Anna-Amalia-Bibliothek\",\n]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["ks",{"array":{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}},"len":"N"}}]],"output":{"array":{"type":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"V"}}}]}}],"constraints":[]}}}},"len":"N"}},"is_c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"N","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1057":{"id":1057,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"Intersection","id":858,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"503":{"id":503,"crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[2608,5],"end":[2608,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}}},"1384":{"id":1384,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"AbsentEntry","id":1240,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"226":{"id":226,"crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[3056,5],"end":[3056,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"V"}}}]}}}},"1107":{"id":1107,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2062,1],"end":[2071,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"Difference","id":854,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1106],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"830":{"id":830,"crate_id":0,"name":"with_capacity_and_hasher_in","span":{"filename":"src/set.rs","begin":[595,5],"end":[599,6]},"visibility":"public","docs":"Creates an empty `HashSet` with the specified capacity, using\n`hasher` to hash the keys.\n\nThe hash set will be able to hold at least `capacity` elements without\nreallocating. If `capacity` is 0, the hash set will not allocate.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashSet` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashSet`].\n\nThe `hash_builder` passed should implement the [`BuildHasher`] trait for\nthe `HashSet` to be useful, see its documentation for details.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n[`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nuse hashbrown::DefaultHashBuilder;\n\nlet s = DefaultHashBuilder::default();\nlet mut set = HashSet::with_capacity_and_hasher(10, s);\nset.insert(1);\n```","links":{"`HashSet`":8},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["capacity",{"primitive":"usize"}],["hasher",{"generic":"S"}],["alloc",{"generic":"A"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"553":{"id":553,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"Entry","id":163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1434":{"id":1434,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"276":{"id":276,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2160,1],"end":[2168,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":31,"args":null},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[275],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1157":{"id":1157,"crate_id":0,"name":"Item","span":{"filename":"src/set.rs","begin":[2163,5],"end":[2163,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"T"}}}}}},"880":{"id":880,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"603":{"id":603,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":539,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1484":{"id":1484,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"IterHashMut","id":1258,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"326":{"id":326,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoIter","id":237,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1207":{"id":1207,"crate_id":0,"name":"get","span":{"filename":"src/set.rs","begin":[2490,5],"end":[2492,6]},"visibility":"public","docs":"Gets a reference to the value that would be used when inserting\nthrough the `VacantEntry`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set: HashSet<&str> = HashSet::new();\nassert_eq!(set.entry(\"poneyland\").get(), &\"poneyland\");\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"930":{"id":930,"crate_id":0,"name":"bitand_assign","span":{"filename":"src/set.rs","begin":[1555,5],"end":[1557,6]},"visibility":"default","docs":"Modifies this set to contain the intersection of `self` and `rhs`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut a: HashSet<_> = vec![1, 2, 3].into_iter().collect();\nlet b: HashSet<_> = vec![2, 3, 4].into_iter().collect();\n\na &= &b;\n\nlet mut i = 0;\nlet expected = [2, 3];\nfor x in &a {\n    assert!(expected.contains(x));\n    i += 1;\n}\nassert_eq!(i, expected.len());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"49":{"id":49,"crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"TypeId","id":50,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"653":{"id":653,"crate_id":0,"name":"insert_entry","span":{"filename":"src/map.rs","begin":[4467,5],"end":[4483,6]},"visibility":"public","docs":"Sets the value of the entry with the [`VacantEntryRef`]'s key,\nand returns an [`OccupiedEntry`].\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::EntryRef;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n\nif let EntryRef::Vacant(v) = map.entry_ref(\"poneyland\") {\n    let o = v.insert_entry(37);\n    assert_eq!(o.get(), &37);\n}\n```","links":{"`VacantEntryRef`":621,"`OccupiedEntry`":536},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["value",{"generic":"V"}]],"output":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"generic":"Q"}}},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1534":{"id":1534,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"Drain","id":1261,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"376":{"id":376,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":15,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"IntoValues","id":155,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1257":{"id":1257,"crate_id":0,"name":"iter_hash_mut","span":{"filename":"src/table.rs","begin":[829,5],"end":[834,6]},"visibility":"public","docs":"A mutable iterator visiting all elements which may match a hash.\nThe iterator element type is `&'a mut T`.\n\nThis iterator may return elements from the table that have a hash value\ndifferent than the one provided. You should always validate the returned\nvalues before using them.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\ntable.insert_unique(hasher(&1), 2, hasher);\ntable.insert_unique(hasher(&1), 3, hasher);\ntable.insert_unique(hasher(&2), 5, hasher);\n\n// Update matching values\nfor val in table.iter_hash_mut(hasher(&1)) {\n    *val *= 2;\n}\n\nassert_eq!(table.len(), 3);\nlet mut vec: Vec<i32> = Vec::new();\n\nfor val in &table {\n    println!(\"val: {}\", val);\n    vec.push(*val);\n}\n\n// The values will contain 4 and 6 and may contain either 5 or 10.\nassert!(vec.contains(&4));\nassert!(vec.contains(&6));\n\nassert_eq!(table.len(), 3);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["hash",{"primitive":"u64"}]],"output":{"resolved_path":{"path":"IterHashMut","id":1258,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"980":{"id":980,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":945,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"99":{"id":99,"crate_id":0,"name":"write_i16","span":{"filename":"src/hasher.rs","begin":[50,5],"end":[64,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Always)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["arg",{"primitive":"i16"}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1584":{"id":1584,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[84,1],"end":[84,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"crate::hasher::DefaultHashBuilder","name":"DefaultHashBuilder","id":9,"is_glob":false}}},"703":{"id":703,"crate_id":0,"name":null,"span":{"filename":"src/raw_entry.rs","begin":[566,1],"end":[615,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"RawEntryBuilderMut","id":188,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[702],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"426":{"id":426,"crate_id":0,"name":"fold","span":{"filename":"src/map.rs","begin":[3325,5],"end":[3331,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1307":{"id":1307,"crate_id":0,"name":"insert","span":{"filename":"src/table.rs","begin":[1349,5],"end":[1357,6]},"visibility":"public","docs":"Sets the value of the entry, replacing any existing value if there is\none, and returns an [`OccupiedEntry`].\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table: HashTable<&str> = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\n\nlet entry = table\n    .entry(hasher(&\"horseyland\"), |&x| x == \"horseyland\", hasher)\n    .insert(\"horseyland\");\n\nassert_eq!(entry.get(), &\"horseyland\");\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{"`OccupiedEntry`":1239},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["value",{"generic":"T"}]],"output":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1030":{"id":1030,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1907,1],"end":[1912,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"Drain","id":839,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1029],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"149":{"id":149,"crate_id":0,"name":"extract_if","span":{"filename":"src/map.rs","begin":[976,5],"end":[987,6]},"visibility":"public","docs":"Drains elements which are true under the given predicate,\nand returns an iterator over the removed items.\n\nIn other words, move all pairs `(k, v)` such that `f(&k, &mut v)` returns `true` out\ninto another iterator.\n\nNote that `extract_if` lets you mutate every value in the filter closure, regardless of\nwhether you choose to keep or remove it.\n\nIf the returned `ExtractIf` is not exhausted, e.g. because it is dropped without iterating\nor the iteration short-circuits, then the remaining elements will be retained.\nUse [`retain()`] with a negated predicate if you do not need the returned iterator.\n\nKeeps the allocated memory for reuse.\n\n[`retain()`]: HashMap::retain\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<i32, i32> = (0..8).map(|x| (x, x)).collect();\n\nlet drained: HashMap<i32, i32> = map.extract_if(|k, _v| k % 2 == 0).collect();\n\nlet mut evens = drained.keys().cloned().collect::<Vec<_>>();\nlet mut odds = map.keys().cloned().collect::<Vec<_>>();\nevens.sort();\nodds.sort();\n\nassert_eq!(evens, vec![0, 2, 4, 6]);\nassert_eq!(odds, vec![1, 3, 5, 7]);\n\nlet mut map: HashMap<i32, i32> = (0..8).map(|x| (x, x)).collect();\n\n{   // Iterator is dropped without being consumed.\n    let d = map.extract_if(|k, _v| k % 2 != 0);\n}\n\n// ExtractIf was not exhausted, therefore no elements were drained.\nassert_eq!(map.len(), 8);\n```","links":{"HashMap::retain":147},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"resolved_path":{"path":"ExtractIf","id":150,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"V"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"753":{"id":753,"crate_id":0,"name":"into_mut","span":{"filename":"src/raw_entry.rs","begin":[1029,5],"end":[1031,6]},"visibility":"public","docs":"Converts the `OccupiedEntry` into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\n\nlet value: &mut u32;\n\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(o) => value = o.into_mut(),\n}\n*value += 900;\n\nassert_eq!(map[&\"a\"], 1000);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"476":{"id":476,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"Drain","id":146,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"1357":{"id":1357,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":1305,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"199":{"id":199,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"803":{"id":803,"crate_id":0,"name":"from_key_hashed_nocheck","span":{"filename":"src/raw_entry.rs","begin":[662,5],"end":[667,6]},"visibility":"public","docs":"Access an immutable entry by a key and its hash.\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::HashMap;\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nlet map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\nlet key = \"a\";\nlet hash = compute_hash(map.hasher(), &key);\nassert_eq!(map.raw_entry().from_key_hashed_nocheck(hash, &key), Some((&\"a\", &100)));\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[allow(clippy::wrong_self_convention)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["hash",{"primitive":"u64"}],["k",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"V"}}}]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"526":{"id":526,"crate_id":0,"name":"next","span":{"filename":"src/map.rs","begin":[3393,5],"end":[3399,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1407":{"id":1407,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":57,"args":null},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[53,54,55],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1130":{"id":1130,"crate_id":0,"name":"fold","span":{"filename":"src/set.rs","begin":[2101,5],"end":[2107,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"249":{"id":249,"crate_id":0,"name":"extend","span":{"filename":"src/map.rs","begin":[4695,5],"end":[4697,6]},"visibility":"default","docs":"Inserts all new key-values from the iterator to existing `HashMap<K, V, S, A>`.\nReplace values with existing keys with new values returned from the iterator.\nThe keys and values must implement [`Copy`] trait.\n\n[`Copy`]: https://doc.rust-lang.org/core/marker/trait.Copy.html\n\n# Examples\n\n```\nuse hashbrown::hash_map::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(1, 100);\n\nlet arr = [(1, 1), (2, 2)];\nlet some_iter = arr.iter();\nmap.extend(some_iter);\n// Replace values with existing keys with new values returned from the iterator.\n// So that the map.get(&1) doesn't return Some(&100).\nassert_eq!(map.get(&1), Some(&1));\n\nlet some_vec: Vec<_> = vec![(3, 3), (4, 4)];\nmap.extend(&some_vec);\n\nlet some_arr = [(5, 5), (6, 6)];\nmap.extend(&some_arr);\n\nlet mut vec: Vec<_> = map.into_iter().collect();\n// The `IntoIter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"T"}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"IntoIterator","id":230,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":null,"binding":{"equality":{"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"853":{"id":853,"crate_id":0,"name":"difference","span":{"filename":"src/set.rs","begin":[745,5],"end":[750,6]},"visibility":"public","docs":"Visits the values representing the difference,\ni.e., the values that are in `self` but not in `other`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet a: HashSet<_> = [1, 2, 3].into_iter().collect();\nlet b: HashSet<_> = [4, 2, 3, 4].into_iter().collect();\n\n// Can be seen as `a - b`.\nfor x in a.difference(&b) {\n    println!(\"{}\", x); // Print 1\n}\n\nlet diff: HashSet<_> = a.difference(&b).collect();\nassert_eq!(diff, [1].iter().collect());\n\n// Note that difference is not symmetric,\n// and `b - a` means something else:\nlet diff: HashSet<_> = b.difference(&a).collect();\nassert_eq!(diff, [4].iter().collect());\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Difference","id":854,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"576":{"id":576,"crate_id":0,"name":"insert","span":{"filename":"src/map.rs","begin":[3932,5],"end":[3934,6]},"visibility":"public","docs":"Sets the value of the entry, and returns the entry's old value.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::Entry;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nmap.entry(\"poneyland\").or_insert(12);\n\nif let Entry::Occupied(mut o) = map.entry(\"poneyland\") {\n    assert_eq!(o.insert(15), 12);\n}\n\nassert_eq!(map[\"poneyland\"], 15);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"generic":"V"}]],"output":{"generic":"V"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1457":{"id":1457,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1180":{"id":1180,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Entry","id":866,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"299":{"id":299,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"22":{"id":22,"crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[rustc_diagnostic_item = \"noop_method_borrow\"]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"903":{"id":903,"crate_id":0,"name":"from","span":{"filename":"src/set.rs","begin":[1295,5],"end":[1297,6]},"visibility":"default","docs":"# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet set1 = HashSet::from([1, 2, 3, 4]);\nlet set2: HashSet<_> = [1, 2, 3, 4].into();\nassert_eq!(set1, set2);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["arr",{"array":{"type":{"generic":"T"},"len":"N"}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"626":{"id":626,"crate_id":0,"name":"or_insert_with_key","span":{"filename":"src/map.rs","begin":[4257,5],"end":[4270,6]},"visibility":"public","docs":"Ensures a value is in the entry by inserting, if empty, the result of the default function.\nThis method allows for generating key-derived values for insertion by providing the default\nfunction an access to the borrower form of the key.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<String, usize> = HashMap::new();\n\n// nonexistent key\nmap.entry_ref(\"poneyland\").or_insert_with_key(|key| key.chars().count());\nassert_eq!(map[\"poneyland\"], 9);\n\n// existing key\n*map.entry_ref(\"poneyland\").or_insert_with_key(|key| key.chars().count() * 10) *= 2;\nassert_eq!(map[\"poneyland\"], 18);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}},"is_c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"FnOnce","id":545,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}}],"output":{"generic":"V"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Q"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"generic":"Q"}}},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1507":{"id":1507,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":15,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":1285,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1230":{"id":1230,"crate_id":0,"name":"with_capacity","span":{"filename":"src/table.rs","begin":[87,5],"end":[91,6]},"visibility":"public","docs":"Creates an empty `HashTable` with the specified capacity.\n\nThe hash table will be able to hold at least `capacity` elements without\nreallocating. If `capacity` is 0, the hash table will not allocate.\n\n# Examples\n\n```\nuse hashbrown::HashTable;\nlet mut table: HashTable<&str> = HashTable::with_capacity(10);\nassert_eq!(table.len(), 0);\nassert!(table.capacity() >= 10);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["capacity",{"primitive":"usize"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"349":{"id":349,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":15,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"IntoKeys","id":153,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"72":{"id":72,"crate_id":0,"name":null,"span":{"filename":"src/hasher.rs","begin":[20,1],"end":[29,2]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg>(feature = \"default-hasher\")]"}],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_one"],"trait":{"path":"BuildHasher","id":71,"args":null},"for":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"items":[68,70],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"953":{"id":953,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"676":{"id":676,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"OccupiedError","id":181,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"399":{"id":399,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2419,1],"end":[2425,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"IntoValues","id":155,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[398],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1280":{"id":1280,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"122":{"id":122,"crate_id":0,"name":"with_capacity","span":{"filename":"src/map.rs","begin":[319,5],"end":[321,6]},"visibility":"public","docs":"Creates an empty `HashMap` with the specified capacity.\n\nThe hash map will be able to hold at least `capacity` elements without\nreallocating. If `capacity` is 0, the hash map will not allocate.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashMap` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashMap`], for example with\n[`with_capacity_and_hasher`](HashMap::with_capacity_and_hasher) method.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nlet mut map: HashMap<&str, i32> = HashMap::with_capacity(10);\nassert_eq!(map.len(), 0);\nassert!(map.capacity() >= 10);\n```","links":{"HashMap::with_capacity_and_hasher":121,"`HashMap`":7},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["capacity",{"primitive":"usize"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1003":{"id":1003,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1866,1],"end":[1866,58]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":945,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"726":{"id":726,"crate_id":0,"name":"or_insert","span":{"filename":"src/raw_entry.rs","begin":[755,5],"end":[764,6]},"visibility":"public","docs":"Ensures a value is in the entry by inserting the default if empty, and returns\nmutable references to the key and value in the entry.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n\nmap.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 3);\nassert_eq!(map[\"poneyland\"], 3);\n\n*map.raw_entry_mut().from_key(\"poneyland\").or_insert(\"poneyland\", 10).1 *= 2;\nassert_eq!(map[\"poneyland\"], 6);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["default_key",{"generic":"K"}],["default_val",{"generic":"V"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1607":{"id":1607,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"449":{"id":449,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2508,1],"end":[2515,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":31,"args":null},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[448],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1330":{"id":1330,"crate_id":0,"name":"remove","span":{"filename":"src/table.rs","begin":[1619,5],"end":[1629,6]},"visibility":"public","docs":"Takes the value out of the entry, and returns it along with a\n`VacantEntry` that can be used to insert another value with the same\nhash as the one that was just removed.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::hash_table::Entry;\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table: HashTable<&str> = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\n// The table is empty\nassert!(table.is_empty() && table.capacity() == 0);\n\ntable.insert_unique(hasher(&\"poneyland\"), \"poneyland\", hasher);\nlet capacity_before_remove = table.capacity();\n\nif let Entry::Occupied(o) = table.entry(hasher(&\"poneyland\"), |&x| x == \"poneyland\", hasher) {\n    assert_eq!(o.remove().0, \"poneyland\");\n}\n\nassert!(table\n    .find(hasher(&\"poneyland\"), |&x| x == \"poneyland\")\n    .is_none());\n// Now table hold none elements but capacity is equal to the old one\nassert!(table.len() == 0 && table.capacity() == capacity_before_remove);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"tuple":[{"generic":"T"},{"resolved_path":{"path":"VacantEntry","id":1305,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"172":{"id":172,"crate_id":0,"name":"contains_key","span":{"filename":"src/map.rs","begin":[1416,5],"end":[1426,6]},"visibility":"public","docs":"Returns `true` if the map contains a value for the specified key.\n\nThe key may be any borrowed form of the map's key type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe key type.\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(1, \"a\");\nassert_eq!(map.contains_key(&1), true);\nassert_eq!(map.contains_key(&2), false);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["k",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"776":{"id":776,"crate_id":0,"name":null,"span":{"filename":"src/raw_entry.rs","begin":[409,1],"end":[416,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"RawOccupiedEntryMut","id":720,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"499":{"id":499,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ExtractIf","id":150,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1380":{"id":1380,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"AbsentEntry","id":1240,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1103":{"id":1103,"crate_id":0,"name":"fold","span":{"filename":"src/set.rs","begin":[2039,5],"end":[2051,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"222":{"id":222,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2074,1],"end":[2103,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Index","id":223,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[220,221],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"826":{"id":826,"crate_id":0,"name":"with_capacity","span":{"filename":"src/set.rs","begin":[187,5],"end":[191,6]},"visibility":"public","docs":"Creates an empty `HashSet` with the specified capacity.\n\nThe hash set will be able to hold at least `capacity` elements without\nreallocating. If `capacity` is 0, the hash set will not allocate.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashSet` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashSet`], for example with\n[`with_capacity_and_hasher`](HashSet::with_capacity_and_hasher) method.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet set: HashSet<i32> = HashSet::with_capacity(10);\nassert!(set.capacity() >= 10);\n```","links":{"`HashSet`":8,"HashSet::with_capacity_and_hasher":825},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["capacity",{"primitive":"usize"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"549":{"id":549,"crate_id":0,"name":"and_replace_entry_with","span":{"filename":"src/map.rs","begin":[3736,5],"end":[3744,6]},"visibility":"public","docs":"Provides shared access to the key and owned access to the value of\nan occupied entry and allows to replace or remove it based on the\nvalue of the returned option.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::Entry;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n\nlet entry = map\n    .entry(\"poneyland\")\n    .and_replace_entry_with(|_k, _v| panic!());\n\nmatch entry {\n    Entry::Vacant(e) => {\n        assert_eq!(e.key(), &\"poneyland\");\n    }\n    Entry::Occupied(_) => panic!(),\n}\n\nmap.insert(\"poneyland\", 42);\n\nlet entry = map\n    .entry(\"poneyland\")\n    .and_replace_entry_with(|k, v| {\n        assert_eq!(k, &\"poneyland\");\n        assert_eq!(v, 42);\n        Some(v + 1)\n    });\n\nmatch entry {\n    Entry::Occupied(e) => {\n        assert_eq!(e.key(), &\"poneyland\");\n        assert_eq!(e.get(), &43);\n    }\n    Entry::Vacant(_) => panic!(),\n}\n\nassert_eq!(map[\"poneyland\"], 43);\n\nlet entry = map\n    .entry(\"poneyland\")\n    .and_replace_entry_with(|_k, _v| None);\n\nmatch entry {\n    Entry::Vacant(e) => assert_eq!(e.key(), &\"poneyland\"),\n    Entry::Occupied(_) => panic!(),\n}\n\nassert!(!map.contains_key(\"poneyland\"));\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnOnce","id":545,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}},{"generic":"V"}],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"constraints":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1430":{"id":1430,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1153":{"id":1153,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2129,1],"end":[2136,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":31,"args":null},"for":{"resolved_path":{"path":"Union","id":860,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1152],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"272":{"id":272,"crate_id":1,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"I"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"876":{"id":876,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[621,1],"end":[1221,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[850,849,851,852,853,855,857,859,861,862,863,864,865,867,868,869,870,871,872,873,874,875],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"599":{"id":599,"crate_id":0,"name":"into_key","span":{"filename":"src/map.rs","begin":[4076,5],"end":[4078,6]},"visibility":"public","docs":"Take ownership of the key.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{Entry, HashMap};\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n\nmatch map.entry(\"poneyland\") {\n    Entry::Occupied(_) => panic!(),\n    Entry::Vacant(v) => assert_eq!(v.into_key(), \"poneyland\"),\n}\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"K"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1203":{"id":1203,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":1163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"322":{"id":322,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":15,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":237,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"45":{"id":45,"crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"Infallible","id":46,"args":null}}}}},"1530":{"id":1530,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2276,1],"end":[2289,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":1285,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1529],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1253":{"id":1253,"crate_id":0,"name":"iter_mut","span":{"filename":"src/table.rs","begin":[737,5],"end":[742,6]},"visibility":"public","docs":"An iterator visiting all elements in arbitrary order,\nwith mutable references to the elements.\nThe iterator element type is `&'a mut T`.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\ntable.insert_unique(hasher(&1), 1, hasher);\ntable.insert_unique(hasher(&2), 2, hasher);\ntable.insert_unique(hasher(&3), 3, hasher);\n\n// Update all values\nfor val in table.iter_mut() {\n    *val *= 2;\n}\n\nassert_eq!(table.len(), 3);\nlet mut vec: Vec<i32> = Vec::new();\n\nfor val in &table {\n    println!(\"val: {}\", val);\n    vec.push(*val);\n}\n\n// The `Iter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [2, 4, 6]);\n\nassert_eq!(table.len(), 3);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"372":{"id":372,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2341,1],"end":[2347,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"IntoKeys","id":153,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[371],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"95":{"id":95,"crate_id":0,"name":"write_u64","span":{"filename":"src/hasher.rs","begin":[50,5],"end":[64,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Always)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["arg",{"primitive":"u64"}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"976":{"id":976,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1820,1],"end":[1820,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"699":{"id":699,"crate_id":0,"name":"RawEntryMut","span":{"filename":"src/raw_entry.rs","begin":[304,1],"end":[333,2]},"visibility":"public","docs":"A view into a single entry in a map, which may either be vacant or occupied.\n\nThis is a lower-level version of [`Entry`].\n\nThis `enum` is constructed through the [`raw_entry_mut`] method on [`HashMap`],\nthen calling one of the methods of that [`RawEntryBuilderMut`].\n\n[`HashMap`]: struct.HashMap.html\n[`Entry`]: enum.Entry.html\n[`raw_entry_mut`]: struct.HashMap.html#method.raw_entry_mut\n[`RawEntryBuilderMut`]: struct.RawEntryBuilderMut.html\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::hash_map::{HashMap, RawEntryMut, RawOccupiedEntryMut};\n\nlet mut map = HashMap::new();\nmap.extend([('a', 1), ('b', 2), ('c', 3)]);\nassert_eq!(map.len(), 3);\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\n// Existing key (insert)\nlet raw: RawEntryMut<_, _, _> = map.raw_entry_mut().from_key(&'a');\nlet _raw_o: RawOccupiedEntryMut<_, _, _> = raw.insert('a', 10);\nassert_eq!(map.len(), 3);\n\n// Nonexistent key (insert)\nmap.raw_entry_mut().from_key(&'d').insert('d', 40);\nassert_eq!(map.len(), 4);\n\n// Existing key (or_insert)\nlet hash = compute_hash(map.hasher(), &'b');\nlet kv = map\n    .raw_entry_mut()\n    .from_key_hashed_nocheck(hash, &'b')\n    .or_insert('b', 20);\nassert_eq!(kv, (&mut 'b', &mut 2));\n*kv.1 = 20;\nassert_eq!(map.len(), 4);\n\n// Nonexistent key (or_insert)\nlet hash = compute_hash(map.hasher(), &'e');\nlet kv = map\n    .raw_entry_mut()\n    .from_key_hashed_nocheck(hash, &'e')\n    .or_insert('e', 50);\nassert_eq!(kv, (&mut 'e', &mut 50));\nassert_eq!(map.len(), 5);\n\n// Existing key (or_insert_with)\nlet hash = compute_hash(map.hasher(), &'c');\nlet kv = map\n    .raw_entry_mut()\n    .from_hash(hash, |q| q == &'c')\n    .or_insert_with(|| ('c', 30));\nassert_eq!(kv, (&mut 'c', &mut 3));\n*kv.1 = 30;\nassert_eq!(map.len(), 5);\n\n// Nonexistent key (or_insert_with)\nlet hash = compute_hash(map.hasher(), &'f');\nlet kv = map\n    .raw_entry_mut()\n    .from_hash(hash, |q| q == &'f')\n    .or_insert_with(|| ('f', 60));\nassert_eq!(kv, (&mut 'f', &mut 60));\nassert_eq!(map.len(), 6);\n\nprintln!(\"Our HashMap: {:?}\", map);\n\nlet mut vec: Vec<_> = map.iter().map(|(&k, &v)| (k, v)).collect();\n// The `Iter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [('a', 10), ('b', 20), ('c', 30), ('d', 40), ('e', 50), ('f', 60)]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"has_stripped_variants":false,"variants":[721,724],"impls":[730,731,732,733,734,735,736,737,738,739,740,741,742,743,745]}}},"1580":{"id":1580,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[107,5],"end":[107,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"crate::set","name":"set","id":1226,"is_glob":true}}},"1303":{"id":1303,"crate_id":0,"name":"Occupied","span":{"filename":"src/table.rs","begin":[1280,5],"end":[1280,38]},"visibility":"default","docs":"An occupied entry.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::hash_table::{Entry, OccupiedEntry};\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\nfor x in [\"a\", \"b\"] {\n    table.insert_unique(hasher(&x), x, hasher);\n}\n\nmatch table.entry(hasher(&\"a\"), |&x| x == \"a\", hasher) {\n    Entry::Vacant(_) => unreachable!(),\n    Entry::Occupied(_) => {}\n}\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":[1302]},"discriminant":null}}},"422":{"id":422,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3301,1],"end":[3308,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":67,"args":null},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[421],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"145":{"id":145,"crate_id":0,"name":"drain","span":{"filename":"src/map.rs","begin":[888,5],"end":[892,6]},"visibility":"public","docs":"Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.\n\nIf the returned iterator is dropped before being fully consumed, it\ndrops the remaining key-value pairs. The returned iterator keeps a\nmutable borrow on the vector to optimize its implementation.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut a = HashMap::new();\na.insert(1, \"a\");\na.insert(2, \"b\");\nlet capacity_before_drain = a.capacity();\n\nfor (k, v) in a.drain().take(1) {\n    assert!(k == 1 || k == 2);\n    assert!(v == \"a\" || v == \"b\");\n}\n\n// As we can see, the map is empty and contains no element.\nassert!(a.is_empty() && a.len() == 0);\n// But map capacity is equal to old one.\nassert_eq!(a.capacity(), capacity_before_drain);\n\nlet mut a = HashMap::new();\na.insert(1, \"a\");\na.insert(2, \"b\");\n\n{   // Iterator is dropped without being consumed.\n    let d = a.drain();\n}\n\n// But the map is empty even if we do not use Drain iterator.\nassert!(a.is_empty());\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Drain","id":146,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1026":{"id":1026,"crate_id":0,"name":"len","span":{"filename":"src/set.rs","begin":[1901,5],"end":[1903,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"749":{"id":749,"crate_id":0,"name":"key","span":{"filename":"src/raw_entry.rs","begin":[920,5],"end":[922,6]},"visibility":"public","docs":"Gets a reference to the key in the entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\n\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(o) => assert_eq!(o.key(), &\"a\")\n}\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"472":{"id":472,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Drain","id":146,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"195":{"id":195,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1076":{"id":1076,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1945,1],"end":[1983,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"Intersection","id":858,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1072,1073,1074,1075],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"799":{"id":799,"crate_id":0,"name":"fmt","span":{"filename":"src/raw_entry.rs","begin":[1474,5],"end":[1476,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1403":{"id":1403,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"522":{"id":522,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"ValuesMut","id":138,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"1126":{"id":1126,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2073,1],"end":[2080,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":31,"args":null},"for":{"resolved_path":{"path":"SymmetricDifference","id":856,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1125],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"849":{"id":849,"crate_id":0,"name":"try_reserve","span":{"filename":"src/set.rs","begin":[670,5],"end":[672,6]},"visibility":"public","docs":"Tries to reserve capacity for at least `additional` more elements to be inserted\nin the given `HashSet<K,V>`. The collection may reserve more space to avoid\nfrequent reallocations.\n\n# Errors\n\nIf the capacity overflows, or the allocator reports a failure, then an error\nis returned.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet mut set: HashSet<i32> = HashSet::new();\nset.try_reserve(10).expect(\"why is the test harness OOMing on 10 bytes?\");\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["additional",{"primitive":"usize"}]],"output":{"resolved_path":{"path":"Result","id":42,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"572":{"id":572,"crate_id":0,"name":"remove_entry","span":{"filename":"src/map.rs","begin":[3826,5],"end":[3828,6]},"visibility":"public","docs":"Take the ownership of the key and value from the map.\nKeeps the allocated memory for reuse.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::Entry;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n// The map is empty\nassert!(map.is_empty() && map.capacity() == 0);\n\nmap.entry(\"poneyland\").or_insert(12);\n\nif let Entry::Occupied(o) = map.entry(\"poneyland\") {\n    // We delete the entry from the map.\n    assert_eq!(o.remove_entry(), (\"poneyland\", 12));\n}\n\nassert_eq!(map.contains_key(\"poneyland\"), false);\n// Now map hold none elements\nassert!(map.is_empty());\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"tuple":[{"generic":"K"},{"generic":"V"}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1453":{"id":1453,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"295":{"id":295,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1176":{"id":1176,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"Entry","id":866,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"18":{"id":18,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"899":{"id":899,"crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[1251,5],"end":[1253,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"622":{"id":622,"crate_id":0,"name":"Vacant","span":{"filename":"src/map.rs","begin":[2937,5],"end":[2937,50]},"visibility":"default","docs":"A vacant entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{EntryRef, HashMap};\nlet mut map: HashMap<String, i32> = HashMap::new();\n\nmatch map.entry_ref(\"a\") {\n    EntryRef::Occupied(_) => unreachable!(),\n    EntryRef::Vacant(_) => { }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":[620]},"discriminant":null}}},"1503":{"id":1503,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2202,1],"end":[2214,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"IterHashMut","id":1258,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1502],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"345":{"id":345,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3295,1],"end":[3299,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":237,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[344],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1226":{"id":1226,"crate_id":0,"name":"set","span":{"filename":"src/set.rs","begin":[1,1],"end":[3121,2]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[8,835,945,839,842,858,854,856,860,866,1163,1166],"is_stripped":true}}},"68":{"id":68,"crate_id":0,"name":"Hasher","span":{"filename":"src/hasher.rs","begin":[21,5],"end":[21,33]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"DefaultHasher","id":69,"args":null}}}}},"949":{"id":949,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"672":{"id":672,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"OccupiedError","id":181,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1553":{"id":1553,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2328,1],"end":[2328,59]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"Drain","id":1261,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1276":{"id":1276,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":32,"args":null},"for":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[29],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"395":{"id":395,"crate_id":0,"name":"len","span":{"filename":"src/map.rs","begin":[2412,5],"end":[2414,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"999":{"id":999,"crate_id":0,"name":"fold","span":{"filename":"src/set.rs","begin":[1852,5],"end":[1858,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"722":{"id":722,"crate_id":0,"name":"0","span":{"filename":"src/raw_entry.rs","begin":[332,12],"end":[332,45]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"RawVacantEntryMut","id":723,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"1603":{"id":1603,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1326":{"id":1326,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[1310,1],"end":[1317,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"Entry","id":1241,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1325],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"445":{"id":445,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"168":{"id":168,"crate_id":0,"name":"get","span":{"filename":"src/map.rs","begin":[1304,5],"end":[1318,6]},"visibility":"public","docs":"Returns a reference to the value corresponding to the key.\n\nThe key may be any borrowed form of the map's key type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe key type.\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(1, \"a\");\nassert_eq!(map.get(&1), Some(&\"a\"));\nassert_eq!(map.get(&2), None);\n```","links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["k",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"V"}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1049":{"id":1049,"crate_id":0,"name":"size_hint","span":{"filename":"src/set.rs","begin":[1928,5],"end":[1930,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"772":{"id":772,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawOccupiedEntryMut","id":720,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1376":{"id":1376,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"AbsentEntry","id":1240,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"495":{"id":495,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ExtractIf","id":150,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"218":{"id":218,"crate_id":0,"name":"default","span":{"filename":"src/map.rs","begin":[2069,5],"end":[2071,6]},"visibility":"default","docs":"Creates an empty `HashMap<K, V, S, A>`, with the `Default` value for the hasher and allocator.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse std::collections::hash_map::RandomState;\n\n// You can specify all types of HashMap, including hasher and allocator.\n// Created map is empty and don't allocate memory\nlet map: HashMap<u32, String> = Default::default();\nassert_eq!(map.capacity(), 0);\nlet map: HashMap<u32, String, RandomState> = HashMap::default();\nassert_eq!(map.capacity(), 0);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1099":{"id":1099,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2004,1],"end":[2012,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":31,"args":null},"for":{"resolved_path":{"path":"Difference","id":854,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1098],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1426":{"id":1426,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"268":{"id":268,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1149":{"id":1149,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"Union","id":860,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"872":{"id":872,"crate_id":0,"name":"replace","span":{"filename":"src/set.rs","begin":[1140,5],"end":[1151,6]},"visibility":"public","docs":"Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set = HashSet::new();\nset.insert(Vec::<i32>::new());\n\nassert_eq!(set.get(&[][..]).unwrap().capacity(), 0);\nset.replace(Vec::with_capacity(10));\nassert_eq!(set.get(&[][..]).unwrap().capacity(), 10);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"generic":"T"}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1476":{"id":1476,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2137,1],"end":[2145,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":31,"args":null},"for":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1475],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"318":{"id":318,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3249,1],"end":[3257,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[317],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1199":{"id":1199,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedEntry","id":1163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"41":{"id":41,"crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"Result","id":42,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":null,"self_type":{"generic":"U"},"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1526":{"id":1526,"crate_id":0,"name":"len","span":{"filename":"src/table.rs","begin":[2269,5],"end":[2271,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"645":{"id":645,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"EntryRef","id":165,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"368":{"id":368,"crate_id":0,"name":"len","span":{"filename":"src/map.rs","begin":[2334,5],"end":[2336,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1249":{"id":1249,"crate_id":0,"name":"len","span":{"filename":"src/table.rs","begin":[629,5],"end":[631,6]},"visibility":"public","docs":"Returns the number of elements in the table.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\nlet mut v = HashTable::new();\nassert_eq!(v.len(), 0);\nv.insert_unique(hasher(&1), 1, hasher);\nassert_eq!(v.len(), 1);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"91":{"id":91,"crate_id":0,"name":"write","span":{"filename":"src/hasher.rs","begin":[50,5],"end":[64,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Always)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["arg",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"972":{"id":972,"crate_id":0,"name":"fold","span":{"filename":"src/set.rs","begin":[1806,5],"end":[1812,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1576":{"id":1576,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2368,1],"end":[2368,100]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":1263,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"695":{"id":695,"crate_id":0,"name":"raw_entry","span":{"filename":"src/raw_entry.rs","begin":[1,1],"end":[1740,2]},"visibility":"crate","docs":null,"links":{},"attrs":[{"other":"#[<cfg>(feature = \"raw-entry\")]"}],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[188,699,720,723,190],"is_stripped":true}}},"418":{"id":418,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2460,1],"end":[2467,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":31,"args":null},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[417],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1299":{"id":1299,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[1173,1],"end":[1183,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":31,"args":null},"for":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1298],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"141":{"id":141,"crate_id":0,"name":"iter_mut","span":{"filename":"src/map.rs","begin":[799,5],"end":[807,6]},"visibility":"public","docs":"An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nThe iterator element type is `(&'a K, &'a mut V)`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(\"a\", 1);\nmap.insert(\"b\", 2);\nmap.insert(\"c\", 3);\n\n// Update all values\nfor (_, val) in map.iter_mut() {\n    *val *= 2;\n}\n\nassert_eq!(map.len(), 3);\nlet mut vec: Vec<(&str, i32)> = Vec::new();\n\nfor (key, val) in &map {\n    println!(\"key: {} val: {}\", key, val);\n    vec.push((*key, *val));\n}\n\n// The `Iter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [(\"a\", 2), (\"b\", 4), (\"c\", 6)]);\n\nassert_eq!(map.len(), 3);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1022":{"id":1022,"crate_id":0,"name":"next","span":{"filename":"src/set.rs","begin":[1879,5],"end":[1885,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"745":{"id":745,"crate_id":0,"name":null,"span":{"filename":"src/raw_entry.rs","begin":[1455,1],"end":[1462,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"RawEntryMut","id":699,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[744],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"468":{"id":468,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"Drain","id":146,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1349":{"id":1349,"crate_id":0,"name":"fmt","span":{"filename":"src/table.rs","begin":[1570,5],"end":[1574,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"191":{"id":191,"crate_id":0,"name":null,"span":{"filename":"src/raw_entry.rs","begin":[8,1],"end":[159,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"crate::HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[187,189],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1072":{"id":1072,"crate_id":0,"name":"Item","span":{"filename":"src/set.rs","begin":[1951,5],"end":[1951,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"T"}}}}}},"795":{"id":795,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawVacantEntryMut","id":723,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"518":{"id":518,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ValuesMut","id":138,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1399":{"id":1399,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"241":{"id":241,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4486,1],"end":[4502,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Default","id":67,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Default","id":67,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"FromIterator","id":242,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[240],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1122":{"id":1122,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"SymmetricDifference","id":856,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"845":{"id":845,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[435,1],"end":[512,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}}}],"constraints":[]}}}},"items":[823,825],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1449":{"id":1449,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2076,1],"end":[2088,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1448],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1172":{"id":1172,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"Entry","id":866,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"895":{"id":895,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[118,1],"end":[128,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":31,"args":null},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[893,894],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"14":{"id":14,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1499":{"id":1499,"crate_id":0,"name":"fold","span":{"filename":"src/table.rs","begin":[2190,5],"end":[2197,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"618":{"id":618,"crate_id":0,"name":"0","span":{"filename":"src/map.rs","begin":[2922,14],"end":[2922,43]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"341":{"id":341,"crate_id":0,"name":"len","span":{"filename":"src/map.rs","begin":[3289,5],"end":[3291,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1222":{"id":1222,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntry","id":1166,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"945":{"id":945,"crate_id":0,"name":"IntoIter","span":{"filename":"src/set.rs","begin":[1658,1],"end":[1660,2]},"visibility":"public","docs":"An owning iterator over the items of a `HashSet`.\n\nThis `struct` is created by the [`into_iter`] method on [`HashSet`]\n(provided by the `IntoIterator` trait). See its documentation for more.\n\n[`HashSet`]: struct.HashSet.html\n[`into_iter`]: struct.HashSet.html#method.into_iter","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[980,981,982,983,984,985,986,987,988,989,990,991,992,993,995,1000,1002,1003,1005]}}},"1549":{"id":1549,"crate_id":0,"name":"fold","span":{"filename":"src/table.rs","begin":[2313,5],"end":[2319,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"668":{"id":668,"crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[2997,5],"end":[2999,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"391":{"id":391,"crate_id":0,"name":"next","span":{"filename":"src/map.rs","begin":[2393,5],"end":[2395,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1272":{"id":1272,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"995":{"id":995,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1828,1],"end":[1835,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":67,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":945,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[994],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1599":{"id":1599,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"718":{"id":718,"crate_id":0,"name":null,"span":{"filename":"src/raw_entry.rs","begin":[1449,1],"end":[1453,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"RawEntryBuilderMut","id":188,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[717],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"441":{"id":441,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1322":{"id":1322,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Entry","id":1241,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1045":{"id":1045,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":842,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"164":{"id":164,"crate_id":0,"name":"entry_ref","span":{"filename":"src/map.rs","begin":[1264,5],"end":[1282,6]},"visibility":"public","docs":"Gets the given key's corresponding entry by reference in the map for in-place manipulation.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut words: HashMap<String, usize> = HashMap::new();\nlet source = [\"poneyland\", \"horseyland\", \"poneyland\", \"poneyland\"];\nfor (i, &s) in source.iter().enumerate() {\n    let counter = words.entry_ref(s).or_insert(0);\n    *counter += 1;\n}\n\nassert_eq!(words[\"poneyland\"], 3);\nassert_eq!(words[\"horseyland\"], 1);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"Self"}}}],["key",{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"path":"EntryRef","id":165,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"768":{"id":768,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawOccupiedEntryMut","id":720,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"491":{"id":491,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":15,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":150,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1095":{"id":1095,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"Difference","id":854,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"818":{"id":818,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"RawEntryBuilder","id":190,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"541":{"id":541,"crate_id":0,"name":"insert","span":{"filename":"src/map.rs","begin":[3482,5],"end":[3494,6]},"visibility":"public","docs":"Sets the value of the entry, and returns an `OccupiedEntry`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nlet entry = map.entry(\"horseyland\").insert(37);\n\nassert_eq!(entry.key(), &\"horseyland\");\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["value",{"generic":"V"}]],"output":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"264":{"id":264,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1145":{"id":1145,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Union","id":860,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"868":{"id":868,"crate_id":0,"name":"is_subset","span":{"filename":"src/set.rs","begin":[1045,5],"end":[1047,6]},"visibility":"public","docs":"Returns `true` if the set is a subset of another,\ni.e., `other` contains at least all the values in `self`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet sup: HashSet<_> = [1, 2, 3].into_iter().collect();\nlet mut set = HashSet::new();\n\nassert_eq!(set.is_subset(&sup), true);\nset.insert(2);\nassert_eq!(set.is_subset(&sup), true);\nset.insert(4);\nassert_eq!(set.is_subset(&sup), false);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"591":{"id":591,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2785,1],"end":[2792,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1472":{"id":1472,"crate_id":0,"name":"fold","span":{"filename":"src/table.rs","begin":[2124,5],"end":[2131,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"314":{"id":314,"crate_id":0,"name":"len","span":{"filename":"src/map.rs","begin":[3243,5],"end":[3245,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1195":{"id":1195,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":1163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"37":{"id":37,"crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"641":{"id":641,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"EntryRef","id":165,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1522":{"id":1522,"crate_id":0,"name":"next","span":{"filename":"src/table.rs","begin":[2248,5],"end":[2250,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"364":{"id":364,"crate_id":0,"name":"next","span":{"filename":"src/map.rs","begin":[2315,5],"end":[2317,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1245":{"id":1245,"crate_id":0,"name":"shrink_to","span":{"filename":"src/table.rs","begin":[511,5],"end":[513,6]},"visibility":"public","docs":"Shrinks the capacity of the table with a lower limit. It will drop\ndown no lower than the supplied limit while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.\n\n`hasher` is called if entries need to be moved or copied to a new table.\nThis must return the same hash value that each entry was inserted with.\n\nPanics if the current capacity is smaller than the supplied\nminimum capacity.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table = HashTable::with_capacity(100);\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\ntable.insert_unique(hasher(&1), 1, hasher);\ntable.insert_unique(hasher(&2), 2, hasher);\nassert!(table.capacity() >= 100);\ntable.shrink_to(10, hasher);\nassert!(table.capacity() >= 10);\ntable.shrink_to(0, hasher);\nassert!(table.capacity() >= 2);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["min_capacity",{"primitive":"usize"}],["hasher",{"impl_trait":[{"trait_bound":{"trait":{"path":"Fn","id":784,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"impl Fn(&T) -> u64","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Fn","id":784,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":true}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"968":{"id":968,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1786,1],"end":[1793,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":67,"args":null},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[967],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"87":{"id":87,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"DefaultHasher","id":69,"args":null}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"691":{"id":691,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3033,1],"end":[3041,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"OccupiedError","id":181,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[690],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1572":{"id":1572,"crate_id":0,"name":"Item","span":{"filename":"src/table.rs","begin":[2355,5],"end":[2355,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"T"}}}},"414":{"id":414,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1295":{"id":1295,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[1150,1],"end":[1160,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"items":[1292,1293,1294],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1018":{"id":1018,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Drain","id":839,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"137":{"id":137,"crate_id":0,"name":"values_mut","span":{"filename":"src/map.rs","begin":[720,5],"end":[724,6]},"visibility":"public","docs":"An iterator visiting all values mutably in arbitrary order.\nThe iterator element type is `&'a mut V`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\n\nmap.insert(\"a\", 1);\nmap.insert(\"b\", 2);\nmap.insert(\"c\", 3);\n\nfor val in map.values_mut() {\n    *val = *val + 10;\n}\n\nassert_eq!(map.len(), 3);\nlet mut vec: Vec<i32> = Vec::new();\n\nfor val in map.values() {\n    println!(\"{}\", val);\n    vec.push(*val);\n}\n\n// The `Values` iterator produces values in arbitrary order, so the\n// values must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [11, 12, 13]);\n\nassert_eq!(map.len(), 3);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"ValuesMut","id":138,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"741":{"id":741,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawEntryMut","id":699,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"464":{"id":464,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"Drain","id":146,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1345":{"id":1345,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1068":{"id":1068,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"Intersection","id":858,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"187":{"id":187,"crate_id":0,"name":"raw_entry_mut","span":{"filename":"src/raw_entry.rs","begin":[107,5],"end":[109,6]},"visibility":"public","docs":"Creates a raw entry builder for the `HashMap`.\n\nRaw entries provide the lowest level of control for searching and\nmanipulating a map. They must be manually initialized with a hash and\nthen manually searched. After this, insertions into a vacant entry\nstill require an owned key to be provided.\n\nRaw entries are useful for such exotic situations as:\n\n* Hash memoization\n* Deferring the creation of an owned key until it is known to be required\n* Using a search key that doesn't work with the Borrow trait\n* Using custom comparison logic without newtype wrappers\n\nBecause raw entries provide much more low-level control, it's much easier\nto put the `HashMap` into an inconsistent state which, while memory-safe,\nwill cause the map to produce seemingly random results. Higher-level and\nmore foolproof APIs like `entry` should be preferred when possible.\n\nIn particular, the hash used to initialized the raw entry must still be\nconsistent with the hash of the key that is ultimately stored in the entry.\nThis is because implementations of `HashMap` may need to recompute hashes\nwhen resizing, at which point only the keys are available.\n\nRaw entries give mutable access to the keys. This must not be used\nto modify how the key would compare or hash, as the map will not re-evaluate\nwhere the key should go, meaning the keys may become \"lost\" if their\nlocation does not reflect their state. For instance, if you change a key\nso that the map now contains keys which compare equal, search may start\nacting erratically, with two keys randomly masking each other. Implementations\nare free to assume this doesn't happen (within the limits of memory-safety).\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map = HashMap::new();\nmap.extend([(\"a\", 100), (\"b\", 200), (\"c\", 300)]);\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\n// Existing key (insert and update)\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => unreachable!(),\n    RawEntryMut::Occupied(mut view) => {\n        assert_eq!(view.get(), &100);\n        let v = view.get_mut();\n        let new_v = (*v) * 10;\n        *v = new_v;\n        assert_eq!(view.insert(1111), 1000);\n    }\n}\n\nassert_eq!(map[&\"a\"], 1111);\nassert_eq!(map.len(), 3);\n\n// Existing key (take)\nlet hash = compute_hash(map.hasher(), &\"c\");\nmatch map.raw_entry_mut().from_key_hashed_nocheck(hash, &\"c\") {\n    RawEntryMut::Vacant(_) => unreachable!(),\n    RawEntryMut::Occupied(view) => {\n        assert_eq!(view.remove_entry(), (\"c\", 300));\n    }\n}\nassert_eq!(map.raw_entry().from_key(&\"c\"), None);\nassert_eq!(map.len(), 2);\n\n// Nonexistent key (insert and update)\nlet key = \"d\";\nlet hash = compute_hash(map.hasher(), &key);\nmatch map.raw_entry_mut().from_hash(hash, |q| *q == key) {\n    RawEntryMut::Occupied(_) => unreachable!(),\n    RawEntryMut::Vacant(view) => {\n        let (k, value) = view.insert(\"d\", 4000);\n        assert_eq!((*k, *value), (\"d\", 4000));\n        *value = 40000;\n    }\n}\nassert_eq!(map[&\"d\"], 40000);\nassert_eq!(map.len(), 3);\n\nmatch map.raw_entry_mut().from_hash(hash, |q| *q == key) {\n    RawEntryMut::Vacant(_) => unreachable!(),\n    RawEntryMut::Occupied(view) => {\n        assert_eq!(view.remove_entry(), (\"d\", 40000));\n    }\n}\nassert_eq!(map.get(&\"d\"), None);\nassert_eq!(map.len(), 2);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"RawEntryBuilderMut","id":188,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"791":{"id":791,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"RawVacantEntryMut","id":723,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"514":{"id":514,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"ValuesMut","id":138,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1395":{"id":1395,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1118":{"id":1118,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"SymmetricDifference","id":856,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"237":{"id":237,"crate_id":0,"name":"IntoIter","span":{"filename":"src/map.rs","begin":[2255,1],"end":[2257,2]},"visibility":"public","docs":"An owning iterator over the entries of a `HashMap` in arbitrary order.\nThe iterator element type is `(K, V)`.\n\nThis `struct` is created by the [`into_iter`] method on [`HashMap`]\n(provided by the [`IntoIterator`] trait). See its documentation for more.\nThe map cannot be used after calling that method.\n\n[`into_iter`]: struct.HashMap.html#method.into_iter\n[`HashMap`]: struct.HashMap.html\n[`IntoIterator`]: https://doc.rust-lang.org/core/iter/trait.IntoIterator.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();\n\nlet mut iter = map.into_iter();\nlet mut vec = vec![iter.next(), iter.next(), iter.next()];\n\n// The `IntoIter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [Some((1, \"a\")), Some((2, \"b\")), Some((3, \"c\"))]);\n\n// It is fused iterator\nassert_eq!(iter.next(), None);\nassert_eq!(iter.next(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[320,321,322,323,324,325,326,327,328,329,330,331,332,333,335,340,342,343,345]}}},"841":{"id":841,"crate_id":0,"name":"extract_if","span":{"filename":"src/set.rs","begin":[404,5],"end":[415,6]},"visibility":"public","docs":"Drains elements which are true under the given predicate,\nand returns an iterator over the removed items.\n\nIn other words, move all elements `e` such that `f(&e)` returns `true` out\ninto another iterator.\n\nIf the returned `ExtractIf` is not exhausted, e.g. because it is dropped without iterating\nor the iteration short-circuits, then the remaining elements will be retained.\nUse [`retain()`] with a negated predicate if you do not need the returned iterator.\n\n[`retain()`]: HashSet::retain\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set: HashSet<i32> = (0..8).collect();\nlet drained: HashSet<i32> = set.extract_if(|v| v % 2 == 0).collect();\n\nlet mut evens = drained.into_iter().collect::<Vec<_>>();\nlet mut odds = set.into_iter().collect::<Vec<_>>();\nevens.sort();\nodds.sort();\n\nassert_eq!(evens, vec![0, 2, 4, 6]);\nassert_eq!(odds, vec![1, 3, 5, 7]);\n```","links":{"HashSet::retain":840},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"resolved_path":{"path":"ExtractIf","id":842,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"564":{"id":564,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Entry","id":163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1445":{"id":1445,"crate_id":0,"name":"len","span":{"filename":"src/table.rs","begin":[2069,5],"end":[2071,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1168":{"id":1168,"crate_id":0,"name":"insert","span":{"filename":"src/set.rs","begin":[2363,5],"end":[2372,6]},"visibility":"public","docs":"Sets the value of the entry, and returns an `OccupiedEntry`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set: HashSet<&str> = HashSet::new();\nlet entry = set.entry(\"horseyland\").insert();\n\nassert_eq!(entry.get(), &\"horseyland\");\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"OccupiedEntry","id":1163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"287":{"id":287,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3193,1],"end":[3198,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"path":"ExactSizeIterator","id":288,"args":null},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[286],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"10":{"id":10,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"891":{"id":891,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":57,"args":null},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[53,54,55],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"614":{"id":614,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntry","id":539,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1495":{"id":1495,"crate_id":0,"name":"default","span":{"filename":"src/table.rs","begin":[2171,5],"end":[2176,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1218":{"id":1218,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntry","id":1166,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"337":{"id":337,"crate_id":0,"name":"next","span":{"filename":"src/map.rs","begin":[3271,5],"end":[3273,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"60":{"id":60,"crate_id":0,"name":"fmt","span":{"filename":"src/hasher.rs","begin":[13,17],"end":[13,22]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"941":{"id":941,"crate_id":0,"name":"into_iter","span":{"filename":"src/set.rs","begin":[1741,5],"end":[1743,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"664":{"id":664,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntryRef","id":621,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1545":{"id":1545,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"Drain","id":1261,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"1268":{"id":1268,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"387":{"id":387,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"IntoValues","id":155,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"110":{"id":110,"crate_id":0,"name":null,"span":{"filename":"src/raw/alloc.rs","begin":[37,48],"end":[37,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"allocator_api2::alloc::Global","name":"Global","id":111,"is_glob":false}}},"991":{"id":991,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoIter","id":945,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"714":{"id":714,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawEntryBuilderMut","id":188,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1595":{"id":1595,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1318":{"id":1318,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Entry","id":1241,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"437":{"id":437,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"160":{"id":160,"crate_id":0,"name":"shrink_to_fit","span":{"filename":"src/map.rs","begin":[1175,5],"end":[1178,6]},"visibility":"public","docs":"Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<i32, i32> = HashMap::with_capacity(100);\nmap.insert(1, 2);\nmap.insert(3, 4);\nassert!(map.capacity() >= 100);\nmap.shrink_to_fit();\nassert!(map.capacity() >= 2);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1041":{"id":1041,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ExtractIf","id":842,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"764":{"id":764,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"RawOccupiedEntryMut","id":720,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1368":{"id":1368,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntry","id":1305,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"210":{"id":210,"crate_id":0,"name":"clone_from","span":{"filename":"src/map.rs","begin":[198,5],"end":[203,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["source",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1091":{"id":1091,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Difference","id":854,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"814":{"id":814,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawEntryBuilder","id":190,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"537":{"id":537,"crate_id":0,"name":"Occupied","span":{"filename":"src/map.rs","begin":[2714,5],"end":[2714,44]},"visibility":"default","docs":"An occupied entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{Entry, HashMap};\nlet mut map: HashMap<_, _> = [(\"a\", 100), (\"b\", 200)].into();\n\nmatch map.entry(\"a\") {\n    Entry::Vacant(_) => unreachable!(),\n    Entry::Occupied(_) => { }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":[535]},"discriminant":null}}},"1418":{"id":1418,"crate_id":0,"name":"clone","span":{"filename":"src/table.rs","begin":[2007,5],"end":[2012,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"260":{"id":260,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1141":{"id":1141,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"Union","id":860,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"864":{"id":864,"crate_id":0,"name":"get_or_insert_with","span":{"filename":"src/set.rs","begin":[949,5],"end":[964,6]},"visibility":"public","docs":"Inserts a value computed from `f` into the set if the given `value` is\nnot present, then returns a reference to the value in the set.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set: HashSet<String> = [\"cat\", \"dog\", \"horse\"]\n    .iter().map(|&pet| pet.to_owned()).collect();\n\nassert_eq!(set.len(), 3);\nfor &pet in &[\"cat\", \"dog\", \"fish\"] {\n    let value = set.get_or_insert_with(pet, str::to_owned);\n    assert_eq!(value, pet);\n}\nassert_eq!(set.len(), 4); // a new \"fish\" was inserted\n```\n\nThe following example will panic because the new value doesn't match.\n\n```should_panic\nlet mut set = hashbrown::HashSet::new();\nset.get_or_insert_with(\"rust\", |_| String::new());\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}}],["f",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnOnce","id":545,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}}],"output":{"generic":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"587":{"id":587,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1468":{"id":1468,"crate_id":0,"name":"default","span":{"filename":"src/table.rs","begin":[2105,5],"end":[2110,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1191":{"id":1191,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":1163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"310":{"id":310,"crate_id":0,"name":"next","span":{"filename":"src/map.rs","begin":[3215,5],"end":[3224,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}}]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"637":{"id":637,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"EntryRef","id":165,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"1518":{"id":1518,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":1285,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"1241":{"id":1241,"crate_id":0,"name":"Entry","span":{"filename":"src/table.rs","begin":[1248,1],"end":[1308,2]},"visibility":"public","docs":"A view into a single entry in a table, which may either be vacant or occupied.\n\nThis `enum` is constructed from the [`entry`] method on [`HashTable`].\n\n[`HashTable`]: struct.HashTable.html\n[`entry`]: struct.HashTable.html#method.entry\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::hash_table::{Entry, OccupiedEntry};\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\nfor x in [\"a\", \"b\", \"c\"] {\n    table.insert_unique(hasher(&x), x, hasher);\n}\nassert_eq!(table.len(), 3);\n\n// Existing value (insert)\nlet entry: Entry<_> = table.entry(hasher(&\"a\"), |&x| x == \"a\", hasher);\nlet _raw_o: OccupiedEntry<_, _> = entry.insert(\"a\");\nassert_eq!(table.len(), 3);\n// Nonexistent value (insert)\ntable.entry(hasher(&\"d\"), |&x| x == \"d\", hasher).insert(\"d\");\n\n// Existing value (or_insert)\ntable\n    .entry(hasher(&\"b\"), |&x| x == \"b\", hasher)\n    .or_insert(\"b\");\n// Nonexistent value (or_insert)\ntable\n    .entry(hasher(&\"e\"), |&x| x == \"e\", hasher)\n    .or_insert(\"e\");\n\nprintln!(\"Our HashTable: {:?}\", table);\n\nlet mut vec: Vec<_> = table.iter().copied().collect();\n// The `Iter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [\"a\", \"b\", \"c\", \"d\", \"e\"]);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"has_stripped_variants":false,"variants":[1303,1306],"impls":[1311,1312,1313,1314,1315,1316,1317,1318,1319,1320,1321,1322,1323,1324,1326]}}},"360":{"id":360,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"IntoKeys","id":153,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"83":{"id":83,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DefaultHasher","id":69,"args":null}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"964":{"id":964,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":57,"args":null},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[53,54,55],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"687":{"id":687,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Display","id":688,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"ToString","id":689,"args":null},"for":{"resolved_path":{"path":"OccupiedError","id":181,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[685],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1568":{"id":1568,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ExtractIf","id":1263,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1291":{"id":1291,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[1138,1],"end":[1148,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"items":[1288,1289,1290],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"410":{"id":410,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"133":{"id":133,"crate_id":0,"name":"keys","span":{"filename":"src/map.rs","begin":[650,5],"end":[652,6]},"visibility":"public","docs":"An iterator visiting all keys in arbitrary order.\nThe iterator element type is `&'a K`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(\"a\", 1);\nmap.insert(\"b\", 2);\nmap.insert(\"c\", 3);\nassert_eq!(map.len(), 3);\nlet mut vec: Vec<&str> = Vec::new();\n\nfor key in map.keys() {\n    println!(\"{}\", key);\n    vec.push(*key);\n}\n\n// The `Keys` iterator produces keys in arbitrary order, so the\n// keys must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [\"a\", \"b\", \"c\"]);\n\nassert_eq!(map.len(), 3);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1014":{"id":1014,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Drain","id":839,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"737":{"id":737,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawEntryMut","id":699,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1618":{"id":1618,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[178,32],"end":[178,37]},"visibility":"default","docs":null,"links":{},"attrs":["automatically_derived"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"items":[1617],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1341":{"id":1341,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"460":{"id":460,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3373,1],"end":[3378,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"path":"ExactSizeIterator","id":288,"args":null},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[459],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"183":{"id":183,"crate_id":0,"name":"remove_entry","span":{"filename":"src/map.rs","begin":[1992,5],"end":[1998,6]},"visibility":"public","docs":"Removes a key from the map, returning the stored key and value if the\nkey was previously in the map. Keeps the allocated memory for reuse.\n\nThe key may be any borrowed form of the map's key type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe key type.\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\n// The map is empty\nassert!(map.is_empty() && map.capacity() == 0);\n\nmap.insert(1, \"a\");\n\nassert_eq!(map.remove_entry(&1), Some((1, \"a\")));\nassert_eq!(map.remove(&1), None);\n\n// Now map hold none elements\nassert!(map.is_empty());\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["k",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1064":{"id":1064,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Intersection","id":858,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"787":{"id":787,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"RawVacantEntryMut","id":723,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"510":{"id":510,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"ValuesMut","id":138,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"233":{"id":233,"crate_id":0,"name":"into_iter","span":{"filename":"src/map.rs","begin":[3119,5],"end":[3121,6]},"visibility":"default","docs":"Creates an iterator over the entries of a `HashMap` in arbitrary order\nwith mutable references to the values. The iterator element type is\n`(&'a K, &'a mut V)`.\n\nReturn the same `IterMut` struct as by the [`iter_mut`] method on\n[`HashMap`].\n\n[`iter_mut`]: struct.HashMap.html#method.iter_mut\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nlet mut map: HashMap<_, _> = [(\"a\", 1), (\"b\", 2), (\"c\", 3)].into();\n\nfor (key, value) in &mut map {\n    println!(\"Key: {}, Value: {}\", key, value);\n    *value *= 2;\n}\n\nlet mut vec = map.iter().collect::<Vec<_>>();\n// The `Iter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [(&\"a\", &2), (&\"b\", &4), (&\"c\", &6)]);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1114":{"id":1114,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"SymmetricDifference","id":856,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"837":{"id":837,"crate_id":0,"name":"is_empty","span":{"filename":"src/set.rs","begin":[326,5],"end":[328,6]},"visibility":"public","docs":"Returns `true` if the set contains no elements.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut v = HashSet::new();\nassert!(v.is_empty());\nv.insert(1);\nassert!(!v.is_empty());\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1441":{"id":1441,"crate_id":0,"name":"next","span":{"filename":"src/table.rs","begin":[2046,5],"end":[2052,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"560":{"id":560,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Entry","id":163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"283":{"id":283,"crate_id":0,"name":"size_hint","span":{"filename":"src/map.rs","begin":[3178,5],"end":[3180,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1164":{"id":1164,"crate_id":0,"name":"Occupied","span":{"filename":"src/set.rs","begin":[2238,5],"end":[2238,41]},"visibility":"default","docs":"An occupied entry.\n\n# Examples\n\n```\nuse hashbrown::hash_set::{Entry, HashSet};\nlet mut set: HashSet<_> = [\"a\", \"b\"].into();\n\nmatch set.entry(\"a\") {\n    Entry::Vacant(_) => unreachable!(),\n    Entry::Occupied(_) => { }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":[1162]},"discriminant":null}}},"887":{"id":887,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1491":{"id":1491,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterHashMut","id":1258,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"610":{"id":610,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntry","id":539,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"333":{"id":333,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":237,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"1214":{"id":1214,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":1166,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"56":{"id":56,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":57,"args":null},"for":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"items":[53,54,55],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"937":{"id":937,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1603,1],"end":[1638,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"SubAssign","id":938,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[936],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"660":{"id":660,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"VacantEntryRef","id":621,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1541":{"id":1541,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Drain","id":1261,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"383":{"id":383,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoValues","id":155,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1264":{"id":1264,"crate_id":0,"name":"get_many_mut","span":{"filename":"src/table.rs","begin":[1041,5],"end":[1047,6]},"visibility":"public","docs":"Attempts to get mutable references to `N` values in the map at once.\n\nThe `eq` argument should be a closure such that `eq(i, k)` returns true if `k` is equal to\nthe `i`th key to be looked up.\n\nReturns an array of length `N` with the results of each query. For soundness, at most one\nmutable reference will be returned to any value. `None` will be used if the key is missing.\n\n# Panics\n\nPanics if any keys are overlapping.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::hash_table::Entry;\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut libraries: HashTable<(&str, u32)> = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\nfor (k, v) in [\n    (\"Bodleian Library\", 1602),\n    (\"Athenæum\", 1807),\n    (\"Herzogin-Anna-Amalia-Bibliothek\", 1691),\n    (\"Library of Congress\", 1800),\n] {\n    libraries.insert_unique(hasher(&k), (k, v), |(k, _)| hasher(&k));\n}\n\nlet keys = [\"Athenæum\", \"Library of Congress\"];\nlet got = libraries.get_many_mut(keys.map(|k| hasher(&k)), |i, val| keys[i] == val.0);\nassert_eq!(\n    got,\n    [Some(&mut (\"Athenæum\", 1807)), Some(&mut (\"Library of Congress\", 1800))],\n);\n\n// Missing keys result in None\nlet keys = [\"Athenæum\", \"New York Public Library\"];\nlet got = libraries.get_many_mut(keys.map(|k| hasher(&k)), |i, val| keys[i] == val.0);\nassert_eq!(got, [Some(&mut (\"Athenæum\", 1807)), None]);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```\n\n```should_panic\n# #[cfg(feature = \"nightly\")]\n# fn test() {\n# use hashbrown::{HashTable, DefaultHashBuilder};\n# use std::hash::BuildHasher;\n\nlet mut libraries: HashTable<(&str, u32)> = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\nfor (k, v) in [\n    (\"Athenæum\", 1807),\n    (\"Library of Congress\", 1800),\n] {\n    libraries.insert_unique(hasher(&k), (k, v), |(k, _)| hasher(&k));\n}\n\n// Duplicate keys result in a panic!\nlet keys = [\"Athenæum\", \"Athenæum\"];\nlet got = libraries.get_many_mut(keys.map(|k| hasher(&k)), |i, val| keys[i] == val.0);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test();\n#     #[cfg(not(feature = \"nightly\"))]\n#     panic!();\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["hashes",{"array":{"type":{"primitive":"u64"},"len":"N"}}],["eq",{"impl_trait":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"array":{"type":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}}}],"constraints":[]}}}},"len":"N"}},"is_c_variadic":false},"generics":{"params":[{"name":"N","kind":{"const":{"type":{"primitive":"usize"},"default":null}}},{"name":"impl FnMut(usize, &T) -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"primitive":"usize"},{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":true}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"987":{"id":987,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoIter","id":945,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"710":{"id":710,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawEntryBuilderMut","id":188,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1591":{"id":1591,"crate_id":0,"name":"layout","span":{"filename":"src/lib.rs","begin":[187,9],"end":[187,37]},"visibility":"default","docs":"The layout of the allocation request that failed.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"alloc::alloc::Layout","id":1592,"args":null}}}},"433":{"id":433,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1314":{"id":1314,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"Entry","id":1241,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"156":{"id":156,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[507,1],"end":[1068,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[130,124,126,131,132,133,135,137,139,141,143,144,145,147,149,151,152,154],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1037":{"id":1037,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":842,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"760":{"id":760,"crate_id":0,"name":"remove","span":{"filename":"src/raw_entry.rs","begin":[1222,5],"end":[1224,6]},"visibility":"public","docs":"Takes the value out of the entry, and returns it.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\n\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(o) => assert_eq!(o.remove(), 100),\n}\nassert_eq!(map.get(&\"a\"), None);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"V"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1364":{"id":1364,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntry","id":1305,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"483":{"id":483,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3449,1],"end":[3454,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"path":"ExactSizeIterator","id":288,"args":null},"for":{"resolved_path":{"path":"Drain","id":146,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[482],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"206":{"id":206,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":57,"args":null},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[53,54,55],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1087":{"id":1087,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"Difference","id":854,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"810":{"id":810,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"RawEntryBuilder","id":190,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1414":{"id":1414,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[1971,1],"end":[1994,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1410,1411,1412,1413],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"533":{"id":533,"crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[3422,5],"end":[3426,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"256":{"id":256,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1137":{"id":1137,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"Union","id":860,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"860":{"id":860,"crate_id":0,"name":"Union","span":{"filename":"src/set.rs","begin":[1732,1],"end":[1734,2]},"visibility":"public","docs":"A lazy iterator producing elements in the union of `HashSet`s.\n\nThis `struct` is created by the [`union`] method on [`HashSet`].\nSee its documentation for more.\n\n[`HashSet`]: struct.HashSet.html\n[`union`]: struct.HashSet.html#method.union","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1154,1156,1161]}}},"1464":{"id":1464,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"583":{"id":583,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"306":{"id":306,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2212,1],"end":[2212,60]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"910":{"id":910,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1348,1],"end":[1360,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Default","id":67,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Default","id":67,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Default","id":67,"args":null},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[909],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"29":{"id":29,"crate_id":1,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["dest",{"raw_pointer":{"is_mutable":true,"type":{"primitive":"u8"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"1514":{"id":1514,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoIter","id":1285,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"633":{"id":633,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"EntryRef","id":165,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"356":{"id":356,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoKeys","id":153,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1237":{"id":1237,"crate_id":0,"name":"entry","span":{"filename":"src/table.rs","begin":[359,5],"end":[377,6]},"visibility":"public","docs":"Returns an `Entry` for an entry in the table with the given hash\nand which satisfies the equality function passed.\n\nThis can be used to remove the entry from the table, or insert a new\nentry with the given hash if one doesn't already exist.\n\nThis method will call `eq` for all entries with the given hash, but may\nalso call it for entries with a different hash. `eq` should only return\ntrue for the desired entry, at which point the search is stopped.\n\nThis method may grow the table in preparation for an insertion. Call\n[`HashTable::find_entry`] if this is undesirable.\n\n`hasher` is called if entries need to be moved or copied to a new table.\nThis must return the same hash value that each entry was inserted with.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::hash_table::Entry;\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\ntable.insert_unique(hasher(&1), (1, \"a\"), |val| hasher(&val.0));\nif let Entry::Occupied(entry) = table.entry(hasher(&1), |val| val.0 == 1, |val| hasher(&val.0))\n{\n    entry.remove();\n}\nif let Entry::Vacant(entry) = table.entry(hasher(&2), |val| val.0 == 2, |val| hasher(&val.0)) {\n    entry.insert((2, \"b\"));\n}\nassert_eq!(table.find(hasher(&1), |val| val.0 == 1), None);\nassert_eq!(table.find(hasher(&2), |val| val.0 == 2), Some(&(2, \"b\")));\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{"`HashTable::find_entry`":1238},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["hash",{"primitive":"u64"}],["eq",{"impl_trait":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}],["hasher",{"impl_trait":[{"trait_bound":{"trait":{"path":"Fn","id":784,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"path":"Entry","id":1241,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"impl FnMut(&T) -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":true}}},{"name":"impl Fn(&T) -> u64","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Fn","id":784,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":true}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"960":{"id":960,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"79":{"id":79,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"DefaultHasher","id":69,"args":null}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1564":{"id":1564,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ExtractIf","id":1263,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"683":{"id":683,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedError","id":181,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"406":{"id":406,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1287":{"id":1287,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[1124,1],"end":[1136,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1283,1284,1286],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1010":{"id":1010,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"Drain","id":839,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"129":{"id":129,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[420,1],"end":[505,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}}],"constraints":[]}}}},"items":[119,121],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1614":{"id":1614,"crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[178,17],"end":[178,26]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"733":{"id":733,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"RawEntryMut","id":699,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"456":{"id":456,"crate_id":0,"name":"size_hint","span":{"filename":"src/map.rs","begin":[3361,5],"end":[3363,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1337":{"id":1337,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"179":{"id":179,"crate_id":0,"name":"insert_unique_unchecked","span":{"filename":"src/map.rs","begin":[1876,5],"end":[1883,6]},"visibility":"public","docs":"Insert a key-value pair into the map without checking\nif the key already exists in the map.\n\nThis operation is faster than regular insert, because it does not perform\nlookup before insertion.\n\nThis operation is useful during initial population of the map.\nFor example, when constructing a map from another map, we know\nthat keys are unique.\n\nReturns a reference to the key and value just inserted.\n\n# Safety\n\nThis operation is safe if a key does not exist in the map.\n\nHowever, if a key exists in the map already, the behavior is unspecified:\nthis operation may panic, loop forever, or any following operation with the map\nmay panic, loop forever or return arbitrary result.\n\nThat said, this operation (and following operations) are guaranteed to\nnot violate memory safety.\n\nHowever this operation is still unsafe because the resulting `HashMap`\nmay be passed to unsafe code which does expect the map to behave\ncorrectly, and would cause unsoundness as a result.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map1 = HashMap::new();\nassert_eq!(map1.insert(1, \"a\"), None);\nassert_eq!(map1.insert(2, \"b\"), None);\nassert_eq!(map1.insert(3, \"c\"), None);\nassert_eq!(map1.len(), 3);\n\nlet mut map2 = HashMap::new();\n\nfor (key, value) in map1.into_iter() {\n    unsafe {\n        map2.insert_unique_unchecked(key, value);\n    }\n}\n\nlet (key, value) = unsafe { map2.insert_unique_unchecked(4, \"d\") };\nassert_eq!(key, &4);\nassert_eq!(value, &mut \"d\");\n*value = \"e\";\n\nassert_eq!(map2[&1], \"a\");\nassert_eq!(map2[&2], \"b\");\nassert_eq!(map2[&3], \"c\");\nassert_eq!(map2[&4], \"e\");\nassert_eq!(map2.len(), 4);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["k",{"generic":"K"}],["v",{"generic":"V"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"V"}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"1060":{"id":1060,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Intersection","id":858,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"783":{"id":783,"crate_id":0,"name":"insert_with_hasher","span":{"filename":"src/raw_entry.rs","begin":[1413,5],"end":[1427,6]},"visibility":"public","docs":"Set the value of an entry with a custom hasher function.\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nfn make_hasher<K, S>(hash_builder: &S) -> impl Fn(&K) -> u64 + '_\nwhere\n    K: Hash + ?Sized,\n    S: BuildHasher,\n{\n    move |key: &K| {\n        use core::hash::Hasher;\n        let mut state = hash_builder.build_hasher();\n        key.hash(&mut state);\n        state.finish()\n    }\n}\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nlet key = \"a\";\nlet hash_builder = map.hasher().clone();\nlet hash = make_hasher(&hash_builder)(&key);\n\nmatch map.raw_entry_mut().from_hash(hash, |q| q == &key) {\n    RawEntryMut::Occupied(_) => panic!(),\n    RawEntryMut::Vacant(v) => assert_eq!(\n        v.insert_with_hasher(hash, key, 100, make_hasher(&hash_builder)),\n        (&mut \"a\", &mut 100)\n    ),\n}\nmap.extend([(\"b\", 200), (\"c\", 300), (\"d\", 400), (\"e\", 500), (\"f\", 600)]);\nassert_eq!(map[&\"a\"], 100);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["hash",{"primitive":"u64"}],["key",{"generic":"K"}],["value",{"generic":"V"}],["hasher",{"generic":"H"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}}]},"is_c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"H"},"bounds":[{"trait_bound":{"trait":{"path":"Fn","id":784,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"506":{"id":506,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2603,1],"end":[2619,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"V"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":150,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[503,504,505],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1387":{"id":1387,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"AbsentEntry","id":1240,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"229":{"id":229,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3055,1],"end":[3085,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"items":[226,227,228],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1110":{"id":1110,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"SymmetricDifference","id":856,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"833":{"id":833,"crate_id":0,"name":"capacity","span":{"filename":"src/set.rs","begin":[269,5],"end":[271,6]},"visibility":"public","docs":"Returns the number of elements the set can hold without reallocating.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet set: HashSet<i32> = HashSet::with_capacity(100);\nassert!(set.capacity() >= 100);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"556":{"id":556,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"Entry","id":163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1437":{"id":1437,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"279":{"id":279,"crate_id":0,"name":"default","span":{"filename":"src/map.rs","begin":[3156,5],"end":[3161,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1160":{"id":1160,"crate_id":0,"name":"fold","span":{"filename":"src/set.rs","begin":[2176,5],"end":[2182,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"883":{"id":883,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"606":{"id":606,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":539,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1487":{"id":1487,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterHashMut","id":1258,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"329":{"id":329,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoIter","id":237,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1210":{"id":1210,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2477,1],"end":[2538,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"VacantEntry","id":1166,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1207,1208,1209],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"933":{"id":933,"crate_id":0,"name":"bitxor_assign","span":{"filename":"src/set.rs","begin":[1586,5],"end":[1600,6]},"visibility":"default","docs":"Modifies this set to contain the symmetric difference of `self` and `rhs`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut a: HashSet<_> = vec![1, 2, 3].into_iter().collect();\nlet b: HashSet<_> = vec![3, 4, 5].into_iter().collect();\n\na ^= &b;\n\nlet mut i = 0;\nlet expected = [1, 2, 4, 5];\nfor x in &a {\n    assert!(expected.contains(x));\n    i += 1;\n}\nassert_eq!(i, expected.len());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"656":{"id":656,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"VacantEntryRef","id":621,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1537":{"id":1537,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"Drain","id":1261,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"379":{"id":379,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"IntoValues","id":155,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1260":{"id":1260,"crate_id":0,"name":"drain","span":{"filename":"src/table.rs","begin":[903,5],"end":[907,6]},"visibility":"public","docs":"Clears the set, returning all elements in an iterator.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\nfor x in 1..=3 {\n    table.insert_unique(hasher(&x), x, hasher);\n}\nassert!(!table.is_empty());\n\n// print 1, 2, 3 in an arbitrary order\nfor i in table.drain() {\n    println!(\"{}\", i);\n}\n\nassert!(table.is_empty());\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Drain","id":1261,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"983":{"id":983,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":945,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"102":{"id":102,"crate_id":0,"name":"write_i128","span":{"filename":"src/hasher.rs","begin":[50,5],"end":[64,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Always)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["arg",{"primitive":"i128"}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1587":{"id":1587,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[135,1],"end":[135,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"crate::set::HashSet","name":"HashSet","id":8,"is_glob":false}}},"706":{"id":706,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"RawEntryBuilderMut","id":188,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"429":{"id":429,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3333,1],"end":[3338,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"path":"ExactSizeIterator","id":288,"args":null},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[428],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1310":{"id":1310,"crate_id":0,"name":"and_modify","span":{"filename":"src/table.rs","begin":[1486,5],"end":[1494,6]},"visibility":"public","docs":"Provides in-place mutable access to an occupied entry before any\npotential inserts into the table.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table: HashTable<(&str, u32)> = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\n\ntable\n    .entry(\n        hasher(&\"poneyland\"),\n        |&(x, _)| x == \"poneyland\",\n        |(k, _)| hasher(&k),\n    )\n    .and_modify(|(_, v)| *v += 1)\n    .or_insert((\"poneyland\", 42));\nassert_eq!(\n    table.find(hasher(&\"poneyland\"), |&(k, _)| k == \"poneyland\"),\n    Some(&(\"poneyland\", 42))\n);\n\ntable\n    .entry(\n        hasher(&\"poneyland\"),\n        |&(x, _)| x == \"poneyland\",\n        |(k, _)| hasher(&k),\n    )\n    .and_modify(|(_, v)| *v += 1)\n    .or_insert((\"poneyland\", 42));\nassert_eq!(\n    table.find(hasher(&\"poneyland\"), |&(k, _)| k == \"poneyland\"),\n    Some(&(\"poneyland\", 43))\n);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["f",{"impl_trait":[{"trait_bound":{"trait":{"path":"FnOnce","id":545,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}}],"output":null}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[{"name":"impl FnOnce(&mut T)","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"FnOnce","id":545,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":true}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1033":{"id":1033,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":842,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"152":{"id":152,"crate_id":0,"name":"into_keys","span":{"filename":"src/map.rs","begin":[1035,5],"end":[1039,6]},"visibility":"public","docs":"Creates a consuming iterator visiting all the keys in arbitrary order.\nThe map cannot be used after calling this.\nThe iterator element type is `K`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(\"a\", 1);\nmap.insert(\"b\", 2);\nmap.insert(\"c\", 3);\n\nlet mut vec: Vec<&str> = map.into_keys().collect();\n\n// The `IntoKeys` iterator produces keys in arbitrary order, so the\n// keys must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [\"a\", \"b\", \"c\"]);\n```","links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"IntoKeys","id":153,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"756":{"id":756,"crate_id":0,"name":"get_key_value_mut","span":{"filename":"src/raw_entry.rs","begin":[1105,5],"end":[1110,6]},"visibility":"public","docs":"Gets a mutable reference to the key and value in the entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\nuse std::rc::Rc;\n\nlet key_one = Rc::new(\"a\");\nlet key_two = Rc::new(\"a\");\n\nlet mut map: HashMap<Rc<&str>, u32> = HashMap::new();\nmap.insert(key_one.clone(), 10);\n\nassert_eq!(map[&key_one], 10);\nassert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);\n\nmatch map.raw_entry_mut().from_key(&key_one) {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(mut o) => {\n        let (inside_key, inside_value) = o.get_key_value_mut();\n        *inside_key = key_two.clone();\n        *inside_value = 100;\n    }\n}\nassert_eq!(map[&key_two], 100);\nassert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"V"}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"479":{"id":479,"crate_id":0,"name":"size_hint","span":{"filename":"src/map.rs","begin":[3437,5],"end":[3439,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1360":{"id":1360,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":1305,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1083":{"id":1083,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"Difference","id":854,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"202":{"id":202,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"806":{"id":806,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"RawEntryBuilder","id":190,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"529":{"id":529,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3389,1],"end":[3412,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"ValuesMut","id":138,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[525,526,527,528],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1410":{"id":1410,"crate_id":0,"name":"Item","span":{"filename":"src/table.rs","begin":[1972,5],"end":[1972,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"T"}}}}}},"1133":{"id":1133,"crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[2124,5],"end":[2126,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"252":{"id":252,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1256,1],"end":[1263,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"tuple":[]}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[251],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"856":{"id":856,"crate_id":0,"name":"SymmetricDifference","span":{"filename":"src/set.rs","begin":[1721,1],"end":[1723,2]},"visibility":"public","docs":"A lazy iterator producing elements in the symmetric difference of `HashSet`s.\n\nThis `struct` is created by the [`symmetric_difference`] method on\n[`HashSet`]. See its documentation for more.\n\n[`HashSet`]: struct.HashSet.html\n[`symmetric_difference`]: struct.HashSet.html#method.symmetric_difference","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1126,1131,1132,1134]}}},"579":{"id":579,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3780,1],"end":[4042,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[571,572,573,574,575,576,577,578],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1460":{"id":1460,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":32,"args":null},"for":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[29],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1183":{"id":1183,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Entry","id":866,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"302":{"id":302,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"906":{"id":906,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1300,1],"end":[1322,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["extend_one","extend_reserve","extend_one_unchecked"],"trait":{"path":"Extend","id":245,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[905],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"629":{"id":629,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4146,1],"end":[4330,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"EntryRef","id":165,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[623,624,625,626,627,628],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1510":{"id":1510,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":1285,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"352":{"id":352,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"IntoKeys","id":153,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1233":{"id":1233,"crate_id":0,"name":"with_capacity_in","span":{"filename":"src/table.rs","begin":[183,5],"end":[187,6]},"visibility":"public","docs":"Creates an empty `HashTable` with the specified capacity using the given allocator.\n\nThe hash table will be able to hold at least `capacity` elements without\nreallocating. If `capacity` is 0, the hash table will not allocate.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse bumpalo::Bump;\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet bump = Bump::new();\nlet mut table = HashTable::with_capacity_in(5, &bump);\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\n\n// The created HashTable holds none elements\nassert_eq!(table.len(), 0);\n// But it can hold at least 5 elements without reallocating\nlet empty_map_capacity = table.capacity();\nassert!(empty_map_capacity >= 5);\n\n// Now we insert some 5 elements inside created HashTable\ntable.insert_unique(hasher(&\"One\"), \"One\", hasher);\ntable.insert_unique(hasher(&\"Two\"), \"Two\", hasher);\ntable.insert_unique(hasher(&\"Three\"), \"Three\", hasher);\ntable.insert_unique(hasher(&\"Four\"), \"Four\", hasher);\ntable.insert_unique(hasher(&\"Five\"), \"Five\", hasher);\n\n// We can see that the HashTable holds 5 elements\nassert_eq!(table.len(), 5);\n// But its capacity isn't changed\nassert_eq!(table.capacity(), empty_map_capacity)\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["capacity",{"primitive":"usize"}],["alloc",{"generic":"A"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"75":{"id":75,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"DefaultHasher","id":69,"args":null}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"956":{"id":956,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"679":{"id":679,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedError","id":181,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1560":{"id":1560,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":15,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":1263,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"402":{"id":402,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1283":{"id":1283,"crate_id":0,"name":"Item","span":{"filename":"src/table.rs","begin":[1128,5],"end":[1128,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"T"}}}},"125":{"id":125,"crate_id":0,"name":"new_in","span":{"filename":"src/map.rs","begin":[366,5],"end":[368,6]},"visibility":"public","docs":"Creates an empty `HashMap` using the given allocator.\n\nThe hash map is initially created with a capacity of 0, so it will not allocate until it\nis first inserted into.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashMap` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashMap`], for example with\n[`with_hasher_in`](HashMap::with_hasher_in) method.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse bumpalo::Bump;\n\nlet bump = Bump::new();\nlet mut map = HashMap::new_in(&bump);\n\n// The created HashMap holds none elements\nassert_eq!(map.len(), 0);\n\n// The created HashMap also doesn't allocate memory\nassert_eq!(map.capacity(), 0);\n\n// Now we insert element inside created HashMap\nmap.insert(\"One\", 1);\n// We can see that the HashMap holds 1 element\nassert_eq!(map.len(), 1);\n// And it also allocates some capacity\nassert!(map.capacity() > 1);\n```","links":{"HashMap::with_hasher_in":124,"`HashMap`":7},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["alloc",{"generic":"A"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"729":{"id":729,"crate_id":0,"name":"and_replace_entry_with","span":{"filename":"src/raw_entry.rs","begin":[893,5],"end":[901,6]},"visibility":"public","docs":"Provides shared access to the key and owned access to the value of\nan occupied entry and allows to replace or remove it based on the\nvalue of the returned option.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::RawEntryMut;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n\nlet entry = map\n    .raw_entry_mut()\n    .from_key(\"poneyland\")\n    .and_replace_entry_with(|_k, _v| panic!());\n\nmatch entry {\n    RawEntryMut::Vacant(_) => {},\n    RawEntryMut::Occupied(_) => panic!(),\n}\n\nmap.insert(\"poneyland\", 42);\n\nlet entry = map\n    .raw_entry_mut()\n    .from_key(\"poneyland\")\n    .and_replace_entry_with(|k, v| {\n        assert_eq!(k, &\"poneyland\");\n        assert_eq!(v, 42);\n        Some(v + 1)\n    });\n\nmatch entry {\n    RawEntryMut::Occupied(e) => {\n        assert_eq!(e.key(), &\"poneyland\");\n        assert_eq!(e.get(), &43);\n    },\n    RawEntryMut::Vacant(_) => panic!(),\n}\n\nassert_eq!(map[\"poneyland\"], 43);\n\nlet entry = map\n    .raw_entry_mut()\n    .from_key(\"poneyland\")\n    .and_replace_entry_with(|_k, _v| None);\n\nmatch entry {\n    RawEntryMut::Vacant(_) => {},\n    RawEntryMut::Occupied(_) => panic!(),\n}\n\nassert!(!map.contains_key(\"poneyland\"));\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnOnce","id":545,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}},{"generic":"V"}],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"constraints":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1610":{"id":1610,"crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[178,10],"end":[178,15]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"452":{"id":452,"crate_id":0,"name":"default","span":{"filename":"src/map.rs","begin":[3343,5],"end":[3347,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1333":{"id":1333,"crate_id":0,"name":"into_mut","span":{"filename":"src/table.rs","begin":[1762,5],"end":[1764,6]},"visibility":"public","docs":"Converts the `OccupiedEntry` into a mutable reference to the value in the entry\nwith a lifetime bound to the table itself.\n\nIf you need multiple references to the `OccupiedEntry`, see [`get_mut`].\n\n[`get_mut`]: #method.get_mut\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::hash_table::Entry;\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table: HashTable<(&str, u32)> = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\ntable.insert_unique(hasher(&\"poneyland\"), (\"poneyland\", 12), |(k, _)| hasher(&k));\n\nassert_eq!(\n    table.find(hasher(&\"poneyland\"), |&(x, _)| x == \"poneyland\",),\n    Some(&(\"poneyland\", 12))\n);\n\nlet value: &mut (&str, u32);\nmatch table.entry(\n    hasher(&\"poneyland\"),\n    |&(x, _)| x == \"poneyland\",\n    |(k, _)| hasher(&k),\n) {\n    Entry::Occupied(entry) => value = entry.into_mut(),\n    Entry::Vacant(_) => panic!(),\n}\nvalue.1 += 10;\n\nassert_eq!(\n    table.find(hasher(&\"poneyland\"), |&(x, _)| x == \"poneyland\",),\n    Some(&(\"poneyland\", 22))\n);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1056":{"id":1056,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"Intersection","id":858,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"175":{"id":175,"crate_id":0,"name":"get_many_unchecked_mut","span":{"filename":"src/map.rs","begin":[1593,5],"end":[1602,6]},"visibility":"public","docs":"Attempts to get mutable references to `N` values in the map at once, without validating that\nthe values are unique.\n\nReturns an array of length `N` with the results of each query. `None` will be used if\nthe key is missing.\n\nFor a safe alternative see [`get_many_mut`](`HashMap::get_many_mut`).\n\n# Safety\n\nCalling this method with overlapping keys is *[undefined behavior]* even if the resulting\nreferences are not used.\n\n[undefined behavior]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut libraries = HashMap::new();\nlibraries.insert(\"Bodleian Library\".to_string(), 1602);\nlibraries.insert(\"Athenæum\".to_string(), 1807);\nlibraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);\nlibraries.insert(\"Library of Congress\".to_string(), 1800);\n\n// SAFETY: The keys do not overlap.\nlet [Some(a), Some(b)] = (unsafe { libraries.get_many_unchecked_mut([\n    \"Athenæum\",\n    \"Bodleian Library\",\n]) }) else { panic!() };\n\n// SAFETY: The keys do not overlap.\nlet got = unsafe { libraries.get_many_unchecked_mut([\n    \"Athenæum\",\n    \"Library of Congress\",\n]) };\nassert_eq!(\n    got,\n    [\n        Some(&mut 1807),\n        Some(&mut 1800),\n    ],\n);\n\n// SAFETY: The keys do not overlap.\nlet got = unsafe { libraries.get_many_unchecked_mut([\n    \"Athenæum\",\n    \"New York Public Library\",\n]) };\n// Missing keys result in None\nassert_eq!(got, [Some(&mut 1807), None]);\n```","links":{"`HashMap::get_many_mut`":174},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["ks",{"array":{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}},"len":"N"}}]],"output":{"array":{"type":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"V"}}}}],"constraints":[]}}}},"len":"N"}},"is_c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"N","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"502":{"id":502,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":150,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"1383":{"id":1383,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"AbsentEntry","id":1240,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1106":{"id":1106,"crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[2068,5],"end":[2070,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"225":{"id":225,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2107,1],"end":[2124,2]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg>(feature = \"default-hasher\")]"}],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"N","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Default","id":67,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"array":{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]},"len":"N"}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"resolved_path":{"path":"crate::DefaultHashBuilder","id":9,"args":null}}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[224],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"829":{"id":829,"crate_id":0,"name":"new_in","span":{"filename":"src/set.rs","begin":[220,5],"end":[224,6]},"visibility":"public","docs":"Creates an empty `HashSet`.\n\nThe hash set is initially created with a capacity of 0, so it will not allocate until it\nis first inserted into.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashSet` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashSet`], for example with\n[`with_hasher_in`](HashSet::with_hasher_in) method.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet set: HashSet<i32> = HashSet::new();\n```","links":{"`HashSet`":8,"HashSet::with_hasher_in":828},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["alloc",{"generic":"A"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"552":{"id":552,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3747,1],"end":[3778,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Default","id":67,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"Entry","id":163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[551],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1433":{"id":1433,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1156":{"id":1156,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2146,1],"end":[2155,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"Union","id":860,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1155],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"275":{"id":275,"crate_id":0,"name":"clone","span":{"filename":"src/map.rs","begin":[2162,5],"end":[2167,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"879":{"id":879,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":15,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":15,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"602":{"id":602,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4044,1],"end":[4144,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"VacantEntry","id":539,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[598,599,600,601],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1483":{"id":1483,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"IterHashMut","id":1258,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"325":{"id":325,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":237,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"48":{"id":48,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"652":{"id":652,"crate_id":0,"name":"insert","span":{"filename":"src/map.rs","begin":[4435,5],"end":[4448,6]},"visibility":"public","docs":"Sets the value of the entry with the `VacantEntryRef`'s key,\nand returns a mutable reference to it.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::EntryRef;\n\nlet mut map: HashMap<String, u32> = HashMap::new();\nlet key: &str = \"poneyland\";\n\nif let EntryRef::Vacant(o) = map.entry_ref(key) {\n    o.insert(37);\n}\nassert_eq!(map[\"poneyland\"], 37);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["value",{"generic":"V"}]],"output":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"generic":"Q"}}},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1533":{"id":1533,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"Drain","id":1261,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1256":{"id":1256,"crate_id":0,"name":"IterHash","span":{"filename":"src/table.rs","begin":[2098,1],"end":[2101,2]},"visibility":"public","docs":"An iterator over the entries of a `HashTable` that could match a given hash.\nThe iterator element type is `&'a T`.\n\nThis `struct` is created by the [`iter_hash`] method on [`HashTable`]. See its\ndocumentation for more.\n\n[`iter_hash`]: struct.HashTable.html#method.iter_hash\n[`HashTable`]: struct.HashTable.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"impls":[1452,1453,1454,1455,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1469,1473,1474,1476,1478]}}},"375":{"id":375,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"IntoValues","id":155,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"98":{"id":98,"crate_id":0,"name":"write_i8","span":{"filename":"src/hasher.rs","begin":[50,5],"end":[64,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Always)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["arg",{"primitive":"i8"}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"702":{"id":702,"crate_id":0,"name":"from_hash","span":{"filename":"src/raw_entry.rs","begin":[591,5],"end":[596,6]},"visibility":"public","docs":"Creates a `RawEntryMut` from the given hash and matching function.\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nlet key = \"a\";\nlet hash = compute_hash(map.hasher(), &key);\nlet entry: RawEntryMut<&str, u32, _> = map.raw_entry_mut().from_hash(hash, |k| k == &key);\nentry.insert(key, 100);\nassert_eq!(map[&\"a\"], 100);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[allow(clippy::wrong_self_convention)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["hash",{"primitive":"u64"}],["is_match",{"generic":"F"}]],"output":{"resolved_path":{"path":"RawEntryMut","id":699,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"generic":"K"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[{"name":"'b","kind":{"lifetime":{"outlives":[]}}}]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1583":{"id":1583,"crate_id":0,"name":"hash_table","span":{"filename":"src/lib.rs","begin":[119,1],"end":[119,19]},"visibility":"public","docs":"A hash table implemented with quadratic probing and SIMD lookup.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[1582],"is_stripped":false}}},"1306":{"id":1306,"crate_id":0,"name":"Vacant","span":{"filename":"src/table.rs","begin":[1307,5],"end":[1307,34]},"visibility":"default","docs":"A vacant entry.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::hash_table::{Entry, OccupiedEntry};\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table = HashTable::<&str>::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\n\nmatch table.entry(hasher(&\"a\"), |&x| x == \"a\", hasher) {\n    Entry::Vacant(_) => {}\n    Entry::Occupied(_) => unreachable!(),\n}\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":[1304]},"discriminant":null}}},"425":{"id":425,"crate_id":0,"name":"size_hint","span":{"filename":"src/map.rs","begin":[3321,5],"end":[3323,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1029":{"id":1029,"crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[1908,5],"end":[1911,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"752":{"id":752,"crate_id":0,"name":"get","span":{"filename":"src/raw_entry.rs","begin":[1004,5],"end":[1006,6]},"visibility":"public","docs":"Gets a reference to the value in the entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\n\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(o) => assert_eq!(o.get(), &100),\n}\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"V"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1356":{"id":1356,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[1827,1],"end":[1881,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"VacantEntry","id":1305,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1354,1355],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"475":{"id":475,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"Drain","id":146,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"198":{"id":198,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1079":{"id":1079,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1996,1],"end":[2002,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"Intersection","id":858,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"802":{"id":802,"crate_id":0,"name":"from_key","span":{"filename":"src/raw_entry.rs","begin":[631,5],"end":[638,6]},"visibility":"public","docs":"Access an immutable entry by key.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\nlet key = \"a\";\nassert_eq!(map.raw_entry().from_key(&key), Some((&\"a\", &100)));\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[allow(clippy::wrong_self_convention)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["k",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"V"}}}]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1406":{"id":1406,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"525":{"id":525,"crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[3390,5],"end":[3390,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}}}}},"1129":{"id":1129,"crate_id":0,"name":"size_hint","span":{"filename":"src/set.rs","begin":[2096,5],"end":[2098,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"852":{"id":852,"crate_id":0,"name":"shrink_to","span":{"filename":"src/set.rs","begin":[717,5],"end":[719,6]},"visibility":"public","docs":"Shrinks the capacity of the set with a lower limit. It will drop\ndown no lower than the supplied limit while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.\n\nPanics if the current capacity is smaller than the supplied\nminimum capacity.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set = HashSet::with_capacity(100);\nset.insert(1);\nset.insert(2);\nassert!(set.capacity() >= 100);\nset.shrink_to(10);\nassert!(set.capacity() >= 10);\nset.shrink_to(0);\nassert!(set.capacity() >= 2);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["min_capacity",{"primitive":"usize"}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"575":{"id":575,"crate_id":0,"name":"into_mut","span":{"filename":"src/map.rs","begin":[3910,5],"end":[3912,6]},"visibility":"public","docs":"Converts the `OccupiedEntry` into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself.\n\nIf you need multiple references to the `OccupiedEntry`, see [`get_mut`].\n\n[`get_mut`]: #method.get_mut\n\n# Examples\n\n```\nuse hashbrown::hash_map::{Entry, HashMap};\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nmap.entry(\"poneyland\").or_insert(12);\n\nassert_eq!(map[\"poneyland\"], 12);\n\nlet value: &mut u32;\nmatch map.entry(\"poneyland\") {\n    Entry::Occupied(entry) => value = entry.into_mut(),\n    Entry::Vacant(_) => panic!(),\n}\n*value += 10;\n\nassert_eq!(map[\"poneyland\"], 22);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1456":{"id":1456,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"298":{"id":298,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1179":{"id":1179,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Entry","id":866,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"902":{"id":902,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1265,1],"end":[1277,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Default","id":67,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Default","id":67,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"FromIterator","id":242,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[901],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"625":{"id":625,"crate_id":0,"name":"or_insert_with","span":{"filename":"src/map.rs","begin":[4225,5],"end":[4235,6]},"visibility":"public","docs":"Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<String, u32> = HashMap::new();\n\n// nonexistent key\nmap.entry_ref(\"poneyland\").or_insert_with(|| 3);\nassert_eq!(map[\"poneyland\"], 3);\n\n// existing key\n*map.entry_ref(\"poneyland\").or_insert_with(|| 10) *= 2;\nassert_eq!(map[\"poneyland\"], 6);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}},"is_c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"FnOnce","id":545,"args":{"parenthesized":{"inputs":[],"output":{"generic":"V"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"generic":"Q"}}},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1506":{"id":1506,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":1285,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"348":{"id":348,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"IntoKeys","id":153,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1229":{"id":1229,"crate_id":0,"name":"new","span":{"filename":"src/table.rs","begin":[68,5],"end":[72,6]},"visibility":"public","docs":"Creates an empty `HashTable`.\n\nThe hash table is initially created with a capacity of 0, so it will not allocate until it\nis first inserted into.\n\n# Examples\n\n```\nuse hashbrown::HashTable;\nlet mut table: HashTable<&str> = HashTable::new();\nassert_eq!(table.len(), 0);\nassert_eq!(table.capacity(), 0);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"952":{"id":952,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"675":{"id":675,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"OccupiedError","id":181,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1279":{"id":1279,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"398":{"id":398,"crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[2420,5],"end":[2424,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"121":{"id":121,"crate_id":0,"name":"with_capacity_and_hasher","span":{"filename":"src/map.rs","begin":[499,5],"end":[504,6]},"visibility":"public","docs":"Creates an empty `HashMap` with the specified capacity, using `hash_builder`\nto hash the keys.\n\nThe hash map will be able to hold at least `capacity` elements without\nreallocating. If `capacity` is 0, the hash map will not allocate.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashMap` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashMap`].\n\nThe `hash_builder` passed should implement the [`BuildHasher`] trait for\nthe `HashMap` to be useful, see its documentation for details.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n[`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::DefaultHashBuilder;\n\nlet s = DefaultHashBuilder::default();\nlet mut map = HashMap::with_capacity_and_hasher(10, s);\nassert_eq!(map.len(), 0);\nassert!(map.capacity() >= 10);\n\nmap.insert(1, 2);\n```","links":{"`HashMap`":7},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["capacity",{"primitive":"usize"}],["hash_builder",{"generic":"S"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1002":{"id":1002,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1860,1],"end":[1865,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"path":"ExactSizeIterator","id":288,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":945,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1001],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"725":{"id":725,"crate_id":0,"name":"insert","span":{"filename":"src/raw_entry.rs","begin":[724,5],"end":[736,6]},"visibility":"public","docs":"Sets the value of the entry, and returns a `RawOccupiedEntryMut`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nlet entry = map.raw_entry_mut().from_key(\"horseyland\").insert(\"horseyland\", 37);\n\nassert_eq!(entry.remove_entry(), (\"horseyland\", 37));\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["key",{"generic":"K"}],["value",{"generic":"V"}]],"output":{"resolved_path":{"path":"RawOccupiedEntryMut","id":720,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1606":{"id":1606,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"448":{"id":448,"crate_id":0,"name":"clone","span":{"filename":"src/map.rs","begin":[2510,5],"end":[2514,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"171":{"id":171,"crate_id":0,"name":"get_key_value_mut","span":{"filename":"src/map.rs","begin":[1380,5],"end":[1394,6]},"visibility":"public","docs":"Returns the key-value pair corresponding to the supplied key, with a mutable reference to value.\n\nThe supplied key may be any borrowed form of the map's key type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe key type.\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(1, \"a\");\nlet (k, v) = map.get_key_value_mut(&1).unwrap();\nassert_eq!(k, &1);\nassert_eq!(v, &mut \"a\");\n*v = \"b\";\nassert_eq!(map.get_key_value_mut(&1), Some((&1, &mut \"b\")));\nassert_eq!(map.get_key_value_mut(&2), None);\n```","links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["k",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"V"}}}]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"775":{"id":775,"crate_id":0,"name":null,"span":{"filename":"src/raw_entry.rs","begin":[401,1],"end":[408,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"RawOccupiedEntryMut","id":720,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1379":{"id":1379,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"AbsentEntry","id":1240,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"498":{"id":498,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ExtractIf","id":150,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"221":{"id":221,"crate_id":0,"name":"index","span":{"filename":"src/map.rs","begin":[2100,5],"end":[2102,6]},"visibility":"default","docs":"Returns a reference to the value corresponding to the supplied key.\n\n# Panics\n\nPanics if the key is not present in the `HashMap`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet map: HashMap<_, _> = [(\"a\", \"One\"), (\"b\", \"Two\")].into();\n\nassert_eq!(map[&\"a\"], \"One\");\nassert_eq!(map[&\"b\"], \"Two\");\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["key",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"V"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1102":{"id":1102,"crate_id":0,"name":"size_hint","span":{"filename":"src/set.rs","begin":[2033,5],"end":[2036,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"825":{"id":825,"crate_id":0,"name":"with_capacity_and_hasher","span":{"filename":"src/set.rs","begin":[507,5],"end":[511,6]},"visibility":"public","docs":"Creates an empty `HashSet` with the specified capacity, using\n`hasher` to hash the keys.\n\nThe hash set will be able to hold at least `capacity` elements without\nreallocating. If `capacity` is 0, the hash set will not allocate.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashSet` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashSet`].\n\nThe `hash_builder` passed should implement the [`BuildHasher`] trait for\nthe `HashSet` to be useful, see its documentation for details.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n[`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nuse hashbrown::DefaultHashBuilder;\n\nlet s = DefaultHashBuilder::default();\nlet mut set = HashSet::with_capacity_and_hasher(10, s);\nset.insert(1);\n```","links":{"`HashSet`":8},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["capacity",{"primitive":"usize"}],["hasher",{"generic":"S"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1429":{"id":1429,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"548":{"id":548,"crate_id":0,"name":"and_modify","span":{"filename":"src/map.rs","begin":[3668,5],"end":[3679,6]},"visibility":"public","docs":"Provides in-place mutable access to an occupied entry before any\npotential inserts into the map.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n\nmap.entry(\"poneyland\")\n   .and_modify(|e| { *e += 1 })\n   .or_insert(42);\nassert_eq!(map[\"poneyland\"], 42);\n\nmap.entry(\"poneyland\")\n   .and_modify(|e| { *e += 1 })\n   .or_insert(42);\nassert_eq!(map[\"poneyland\"], 43);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnOnce","id":545,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"V"}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"271":{"id":271,"crate_id":1,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"I"}}}},"1152":{"id":1152,"crate_id":0,"name":"clone","span":{"filename":"src/set.rs","begin":[2131,5],"end":[2135,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"875":{"id":875,"crate_id":0,"name":"allocation_size","span":{"filename":"src/set.rs","begin":[1218,5],"end":[1220,6]},"visibility":"public","docs":"Returns the total amount of memory allocated internally by the hash\nset, in bytes.\n\nThe returned number is informational only. It is intended to be\nprimarily used for memory profiling.","links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"598":{"id":598,"crate_id":0,"name":"key","span":{"filename":"src/map.rs","begin":[4057,5],"end":[4059,6]},"visibility":"public","docs":"Gets a reference to the key that would be used when inserting a value\nthrough the `VacantEntry`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nassert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"321":{"id":321,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":237,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1202":{"id":1202,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedEntry","id":1163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"925":{"id":925,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1461,1],"end":[1492,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Default","id":67,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Default","id":67,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sub","id":926,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}}],"constraints":[]}}},"for":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"items":[923,924],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1529":{"id":1529,"crate_id":0,"name":"fmt","span":{"filename":"src/table.rs","begin":[2281,5],"end":[2288,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"371":{"id":371,"crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[2342,5],"end":[2346,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1252":{"id":1252,"crate_id":0,"name":"Iter","span":{"filename":"src/table.rs","begin":[1956,1],"end":[1959,2]},"visibility":"public","docs":"An iterator over the entries of a `HashTable` in arbitrary order.\nThe iterator element type is `&'a T`.\n\nThis `struct` is created by the [`iter`] method on [`HashTable`]. See its\ndocumentation for more.\n\n[`iter`]: struct.HashTable.html#method.iter\n[`HashTable`]: struct.HashTable.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"impls":[1392,1393,1394,1395,1396,1397,1398,1399,1400,1401,1402,1403,1404,1405,1406,1407,1409,1414,1416,1417,1419,1421]}}},"94":{"id":94,"crate_id":0,"name":"write_u32","span":{"filename":"src/hasher.rs","begin":[50,5],"end":[64,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Always)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["arg",{"primitive":"u32"}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"975":{"id":975,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1814,1],"end":[1819,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"path":"ExactSizeIterator","id":288,"args":null},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[974],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1579":{"id":1579,"crate_id":0,"name":"hash_map","span":{"filename":"src/lib.rs","begin":[88,1],"end":[88,17]},"visibility":"public","docs":"A hash map implemented with quadratic probing and SIMD lookup.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[1578],"is_stripped":false}}},"698":{"id":698,"crate_id":0,"name":"from_key","span":{"filename":"src/raw_entry.rs","begin":[525,5],"end":[532,6]},"visibility":"public","docs":"Creates a `RawEntryMut` from the given key.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nlet key = \"a\";\nlet entry: RawEntryMut<&str, u32, _> = map.raw_entry_mut().from_key(&key);\nentry.insert(key, 100);\nassert_eq!(map[&\"a\"], 100);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[allow(clippy::wrong_self_convention)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["k",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"path":"RawEntryMut","id":699,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"421":{"id":421,"crate_id":0,"name":"default","span":{"filename":"src/map.rs","begin":[3303,5],"end":[3307,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1302":{"id":1302,"crate_id":0,"name":"0","span":{"filename":"src/table.rs","begin":[1280,14],"end":[1280,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"144":{"id":144,"crate_id":0,"name":"is_empty","span":{"filename":"src/map.rs","begin":[845,5],"end":[847,6]},"visibility":"public","docs":"Returns `true` if the map contains no elements.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut a = HashMap::new();\nassert!(a.is_empty());\na.insert(1, \"a\");\nassert!(!a.is_empty());\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1025":{"id":1025,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1875,1],"end":[1898,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"Drain","id":839,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1021,1022,1023,1024],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"471":{"id":471,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Drain","id":146,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"194":{"id":194,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":15,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":15,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1075":{"id":1075,"crate_id":0,"name":"fold","span":{"filename":"src/set.rs","begin":[1970,5],"end":[1982,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"798":{"id":798,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"RawVacantEntryMut","id":723,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"521":{"id":521,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"ValuesMut","id":138,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1402":{"id":1402,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"244":{"id":244,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4506,1],"end":[4585,2]},"visibility":"default","docs":"Inserts all new key-values from the iterator and replaces values with existing\nkeys with new values returned from the iterator.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["extend_one","extend_reserve","extend_one_unchecked"],"trait":{"path":"Extend","id":245,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[243],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1125":{"id":1125,"crate_id":0,"name":"clone","span":{"filename":"src/set.rs","begin":[2075,5],"end":[2079,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"848":{"id":848,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[514,1],"end":[619,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[846,828,830,847],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1452":{"id":1452,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"571":{"id":571,"crate_id":0,"name":"key","span":{"filename":"src/map.rs","begin":[3797,5],"end":[3799,6]},"visibility":"public","docs":"Gets a reference to the key in the entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{Entry, HashMap};\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nmap.entry(\"poneyland\").or_insert(12);\n\nmatch map.entry(\"poneyland\") {\n    Entry::Vacant(_) => panic!(),\n    Entry::Occupied(entry) => assert_eq!(entry.key(), &\"poneyland\"),\n}\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"294":{"id":294,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1175":{"id":1175,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"Entry","id":866,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"898":{"id":898,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1238,1],"end":[1244,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":186,"args":null},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1502":{"id":1502,"crate_id":0,"name":"fmt","span":{"filename":"src/table.rs","begin":[2206,5],"end":[2213,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"621":{"id":621,"crate_id":0,"name":"VacantEntryRef","span":{"filename":"src/map.rs","begin":[2985,1],"end":[2989,2]},"visibility":"public","docs":"A view into a vacant entry in a `HashMap`.\nIt is part of the [`EntryRef`] enum.\n\n[`EntryRef`]: enum.EntryRef.html\n\n# Examples\n\n```\nuse hashbrown::hash_map::{EntryRef, HashMap, VacantEntryRef};\n\nlet mut map = HashMap::<String, i32>::new();\n\nlet entry_v: VacantEntryRef<_, _, _, _> = match map.entry_ref(\"a\") {\n    EntryRef::Vacant(view) => view,\n    EntryRef::Occupied(_) => unreachable!(),\n};\nentry_v.insert(10);\nassert!(map[\"a\"] == 10 && map.len() == 1);\n\n// Nonexistent key (insert and update)\nmatch map.entry_ref(\"b\") {\n    EntryRef::Occupied(_) => unreachable!(),\n    EntryRef::Vacant(view) => {\n        let value = view.insert(2);\n        assert_eq!(*value, 2);\n        *value = 20;\n    }\n}\nassert!(map[\"b\"] == 20 && map.len() == 2);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[654,655,656,657,658,659,660,661,662,663,664,665,666,667,669]}}},"344":{"id":344,"crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[3296,5],"end":[3298,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1225":{"id":1225,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2343,1],"end":[2347,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":1166,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1224],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1552":{"id":1552,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2322,1],"end":[2326,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"path":"ExactSizeIterator","id":288,"args":null},"for":{"resolved_path":{"path":"Drain","id":1261,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1551],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"671":{"id":671,"crate_id":0,"name":"value","span":{"filename":"src/map.rs","begin":[3030,5],"end":[3030,17]},"visibility":"public","docs":"The value which was not inserted, because the entry was already occupied.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"V"}}},"394":{"id":394,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2389,1],"end":[2408,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"IntoValues","id":155,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[390,391,392,393],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1275":{"id":1275,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"998":{"id":998,"crate_id":0,"name":"size_hint","span":{"filename":"src/set.rs","begin":[1848,5],"end":[1850,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1602":{"id":1602,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":32,"args":null},"for":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"items":[29],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"721":{"id":721,"crate_id":0,"name":"Occupied","span":{"filename":"src/raw_entry.rs","begin":[318,5],"end":[318,50]},"visibility":"default","docs":"An occupied entry.\n\n# Examples\n\n```\nuse hashbrown::{hash_map::RawEntryMut, HashMap};\nlet mut map: HashMap<_, _> = [(\"a\", 100), (\"b\", 200)].into();\n\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => unreachable!(),\n    RawEntryMut::Occupied(_) => { }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":[719]},"discriminant":null}}},"444":{"id":444,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1325":{"id":1325,"crate_id":0,"name":"fmt","span":{"filename":"src/table.rs","begin":[1311,5],"end":[1316,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1048":{"id":1048,"crate_id":0,"name":"next","span":{"filename":"src/set.rs","begin":[1921,5],"end":[1925,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"771":{"id":771,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawOccupiedEntryMut","id":720,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"494":{"id":494,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":150,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1375":{"id":1375,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"AbsentEntry","id":1240,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1098":{"id":1098,"crate_id":0,"name":"clone","span":{"filename":"src/set.rs","begin":[2006,5],"end":[2011,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"217":{"id":217,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2037,1],"end":[2046,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[216],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"544":{"id":544,"crate_id":0,"name":"or_insert_with","span":{"filename":"src/map.rs","begin":[3577,5],"end":[3586,6]},"visibility":"public","docs":"Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n\n// nonexistent key\nmap.entry(\"poneyland\").or_insert_with(|| 3);\nassert_eq!(map[\"poneyland\"], 3);\n\n// existing key\n*map.entry(\"poneyland\").or_insert_with(|| 10) *= 2;\nassert_eq!(map[\"poneyland\"], 6);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}},"is_c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"FnOnce","id":545,"args":{"parenthesized":{"inputs":[],"output":{"generic":"V"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1425":{"id":1425,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"267":{"id":267,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1148":{"id":1148,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Union","id":860,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"871":{"id":871,"crate_id":0,"name":"insert_unique_unchecked","span":{"filename":"src/set.rs","begin":[1120,5],"end":[1122,6]},"visibility":"public","docs":"Insert a value the set without checking if the value already exists in the set.\n\nThis operation is faster than regular insert, because it does not perform\nlookup before insertion.\n\nThis operation is useful during initial population of the set.\nFor example, when constructing a set from another set, we know\nthat values are unique.\n\n# Safety\n\nThis operation is safe if a value does not exist in the set.\n\nHowever, if a value exists in the set already, the behavior is unspecified:\nthis operation may panic, loop forever, or any following operation with the set\nmay panic, loop forever or return arbitrary result.\n\nThat said, this operation (and following operations) are guaranteed to\nnot violate memory safety.\n\nHowever this operation is still unsafe because the resulting `HashSet`\nmay be passed to unsafe code which does expect the set to behave\ncorrectly, and would cause unsoundness as a result.","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"generic":"T"}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"594":{"id":594,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2802,1],"end":[2809,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[593],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1475":{"id":1475,"crate_id":0,"name":"clone","span":{"filename":"src/table.rs","begin":[2139,5],"end":[2144,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"317":{"id":317,"crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[3254,5],"end":[3256,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1198":{"id":1198,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedEntry","id":1163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"921":{"id":921,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1428,1],"end":[1459,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Default","id":67,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Default","id":67,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BitXor","id":922,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}}],"constraints":[]}}},"for":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"items":[919,920],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"644":{"id":644,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"EntryRef","id":165,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1525":{"id":1525,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2242,1],"end":[2263,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":1285,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1521,1522,1523,1524],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"367":{"id":367,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2311,1],"end":[2330,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"IntoKeys","id":153,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[363,364,365,366],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1248":{"id":1248,"crate_id":0,"name":"capacity","span":{"filename":"src/table.rs","begin":[603,5],"end":[605,6]},"visibility":"public","docs":"Returns the number of elements the table can hold without reallocating.\n\n# Examples\n\n```\nuse hashbrown::HashTable;\nlet table: HashTable<i32> = HashTable::with_capacity(100);\nassert!(table.capacity() >= 100);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"971":{"id":971,"crate_id":0,"name":"size_hint","span":{"filename":"src/set.rs","begin":[1802,5],"end":[1804,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"90":{"id":90,"crate_id":0,"name":null,"span":{"filename":"src/hasher.rs","begin":[33,10],"end":[33,15]},"visibility":"default","docs":null,"links":{},"attrs":["automatically_derived"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":31,"args":null},"for":{"resolved_path":{"path":"DefaultHasher","id":69,"args":null}},"items":[89],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"694":{"id":694,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[14,1],"end":[14,29]},"visibility":"public","docs":null,"links":{},"attrs":[{"other":"#[<cfg>(feature = \"raw-entry\")]"}],"deprecation":null,"inner":{"use":{"source":"crate::raw_entry","name":"raw_entry","id":695,"is_glob":true}}},"1575":{"id":1575,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2351,1],"end":[2366,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":1263,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1572,1573,1574],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"417":{"id":417,"crate_id":0,"name":"clone","span":{"filename":"src/map.rs","begin":[2462,5],"end":[2466,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1298":{"id":1298,"crate_id":0,"name":"clone","span":{"filename":"src/table.rs","begin":[1178,5],"end":[1182,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1021":{"id":1021,"crate_id":0,"name":"Item","span":{"filename":"src/set.rs","begin":[1876,5],"end":[1876,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"K"}}}},"140":{"id":140,"crate_id":0,"name":"Iter","span":{"filename":"src/map.rs","begin":[2154,1],"end":[2157,2]},"visibility":"public","docs":"An iterator over the entries of a `HashMap` in arbitrary order.\nThe iterator element type is `(&'a K, &'a V)`.\n\nThis `struct` is created by the [`iter`] method on [`HashMap`]. See its\ndocumentation for more.\n\n[`iter`]: struct.HashMap.html#method.iter\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();\n\nlet mut iter = map.iter();\nlet mut vec = vec![iter.next(), iter.next(), iter.next()];\n\n// The `Iter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [Some((&1, &\"a\")), Some((&2, &\"b\")), Some((&3, &\"c\"))]);\n\n// It is fused iterator\nassert_eq!(iter.next(), None);\nassert_eq!(iter.next(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"impls":[255,256,257,258,259,260,261,262,263,264,265,266,267,268,273,274,276,278,280,285,287,289]}}},"744":{"id":744,"crate_id":0,"name":"fmt","span":{"filename":"src/raw_entry.rs","begin":[1456,5],"end":[1461,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"467":{"id":467,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"Drain","id":146,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1348":{"id":1348,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[1562,1],"end":[1567,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1071":{"id":1071,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1935,1],"end":[1943,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":31,"args":null},"for":{"resolved_path":{"path":"Intersection","id":858,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1070],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"190":{"id":190,"crate_id":0,"name":"RawEntryBuilder","span":{"filename":"src/raw_entry.rs","begin":[505,1],"end":[507,2]},"visibility":"public","docs":"A builder for computing where in a [`HashMap`] a key-value pair would be stored.\n\nSee the [`HashMap::raw_entry`] docs for usage examples.\n\n[`HashMap::raw_entry`]: struct.HashMap.html#method.raw_entry\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryBuilder};\nuse core::hash::{BuildHasher, Hash};\n\nlet mut map = HashMap::new();\nmap.extend([(1, 10), (2, 20), (3, 30)]);\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nfor k in 0..6 {\n    let hash = compute_hash(map.hasher(), &k);\n    let v = map.get(&k).cloned();\n    let kv = v.as_ref().map(|v| (&k, v));\n\n    println!(\"Key: {} and value: {:?}\", k, v);\n    let builder: RawEntryBuilder<_, _, _> = map.raw_entry();\n    assert_eq!(builder.from_key(&k), kv);\n    assert_eq!(map.raw_entry().from_hash(hash, |q| *q == k), kv);\n    assert_eq!(map.raw_entry().from_key_hashed_nocheck(hash, &k), kv);\n}\n```","links":{"`HashMap`":7},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[805,806,807,808,809,810,811,812,813,814,815,816,817,818,820]}}},"794":{"id":794,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawVacantEntryMut","id":723,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"517":{"id":517,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ValuesMut","id":138,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1398":{"id":1398,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1121":{"id":1121,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"SymmetricDifference","id":856,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"240":{"id":240,"crate_id":0,"name":"from_iter","span":{"filename":"src/map.rs","begin":[4493,5],"end":[4501,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["iter",{"generic":"T"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"IntoIterator","id":230,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":null,"binding":{"equality":{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"844":{"id":844,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[258,1],"end":[433,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[833,834,836,837,838,840,841,843],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"567":{"id":567,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2732,1],"end":[2739,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"Entry","id":163,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[566],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1448":{"id":1448,"crate_id":0,"name":"fmt","span":{"filename":"src/table.rs","begin":[2080,5],"end":[2087,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1171":{"id":1171,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2349,1],"end":[2424,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"Entry","id":866,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1168,1169,1170],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"894":{"id":894,"crate_id":0,"name":"clone_from","span":{"filename":"src/set.rs","begin":[125,5],"end":[127,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["source",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"617":{"id":617,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2847,1],"end":[2851,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":539,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[616],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1498":{"id":1498,"crate_id":0,"name":"next","span":{"filename":"src/table.rs","begin":[2182,5],"end":[2188,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1221":{"id":1221,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntry","id":1166,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"340":{"id":340,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3267,1],"end":[3286,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":237,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[336,337,338,339],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"63":{"id":63,"crate_id":0,"name":null,"span":{"filename":"src/hasher.rs","begin":[13,17],"end":[13,22]},"visibility":"default","docs":null,"links":{},"attrs":["automatically_derived"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"items":[60],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"944":{"id":944,"crate_id":0,"name":"IntoIter","span":{"filename":"src/set.rs","begin":[1748,5],"end":[1748,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"IntoIter","id":945,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}},"667":{"id":667,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"VacantEntryRef","id":621,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1548":{"id":1548,"crate_id":0,"name":"size_hint","span":{"filename":"src/table.rs","begin":[2309,5],"end":[2311,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1271":{"id":1271,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"390":{"id":390,"crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[2390,5],"end":[2390,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"V"}}}},"994":{"id":994,"crate_id":0,"name":"default","span":{"filename":"src/set.rs","begin":[1830,5],"end":[1834,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"717":{"id":717,"crate_id":0,"name":"fmt","span":{"filename":"src/raw_entry.rs","begin":[1450,5],"end":[1452,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1598":{"id":1598,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"440":{"id":440,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":32,"args":null},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[29],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1321":{"id":1321,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Entry","id":1241,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"163":{"id":163,"crate_id":0,"name":"Entry","span":{"filename":"src/map.rs","begin":[2697,1],"end":[2730,2]},"visibility":"public","docs":"A view into a single entry in a map, which may either be vacant or occupied.\n\nThis `enum` is constructed from the [`entry`] method on [`HashMap`].\n\n[`HashMap`]: struct.HashMap.html\n[`entry`]: struct.HashMap.html#method.entry\n\n# Examples\n\n```\nuse hashbrown::hash_map::{Entry, HashMap, OccupiedEntry};\n\nlet mut map = HashMap::new();\nmap.extend([(\"a\", 10), (\"b\", 20), (\"c\", 30)]);\nassert_eq!(map.len(), 3);\n\n// Existing key (insert)\nlet entry: Entry<_, _, _> = map.entry(\"a\");\nlet _raw_o: OccupiedEntry<_, _, _> = entry.insert(1);\nassert_eq!(map.len(), 3);\n// Nonexistent key (insert)\nmap.entry(\"d\").insert(4);\n\n// Existing key (or_insert)\nlet v = map.entry(\"b\").or_insert(2);\nassert_eq!(std::mem::replace(v, 2), 20);\n// Nonexistent key (or_insert)\nmap.entry(\"e\").or_insert(5);\n\n// Existing key (or_insert_with)\nlet v = map.entry(\"c\").or_insert_with(|| 3);\nassert_eq!(std::mem::replace(v, 3), 30);\n// Nonexistent key (or_insert_with)\nmap.entry(\"f\").or_insert_with(|| 6);\n\nprintln!(\"Our HashMap: {:?}\", map);\n\nlet mut vec: Vec<_> = map.iter().map(|(&k, &v)| (k, v)).collect();\n// The `Iter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [(\"a\", 1), (\"b\", 2), (\"c\", 3), (\"d\", 4), (\"e\", 5), (\"f\", 6)]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"has_stripped_variants":false,"variants":[537,540],"impls":[550,552,553,554,555,556,557,558,559,560,561,562,563,564,565,567]}}},"1044":{"id":1044,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ExtractIf","id":842,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"767":{"id":767,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"RawOccupiedEntryMut","id":720,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"490":{"id":490,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":150,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1371":{"id":1371,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[1821,1],"end":[1825,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":1305,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1370],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"213":{"id":213,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2011,1],"end":[2026,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"PartialEq","id":214,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":214,"args":null},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[212],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1094":{"id":1094,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Difference","id":854,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"817":{"id":817,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawEntryBuilder","id":190,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"540":{"id":540,"crate_id":0,"name":"Vacant","span":{"filename":"src/map.rs","begin":[2729,5],"end":[2729,40]},"visibility":"default","docs":"A vacant entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{Entry, HashMap};\nlet mut map: HashMap<&str, i32> = HashMap::new();\n\nmatch map.entry(\"a\") {\n    Entry::Occupied(_) => unreachable!(),\n    Entry::Vacant(_) => { }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":[538]},"discriminant":null}}},"1421":{"id":1421,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2015,1],"end":[2019,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1420],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1144":{"id":1144,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":32,"args":null},"for":{"resolved_path":{"path":"Union","id":860,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[29],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"263":{"id":263,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":32,"args":null},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[29],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"867":{"id":867,"crate_id":0,"name":"is_disjoint","span":{"filename":"src/set.rs","begin":[1024,5],"end":[1026,6]},"visibility":"public","docs":"Returns `true` if `self` has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet a: HashSet<_> = [1, 2, 3].into_iter().collect();\nlet mut b = HashSet::new();\n\nassert_eq!(a.is_disjoint(&b), true);\nb.insert(4);\nassert_eq!(a.is_disjoint(&b), true);\nb.insert(1);\nassert_eq!(a.is_disjoint(&b), false);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"590":{"id":590,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1471":{"id":1471,"crate_id":0,"name":"next","span":{"filename":"src/table.rs","begin":[2116,5],"end":[2122,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1194":{"id":1194,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":1163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"313":{"id":313,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3211,1],"end":[3240,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[309,310,311,312],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"917":{"id":917,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1395,1],"end":[1426,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Default","id":67,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Default","id":67,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BitAnd","id":918,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}}],"constraints":[]}}},"for":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"items":[915,916],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"640":{"id":640,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"EntryRef","id":165,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1521":{"id":1521,"crate_id":0,"name":"Item","span":{"filename":"src/table.rs","begin":[2246,5],"end":[2246,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"T"}}}},"1244":{"id":1244,"crate_id":0,"name":"shrink_to_fit","span":{"filename":"src/table.rs","begin":[473,5],"end":[475,6]},"visibility":"public","docs":"Shrinks the capacity of the table as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.\n\n`hasher` is called if entries need to be moved or copied to a new table.\nThis must return the same hash value that each entry was inserted with.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table = HashTable::with_capacity(100);\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\ntable.insert_unique(hasher(&1), 1, hasher);\ntable.insert_unique(hasher(&2), 2, hasher);\nassert!(table.capacity() >= 100);\ntable.shrink_to_fit(hasher);\nassert!(table.capacity() >= 2);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["hasher",{"impl_trait":[{"trait_bound":{"trait":{"path":"Fn","id":784,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"impl Fn(&T) -> u64","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Fn","id":784,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":true}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"363":{"id":363,"crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[2312,5],"end":[2312,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"K"}}}},"86":{"id":86,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DefaultHasher","id":69,"args":null}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"967":{"id":967,"crate_id":0,"name":"default","span":{"filename":"src/set.rs","begin":[1788,5],"end":[1792,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"690":{"id":690,"crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[3034,5],"end":[3040,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1571":{"id":1571,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":1263,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"1294":{"id":1294,"crate_id":0,"name":"into_iter","span":{"filename":"src/table.rs","begin":[1157,5],"end":[1159,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"413":{"id":413,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"136":{"id":136,"crate_id":0,"name":"Values","span":{"filename":"src/map.rs","begin":[2503,1],"end":[2505,2]},"visibility":"public","docs":"An iterator over the values of a `HashMap` in arbitrary order.\nThe iterator element type is `&'a V`.\n\nThis `struct` is created by the [`values`] method on [`HashMap`]. See its\ndocumentation for more.\n\n[`values`]: struct.HashMap.html#method.values\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();\n\nlet mut values = map.values();\nlet mut vec = vec![values.next(), values.next(), values.next()];\n\n// The `Values` iterator produces values in arbitrary order, so the\n// values must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [Some(&\"a\"), Some(&\"b\"), Some(&\"c\")]);\n\n// It is fused iterator\nassert_eq!(values.next(), None);\nassert_eq!(values.next(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"impls":[432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,449,451,453,458,460,461]}}},"1017":{"id":1017,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Drain","id":839,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"740":{"id":740,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawEntryMut","id":699,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1344":{"id":1344,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"463":{"id":463,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"Drain","id":146,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1067":{"id":1067,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"Intersection","id":858,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"790":{"id":790,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"RawVacantEntryMut","id":723,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"1394":{"id":1394,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"513":{"id":513,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"ValuesMut","id":138,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"236":{"id":236,"crate_id":0,"name":"IntoIter","span":{"filename":"src/map.rs","begin":[3126,5],"end":[3126,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"IntoIter","id":237,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}},"1117":{"id":1117,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":32,"args":null},"for":{"resolved_path":{"path":"SymmetricDifference","id":856,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[29],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"840":{"id":840,"crate_id":0,"name":"retain","span":{"filename":"src/set.rs","begin":[368,5],"end":[373,6]},"visibility":"public","docs":"Retains only the elements specified by the predicate.\n\nIn other words, remove all elements `e` such that `f(&e)` returns `false`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet xs = [1,2,3,4,5,6];\nlet mut set: HashSet<i32> = xs.into_iter().collect();\nset.retain(|&k| k % 2 == 0);\nassert_eq!(set.len(), 3);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1444":{"id":1444,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2043,1],"end":[2066,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1440,1441,1442,1443],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"563":{"id":563,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Entry","id":163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"286":{"id":286,"crate_id":0,"name":"len","span":{"filename":"src/map.rs","begin":[3195,5],"end":[3197,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1167":{"id":1167,"crate_id":0,"name":"Vacant","span":{"filename":"src/set.rs","begin":[2253,5],"end":[2253,37]},"visibility":"default","docs":"A vacant entry.\n\n# Examples\n\n```\nuse hashbrown::hash_set::{Entry, HashSet};\nlet mut set: HashSet<&str> = HashSet::new();\n\nmatch set.entry(\"a\") {\n    Entry::Occupied(_) => unreachable!(),\n    Entry::Vacant(_) => { }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":[1165]},"discriminant":null}}},"9":{"id":9,"crate_id":0,"name":"DefaultHashBuilder","span":{"filename":"src/hasher.rs","begin":[14,1],"end":[17,2]},"visibility":"public","docs":"Default hash builder for the `S` type parameter of\n[`HashMap`](crate::HashMap) and [`HashSet`](crate::HashSet).\n\nThis only implements `BuildHasher` when the \"default-hasher\" crate feature\nis enabled; otherwise it just serves as a placeholder, and a custom `S` type\nmust be used to have a fully functional `HashMap` or `HashSet`.","links":{"crate::HashMap":7,"crate::HashSet":8},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[],"where_predicates":[]},"impls":[10,12,14,16,18,20,23,27,30,35,38,43,48,51,56,59,63,66,72]}}},"890":{"id":890,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1494":{"id":1494,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"IterHashMut","id":1258,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"613":{"id":613,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntry","id":539,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"336":{"id":336,"crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[3268,5],"end":[3268,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}}},"1217":{"id":1217,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntry","id":1166,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"59":{"id":59,"crate_id":0,"name":null,"span":{"filename":"src/hasher.rs","begin":[13,10],"end":[13,15]},"visibility":"default","docs":null,"links":{},"attrs":["automatically_derived"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":31,"args":null},"for":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"items":[58],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"940":{"id":940,"crate_id":0,"name":"IntoIter","span":{"filename":"src/set.rs","begin":[1738,5],"end":[1738,33]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}}}}},"663":{"id":663,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntryRef","id":621,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1544":{"id":1544,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"Drain","id":1261,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"386":{"id":386,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"IntoValues","id":155,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1267":{"id":1267,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[94,1],"end":[1122,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1232,1233,1234,1235,1236,1238,1237,1242,1243,1244,1245,1247,1246,1248,1249,1250,1251,1253,1255,1257,1259,1260,1262,1264,1265,1266],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"990":{"id":990,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoIter","id":945,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"713":{"id":713,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawEntryBuilderMut","id":188,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1594":{"id":1594,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"436":{"id":436,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1317":{"id":1317,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"Entry","id":1241,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1040":{"id":1040,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ExtractIf","id":842,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"159":{"id":159,"crate_id":0,"name":"TryReserveError","span":{"filename":"src/lib.rs","begin":[179,1],"end":[189,2]},"visibility":"public","docs":"The error type for `try_reserve` methods.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"has_stripped_variants":false,"variants":[1590,1593],"impls":[1594,1595,1596,1597,1598,1599,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1611,1612,1615,1616,1618]}}},"763":{"id":763,"crate_id":0,"name":null,"span":{"filename":"src/raw_entry.rs","begin":[904,1],"end":[1301,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"RawOccupiedEntryMut","id":720,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[749,750,751,752,753,754,755,756,757,758,759,760,761,762],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1367":{"id":1367,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntry","id":1305,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"486":{"id":486,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3457,1],"end":[3466,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"Drain","id":146,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[485],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"209":{"id":209,"crate_id":0,"name":"clone","span":{"filename":"src/map.rs","begin":[191,5],"end":[196,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1090":{"id":1090,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":32,"args":null},"for":{"resolved_path":{"path":"Difference","id":854,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[29],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"813":{"id":813,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawEntryBuilder","id":190,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1417":{"id":1417,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2002,1],"end":[2002,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"536":{"id":536,"crate_id":0,"name":"OccupiedEntry","span":{"filename":"src/map.rs","begin":[2779,1],"end":[2783,2]},"visibility":"public","docs":"A view into an occupied entry in a [`HashMap`].\nIt is part of the [`Entry`] and [`EntryRef`] enums.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{Entry, HashMap, OccupiedEntry};\n\nlet mut map = HashMap::new();\nmap.extend([(\"a\", 10), (\"b\", 20), (\"c\", 30)]);\n\nlet _entry_o: OccupiedEntry<_, _, _> = map.entry(\"a\").insert(100);\nassert_eq!(map.len(), 3);\n\n// Existing key (insert and update)\nmatch map.entry(\"a\") {\n    Entry::Vacant(_) => unreachable!(),\n    Entry::Occupied(mut view) => {\n        assert_eq!(view.get(), &100);\n        let v = view.get_mut();\n        *v *= 10;\n        assert_eq!(view.insert(1111), 1000);\n    }\n}\n\nassert_eq!(map[&\"a\"], 1111);\nassert_eq!(map.len(), 3);\n\n// Existing key (take)\nmatch map.entry(\"c\") {\n    Entry::Vacant(_) => unreachable!(),\n    Entry::Occupied(view) => {\n        assert_eq!(view.remove_entry(), (\"c\", 30));\n    }\n}\nassert_eq!(map.get(&\"c\"), None);\nassert_eq!(map.len(), 2);\n```","links":{"`Entry`":163,"`EntryRef`":165,"`HashMap`":7},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"crate::DefaultHashBuilder","id":9,"args":null}},"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[579,580,581,582,583,584,585,586,587,588,589,590,591,592,594]}}},"259":{"id":259,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1140":{"id":1140,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"Union","id":860,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"863":{"id":863,"crate_id":0,"name":"get_or_insert","span":{"filename":"src/set.rs","begin":[914,5],"end":[921,6]},"visibility":"public","docs":"Inserts the given `value` into the set if it is not present, then\nreturns a reference to the value in the set.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set: HashSet<_> = [1, 2, 3].into_iter().collect();\nassert_eq!(set.len(), 3);\nassert_eq!(set.get_or_insert(2), &2);\nassert_eq!(set.get_or_insert(100), &100);\nassert_eq!(set.len(), 4); // 100 was inserted\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"generic":"T"}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1467":{"id":1467,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":57,"args":null},"for":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[53,54,55],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"586":{"id":586,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"309":{"id":309,"crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[3212,5],"end":[3212,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}}]}}}},"1190":{"id":1190,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2426,1],"end":[2475,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"OccupiedEntry","id":1163,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1188,1189],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"913":{"id":913,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1362,1],"end":[1393,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Default","id":67,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Default","id":67,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BitOr","id":914,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}}],"constraints":[]}}},"for":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"items":[911,912],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1517":{"id":1517,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":1285,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"636":{"id":636,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"EntryRef","id":165,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"359":{"id":359,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"IntoKeys","id":153,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1240":{"id":1240,"crate_id":0,"name":"AbsentEntry","span":{"filename":"src/table.rs","begin":[1924,1],"end":[1929,2]},"visibility":"public","docs":"Type representing the absence of an entry, as returned by [`HashTable::find_entry`].\n\nThis type only exists due to [limitations] in Rust's NLL borrow checker. In\nthe future, `find_entry` will return an `Option<OccupiedEntry>` and this\ntype will be removed.\n\n[limitations]: https://smallcultfollowing.com/babysteps/blog/2018/06/15/mir-based-borrow-check-nll-status-update/#polonius\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::hash_table::{AbsentEntry, Entry};\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table: HashTable<&str> = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\n\nlet entry_v: AbsentEntry<_, _> = table.find_entry(hasher(&\"a\"), |&x| x == \"a\").unwrap_err();\nentry_v\n    .into_table()\n    .insert_unique(hasher(&\"a\"), \"a\", hasher);\nassert!(table.find(hasher(&\"a\"), |&x| x == \"a\").is_some() && table.len() == 1);\n\n// Nonexistent key (insert)\nmatch table.entry(hasher(&\"b\"), |&x| x == \"b\", hasher) {\n    Entry::Vacant(view) => {\n        view.insert(\"b\");\n    }\n    Entry::Occupied(_) => unreachable!(),\n}\nassert!(table.find(hasher(&\"b\"), |&x| x == \"b\").is_some() && table.len() == 2);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{"`HashTable::find_entry`":1238},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":[1374,1375,1376,1377,1378,1379,1380,1381,1382,1383,1384,1385,1386,1387,1389]}}},"963":{"id":963,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"82":{"id":82,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":32,"args":null},"for":{"resolved_path":{"path":"DefaultHasher","id":69,"args":null}},"items":[29],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1567":{"id":1567,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ExtractIf","id":1263,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"409":{"id":409,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":32,"args":null},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[29],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1290":{"id":1290,"crate_id":0,"name":"into_iter","span":{"filename":"src/table.rs","begin":[1145,5],"end":[1147,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"132":{"id":132,"crate_id":0,"name":"capacity","span":{"filename":"src/map.rs","begin":[618,5],"end":[620,6]},"visibility":"public","docs":"Returns the number of elements the map can hold without reallocating.\n\nThis number is a lower bound; the `HashMap<K, V>` might be able to hold\nmore, but is guaranteed to be able to hold at least this many.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nlet map: HashMap<i32, i32> = HashMap::with_capacity(100);\nassert_eq!(map.len(), 0);\nassert!(map.capacity() >= 100);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1013":{"id":1013,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Drain","id":839,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1617":{"id":1617,"crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[178,32],"end":[178,37]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"$crate::fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"$crate::fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"736":{"id":736,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"RawEntryMut","id":699,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"459":{"id":459,"crate_id":0,"name":"len","span":{"filename":"src/map.rs","begin":[3375,5],"end":[3377,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1340":{"id":1340,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"182":{"id":182,"crate_id":0,"name":"remove","span":{"filename":"src/map.rs","begin":[1953,5],"end":[1962,6]},"visibility":"public","docs":"Removes a key from the map, returning the value at the key if the key\nwas previously in the map. Keeps the allocated memory for reuse.\n\nThe key may be any borrowed form of the map's key type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe key type.\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\n// The map is empty\nassert!(map.is_empty() && map.capacity() == 0);\n\nmap.insert(1, \"a\");\n\nassert_eq!(map.remove(&1), Some(\"a\"));\nassert_eq!(map.remove(&1), None);\n\n// Now map holds none elements\nassert!(map.is_empty());\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["k",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1063":{"id":1063,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Intersection","id":858,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"786":{"id":786,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"RawVacantEntryMut","id":723,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"509":{"id":509,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"ValuesMut","id":138,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"232":{"id":232,"crate_id":0,"name":"IntoIter","span":{"filename":"src/map.rs","begin":[3089,5],"end":[3089,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}}}}},"1113":{"id":1113,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"SymmetricDifference","id":856,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"836":{"id":836,"crate_id":0,"name":"len","span":{"filename":"src/set.rs","begin":[309,5],"end":[311,6]},"visibility":"public","docs":"Returns the number of elements in the set.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut v = HashSet::new();\nassert_eq!(v.len(), 0);\nv.insert(1);\nassert_eq!(v.len(), 1);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"559":{"id":559,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Entry","id":163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1440":{"id":1440,"crate_id":0,"name":"Item","span":{"filename":"src/table.rs","begin":[2044,5],"end":[2044,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"T"}}}}}},"282":{"id":282,"crate_id":0,"name":"next","span":{"filename":"src/map.rs","begin":[3167,5],"end":[3176,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"V"}}}]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1163":{"id":1163,"crate_id":0,"name":"OccupiedEntry","span":{"filename":"src/set.rs","begin":[2301,1],"end":[2303,2]},"visibility":"public","docs":"A view into an occupied entry in a `HashSet`.\nIt is part of the [`Entry`] enum.\n\n[`Entry`]: enum.Entry.html\n\n# Examples\n\n```\nuse hashbrown::hash_set::{Entry, HashSet, OccupiedEntry};\n\nlet mut set = HashSet::new();\nset.extend([\"a\", \"b\", \"c\"]);\n\nlet _entry_o: OccupiedEntry<_, _> = set.entry(\"a\").insert();\nassert_eq!(set.len(), 3);\n\n// Existing key\nmatch set.entry(\"a\") {\n    Entry::Vacant(_) => unreachable!(),\n    Entry::Occupied(view) => {\n        assert_eq!(view.get(), &\"a\");\n    }\n}\n\nassert_eq!(set.len(), 3);\n\n// Existing key (take)\nmatch set.entry(\"c\") {\n    Entry::Vacant(_) => unreachable!(),\n    Entry::Occupied(view) => {\n        assert_eq!(view.remove(), \"c\");\n    }\n}\nassert_eq!(set.get(&\"c\"), None);\nassert_eq!(set.len(), 2);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1205]}}},"886":{"id":886,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"609":{"id":609,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntry","id":539,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1490":{"id":1490,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterHashMut","id":1258,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"332":{"id":332,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":237,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1213":{"id":1213,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":15,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":1166,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"936":{"id":936,"crate_id":0,"name":"sub_assign","span":{"filename":"src/set.rs","begin":[1629,5],"end":[1637,6]},"visibility":"default","docs":"Modifies this set to contain the difference of `self` and `rhs`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut a: HashSet<_> = vec![1, 2, 3].into_iter().collect();\nlet b: HashSet<_> = vec![3, 4, 5].into_iter().collect();\n\na -= &b;\n\nlet mut i = 0;\nlet expected = [1, 2];\nfor x in &a {\n    assert!(expected.contains(x));\n    i += 1;\n}\nassert_eq!(i, expected.len());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["rhs",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"55":{"id":55,"crate_id":2,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1540":{"id":1540,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Drain","id":1261,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"659":{"id":659,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"VacantEntryRef","id":621,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"382":{"id":382,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoValues","id":155,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1263":{"id":1263,"crate_id":0,"name":"ExtractIf","span":{"filename":"src/table.rs","begin":[2346,1],"end":[2349,2]},"visibility":"public","docs":"A draining iterator over entries of a `HashTable` which don't satisfy the predicate `f`.\n\nThis `struct` is created by [`HashTable::extract_if`]. See its\ndocumentation for more.","links":{"`HashTable::extract_if`":1262},"attrs":[{"must_use":{"reason":"Iterators are lazy unless consumed"}}],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[1558,1559,1560,1561,1562,1563,1564,1565,1566,1567,1568,1569,1570,1571,1575,1576]}}},"986":{"id":986,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoIter","id":945,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"105":{"id":105,"crate_id":0,"name":null,"span":{"filename":"src/hasher.rs","begin":[49,1],"end":[77,2]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg>(feature = \"default-hasher\")]"}],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_u8","write_u16","write_u32","write_u64","write_u128","write_usize","write_i8","write_i16","write_i32","write_i64","write_i128","write_isize","write_length_prefix","write_str"],"trait":{"path":"Hasher","id":106,"args":null},"for":{"resolved_path":{"path":"DefaultHasher","id":69,"args":null}},"items":[91,92,93,94,95,96,97,98,99,100,101,102,103,104],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1590":{"id":1590,"crate_id":0,"name":"CapacityOverflow","span":{"filename":"src/lib.rs","begin":[182,5],"end":[182,21]},"visibility":"default","docs":"Error due to the computed capacity exceeding the collection's maximum\n(usually `isize::MAX` bytes).","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"709":{"id":709,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"RawEntryBuilderMut","id":188,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"432":{"id":432,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1313":{"id":1313,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"Entry","id":1241,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1036":{"id":1036,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":842,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"155":{"id":155,"crate_id":0,"name":"IntoValues","span":{"filename":"src/map.rs","begin":[2377,1],"end":[2379,2]},"visibility":"public","docs":"An owning iterator over the values of a `HashMap` in arbitrary order.\nThe iterator element type is `V`.\n\nThis `struct` is created by the [`into_values`] method on [`HashMap`].\nSee its documentation for more. The map cannot be used after calling that method.\n\n[`into_values`]: struct.HashMap.html#method.into_values\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet map: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();\n\nlet mut values = map.into_values();\nlet mut vec = vec![values.next(), values.next(), values.next()];\n\n// The `IntoValues` iterator produces values in arbitrary order, so\n// the values must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [Some(\"a\"), Some(\"b\"), Some(\"c\")]);\n\n// It is fused iterator\nassert_eq!(values.next(), None);\nassert_eq!(values.next(), None);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[374,375,376,377,378,379,380,381,382,383,384,385,386,387,389,394,396,397,399]}}},"759":{"id":759,"crate_id":0,"name":"insert_key","span":{"filename":"src/raw_entry.rs","begin":[1202,5],"end":[1204,6]},"visibility":"public","docs":"Sets the value of the entry, and returns the entry's old value.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\nuse std::rc::Rc;\n\nlet key_one = Rc::new(\"a\");\nlet key_two = Rc::new(\"a\");\n\nlet mut map: HashMap<Rc<&str>, u32> = HashMap::new();\nmap.insert(key_one.clone(), 10);\n\nassert_eq!(map[&key_one], 10);\nassert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);\n\nmatch map.raw_entry_mut().from_key(&key_one) {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(mut o) => {\n        let old_key = o.insert_key(key_two.clone());\n        assert!(Rc::ptr_eq(&old_key, &key_one));\n    }\n}\nassert_eq!(map[&key_two], 10);\nassert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["key",{"generic":"K"}]],"output":{"generic":"K"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"482":{"id":482,"crate_id":0,"name":"len","span":{"filename":"src/map.rs","begin":[3451,5],"end":[3453,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1363":{"id":1363,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntry","id":1305,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1086":{"id":1086,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"Difference","id":854,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"205":{"id":205,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"809":{"id":809,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"RawEntryBuilder","id":190,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"532":{"id":532,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3419,1],"end":[3419,52]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"ValuesMut","id":138,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1413":{"id":1413,"crate_id":0,"name":"fold","span":{"filename":"src/table.rs","begin":[1986,5],"end":[1993,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1136":{"id":1136,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"Union","id":860,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"255":{"id":255,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"859":{"id":859,"crate_id":0,"name":"union","span":{"filename":"src/set.rs","begin":[830,5],"end":[841,6]},"visibility":"public","docs":"Visits the values representing the union,\ni.e., all the values in `self` or `other`, without duplicates.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet a: HashSet<_> = [1, 2, 3].into_iter().collect();\nlet b: HashSet<_> = [4, 2, 3, 4].into_iter().collect();\n\n// Print 1, 2, 3, 4 in arbitrary order.\nfor x in a.union(&b) {\n    println!(\"{}\", x);\n}\n\nlet union: HashSet<_> = a.union(&b).collect();\nassert_eq!(union, [1, 2, 3, 4].iter().collect());\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Union","id":860,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"582":{"id":582,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"1463":{"id":1463,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1186":{"id":1186,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2256,1],"end":[2263,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"Entry","id":866,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1185],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"305":{"id":305,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"909":{"id":909,"crate_id":0,"name":"default","span":{"filename":"src/set.rs","begin":[1355,5],"end":[1359,6]},"visibility":"default","docs":"Creates an empty `HashSet<T, S>` with the `Default` value for the hasher.","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"632":{"id":632,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4332,1],"end":[4397,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Default","id":67,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"EntryRef","id":165,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[630,631],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1513":{"id":1513,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoIter","id":1285,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"355":{"id":355,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoKeys","id":153,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1236":{"id":1236,"crate_id":0,"name":"find_mut","span":{"filename":"src/table.rs","begin":[261,5],"end":[263,6]},"visibility":"public","docs":"Returns a mutable reference to an entry in the table with the given hash\nand which satisfies the equality function passed.\n\nThis method will call `eq` for all entries with the given hash, but may\nalso call it for entries with a different hash. `eq` should only return\ntrue for the desired entry, at which point the search is stopped.\n\nWhen mutating an entry, you should ensure that it still retains the same\nhash value as when it was inserted, otherwise lookups of that entry may\nfail to find it.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\ntable.insert_unique(hasher(&1), (1, \"a\"), |val| hasher(&val.0));\nif let Some(val) = table.find_mut(hasher(&1), |val| val.0 == 1) {\n    val.1 = \"b\";\n}\nassert_eq!(table.find(hasher(&1), |val| val.0 == 1), Some(&(1, \"b\")));\nassert_eq!(table.find(hasher(&2), |val| val.0 == 2), None);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["hash",{"primitive":"u64"}],["eq",{"impl_trait":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"impl FnMut(&T) -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":true}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"78":{"id":78,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"DefaultHasher","id":69,"args":null}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"959":{"id":959,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"682":{"id":682,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedError","id":181,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1563":{"id":1563,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":1263,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"405":{"id":405,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1286":{"id":1286,"crate_id":0,"name":"into_iter","span":{"filename":"src/table.rs","begin":[1131,5],"end":[1135,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"IntoIter","id":1285,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"128":{"id":128,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[325,1],"end":[418,2]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg>(feature = \"default-hasher\")]"}],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"resolved_path":{"path":"crate::DefaultHashBuilder","id":9,"args":null}}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[125,127],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1009":{"id":1009,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"Drain","id":839,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"732":{"id":732,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"RawEntryMut","id":699,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"455":{"id":455,"crate_id":0,"name":"next","span":{"filename":"src/map.rs","begin":[3353,5],"end":[3359,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"V"}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1336":{"id":1336,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1059":{"id":1059,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"Intersection","id":858,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"178":{"id":178,"crate_id":0,"name":"insert","span":{"filename":"src/map.rs","begin":[1789,5],"end":[1800,6]},"visibility":"public","docs":"Inserts a key-value pair into the map.\n\nIf the map did not have this key present, [`None`] is returned.\n\nIf the map did have this key present, the value is updated, and the old\nvalue is returned. The key is not updated, though; this matters for\ntypes that can be `==` without being identical. See the [`std::collections`]\n[module-level documentation] for more.\n\n[`None`]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None\n[`std::collections`]: https://doc.rust-lang.org/std/collections/index.html\n[module-level documentation]: https://doc.rust-lang.org/std/collections/index.html#insert-and-complex-keys\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nassert_eq!(map.insert(37, \"a\"), None);\nassert_eq!(map.is_empty(), false);\n\nmap.insert(37, \"b\");\nassert_eq!(map.insert(37, \"c\"), Some(\"b\"));\nassert_eq!(map[&37], \"c\");\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["k",{"generic":"K"}],["v",{"generic":"V"}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"782":{"id":782,"crate_id":0,"name":"insert_hashed_nocheck","span":{"filename":"src/raw_entry.rs","begin":[1363,5],"end":[1374,6]},"visibility":"public","docs":"Sets the value of the entry with the `VacantEntry`'s key,\nand returns a mutable reference to it.\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\nlet key = \"c\";\nlet hash = compute_hash(map.hasher(), &key);\n\nmatch map.raw_entry_mut().from_key_hashed_nocheck(hash, &key) {\n    RawEntryMut::Occupied(_) => panic!(),\n    RawEntryMut::Vacant(v) => assert_eq!(\n        v.insert_hashed_nocheck(hash, key, 300),\n        (&mut \"c\", &mut 300)\n    ),\n}\n\nassert_eq!(map[&\"c\"], 300);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[allow(clippy::shadow_unrelated)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["hash",{"primitive":"u64"}],["key",{"generic":"K"}],["value",{"generic":"V"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"505":{"id":505,"crate_id":0,"name":"size_hint","span":{"filename":"src/map.rs","begin":[2616,5],"end":[2618,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1386":{"id":1386,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"AbsentEntry","id":1240,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1109":{"id":1109,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"SymmetricDifference","id":856,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"228":{"id":228,"crate_id":0,"name":"into_iter","span":{"filename":"src/map.rs","begin":[3082,5],"end":[3084,6]},"visibility":"default","docs":"Creates an iterator over the entries of a `HashMap` in arbitrary order.\nThe iterator element type is `(&'a K, &'a V)`.\n\nReturn the same `Iter` struct as by the [`iter`] method on [`HashMap`].\n\n[`iter`]: struct.HashMap.html#method.iter\n[`HashMap`]: struct.HashMap.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nlet map_one: HashMap<_, _> = [(1, \"a\"), (2, \"b\"), (3, \"c\")].into();\nlet mut map_two = HashMap::new();\n\nfor (key, value) in &map_one {\n    println!(\"Key: {}, Value: {}\", key, value);\n    map_two.insert(*key, *value);\n}\n\nassert_eq!(map_one, map_two);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"832":{"id":832,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[195,1],"end":[256,2]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg>(feature = \"default-hasher\")]"}],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"path":"crate::DefaultHashBuilder","id":9,"args":null}}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[829,831],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"555":{"id":555,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":15,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"Entry","id":163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1436":{"id":1436,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1159":{"id":1159,"crate_id":0,"name":"size_hint","span":{"filename":"src/set.rs","begin":[2171,5],"end":[2173,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"278":{"id":278,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2170,1],"end":[2174,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[277],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"882":{"id":882,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"605":{"id":605,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":15,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":539,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1486":{"id":1486,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"IterHashMut","id":1258,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1209":{"id":1209,"crate_id":0,"name":"insert","span":{"filename":"src/set.rs","begin":[2529,5],"end":[2537,6]},"visibility":"public","docs":"Sets the value of the entry with the `VacantEntry`'s value.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nuse hashbrown::hash_set::Entry;\n\nlet mut set: HashSet<&str> = HashSet::new();\n\nif let Entry::Vacant(o) = set.entry(\"poneyland\") {\n    o.insert();\n}\nassert!(set.contains(\"poneyland\"));\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"OccupiedEntry","id":1163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"328":{"id":328,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoIter","id":237,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"51":{"id":51,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"655":{"id":655,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"VacantEntryRef","id":621,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1536":{"id":1536,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"Drain","id":1261,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1259":{"id":1259,"crate_id":0,"name":"retain","span":{"filename":"src/table.rs","begin":[862,5],"end":[871,6]},"visibility":"public","docs":"Retains only the elements specified by the predicate.\n\nIn other words, remove all elements `e` such that `f(&e)` returns `false`.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\nfor x in 1..=6 {\n    table.insert_unique(hasher(&x), x, hasher);\n}\ntable.retain(|&mut x| x % 2 == 0);\nassert_eq!(table.len(), 3);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["f",{"impl_trait":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"impl FnMut(&mut T) -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":true}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"378":{"id":378,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"IntoValues","id":155,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"101":{"id":101,"crate_id":0,"name":"write_i64","span":{"filename":"src/hasher.rs","begin":[50,5],"end":[64,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Always)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["arg",{"primitive":"i64"}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"982":{"id":982,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":15,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":945,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"705":{"id":705,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"RawEntryBuilderMut","id":188,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1586":{"id":1586,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,1],"end":[134,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"crate::map::HashMap","name":"HashMap","id":7,"is_glob":false}}},"1309":{"id":1309,"crate_id":0,"name":"or_insert_with","span":{"filename":"src/table.rs","begin":[1433,5],"end":[1438,6]},"visibility":"public","docs":"Ensures a value is in the entry by inserting the result of the default function if empty..\n\nReturns an [`OccupiedEntry`] pointing to the now-occupied entry.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table: HashTable<String> = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\n\ntable\n    .entry(hasher(\"poneyland\"), |x| x == \"poneyland\", |val| hasher(val))\n    .or_insert_with(|| \"poneyland\".to_string());\n\nassert!(table\n    .find(hasher(&\"poneyland\"), |x| x == \"poneyland\")\n    .is_some());\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{"`OccupiedEntry`":1239},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["default",{"impl_trait":[{"trait_bound":{"trait":{"path":"FnOnce","id":545,"args":{"parenthesized":{"inputs":[],"output":{"generic":"T"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"impl FnOnce() -> T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"FnOnce","id":545,"args":{"parenthesized":{"inputs":[],"output":{"generic":"T"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":true}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"428":{"id":428,"crate_id":0,"name":"len","span":{"filename":"src/map.rs","begin":[3335,5],"end":[3337,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"151":{"id":151,"crate_id":0,"name":"clear","span":{"filename":"src/map.rs","begin":[1009,5],"end":[1011,6]},"visibility":"public","docs":"Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut a = HashMap::new();\na.insert(1, \"a\");\nlet capacity_before_clear = a.capacity();\n\na.clear();\n\n// Map is empty.\nassert!(a.is_empty());\n// But map capacity is equal to old one.\nassert_eq!(a.capacity(), capacity_before_clear);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"755":{"id":755,"crate_id":0,"name":"get_key_value","span":{"filename":"src/raw_entry.rs","begin":[1069,5],"end":[1074,6]},"visibility":"public","docs":"Gets a reference to the key and value in the entry.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\n\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(o) => assert_eq!(o.get_key_value(), (&\"a\", &100)),\n}\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"V"}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1359":{"id":1359,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":1305,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"478":{"id":478,"crate_id":0,"name":"next","span":{"filename":"src/map.rs","begin":[3433,5],"end":[3435,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"201":{"id":201,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1082":{"id":1082,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"Difference","id":854,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"805":{"id":805,"crate_id":0,"name":null,"span":{"filename":"src/raw_entry.rs","begin":[617,1],"end":[708,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"RawEntryBuilder","id":190,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[802,803,804],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"528":{"id":528,"crate_id":0,"name":"fold","span":{"filename":"src/map.rs","begin":[3405,5],"end":[3411,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1409":{"id":1409,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[1961,1],"end":[1969,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":67,"args":null},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1408],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"251":{"id":251,"crate_id":0,"name":"from","span":{"filename":"src/set.rs","begin":[1260,5],"end":[1262,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["map",{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"tuple":[]}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1132":{"id":1132,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2110,1],"end":[2116,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"SymmetricDifference","id":856,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"855":{"id":855,"crate_id":0,"name":"symmetric_difference","span":{"filename":"src/set.rs","begin":[774,5],"end":[778,6]},"visibility":"public","docs":"Visits the values representing the symmetric difference,\ni.e., the values that are in `self` or in `other` but not in both.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet a: HashSet<_> = [1, 2, 3].into_iter().collect();\nlet b: HashSet<_> = [4, 2, 3, 4].into_iter().collect();\n\n// Print 1, 4 in arbitrary order.\nfor x in a.symmetric_difference(&b) {\n    println!(\"{}\", x);\n}\n\nlet diff1: HashSet<_> = a.symmetric_difference(&b).collect();\nlet diff2: HashSet<_> = b.symmetric_difference(&a).collect();\n\nassert_eq!(diff1, diff2);\nassert_eq!(diff1, [1, 4].iter().collect());\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"SymmetricDifference","id":856,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"578":{"id":578,"crate_id":0,"name":"replace_entry_with","span":{"filename":"src/map.rs","begin":[4013,5],"end":[4041,6]},"visibility":"public","docs":"Provides shared access to the key and owned access to the value of\nthe entry and allows to replace or remove it based on the\nvalue of the returned option.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::Entry;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nmap.insert(\"poneyland\", 42);\n\nlet entry = match map.entry(\"poneyland\") {\n    Entry::Occupied(e) => {\n        e.replace_entry_with(|k, v| {\n            assert_eq!(k, &\"poneyland\");\n            assert_eq!(v, 42);\n            Some(v + 1)\n        })\n    }\n    Entry::Vacant(_) => panic!(),\n};\n\nmatch entry {\n    Entry::Occupied(e) => {\n        assert_eq!(e.key(), &\"poneyland\");\n        assert_eq!(e.get(), &43);\n    }\n    Entry::Vacant(_) => panic!(),\n}\n\nassert_eq!(map[\"poneyland\"], 43);\n\nlet entry = match map.entry(\"poneyland\") {\n    Entry::Occupied(e) => e.replace_entry_with(|_k, _v| None),\n    Entry::Vacant(_) => panic!(),\n};\n\nmatch entry {\n    Entry::Vacant(e) => {\n        assert_eq!(e.key(), &\"poneyland\");\n    }\n    Entry::Occupied(_) => panic!(),\n}\n\nassert!(!map.contains_key(\"poneyland\"));\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"path":"Entry","id":163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnOnce","id":545,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}},{"generic":"V"}],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"constraints":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1459":{"id":1459,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"301":{"id":301,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1182":{"id":1182,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Entry","id":866,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"905":{"id":905,"crate_id":0,"name":"extend","span":{"filename":"src/set.rs","begin":[1307,5],"end":[1309,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"I"}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"IntoIterator","id":230,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":null,"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"628":{"id":628,"crate_id":0,"name":"and_modify","span":{"filename":"src/map.rs","begin":[4318,5],"end":[4329,6]},"visibility":"public","docs":"Provides in-place mutable access to an occupied entry before any\npotential inserts into the map.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<String, u32> = HashMap::new();\n\nmap.entry_ref(\"poneyland\")\n   .and_modify(|e| { *e += 1 })\n   .or_insert(42);\nassert_eq!(map[\"poneyland\"], 42);\n\nmap.entry_ref(\"poneyland\")\n   .and_modify(|e| { *e += 1 })\n   .or_insert(42);\nassert_eq!(map[\"poneyland\"], 43);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnOnce","id":545,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"V"}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1509":{"id":1509,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":1285,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1232":{"id":1232,"crate_id":0,"name":"new_in","span":{"filename":"src/table.rs","begin":[135,5],"end":[139,6]},"visibility":"public","docs":"Creates an empty `HashTable` using the given allocator.\n\nThe hash table is initially created with a capacity of 0, so it will not allocate until it\nis first inserted into.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse bumpalo::Bump;\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet bump = Bump::new();\nlet mut table = HashTable::new_in(&bump);\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\n\n// The created HashTable holds none elements\nassert_eq!(table.len(), 0);\n\n// The created HashTable also doesn't allocate memory\nassert_eq!(table.capacity(), 0);\n\n// Now we insert element inside created HashTable\ntable.insert_unique(hasher(&\"One\"), \"One\", hasher);\n// We can see that the HashTable holds 1 element\nassert_eq!(table.len(), 1);\n// And it also allocates some capacity\nassert!(table.capacity() > 1);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["alloc",{"generic":"A"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"351":{"id":351,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"IntoKeys","id":153,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"74":{"id":74,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"DefaultHasher","id":69,"args":null}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"955":{"id":955,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"678":{"id":678,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedError","id":181,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1559":{"id":1559,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":1263,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1282":{"id":1282,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":57,"args":null},"for":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[53,54,55],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"401":{"id":401,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"124":{"id":124,"crate_id":0,"name":"with_hasher_in","span":{"filename":"src/map.rs","begin":[543,5],"end":[548,6]},"visibility":"public","docs":"Creates an empty `HashMap` which will use the given hash builder to hash\nkeys. It will be allocated with the given allocator.\n\nThe hash map is initially created with a capacity of 0, so it will not allocate until it\nis first inserted into.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashMap` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashMap`].\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::DefaultHashBuilder;\n\nlet s = DefaultHashBuilder::default();\nlet mut map = HashMap::with_hasher(s);\nmap.insert(1, 2);\n```","links":{"`HashMap`":7},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[<cfg_attr>(feature = \"rustc-dep-of-std\", rustc_const_stable_indirect)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["hash_builder",{"generic":"S"}],["alloc",{"generic":"A"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1005":{"id":1005,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1868,1],"end":[1873,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":945,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1004],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"728":{"id":728,"crate_id":0,"name":"and_modify","span":{"filename":"src/raw_entry.rs","begin":[821,5],"end":[835,6]},"visibility":"public","docs":"Provides in-place mutable access to an occupied entry before any\npotential inserts into the map.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n\nmap.raw_entry_mut()\n   .from_key(\"poneyland\")\n   .and_modify(|_k, v| { *v += 1 })\n   .or_insert(\"poneyland\", 42);\nassert_eq!(map[\"poneyland\"], 42);\n\nmap.raw_entry_mut()\n   .from_key(\"poneyland\")\n   .and_modify(|_k, v| { *v += 1 })\n   .or_insert(\"poneyland\", 0);\nassert_eq!(map[\"poneyland\"], 43);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnOnce","id":545,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"V"}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1609":{"id":1609,"crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/equivalent-1.0.2/src/lib.rs","begin":[82,1],"end":[85,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Q"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"items":[207],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"Q"}}}},"1332":{"id":1332,"crate_id":0,"name":"get_mut","span":{"filename":"src/table.rs","begin":[1711,5],"end":[1713,6]},"visibility":"public","docs":"Gets a mutable reference to the value in the entry.\n\nIf you need a reference to the `OccupiedEntry` which may outlive the\ndestruction of the `Entry` value, see [`into_mut`].\n\n[`into_mut`]: #method.into_mut\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::hash_table::Entry;\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table: HashTable<(&str, u32)> = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\ntable.insert_unique(hasher(&\"poneyland\"), (\"poneyland\", 12), |(k, _)| hasher(&k));\n\nassert_eq!(\n    table.find(hasher(&\"poneyland\"), |&(x, _)| x == \"poneyland\",),\n    Some(&(\"poneyland\", 12))\n);\n\nif let Entry::Occupied(mut o) = table.entry(\n    hasher(&\"poneyland\"),\n    |&(x, _)| x == \"poneyland\",\n    |(k, _)| hasher(&k),\n) {\n    o.get_mut().1 += 10;\n    assert_eq!(o.get().1, 22);\n\n    // We can use the same Entry multiple times.\n    o.get_mut().1 += 2;\n}\n\nassert_eq!(\n    table.find(hasher(&\"poneyland\"), |&(x, _)| x == \"poneyland\",),\n    Some(&(\"poneyland\", 24))\n);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"451":{"id":451,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2517,1],"end":[2521,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[450],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"174":{"id":174,"crate_id":0,"name":"get_many_mut","span":{"filename":"src/map.rs","begin":[1533,5],"end":[1538,6]},"visibility":"public","docs":"Attempts to get mutable references to `N` values in the map at once.\n\nReturns an array of length `N` with the results of each query. For soundness, at most one\nmutable reference will be returned to any value. `None` will be used if the key is missing.\n\n# Panics\n\nPanics if any keys are overlapping.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut libraries = HashMap::new();\nlibraries.insert(\"Bodleian Library\".to_string(), 1602);\nlibraries.insert(\"Athenæum\".to_string(), 1807);\nlibraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);\nlibraries.insert(\"Library of Congress\".to_string(), 1800);\n\n// Get Athenæum and Bodleian Library\nlet [Some(a), Some(b)] = libraries.get_many_mut([\n    \"Athenæum\",\n    \"Bodleian Library\",\n]) else { panic!() };\n\n// Assert values of Athenæum and Library of Congress\nlet got = libraries.get_many_mut([\n    \"Athenæum\",\n    \"Library of Congress\",\n]);\nassert_eq!(\n    got,\n    [\n        Some(&mut 1807),\n        Some(&mut 1800),\n    ],\n);\n\n// Missing keys result in None\nlet got = libraries.get_many_mut([\n    \"Athenæum\",\n    \"New York Public Library\",\n]);\nassert_eq!(\n    got,\n    [\n        Some(&mut 1807),\n        None\n    ]\n);\n```\n\n```should_panic\nuse hashbrown::HashMap;\n\nlet mut libraries = HashMap::new();\nlibraries.insert(\"Athenæum\".to_string(), 1807);\n\n// Duplicate keys panic!\nlet got = libraries.get_many_mut([\n    \"Athenæum\",\n    \"Athenæum\",\n]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["ks",{"array":{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}},"len":"N"}}]],"output":{"array":{"type":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"V"}}}}],"constraints":[]}}}},"len":"N"}},"is_c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"N","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1055":{"id":1055,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"Intersection","id":858,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"778":{"id":778,"crate_id":0,"name":null,"span":{"filename":"src/raw_entry.rs","begin":[1464,1],"end":[1471,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"RawOccupiedEntryMut","id":720,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[777],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1382":{"id":1382,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"AbsentEntry","id":1240,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"501":{"id":501,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":150,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"224":{"id":224,"crate_id":0,"name":"from","span":{"filename":"src/map.rs","begin":[2121,5],"end":[2123,6]},"visibility":"default","docs":"# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet map1 = HashMap::from([(1, 2), (3, 4)]);\nlet map2: HashMap<_, _> = [(1, 2), (3, 4)].into();\nassert_eq!(map1, map2);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["arr",{"array":{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]},"len":"N"}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1105":{"id":1105,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2054,1],"end":[2060,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"Difference","id":854,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"828":{"id":828,"crate_id":0,"name":"with_hasher_in","span":{"filename":"src/set.rs","begin":[557,5],"end":[561,6]},"visibility":"public","docs":"Creates a new empty hash set which will use the given hasher to hash\nkeys.\n\nThe hash set is initially created with a capacity of 0, so it will not\nallocate until it is first inserted into.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashSet` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashSet`].\n\nThe `hash_builder` passed should implement the [`BuildHasher`] trait for\nthe `HashSet` to be useful, see its documentation for details.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n[`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nuse hashbrown::DefaultHashBuilder;\n\nlet s = DefaultHashBuilder::default();\nlet mut set = HashSet::with_hasher(s);\nset.insert(2);\n```","links":{"`HashSet`":8},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[<cfg_attr>(feature = \"rustc-dep-of-std\", rustc_const_stable_indirect)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["hasher",{"generic":"S"}],["alloc",{"generic":"A"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":true,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1432":{"id":1432,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"551":{"id":551,"crate_id":0,"name":"or_default","span":{"filename":"src/map.rs","begin":[3768,5],"end":[3777,6]},"visibility":"public","docs":"Ensures a value is in the entry by inserting the default value if empty,\nand returns a mutable reference to the value in the entry.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, Option<u32>> = HashMap::new();\n\n// nonexistent key\nmap.entry(\"poneyland\").or_default();\nassert_eq!(map[\"poneyland\"], None);\n\nmap.insert(\"horseland\", Some(3));\n\n// existing key\nassert_eq!(map.entry(\"horseland\").or_default(), &mut Some(3));\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"274":{"id":274,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":57,"args":null},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[53,54,55],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1155":{"id":1155,"crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[2152,5],"end":[2154,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"878":{"id":878,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1482":{"id":1482,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"IterHashMut","id":1258,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"601":{"id":601,"crate_id":0,"name":"insert_entry","span":{"filename":"src/map.rs","begin":[4128,5],"end":[4143,6]},"visibility":"public","docs":"Sets the value of the entry with the [`VacantEntry`]'s key,\nand returns an [`OccupiedEntry`].\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::Entry;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n\nif let Entry::Vacant(v) = map.entry(\"poneyland\") {\n    let o = v.insert_entry(37);\n    assert_eq!(o.get(), &37);\n}\n```","links":{"`OccupiedEntry`":536,"`VacantEntry`":539},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["value",{"generic":"V"}]],"output":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"324":{"id":324,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":237,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1205":{"id":1205,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[2305,1],"end":[2311,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":1163,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1204],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"47":{"id":47,"crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"path":"Result","id":42,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":null,"self_type":{"generic":"T"},"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"928":{"id":928,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1494,1],"end":[1527,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BitOrAssign","id":929,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[927],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1532":{"id":1532,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"Drain","id":1261,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"651":{"id":651,"crate_id":0,"name":"key","span":{"filename":"src/map.rs","begin":[4413,5],"end":[4415,6]},"visibility":"public","docs":"Gets a reference to the key that would be used when inserting a value\nthrough the `VacantEntryRef`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<String, u32> = HashMap::new();\nlet key: &str = \"poneyland\";\nassert_eq!(map.entry_ref(key).key(), \"poneyland\");\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"generic":"Q"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"374":{"id":374,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"IntoValues","id":155,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1255":{"id":1255,"crate_id":0,"name":"iter_hash","span":{"filename":"src/table.rs","begin":[776,5],"end":[781,6]},"visibility":"public","docs":"An iterator visiting all elements which may match a hash.\nThe iterator element type is `&'a T`.\n\nThis iterator may return elements from the table that have a hash value\ndifferent than the one provided. You should always validate the returned\nvalues before using them.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\ntable.insert_unique(hasher(&\"a\"), \"a\", hasher);\ntable.insert_unique(hasher(&\"a\"), \"b\", hasher);\ntable.insert_unique(hasher(&\"b\"), \"c\", hasher);\n\n// Will print \"a\" and \"b\" (and possibly \"c\") in an arbitrary order.\nfor x in table.iter_hash(hasher(&\"a\")) {\n    println!(\"{}\", x);\n}\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hash",{"primitive":"u64"}]],"output":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"97":{"id":97,"crate_id":0,"name":"write_usize","span":{"filename":"src/hasher.rs","begin":[50,5],"end":[64,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Always)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["arg",{"primitive":"usize"}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"978":{"id":978,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1822,1],"end":[1826,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[977],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1582":{"id":1582,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[121,5],"end":[121,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"crate::table","name":"table","id":1577,"is_glob":true}}},"701":{"id":701,"crate_id":0,"name":null,"span":{"filename":"src/raw_entry.rs","begin":[509,1],"end":[564,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"RawEntryBuilderMut","id":188,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[698,700],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"424":{"id":424,"crate_id":0,"name":"next","span":{"filename":"src/map.rs","begin":[3313,5],"end":[3319,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"K"}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1305":{"id":1305,"crate_id":0,"name":"VacantEntry","span":{"filename":"src/table.rs","begin":[1812,1],"end":[1819,2]},"visibility":"public","docs":"A view into a vacant entry in a `HashTable`.\nIt is part of the [`Entry`] enum.\n\n[`Entry`]: enum.Entry.html\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::hash_table::{Entry, VacantEntry};\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table: HashTable<&str> = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\n\nlet entry_v: VacantEntry<_, _> = match table.entry(hasher(&\"a\"), |&x| x == \"a\", hasher) {\n    Entry::Vacant(view) => view,\n    Entry::Occupied(_) => unreachable!(),\n};\nentry_v.insert(\"a\");\nassert!(table.find(hasher(&\"a\"), |&x| x == \"a\").is_some() && table.len() == 1);\n\n// Nonexistent key (insert)\nmatch table.entry(hasher(&\"b\"), |&x| x == \"b\", hasher) {\n    Entry::Vacant(view) => {\n        view.insert(\"b\");\n    }\n    Entry::Occupied(_) => unreachable!(),\n}\nassert!(table.find(hasher(&\"b\"), |&x| x == \"b\").is_some() && table.len() == 2);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":[1356,1357,1358,1359,1360,1361,1362,1363,1364,1365,1366,1367,1368,1369,1371]}}},"147":{"id":147,"crate_id":0,"name":"retain","span":{"filename":"src/map.rs","begin":[917,5],"end":[930,6]},"visibility":"public","docs":"Retains only the elements specified by the predicate. Keeps the\nallocated memory for reuse.\n\nIn other words, remove all pairs `(k, v)` such that `f(&k, &mut v)` returns `false`.\nThe elements are visited in unsorted (and unspecified) order.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<i32, i32> = (0..8).map(|x|(x, x*10)).collect();\nassert_eq!(map.len(), 8);\n\nmap.retain(|&k, _| k % 2 == 0);\n\n// We can see, that the number of elements inside map is changed.\nassert_eq!(map.len(), 4);\n\nlet mut vec: Vec<(i32, i32)> = map.iter().map(|(&k, &v)| (k, v)).collect();\nvec.sort_unstable();\nassert_eq!(vec, [(0, 0), (2, 20), (4, 40), (6, 60)]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"V"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1028":{"id":1028,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1905,1],"end":[1905,59]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"Drain","id":839,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"751":{"id":751,"crate_id":0,"name":"into_key","span":{"filename":"src/raw_entry.rs","begin":[985,5],"end":[987,6]},"visibility":"public","docs":"Converts the entry into a mutable reference to the key in the entry\nwith a lifetime bound to the map itself.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\nuse std::rc::Rc;\n\nlet key_one = Rc::new(\"a\");\nlet key_two = Rc::new(\"a\");\n\nlet mut map: HashMap<Rc<&str>, u32> = HashMap::new();\nmap.insert(key_one.clone(), 10);\n\nassert_eq!(map[&key_one], 10);\nassert!(Rc::strong_count(&key_one) == 2 && Rc::strong_count(&key_two) == 1);\n\nlet inside_key: &mut Rc<&str>;\n\nmatch map.raw_entry_mut().from_key(&key_one) {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(o) => inside_key = o.into_key(),\n}\n*inside_key = key_two.clone();\n\nassert_eq!(map[&key_two], 10);\nassert!(Rc::strong_count(&key_one) == 1 && Rc::strong_count(&key_two) == 2);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"K"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"474":{"id":474,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Drain","id":146,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1355":{"id":1355,"crate_id":0,"name":"into_table","span":{"filename":"src/table.rs","begin":[1878,5],"end":[1880,6]},"visibility":"public","docs":"Converts the `VacantEntry` into a mutable reference to the underlying\ntable.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"197":{"id":197,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1078":{"id":1078,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1985,1],"end":[1994,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"Intersection","id":858,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1077],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"524":{"id":524,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3381,1],"end":[3388,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":67,"args":null},"for":{"resolved_path":{"path":"ValuesMut","id":138,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[523],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1405":{"id":1405,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"247":{"id":247,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[4589,1],"end":[4650,2]},"visibility":"default","docs":"Inserts all new key-values from the iterator and replaces values with existing\nkeys with new values returned from the iterator.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Copy","id":248,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Copy","id":248,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["extend_one","extend_reserve","extend_one_unchecked"],"trait":{"path":"Extend","id":245,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"V"}}}]}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[246],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1128":{"id":1128,"crate_id":0,"name":"next","span":{"filename":"src/set.rs","begin":[2091,5],"end":[2093,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"T"}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"851":{"id":851,"crate_id":0,"name":"shrink_to_fit","span":{"filename":"src/set.rs","begin":[691,5],"end":[693,6]},"visibility":"public","docs":"Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set = HashSet::with_capacity(100);\nset.insert(1);\nset.insert(2);\nassert!(set.capacity() >= 100);\nset.shrink_to_fit();\nassert!(set.capacity() >= 2);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1455":{"id":1455,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Unpin","id":17,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"574":{"id":574,"crate_id":0,"name":"get_mut","span":{"filename":"src/map.rs","begin":[3879,5],"end":[3881,6]},"visibility":"public","docs":"Gets a mutable reference to the value in the entry.\n\nIf you need a reference to the `OccupiedEntry` which may outlive the\ndestruction of the `Entry` value, see [`into_mut`].\n\n[`into_mut`]: #method.into_mut\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::hash_map::Entry;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nmap.entry(\"poneyland\").or_insert(12);\n\nassert_eq!(map[\"poneyland\"], 12);\nif let Entry::Occupied(mut o) = map.entry(\"poneyland\") {\n    *o.get_mut() += 10;\n    assert_eq!(*o.get(), 22);\n\n    // We can use the same Entry multiple times.\n    *o.get_mut() += 2;\n}\n\nassert_eq!(map[\"poneyland\"], 24);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"V"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"297":{"id":297,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1178":{"id":1178,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Entry","id":866,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"901":{"id":901,"crate_id":0,"name":"from_iter","span":{"filename":"src/set.rs","begin":[1272,5],"end":[1276,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["iter",{"generic":"I"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"IntoIterator","id":230,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":null,"binding":{"equality":{"type":{"generic":"T"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"20":{"id":20,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1505":{"id":1505,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":1285,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"624":{"id":624,"crate_id":0,"name":"or_insert","span":{"filename":"src/map.rs","begin":[4194,5],"end":[4204,6]},"visibility":"public","docs":"Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<String, u32> = HashMap::new();\n\n// nonexistent key\nmap.entry_ref(\"poneyland\").or_insert(3);\nassert_eq!(map[\"poneyland\"], 3);\n\n// existing key\n*map.entry_ref(\"poneyland\").or_insert(10) *= 2;\nassert_eq!(map[\"poneyland\"], 6);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"V"}]],"output":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"generic":"Q"}}},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"347":{"id":347,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"IntoKeys","id":153,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1228":{"id":1228,"crate_id":0,"name":"HashTable","span":{"filename":"src/table.rs","begin":[47,1],"end":[52,2]},"visibility":"public","docs":"Low-level hash table with explicit hashing.\n\nThe primary use case for this type over [`HashMap`] or [`HashSet`] is to\nsupport types that do not implement the [`Hash`] and [`Eq`] traits, but\ninstead require additional data not contained in the key itself to compute a\nhash and compare two elements for equality.\n\nExamples of when this can be useful include:\n- An `IndexMap` implementation where indices into a `Vec` are stored as\n  elements in a `HashTable<usize>`. Hashing and comparing the elements\n  requires indexing the associated `Vec` to get the actual value referred to\n  by the index.\n- Avoiding re-computing a hash when it is already known.\n- Mutating the key of an element in a way that doesn't affect its hash.\n\nTo achieve this, `HashTable` methods that search for an element in the table\nrequire a hash value and equality function to be explicitly passed in as\narguments. The method will then iterate over the elements with the given\nhash and call the equality function on each of them, until a match is found.\n\nIn most cases, a `HashTable` will not be exposed directly in an API. It will\ninstead be wrapped in a helper type which handles the work of calculating\nhash values and comparing elements.\n\nDue to its low-level nature, this type provides fewer guarantees than\n[`HashMap`] and [`HashSet`]. Specifically, the API allows you to shoot\nyourself in the foot by having multiple elements with identical keys in the\ntable. The table itself will still function correctly and lookups will\narbitrarily return one of the matching elements. However you should avoid\ndoing this because it changes the runtime of hash table operations from\n`O(1)` to `O(k)` where `k` is the number of duplicate entries.\n\n[`HashMap`]: super::HashMap\n[`HashSet`]: super::HashSet\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","links":{"super::HashMap":7,"super::HashSet":8},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":[1231,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1287,1291,1295,1297,1299,1301]}}},"951":{"id":951,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"70":{"id":70,"crate_id":0,"name":"build_hasher","span":{"filename":"src/hasher.rs","begin":[24,5],"end":[28,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Always)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"qualified_path":{"name":"Hasher","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":71,"args":null}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1555":{"id":1555,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2330,1],"end":[2339,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"Drain","id":1261,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1554],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"674":{"id":674,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":15,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"OccupiedError","id":181,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"397":{"id":397,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2417,1],"end":[2417,66]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"IntoValues","id":155,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1278":{"id":1278,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1001":{"id":1001,"crate_id":0,"name":"len","span":{"filename":"src/set.rs","begin":[1862,5],"end":[1864,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"120":{"id":120,"crate_id":0,"name":"new","span":{"filename":"src/map.rs","begin":[289,5],"end":[291,6]},"visibility":"public","docs":"Creates an empty `HashMap`.\n\nThe hash map is initially created with a capacity of 0, so it will not allocate until it\nis first inserted into.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashMap` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashMap`], for example with\n[`with_hasher`](HashMap::with_hasher) method.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nlet mut map: HashMap<&str, i32> = HashMap::new();\nassert_eq!(map.len(), 0);\nassert_eq!(map.capacity(), 0);\n```","links":{"HashMap::with_hasher":119,"`HashMap`":7},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1605":{"id":1605,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"724":{"id":724,"crate_id":0,"name":"Vacant","span":{"filename":"src/raw_entry.rs","begin":[332,5],"end":[332,46]},"visibility":"default","docs":"A vacant entry.\n\n# Examples\n\n```\nuse hashbrown::{hash_map::RawEntryMut, HashMap};\nlet mut map: HashMap<&str, i32> = HashMap::new();\n\nmatch map.raw_entry_mut().from_key(\"a\") {\n    RawEntryMut::Occupied(_) => unreachable!(),\n    RawEntryMut::Vacant(_) => { }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":[722]},"discriminant":null}}},"447":{"id":447,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":57,"args":null},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[53,54,55],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1051":{"id":1051,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1933,1],"end":[1933,96]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":842,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"170":{"id":170,"crate_id":0,"name":"get_key_value","span":{"filename":"src/map.rs","begin":[1340,5],"end":[1354,6]},"visibility":"public","docs":"Returns the key-value pair corresponding to the supplied key.\n\nThe supplied key may be any borrowed form of the map's key type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe key type.\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(1, \"a\");\nassert_eq!(map.get_key_value(&1), Some((&1, &\"a\")));\nassert_eq!(map.get_key_value(&2), None);\n```","links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["k",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"V"}}}]}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"774":{"id":774,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"RawOccupiedEntryMut","id":720,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"497":{"id":497,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ExtractIf","id":150,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1378":{"id":1378,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"AbsentEntry","id":1240,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"220":{"id":220,"crate_id":0,"name":"Output","span":{"filename":"src/map.rs","begin":[2081,5],"end":[2081,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"V"}}}},"1101":{"id":1101,"crate_id":0,"name":"next","span":{"filename":"src/set.rs","begin":[2023,5],"end":[2030,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"T"}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"824":{"id":824,"crate_id":0,"name":"new","span":{"filename":"src/set.rs","begin":[156,5],"end":[160,6]},"visibility":"public","docs":"Creates an empty `HashSet`.\n\nThe hash set is initially created with a capacity of 0, so it will not allocate until it\nis first inserted into.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashSet` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashSet`], for example with\n[`with_hasher`](HashSet::with_hasher) method.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet set: HashSet<i32> = HashSet::new();\n```","links":{"HashSet::with_hasher":823,"`HashSet`":8},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"547":{"id":547,"crate_id":0,"name":"key","span":{"filename":"src/map.rs","begin":[3640,5],"end":[3645,6]},"visibility":"public","docs":"Returns a reference to this entry's key.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\nmap.entry(\"poneyland\").or_insert(3);\n// existing key\nassert_eq!(map.entry(\"poneyland\").key(), &\"poneyland\");\n// nonexistent key\nassert_eq!(map.entry(\"horseland\").key(), &\"horseland\");\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1428":{"id":1428,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"1151":{"id":1151,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":57,"args":null},"for":{"resolved_path":{"path":"Union","id":860,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[53,54,55],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"874":{"id":874,"crate_id":0,"name":"take","span":{"filename":"src/set.rs","begin":[1201,5],"end":[1210,6]},"visibility":"public","docs":"Removes and returns the value in the set, if any, that is equal to the given one.\n\nThe value may be any borrowed form of the set's value type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe value type.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set: HashSet<_> = [1, 2, 3].into_iter().collect();\nassert_eq!(set.take(&2), Some(2));\nassert_eq!(set.take(&2), None);\n```\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1478":{"id":1478,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2147,1],"end":[2154,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1477],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"320":{"id":320,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":237,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1201":{"id":1201,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedEntry","id":1163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"924":{"id":924,"crate_id":0,"name":"sub","span":{"filename":"src/set.rs","begin":[1489,5],"end":[1491,6]},"visibility":"default","docs":"Returns the difference of `self` and `rhs` as a new `HashSet<T, S>`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet a: HashSet<_> = vec![1, 2, 3].into_iter().collect();\nlet b: HashSet<_> = vec![3, 4, 5].into_iter().collect();\n\nlet set = &a - &b;\n\nlet mut i = 0;\nlet expected = [1, 2];\nfor x in &set {\n    assert!(expected.contains(x));\n    i += 1;\n}\nassert_eq!(i, expected.len());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"43":{"id":43,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"647":{"id":647,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2940,1],"end":[2953,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Q"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"EntryRef","id":165,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[646],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1528":{"id":1528,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2274,1],"end":[2274,66]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":1285,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"370":{"id":370,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2339,1],"end":[2339,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"IntoKeys","id":153,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1251":{"id":1251,"crate_id":0,"name":"iter","span":{"filename":"src/table.rs","begin":[686,5],"end":[691,6]},"visibility":"public","docs":"An iterator visiting all elements in arbitrary order.\nThe iterator element type is `&'a T`.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\ntable.insert_unique(hasher(&\"a\"), \"b\", hasher);\ntable.insert_unique(hasher(&\"b\"), \"b\", hasher);\n\n// Will print in an arbitrary order.\nfor x in table.iter() {\n    println!(\"{}\", x);\n}\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"974":{"id":974,"crate_id":0,"name":"len","span":{"filename":"src/set.rs","begin":[1816,5],"end":[1818,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"93":{"id":93,"crate_id":0,"name":"write_u16","span":{"filename":"src/hasher.rs","begin":[50,5],"end":[64,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Always)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["arg",{"primitive":"u16"}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1578":{"id":1578,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[90,5],"end":[90,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"crate::map","name":"map","id":696,"is_glob":true}}},"420":{"id":420,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2469,1],"end":[2473,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[419],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1301":{"id":1301,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[1185,1],"end":[1193,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1300],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1024":{"id":1024,"crate_id":0,"name":"fold","span":{"filename":"src/set.rs","begin":[1891,5],"end":[1897,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"143":{"id":143,"crate_id":0,"name":"len","span":{"filename":"src/map.rs","begin":[828,5],"end":[830,6]},"visibility":"public","docs":"Returns the number of elements in the map.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut a = HashMap::new();\nassert_eq!(a.len(), 0);\na.insert(1, \"a\");\nassert_eq!(a.len(), 1);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"470":{"id":470,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Drain","id":146,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1074":{"id":1074,"crate_id":0,"name":"size_hint","span":{"filename":"src/set.rs","begin":[1964,5],"end":[1967,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"193":{"id":193,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"797":{"id":797,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawVacantEntryMut","id":723,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"520":{"id":520,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ValuesMut","id":138,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1401":{"id":1401,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1124":{"id":1124,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":57,"args":null},"for":{"resolved_path":{"path":"SymmetricDifference","id":856,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[53,54,55],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"243":{"id":243,"crate_id":0,"name":"extend","span":{"filename":"src/map.rs","begin":[4548,5],"end":[4563,6]},"visibility":"default","docs":"Inserts all new key-values from the iterator to existing `HashMap<K, V, S, A>`.\nReplace values with existing keys with new values returned from the iterator.\n\n# Examples\n\n```\nuse hashbrown::hash_map::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(1, 100);\n\nlet some_iter = [(1, 1), (2, 2)].into_iter();\nmap.extend(some_iter);\n// Replace values with existing keys with new values returned from the iterator.\n// So that the map.get(&1) doesn't return Some(&100).\nassert_eq!(map.get(&1), Some(&1));\n\nlet some_vec: Vec<_> = vec![(3, 3), (4, 4)];\nmap.extend(some_vec);\n\nlet some_arr = [(5, 5), (6, 6)];\nmap.extend(some_arr);\nlet old_map_len = map.len();\n\n// You can also extend from another HashMap\nlet mut new_map = HashMap::new();\nnew_map.extend(map);\nassert_eq!(new_map.len(), old_map_len);\n\nlet mut vec: Vec<_> = new_map.into_iter().collect();\n// The `IntoIter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)]);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["iter",{"generic":"T"}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"IntoIterator","id":230,"args":{"angle_bracketed":{"args":[],"constraints":[{"name":"Item","args":null,"binding":{"equality":{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"847":{"id":847,"crate_id":0,"name":"hasher","span":{"filename":"src/set.rs","begin":[616,5],"end":[618,6]},"visibility":"public","docs":"Returns a reference to the set's [`BuildHasher`].\n\n[`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nuse hashbrown::DefaultHashBuilder;\n\nlet hasher = DefaultHashBuilder::default();\nlet set: HashSet<i32> = HashSet::with_hasher(hasher);\nlet hasher: &DefaultHashBuilder = set.hasher();\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"S"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1174":{"id":1174,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":15,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"Entry","id":866,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"293":{"id":293,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"16":{"id":16,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"897":{"id":897,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1223,1],"end":[1236,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"path":"PartialEq","id":214,"args":null},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[896],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"620":{"id":620,"crate_id":0,"name":"0","span":{"filename":"src/map.rs","begin":[2937,12],"end":[2937,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"VacantEntryRef","id":621,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"1501":{"id":1501,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2200,1],"end":[2200,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"IterHashMut","id":1258,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1224":{"id":1224,"crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[2344,5],"end":[2346,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"343":{"id":343,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3293,1],"end":[3293,64]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":237,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"66":{"id":66,"crate_id":0,"name":null,"span":{"filename":"src/hasher.rs","begin":[13,24],"end":[13,31]},"visibility":"default","docs":null,"links":{},"attrs":["automatically_derived"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":67,"args":null},"for":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"items":[65],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"947":{"id":947,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1746,1],"end":[1776,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[943,944,946],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"670":{"id":670,"crate_id":0,"name":"entry","span":{"filename":"src/map.rs","begin":[3028,5],"end":[3028,45]},"visibility":"public","docs":"The entry in the map that was already occupied.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"1551":{"id":1551,"crate_id":0,"name":"len","span":{"filename":"src/table.rs","begin":[2323,5],"end":[2325,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1274":{"id":1274,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"393":{"id":393,"crate_id":0,"name":"fold","span":{"filename":"src/map.rs","begin":[2401,5],"end":[2407,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"997":{"id":997,"crate_id":0,"name":"next","span":{"filename":"src/set.rs","begin":[1840,5],"end":[1846,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"720":{"id":720,"crate_id":0,"name":"RawOccupiedEntryMut","span":{"filename":"src/raw_entry.rs","begin":[395,1],"end":[399,2]},"visibility":"public","docs":"A view into an occupied entry in a `HashMap`.\nIt is part of the [`RawEntryMut`] enum.\n\n[`RawEntryMut`]: enum.RawEntryMut.html\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::hash_map::{HashMap, RawEntryMut, RawOccupiedEntryMut};\n\nlet mut map = HashMap::new();\nmap.extend([(\"a\", 10), (\"b\", 20), (\"c\", 30)]);\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nlet _raw_o: RawOccupiedEntryMut<_, _, _> = map.raw_entry_mut().from_key(&\"a\").insert(\"a\", 100);\nassert_eq!(map.len(), 3);\n\n// Existing key (insert and update)\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => unreachable!(),\n    RawEntryMut::Occupied(mut view) => {\n        assert_eq!(view.get(), &100);\n        let v = view.get_mut();\n        let new_v = (*v) * 10;\n        *v = new_v;\n        assert_eq!(view.insert(1111), 1000);\n    }\n}\n\nassert_eq!(map[&\"a\"], 1111);\nassert_eq!(map.len(), 3);\n\n// Existing key (take)\nlet hash = compute_hash(map.hasher(), &\"c\");\nmatch map.raw_entry_mut().from_key_hashed_nocheck(hash, &\"c\") {\n    RawEntryMut::Vacant(_) => unreachable!(),\n    RawEntryMut::Occupied(view) => {\n        assert_eq!(view.remove_entry(), (\"c\", 30));\n    }\n}\nassert_eq!(map.raw_entry().from_key(&\"c\"), None);\nassert_eq!(map.len(), 2);\n\nlet hash = compute_hash(map.hasher(), &\"b\");\nmatch map.raw_entry_mut().from_hash(hash, |q| *q == \"b\") {\n    RawEntryMut::Vacant(_) => unreachable!(),\n    RawEntryMut::Occupied(view) => {\n        assert_eq!(view.remove_entry(), (\"b\", 20));\n    }\n}\nassert_eq!(map.get(&\"b\"), None);\nassert_eq!(map.len(), 1);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[763,764,765,766,767,768,769,770,771,772,773,774,775,776,778]}}},"1601":{"id":1601,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"443":{"id":443,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1324":{"id":1324,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"Entry","id":1241,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1047":{"id":1047,"crate_id":0,"name":"Item","span":{"filename":"src/set.rs","begin":[1918,5],"end":[1918,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"K"}}}},"770":{"id":770,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawOccupiedEntryMut","id":720,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"493":{"id":493,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":150,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"1374":{"id":1374,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[1937,1],"end":[1946,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"AbsentEntry","id":1240,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1373],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"216":{"id":216,"crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[2043,5],"end":[2045,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1097":{"id":1097,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":57,"args":null},"for":{"resolved_path":{"path":"Difference","id":854,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[53,54,55],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"820":{"id":820,"crate_id":0,"name":null,"span":{"filename":"src/raw_entry.rs","begin":[1479,1],"end":[1483,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"RawEntryBuilder","id":190,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[819],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"543":{"id":543,"crate_id":0,"name":"or_insert_entry","span":{"filename":"src/map.rs","begin":[3547,5],"end":[3556,6]},"visibility":"public","docs":"Ensures a value is in the entry by inserting the default if empty,\nand returns an [`OccupiedEntry`].\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<&str, u32> = HashMap::new();\n\n// nonexistent key\nlet entry = map.entry(\"poneyland\").or_insert_entry(3);\nassert_eq!(entry.key(), &\"poneyland\");\nassert_eq!(entry.get(), &3);\n\n// existing key\nlet mut entry = map.entry(\"poneyland\").or_insert_entry(10);\nassert_eq!(entry.key(), &\"poneyland\");\nassert_eq!(entry.get(), &3);\n```","links":{"`OccupiedEntry`":536},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["default",{"generic":"V"}]],"output":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1424":{"id":1424,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1147":{"id":1147,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Union","id":860,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"266":{"id":266,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"870":{"id":870,"crate_id":0,"name":"insert","span":{"filename":"src/set.rs","begin":[1092,5],"end":[1094,6]},"visibility":"public","docs":"Adds a value to the set.\n\nIf the set did not have this value present, `true` is returned.\n\nIf the set did have this value present, `false` is returned.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set = HashSet::new();\n\nassert_eq!(set.insert(2), true);\nassert_eq!(set.insert(2), false);\nassert_eq!(set.len(), 1);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"generic":"T"}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"593":{"id":593,"crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[2803,5],"end":[2808,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1474":{"id":1474,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2134,1],"end":[2134,45]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1197":{"id":1197,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedEntry","id":1163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"316":{"id":316,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3247,1],"end":[3247,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"39":{"id":39,"crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"qualified_path":{"name":"Error","args":null,"self_type":{"generic":"U"},"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}}}}}},"920":{"id":920,"crate_id":0,"name":"bitxor","span":{"filename":"src/set.rs","begin":[1456,5],"end":[1458,6]},"visibility":"default","docs":"Returns the symmetric difference of `self` and `rhs` as a new `HashSet<T, S>`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet a: HashSet<_> = vec![1, 2, 3].into_iter().collect();\nlet b: HashSet<_> = vec![3, 4, 5].into_iter().collect();\n\nlet set = &a ^ &b;\n\nlet mut i = 0;\nlet expected = [1, 2, 4, 5];\nfor x in &set {\n    assert!(expected.contains(x));\n    i += 1;\n}\nassert_eq!(i, expected.len());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"643":{"id":643,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"EntryRef","id":165,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1524":{"id":1524,"crate_id":0,"name":"fold","span":{"filename":"src/table.rs","begin":[2256,5],"end":[2262,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1247":{"id":1247,"crate_id":0,"name":"reserve","span":{"filename":"src/table.rs","begin":[550,5],"end":[552,6]},"visibility":"public","docs":"Reserves capacity for at least `additional` more elements to be inserted\nin the `HashTable`. The collection may reserve more space to avoid\nfrequent reallocations.\n\n`hasher` is called if entries need to be moved or copied to a new table.\nThis must return the same hash value that each entry was inserted with.\n\n# Panics\n\nPanics if the new capacity exceeds [`isize::MAX`] bytes and [`abort`] the program\nin case of allocation error. Use [`try_reserve`](HashTable::try_reserve) instead\nif you want to handle memory allocation failure.\n\n[`isize::MAX`]: https://doc.rust-lang.org/std/primitive.isize.html\n[`abort`]: https://doc.rust-lang.org/alloc/alloc/fn.handle_alloc_error.html\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table: HashTable<i32> = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\ntable.reserve(10, hasher);\nassert!(table.capacity() >= 10);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{"HashTable::try_reserve":1246},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["additional",{"primitive":"usize"}],["hasher",{"impl_trait":[{"trait_bound":{"trait":{"path":"Fn","id":784,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":null,"is_c_variadic":false},"generics":{"params":[{"name":"impl Fn(&T) -> u64","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Fn","id":784,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"u64"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":true}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"366":{"id":366,"crate_id":0,"name":"fold","span":{"filename":"src/map.rs","begin":[2323,5],"end":[2329,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"89":{"id":89,"crate_id":0,"name":"clone","span":{"filename":"src/hasher.rs","begin":[33,10],"end":[33,15]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"DefaultHasher","id":69,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"970":{"id":970,"crate_id":0,"name":"next","span":{"filename":"src/set.rs","begin":[1798,5],"end":[1800,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"K"}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"693":{"id":693,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3043,1],"end":[3053,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Display","id":688,"args":null},"for":{"resolved_path":{"path":"OccupiedError","id":181,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[692],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1574":{"id":1574,"crate_id":0,"name":"size_hint","span":{"filename":"src/table.rs","begin":[2363,5],"end":[2365,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1297":{"id":1297,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[1162,1],"end":[1171,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Default","id":67,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Default","id":67,"args":null},"for":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1296],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"416":{"id":416,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"path":"ToOwned","id":57,"args":null},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[53,54,55],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"139":{"id":139,"crate_id":0,"name":"iter","span":{"filename":"src/map.rs","begin":[754,5],"end":[762,6]},"visibility":"public","docs":"An iterator visiting all key-value pairs in arbitrary order.\nThe iterator element type is `(&'a K, &'a V)`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(\"a\", 1);\nmap.insert(\"b\", 2);\nmap.insert(\"c\", 3);\nassert_eq!(map.len(), 3);\nlet mut vec: Vec<(&str, i32)> = Vec::new();\n\nfor (key, val) in map.iter() {\n    println!(\"key: {} val: {}\", key, val);\n    vec.push((*key, *val));\n}\n\n// The `Iter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [(\"a\", 1), (\"b\", 2), (\"c\", 3)]);\n\nassert_eq!(map.len(), 3);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1020":{"id":1020,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"Drain","id":839,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"743":{"id":743,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"RawEntryMut","id":699,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1347":{"id":1347,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[1556,1],"end":[1561,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"466":{"id":466,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"Drain","id":146,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"189":{"id":189,"crate_id":0,"name":"raw_entry","span":{"filename":"src/raw_entry.rs","begin":[156,5],"end":[158,6]},"visibility":"public","docs":"Creates a raw immutable entry builder for the `HashMap`.\n\nRaw entries provide the lowest level of control for searching and\nmanipulating a map. They must be manually initialized with a hash and\nthen manually searched.\n\nThis is useful for\n* Hash memoization\n* Using a search key that doesn't work with the Borrow trait\n* Using custom comparison logic without newtype wrappers\n\nUnless you are in such a situation, higher-level and more foolproof APIs like\n`get` should be preferred.\n\nImmutable raw entries have very limited use; you might instead want `raw_entry_mut`.\n\n# Examples\n\n```\nuse core::hash::{BuildHasher, Hash};\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.extend([(\"a\", 100), (\"b\", 200), (\"c\", 300)]);\n\nfn compute_hash<K: Hash + ?Sized, S: BuildHasher>(hash_builder: &S, key: &K) -> u64 {\n    use core::hash::Hasher;\n    let mut state = hash_builder.build_hasher();\n    key.hash(&mut state);\n    state.finish()\n}\n\nfor k in [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"] {\n    let hash = compute_hash(map.hasher(), k);\n    let v = map.get(&k).cloned();\n    let kv = v.as_ref().map(|v| (&k, v));\n\n    println!(\"Key: {} and value: {:?}\", k, v);\n\n    assert_eq!(map.raw_entry().from_key(&k), kv);\n    assert_eq!(map.raw_entry().from_hash(hash, |q| *q == k), kv);\n    assert_eq!(map.raw_entry().from_key_hashed_nocheck(hash, &k), kv);\n}\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"RawEntryBuilder","id":190,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1070":{"id":1070,"crate_id":0,"name":"clone","span":{"filename":"src/set.rs","begin":[1937,5],"end":[1942,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"793":{"id":793,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawVacantEntryMut","id":723,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1397":{"id":1397,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"516":{"id":516,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ValuesMut","id":138,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"239":{"id":239,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3124,1],"end":[3152,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[235,236,238],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1120":{"id":1120,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"SymmetricDifference","id":856,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"843":{"id":843,"crate_id":0,"name":"clear","span":{"filename":"src/set.rs","begin":[430,5],"end":[432,6]},"visibility":"public","docs":"Clears the set, removing all values.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut v = HashSet::new();\nv.insert(1);\nv.clear();\nassert!(v.is_empty());\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1447":{"id":1447,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2074,1],"end":[2074,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"566":{"id":566,"crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[2733,5],"end":[2738,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"289":{"id":289,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3200,1],"end":[3200,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"FusedIterator","id":290,"args":null},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1170":{"id":1170,"crate_id":0,"name":"get","span":{"filename":"src/set.rs","begin":[2418,5],"end":[2423,6]},"visibility":"public","docs":"Returns a reference to this entry's value.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet mut set: HashSet<&str> = HashSet::new();\nset.entry(\"poneyland\").or_insert();\n// existing key\nassert_eq!(set.entry(\"poneyland\").get(), &\"poneyland\");\n// nonexistent key\nassert_eq!(set.entry(\"horseland\").get(), &\"horseland\");\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"12":{"id":12,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"893":{"id":893,"crate_id":0,"name":"clone","span":{"filename":"src/set.rs","begin":[119,5],"end":[123,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"616":{"id":616,"crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[2848,5],"end":[2850,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1497":{"id":1497,"crate_id":0,"name":"Item","span":{"filename":"src/table.rs","begin":[2180,5],"end":[2180,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"T"}}}}}},"339":{"id":339,"crate_id":0,"name":"fold","span":{"filename":"src/map.rs","begin":[3279,5],"end":[3285,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1220":{"id":1220,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntry","id":1166,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"943":{"id":943,"crate_id":0,"name":"Item","span":{"filename":"src/set.rs","begin":[1747,5],"end":[1747,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"generic":"T"}}}},"666":{"id":666,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntryRef","id":621,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1547":{"id":1547,"crate_id":0,"name":"next","span":{"filename":"src/table.rs","begin":[2305,5],"end":[2307,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"389":{"id":389,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2381,1],"end":[2388,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":67,"args":null},"for":{"resolved_path":{"path":"IntoValues","id":155,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[388],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1270":{"id":1270,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":15,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"HashTable","id":1228,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"993":{"id":993,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":945,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"716":{"id":716,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"RawEntryBuilderMut","id":188,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1597":{"id":1597,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1320":{"id":1320,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Entry","id":1241,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"439":{"id":439,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"162":{"id":162,"crate_id":0,"name":"entry","span":{"filename":"src/map.rs","begin":[1229,5],"end":[1244,6]},"visibility":"public","docs":"Gets the given key's corresponding entry in the map for in-place manipulation.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut letters = HashMap::new();\n\nfor ch in \"a short treatise on fungi\".chars() {\n    let counter = letters.entry(ch).or_insert(0);\n    *counter += 1;\n}\n\nassert_eq!(letters[&'s'], 2);\nassert_eq!(letters[&'t'], 3);\nassert_eq!(letters[&'u'], 1);\nassert_eq!(letters.get(&'y'), None);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["key",{"generic":"K"}]],"output":{"resolved_path":{"path":"Entry","id":163,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1043":{"id":1043,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ExtractIf","id":842,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"766":{"id":766,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"RawOccupiedEntryMut","id":720,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"1370":{"id":1370,"crate_id":0,"name":"fmt","span":{"filename":"src/table.rs","begin":[1822,5],"end":[1824,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"489":{"id":489,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":150,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"212":{"id":212,"crate_id":0,"name":"eq","span":{"filename":"src/map.rs","begin":[2018,5],"end":[2025,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1093":{"id":1093,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Difference","id":854,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"816":{"id":816,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawEntryBuilder","id":190,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1420":{"id":1420,"crate_id":0,"name":"fmt","span":{"filename":"src/table.rs","begin":[2016,5],"end":[2018,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"539":{"id":539,"crate_id":0,"name":"VacantEntry","span":{"filename":"src/map.rs","begin":[2841,1],"end":[2845,2]},"visibility":"public","docs":"A view into a vacant entry in a `HashMap`.\nIt is part of the [`Entry`] enum.\n\n[`Entry`]: enum.Entry.html\n\n# Examples\n\n```\nuse hashbrown::hash_map::{Entry, HashMap, VacantEntry};\n\nlet mut map = HashMap::<&str, i32>::new();\n\nlet entry_v: VacantEntry<_, _, _> = match map.entry(\"a\") {\n    Entry::Vacant(view) => view,\n    Entry::Occupied(_) => unreachable!(),\n};\nentry_v.insert(10);\nassert!(map[&\"a\"] == 10 && map.len() == 1);\n\n// Nonexistent key (insert and update)\nmatch map.entry(\"b\") {\n    Entry::Occupied(_) => unreachable!(),\n    Entry::Vacant(view) => {\n        let value = view.insert(2);\n        assert_eq!(*value, 2);\n        *value = 20;\n    }\n}\nassert!(map[&\"b\"] == 20 && map.len() == 2);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"crate::DefaultHashBuilder","id":9,"args":null}},"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[602,603,604,605,606,607,608,609,610,611,612,613,614,615,617]}}},"262":{"id":262,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1143":{"id":1143,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Union","id":860,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"866":{"id":866,"crate_id":0,"name":"Entry","span":{"filename":"src/set.rs","begin":[2221,1],"end":[2254,2]},"visibility":"public","docs":"A view into a single entry in a set, which may either be vacant or occupied.\n\nThis `enum` is constructed from the [`entry`] method on [`HashSet`].\n\n[`HashSet`]: struct.HashSet.html\n[`entry`]: struct.HashSet.html#method.entry\n\n# Examples\n\n```\nuse hashbrown::hash_set::{Entry, HashSet, OccupiedEntry};\n\nlet mut set = HashSet::new();\nset.extend([\"a\", \"b\", \"c\"]);\nassert_eq!(set.len(), 3);\n\n// Existing value (insert)\nlet entry: Entry<_, _> = set.entry(\"a\");\nlet _raw_o: OccupiedEntry<_, _> = entry.insert();\nassert_eq!(set.len(), 3);\n// Nonexistent value (insert)\nset.entry(\"d\").insert();\n\n// Existing value (or_insert)\nset.entry(\"b\").or_insert();\n// Nonexistent value (or_insert)\nset.entry(\"e\").or_insert();\n\nprintln!(\"Our HashSet: {:?}\", set);\n\nlet mut vec: Vec<_> = set.iter().copied().collect();\n// The `Iter` iterator produces items in arbitrary order, so the\n// items must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [\"a\", \"b\", \"c\", \"d\", \"e\"]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"has_stripped_variants":false,"variants":[1164,1167],"impls":[1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1186]}}},"1470":{"id":1470,"crate_id":0,"name":"Item","span":{"filename":"src/table.rs","begin":[2114,5],"end":[2114,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"T"}}}}}},"589":{"id":589,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"312":{"id":312,"crate_id":0,"name":"fold","span":{"filename":"src/map.rs","begin":[3230,5],"end":[3239,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1193":{"id":1193,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":1163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"916":{"id":916,"crate_id":0,"name":"bitand","span":{"filename":"src/set.rs","begin":[1423,5],"end":[1425,6]},"visibility":"default","docs":"Returns the intersection of `self` and `rhs` as a new `HashSet<T, S>`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet a: HashSet<_> = vec![1, 2, 3].into_iter().collect();\nlet b: HashSet<_> = vec![2, 3, 4].into_iter().collect();\n\nlet set = &a & &b;\n\nlet mut i = 0;\nlet expected = [2, 3];\nfor x in &set {\n    assert!(expected.contains(x));\n    i += 1;\n}\nassert_eq!(i, expected.len());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"35":{"id":35,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1520":{"id":1520,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2233,1],"end":[2240,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":67,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":1285,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1519],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"639":{"id":639,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"EntryRef","id":165,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"362":{"id":362,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[2303,1],"end":[2310,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":67,"args":null},"for":{"resolved_path":{"path":"IntoKeys","id":153,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[361],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1243":{"id":1243,"crate_id":0,"name":"clear","span":{"filename":"src/table.rs","begin":[440,5],"end":[442,6]},"visibility":"public","docs":"Clears the table, removing all values.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut v = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\nv.insert_unique(hasher(&1), 1, hasher);\nv.clear();\nassert!(v.is_empty());\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"966":{"id":966,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1778,1],"end":[1785,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"path":"Clone","id":31,"args":null},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[965],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"85":{"id":85,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DefaultHasher","id":69,"args":null}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1570":{"id":1570,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":1263,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"412":{"id":412,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1293":{"id":1293,"crate_id":0,"name":"IntoIter","span":{"filename":"src/table.rs","begin":[1155,5],"end":[1155,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}}}}},"135":{"id":135,"crate_id":0,"name":"values","span":{"filename":"src/map.rs","begin":[682,5],"end":[684,6]},"visibility":"public","docs":"An iterator visiting all values in arbitrary order.\nThe iterator element type is `&'a V`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(\"a\", 1);\nmap.insert(\"b\", 2);\nmap.insert(\"c\", 3);\nassert_eq!(map.len(), 3);\nlet mut vec: Vec<i32> = Vec::new();\n\nfor val in map.values() {\n    println!(\"{}\", val);\n    vec.push(*val);\n}\n\n// The `Values` iterator produces values in arbitrary order, so the\n// values must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [1, 2, 3]);\n\nassert_eq!(map.len(), 3);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1016":{"id":1016,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Drain","id":839,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"739":{"id":739,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawEntryMut","id":699,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1343":{"id":1343,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"185":{"id":185,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[1070,1],"end":[2009,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[158,157,160,161,162,164,168,170,171,172,173,174,175,176,177,178,179,180,182,183,184],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1066":{"id":1066,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Intersection","id":858,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"789":{"id":789,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"RawVacantEntryMut","id":723,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"512":{"id":512,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"ValuesMut","id":138,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1393":{"id":1393,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"235":{"id":235,"crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[3125,5],"end":[3125,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}}},"1116":{"id":1116,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"SymmetricDifference","id":856,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"839":{"id":839,"crate_id":0,"name":"Drain","span":{"filename":"src/set.rs","begin":[1669,1],"end":[1671,2]},"visibility":"public","docs":"A draining iterator over the items of a `HashSet`.\n\nThis `struct` is created by the [`drain`] method on [`HashSet`].\nSee its documentation for more.\n\n[`HashSet`]: struct.HashSet.html\n[`drain`]: struct.HashSet.html#method.drain","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1025,1027,1028,1030]}}},"562":{"id":562,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Entry","id":163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1443":{"id":1443,"crate_id":0,"name":"fold","span":{"filename":"src/table.rs","begin":[2058,5],"end":[2065,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["init",{"generic":"B"}],["f",{"generic":"F"}]],"output":{"generic":"B"},"is_c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Self"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"generic":"B"},{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}],"output":{"generic":"B"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"285":{"id":285,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3163,1],"end":[3192,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[281,282,283,284],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1166":{"id":1166,"crate_id":0,"name":"VacantEntry","span":{"filename":"src/set.rs","begin":[2339,1],"end":[2341,2]},"visibility":"public","docs":"A view into a vacant entry in a `HashSet`.\nIt is part of the [`Entry`] enum.\n\n[`Entry`]: enum.Entry.html\n\n# Examples\n\n```\nuse hashbrown::hash_set::{Entry, HashSet, VacantEntry};\n\nlet mut set = HashSet::<&str>::new();\n\nlet entry_v: VacantEntry<_, _> = match set.entry(\"a\") {\n    Entry::Vacant(view) => view,\n    Entry::Occupied(_) => unreachable!(),\n};\nentry_v.insert();\nassert!(set.contains(\"a\") && set.len() == 1);\n\n// Nonexistent key (insert)\nmatch set.entry(\"b\") {\n    Entry::Vacant(view) => { view.insert(); },\n    Entry::Occupied(_) => unreachable!(),\n}\nassert!(set.contains(\"b\") && set.len() == 2);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1225]}}},"889":{"id":889,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"8":{"id":8,"crate_id":0,"name":"HashSet","span":{"filename":"src/set.rs","begin":[114,1],"end":[116,2]},"visibility":"public","docs":"A hash set implemented as a `HashMap` where the value is `()`.\n\nAs with the [`HashMap`] type, a `HashSet` requires that the elements\nimplement the [`Eq`] and [`Hash`] traits. This can frequently be achieved by\nusing `#[derive(PartialEq, Eq, Hash)]`. If you implement these yourself,\nit is important that the following property holds:\n\n```text\nk1 == k2 -> hash(k1) == hash(k2)\n```\n\nIn other words, if two keys are equal, their hashes must be equal.\n\n\nIt is a logic error for an item to be modified in such a way that the\nitem's hash, as determined by the [`Hash`] trait, or its equality, as\ndetermined by the [`Eq`] trait, changes while it is in the set. This is\nnormally only possible through [`Cell`], [`RefCell`], global state, I/O, or\nunsafe code.\n\nIt is also a logic error for the [`Hash`] implementation of a key to panic.\nThis is generally only possible if the trait is implemented manually. If a\npanic does occur then the contents of the `HashSet` may become corrupted and\nsome items may be dropped from the table.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n// Type inference lets us omit an explicit type signature (which\n// would be `HashSet<String>` in this example).\nlet mut books = HashSet::new();\n\n// Add some books.\nbooks.insert(\"A Dance With Dragons\".to_string());\nbooks.insert(\"To Kill a Mockingbird\".to_string());\nbooks.insert(\"The Odyssey\".to_string());\nbooks.insert(\"The Great Gatsby\".to_string());\n\n// Check for a specific one.\nif !books.contains(\"The Winds of Winter\") {\n    println!(\"We have {} books, but The Winds of Winter ain't one.\",\n             books.len());\n}\n\n// Remove a book.\nbooks.remove(\"The Odyssey\");\n\n// Iterate over everything.\nfor book in &books {\n    println!(\"{}\", book);\n}\n```\n\nThe easiest way to use `HashSet` with a custom type is to derive\n[`Eq`] and [`Hash`]. We must also derive [`PartialEq`]. This will in the\nfuture be implied by [`Eq`].\n\n```\nuse hashbrown::HashSet;\n#[derive(Hash, Eq, PartialEq, Debug)]\nstruct Viking {\n    name: String,\n    power: usize,\n}\n\nlet mut vikings = HashSet::new();\n\nvikings.insert(Viking { name: \"Einar\".to_string(), power: 9 });\nvikings.insert(Viking { name: \"Einar\".to_string(), power: 9 });\nvikings.insert(Viking { name: \"Olaf\".to_string(), power: 4 });\nvikings.insert(Viking { name: \"Harald\".to_string(), power: 8 });\n\n// Use derived implementation to print the vikings.\nfor x in &vikings {\n    println!(\"{:?}\", x);\n}\n```\n\nA `HashSet` with fixed list of elements can be initialized from an array:\n\n```\nuse hashbrown::HashSet;\n\nlet viking_names: HashSet<&'static str> =\n    [ \"Einar\", \"Olaf\", \"Harald\" ].into_iter().collect();\n// use the values stored in the set\n```\n\n[`Cell`]: https://doc.rust-lang.org/std/cell/struct.Cell.html\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html\n[`HashMap`]: struct.HashMap.html\n[`PartialEq`]: https://doc.rust-lang.org/std/cmp/trait.PartialEq.html\n[`RefCell`]: https://doc.rust-lang.org/std/cell/struct.RefCell.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"crate::DefaultHashBuilder","id":9,"args":null}},"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[827,832,844,845,848,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,895,897,898,900,252,902,904,906,908,910,913,917,921,925,928,931,934,937,942,947]}}},"612":{"id":612,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntry","id":539,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1493":{"id":1493,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"IterHashMut","id":1258,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"335":{"id":335,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3259,1],"end":[3266,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":67,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":237,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[334],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1216":{"id":1216,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":1166,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"939":{"id":939,"crate_id":0,"name":"Item","span":{"filename":"src/set.rs","begin":[1737,5],"end":[1737,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"T"}}}}}},"58":{"id":58,"crate_id":0,"name":"clone","span":{"filename":"src/hasher.rs","begin":[13,10],"end":[13,15]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1543":{"id":1543,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Drain","id":1261,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"662":{"id":662,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntryRef","id":621,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"385":{"id":385,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoValues","id":155,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1266":{"id":1266,"crate_id":0,"name":"allocation_size","span":{"filename":"src/table.rs","begin":[1119,5],"end":[1121,6]},"visibility":"public","docs":"Returns the total amount of memory allocated internally by the hash\ntable, in bytes.\n\nThe returned number is informational only. It is intended to be\nprimarily used for memory profiling.","links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"989":{"id":989,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoIter","id":945,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"108":{"id":108,"crate_id":0,"name":null,"span":{"filename":"src/raw/alloc.rs","begin":[37,37],"end":[37,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"use":{"source":"allocator_api2::alloc::Allocator","name":"Allocator","id":109,"is_glob":false}}},"1593":{"id":1593,"crate_id":0,"name":"AllocError","span":{"filename":"src/lib.rs","begin":[185,5],"end":[188,6]},"visibility":"default","docs":"The memory allocator returned an error","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"struct":{"fields":[1591],"has_stripped_fields":false}},"discriminant":null}}},"712":{"id":712,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawEntryBuilderMut","id":188,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"435":{"id":435,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1316":{"id":1316,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"Entry","id":1241,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"1039":{"id":1039,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ExtractIf","id":842,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"158":{"id":158,"crate_id":0,"name":"reserve","span":{"filename":"src/map.rs","begin":[1103,5],"end":[1106,6]},"visibility":"public","docs":"Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.\n\n# Panics\n\nPanics if the new capacity exceeds [`isize::MAX`] bytes and [`abort`] the program\nin case of allocation error. Use [`try_reserve`](HashMap::try_reserve) instead\nif you want to handle memory allocation failure.\n\n[`isize::MAX`]: https://doc.rust-lang.org/std/primitive.isize.html\n[`abort`]: https://doc.rust-lang.org/alloc/alloc/fn.handle_alloc_error.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nlet mut map: HashMap<&str, i32> = HashMap::new();\n// Map is empty and doesn't allocate memory\nassert_eq!(map.capacity(), 0);\n\nmap.reserve(10);\n\n// And now map can hold at least 10 elements\nassert!(map.capacity() >= 10);\n```","links":{"HashMap::try_reserve":157},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["additional",{"primitive":"usize"}]],"output":null,"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"762":{"id":762,"crate_id":0,"name":"replace_entry_with","span":{"filename":"src/raw_entry.rs","begin":[1280,5],"end":[1300,6]},"visibility":"public","docs":"Provides shared access to the key and owned access to the value of\nthe entry and allows to replace or remove it based on the\nvalue of the returned option.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\n\nlet raw_entry = match map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(o) => o.replace_entry_with(|k, v| {\n        assert_eq!(k, &\"a\");\n        assert_eq!(v, 100);\n        Some(v + 900)\n    }),\n};\nlet raw_entry = match raw_entry {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(o) => o.replace_entry_with(|k, v| {\n        assert_eq!(k, &\"a\");\n        assert_eq!(v, 1000);\n        None\n    }),\n};\nmatch raw_entry {\n    RawEntryMut::Vacant(_) => { },\n    RawEntryMut::Occupied(_) => panic!(),\n};\nassert_eq!(map.get(&\"a\"), None);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["f",{"generic":"F"}]],"output":{"resolved_path":{"path":"RawEntryMut","id":699,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnOnce","id":545,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}},{"generic":"V"}],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"generic":"V"}}],"constraints":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"485":{"id":485,"crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[3463,5],"end":[3465,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1366":{"id":1366,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"VacantEntry","id":1305,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1089":{"id":1089,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Difference","id":854,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"208":{"id":208,"crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/equivalent-1.0.2/src/lib.rs","begin":[82,1],"end":[85,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"Q"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[207],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"Q"}}}},"812":{"id":812,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Borrow","id":25,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"RawEntryBuilder","id":190,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[22],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"535":{"id":535,"crate_id":0,"name":"0","span":{"filename":"src/map.rs","begin":[2714,14],"end":[2714,43]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"1416":{"id":1416,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[1996,1],"end":[2000,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"path":"ExactSizeIterator","id":288,"args":null},"for":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1415],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1139":{"id":1139,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"Union","id":860,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"258":{"id":258,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"862":{"id":862,"crate_id":0,"name":"get","span":{"filename":"src/set.rs","begin":[888,5],"end":[897,6]},"visibility":"public","docs":"Returns a reference to the value in the set, if any, that is equal to the given value.\n\nThe value may be any borrowed form of the set's value type, but\n[`Hash`] and [`Eq`] on the borrowed form *must* match those for\nthe value type.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet set: HashSet<_> = [1, 2, 3].into_iter().collect();\nassert_eq!(set.get(&2), Some(&2));\nassert_eq!(set.get(&4), None);\n```\n\n[`Eq`]: https://doc.rust-lang.org/std/cmp/trait.Eq.html\n[`Hash`]: https://doc.rust-lang.org/std/hash/trait.Hash.html","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["value",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"585":{"id":585,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1466":{"id":1466,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"path":"Iterator","id":270,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"IntoIterator","id":230,"args":null},"for":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[269,271,272],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"I"}}}},"308":{"id":308,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3202,1],"end":[3210,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":67,"args":null},"for":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[307],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1189":{"id":1189,"crate_id":0,"name":"remove","span":{"filename":"src/set.rs","begin":[2472,5],"end":[2474,6]},"visibility":"public","docs":"Takes the value out of the entry, and returns it.\nKeeps the allocated memory for reuse.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nuse hashbrown::hash_set::Entry;\n\nlet mut set: HashSet<&str> = HashSet::new();\n// The set is empty\nassert!(set.is_empty() && set.capacity() == 0);\n\nset.entry(\"poneyland\").or_insert();\nlet capacity_before_remove = set.capacity();\n\nif let Entry::Occupied(o) = set.entry(\"poneyland\") {\n    assert_eq!(o.remove(), \"poneyland\");\n}\n\nassert_eq!(set.contains(\"poneyland\"), false);\n// Now set hold none elements but capacity is equal to the old one\nassert!(set.len() == 0 && set.capacity() == capacity_before_remove);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"912":{"id":912,"crate_id":0,"name":"bitor","span":{"filename":"src/set.rs","begin":[1390,5],"end":[1392,6]},"visibility":"default","docs":"Returns the union of `self` and `rhs` as a new `HashSet<T, S>`.\n\n# Examples\n\n```\nuse hashbrown::HashSet;\n\nlet a: HashSet<_> = vec![1, 2, 3].into_iter().collect();\nlet b: HashSet<_> = vec![3, 4, 5].into_iter().collect();\n\nlet set = &a | &b;\n\nlet mut i = 0;\nlet expected = [1, 2, 3, 4, 5];\nfor x in &set {\n    assert!(expected.contains(x));\n    i += 1;\n}\nassert_eq!(i, expected.len());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["rhs",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"635":{"id":635,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"EntryRef","id":165,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1516":{"id":1516,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoIter","id":1285,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"358":{"id":358,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoKeys","id":153,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1239":{"id":1239,"crate_id":0,"name":"OccupiedEntry","span":{"filename":"src/table.rs","begin":[1547,1],"end":[1554,2]},"visibility":"public","docs":"A view into an occupied entry in a `HashTable`.\nIt is part of the [`Entry`] enum.\n\n[`Entry`]: enum.Entry.html\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::hash_table::{Entry, OccupiedEntry};\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\nfor x in [\"a\", \"b\", \"c\"] {\n    table.insert_unique(hasher(&x), x, hasher);\n}\nassert_eq!(table.len(), 3);\n\nlet _entry_o: OccupiedEntry<_, _> = table.find_entry(hasher(&\"a\"), |&x| x == \"a\").unwrap();\nassert_eq!(table.len(), 3);\n\n// Existing key\nmatch table.entry(hasher(&\"a\"), |&x| x == \"a\", hasher) {\n    Entry::Vacant(_) => unreachable!(),\n    Entry::Occupied(view) => {\n        assert_eq!(view.get(), &\"a\");\n    }\n}\n\nassert_eq!(table.len(), 3);\n\n// Existing key (take)\nmatch table.entry(hasher(&\"c\"), |&x| x == \"c\", hasher) {\n    Entry::Vacant(_) => unreachable!(),\n    Entry::Occupied(view) => {\n        assert_eq!(view.remove().0, \"c\");\n    }\n}\nassert_eq!(table.find(hasher(&\"c\"), |&x| x == \"c\"), None);\nassert_eq!(table.len(), 2);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":[1335,1336,1337,1338,1339,1340,1341,1342,1343,1344,1345,1346,1347,1348,1350]}}},"81":{"id":81,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DefaultHasher","id":69,"args":null}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"962":{"id":962,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"685":{"id":685,"crate_id":2,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"String","id":686,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1566":{"id":1566,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"ExtractIf","id":1263,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"408":{"id":408,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1289":{"id":1289,"crate_id":0,"name":"IntoIter","span":{"filename":"src/table.rs","begin":[1143,5],"end":[1143,33]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"Iter","id":1252,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}}}}},"1012":{"id":1012,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"Drain","id":839,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"131":{"id":131,"crate_id":0,"name":"hasher","span":{"filename":"src/map.rs","begin":[600,5],"end":[602,6]},"visibility":"public","docs":"Returns a reference to the map's [`BuildHasher`].\n\n[`BuildHasher`]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse hashbrown::DefaultHashBuilder;\n\nlet hasher = DefaultHashBuilder::default();\nlet map: HashMap<i32, i32> = HashMap::with_hasher(hasher);\nlet hasher: &DefaultHashBuilder = map.hasher();\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"S"}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"735":{"id":735,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"RawEntryMut","id":699,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"1616":{"id":1616,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[178,28],"end":[178,30]},"visibility":"default","docs":null,"links":{},"attrs":["automatically_derived"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"path":"Eq","id":186,"args":null},"for":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"458":{"id":458,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3349,1],"end":[3372,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"Values","id":136,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[454,455,456,457],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1339":{"id":1339,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1062":{"id":1062,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":32,"args":null},"for":{"resolved_path":{"path":"Intersection","id":858,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[29],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"181":{"id":181,"crate_id":0,"name":"OccupiedError","span":{"filename":"src/map.rs","begin":[3026,1],"end":[3031,2]},"visibility":"public","docs":"The error returned by [`try_insert`](HashMap::try_insert) when the key already exists.\n\nContains the occupied entry, and the value that was not inserted.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, OccupiedError};\n\nlet mut map: HashMap<_, _> = [(\"a\", 10), (\"b\", 20)].into();\n\n// try_insert method returns mutable reference to the value if keys are vacant,\n// but if the map did have key present, nothing is updated, and the provided\n// value is returned inside `Err(_)` variant\nmatch map.try_insert(\"a\", 100) {\n    Err(OccupiedError { mut entry, value }) => {\n        assert_eq!(entry.key(), &\"a\");\n        assert_eq!(value, 100);\n        assert_eq!(entry.insert(100), 10)\n    }\n    _ => unreachable!(),\n}\nassert_eq!(map[&\"a\"], 100);\n```","links":{"HashMap::try_insert":180},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[670,671],"has_stripped_fields":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[672,673,674,675,676,677,678,679,680,681,682,683,684,687,691,693]}}},"785":{"id":785,"crate_id":0,"name":null,"span":{"filename":"src/raw_entry.rs","begin":[1303,1],"end":[1447,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"RawVacantEntryMut","id":723,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[781,782,783],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1389":{"id":1389,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[1931,1],"end":[1935,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"fmt::Debug","id":64,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Debug","id":64,"args":null},"for":{"resolved_path":{"path":"AbsentEntry","id":1240,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1388],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1112":{"id":1112,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"SymmetricDifference","id":856,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"231":{"id":231,"crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[3088,5],"end":[3088,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}}]}}}},"835":{"id":835,"crate_id":0,"name":"Iter","span":{"filename":"src/set.rs","begin":[1647,1],"end":[1649,2]},"visibility":"public","docs":"An iterator over the items of a `HashSet`.\n\nThis `struct` is created by the [`iter`] method on [`HashSet`].\nSee its documentation for more.\n\n[`HashSet`]: struct.HashSet.html\n[`iter`]: struct.HashSet.html#method.iter","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"impls":[949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,966,968,973,975,976,978]}}},"558":{"id":558,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"Entry","id":163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1439":{"id":1439,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[2034,1],"end":[2042,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Default","id":67,"args":null},"for":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[1438],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1162":{"id":1162,"crate_id":0,"name":"0","span":{"filename":"src/set.rs","begin":[2238,14],"end":[2238,40]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"path":"OccupiedEntry","id":1163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}}}},"281":{"id":281,"crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[3164,5],"end":[3164,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"V"}}}]}}}},"885":{"id":885,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Clone","id":31,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"CloneToUninit","id":32,"args":null},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[29],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"608":{"id":608,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":539,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1489":{"id":1489,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterHashMut","id":1258,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1212":{"id":1212,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":1166,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"331":{"id":331,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoIter","id":237,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"54":{"id":54,"crate_id":2,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"658":{"id":658,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"VacantEntryRef","id":621,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"},{"type":{"generic":"K"}},{"type":{"generic":"Q"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1539":{"id":1539,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Drain","id":1261,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1262":{"id":1262,"crate_id":0,"name":"extract_if","span":{"filename":"src/table.rs","begin":[950,5],"end":[961,6]},"visibility":"public","docs":"Drains elements which are true under the given predicate,\nand returns an iterator over the removed items.\n\nIn other words, move all elements `e` such that `f(&e)` returns `true` out\ninto another iterator.\n\nIf the returned `ExtractIf` is not exhausted, e.g. because it is dropped without iterating\nor the iteration short-circuits, then the remaining elements will be retained.\nUse [`retain()`] with a negated predicate if you do not need the returned iterator.\n\n[`retain()`]: HashTable::retain\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\nfor x in 0..8 {\n    table.insert_unique(hasher(&x), x, hasher);\n}\nlet drained: Vec<i32> = table.extract_if(|&mut v| v % 2 == 0).collect();\n\nlet mut evens = drained.into_iter().collect::<Vec<_>>();\nlet mut odds = table.into_iter().collect::<Vec<_>>();\nevens.sort();\nodds.sort();\n\nassert_eq!(evens, vec![0, 2, 4, 6]);\nassert_eq!(odds, vec![1, 3, 5, 7]);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{"HashTable::retain":1259},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["f",{"generic":"F"}]],"output":{"resolved_path":{"path":"ExtractIf","id":1263,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"381":{"id":381,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoValues","id":155,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"104":{"id":104,"crate_id":0,"name":"finish","span":{"filename":"src/hasher.rs","begin":[74,5],"end":[76,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[attr = Inline(Always)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u64"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"985":{"id":985,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"IntoIter","id":945,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"708":{"id":708,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"RawEntryBuilderMut","id":188,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"1589":{"id":1589,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[139,1],"end":[139,32]},"visibility":"public","docs":null,"links":{},"attrs":[{"other":"#[<cfg>(feature = \"equivalent\")]"}],"deprecation":null,"inner":{"use":{"source":"equivalent::Equivalent","name":"Equivalent","id":167,"is_glob":false}}},"1312":{"id":1312,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"Entry","id":1241,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"154":{"id":154,"crate_id":0,"name":"into_values","span":{"filename":"src/map.rs","begin":[1063,5],"end":[1067,6]},"visibility":"public","docs":"Creates a consuming iterator visiting all the values in arbitrary order.\nThe map cannot be used after calling this.\nThe iterator element type is `V`.\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map = HashMap::new();\nmap.insert(\"a\", 1);\nmap.insert(\"b\", 2);\nmap.insert(\"c\", 3);\n\nlet mut vec: Vec<i32> = map.into_values().collect();\n\n// The `IntoValues` iterator produces values in arbitrary order, so\n// the values must be sorted to test them against a sorted array.\nvec.sort_unstable();\nassert_eq!(vec, [1, 2, 3]);\n```","links":{},"attrs":[{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"IntoValues","id":155,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1035":{"id":1035,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"path":"Freeze","id":15,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":842,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"758":{"id":758,"crate_id":0,"name":"insert","span":{"filename":"src/raw_entry.rs","begin":[1170,5],"end":[1172,6]},"visibility":"public","docs":"Sets the value of the entry, and returns the entry's old value.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\n\nmatch map.raw_entry_mut().from_key(&\"a\") {\n    RawEntryMut::Vacant(_) => panic!(),\n    RawEntryMut::Occupied(mut o) => assert_eq!(o.insert(1000), 100),\n}\n\nassert_eq!(map[&\"a\"], 1000);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["value",{"generic":"V"}]],"output":{"generic":"V"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1362":{"id":1362,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"RefUnwindSafe","id":21,"args":null},"for":{"resolved_path":{"path":"VacantEntry","id":1305,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"481":{"id":481,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3429,1],"end":[3448,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["next_chunk","size_hint","count","last","advance_by","nth","step_by","chain","zip","intersperse","intersperse_with","map","for_each","filter","filter_map","enumerate","peekable","skip_while","take_while","map_while","skip","take","scan","flat_map","flatten","map_windows","fuse","inspect","by_ref","collect","try_collect","collect_into","partition","partition_in_place","is_partitioned","try_fold","try_for_each","fold","reduce","try_reduce","all","any","find","find_map","try_find","position","rposition","max","min","max_by_key","max_by","min_by_key","min_by","rev","unzip","copied","cloned","cycle","array_chunks","sum","product","cmp","cmp_by","partial_cmp","partial_cmp_by","eq","eq_by","ne","lt","le","gt","ge","is_sorted","is_sorted_by","is_sorted_by_key","__iterator_get_unchecked"],"trait":{"path":"Iterator","id":270,"args":null},"for":{"resolved_path":{"path":"Drain","id":146,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[477,478,479,480],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"204":{"id":204,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashMap","id":7,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1085":{"id":1085,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"Difference","id":854,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"808":{"id":808,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Freeze","id":15,"args":null},"for":{"resolved_path":{"path":"RawEntryBuilder","id":190,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"531":{"id":531,"crate_id":0,"name":null,"span":{"filename":"src/map.rs","begin":[3413,1],"end":[3418,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"path":"ExactSizeIterator","id":288,"args":null},"for":{"resolved_path":{"path":"ValuesMut","id":138,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[530],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1412":{"id":1412,"crate_id":0,"name":"size_hint","span":{"filename":"src/table.rs","begin":[1982,5],"end":[1984,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"constraints":[]}}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"858":{"id":858,"crate_id":0,"name":"Intersection","span":{"filename":"src/set.rs","begin":[1693,1],"end":[1698,2]},"visibility":"public","docs":"A lazy iterator producing elements in the intersection of `HashSet`s.\n\nThis `struct` is created by the [`intersection`] method on [`HashSet`].\nSee its documentation for more.\n\n[`HashSet`]: struct.HashSet.html\n[`intersection`]: struct.HashSet.html#method.intersection","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"impls":[1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1071,1076,1078,1079]}}},"581":{"id":581,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1462":{"id":1462,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterHash","id":1256,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"304":{"id":304,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Any","id":52,"args":null},"for":{"resolved_path":{"path":"IterMut","id":142,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[49],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1185":{"id":1185,"crate_id":0,"name":"fmt","span":{"filename":"src/set.rs","begin":[2257,5],"end":[2262,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"27":{"id":27,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"DefaultHashBuilder","id":9,"args":null}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"908":{"id":908,"crate_id":0,"name":null,"span":{"filename":"src/set.rs","begin":[1324,1],"end":[1346,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'a"},{"trait_bound":{"trait":{"path":"Eq","id":186,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Copy","id":248,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["extend_one","extend_reserve","extend_one_unchecked"],"trait":{"path":"Extend","id":245,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"T"}}}}],"constraints":[]}}},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[907],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"631":{"id":631,"crate_id":0,"name":"or_default_entry","span":{"filename":"src/map.rs","begin":[4387,5],"end":[4396,6]},"visibility":"public","docs":"Ensures a value is in the entry by inserting the default value if empty,\nand returns an [`OccupiedEntry`].\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut map: HashMap<String, Option<u32>> = HashMap::new();\n\n// nonexistent key\nlet entry = map.entry_ref(\"poneyland\").or_default_entry();\nassert_eq!(entry.key(), &\"poneyland\");\nassert_eq!(entry.get(), &None);\n\n// existing key\nmap.insert(\"horseland\".to_string(), Some(3));\nlet entry = map.entry_ref(\"horseland\").or_default_entry();\nassert_eq!(entry.key(), &\"horseland\");\nassert_eq!(entry.get(), &Some(3));\n```","links":{"`OccupiedEntry`":536},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"path":"OccupiedEntry","id":536,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'b","is_mutable":false,"type":{"generic":"Q"}}}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1512":{"id":1512,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoIter","id":1285,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1235":{"id":1235,"crate_id":0,"name":"find","span":{"filename":"src/table.rs","begin":[223,5],"end":[225,6]},"visibility":"public","docs":"Returns a reference to an entry in the table with the given hash and\nwhich satisfies the equality function passed.\n\nThis method will call `eq` for all entries with the given hash, but may\nalso call it for entries with a different hash. `eq` should only return\ntrue for the desired entry, at which point the search is stopped.\n\n# Examples\n\n```\n# #[cfg(feature = \"nightly\")]\n# fn test() {\nuse hashbrown::{HashTable, DefaultHashBuilder};\nuse std::hash::BuildHasher;\n\nlet mut table = HashTable::new();\nlet hasher = DefaultHashBuilder::default();\nlet hasher = |val: &_| hasher.hash_one(val);\ntable.insert_unique(hasher(&1), 1, hasher);\ntable.insert_unique(hasher(&2), 2, hasher);\ntable.insert_unique(hasher(&3), 3, hasher);\nassert_eq!(table.find(hasher(&2), |&val| val == 2), Some(&2));\nassert_eq!(table.find(hasher(&4), |&val| val == 4), None);\n# }\n# fn main() {\n#     #[cfg(feature = \"nightly\")]\n#     test()\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["hash",{"primitive":"u64"}],["eq",{"impl_trait":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[{"name":"impl FnMut(&T) -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"path":"FnMut","id":148,"args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"T"}}}],"output":{"primitive":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"is_synthetic":true}}}],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"354":{"id":354,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"BorrowMut","id":28,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IntoKeys","id":153,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[26],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"77":{"id":77,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"DefaultHasher","id":69,"args":null}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"958":{"id":958,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"Iter","id":835,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}}],"constraints":[]}}}},"items":[34],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"681":{"id":681,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"From","id":33,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"OccupiedError","id":181,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[37],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"1562":{"id":1562,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"ExtractIf","id":1263,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"F"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":true,"is_synthetic":true,"blanket_impl":null}}},"1285":{"id":1285,"crate_id":0,"name":"IntoIter","span":{"filename":"src/table.rs","begin":[2226,1],"end":[2231,2]},"visibility":"public","docs":"An owning iterator over the entries of a `HashTable` in arbitrary order.\nThe iterator element type is `T`.\n\nThis `struct` is created by the [`into_iter`] method on [`HashTable`]\n(provided by the [`IntoIterator`] trait). See its documentation for more.\nThe table cannot be used after calling that method.\n\n[`into_iter`]: struct.HashTable.html#method.into_iter\n[`HashTable`]: struct.HashTable.html\n[`IntoIterator`]: https://doc.rust-lang.org/core/iter/trait.IntoIterator.html","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"has_stripped_fields":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":{"resolved_path":{"path":"self::inner::Global","id":111,"args":null}},"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"impls":[1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,1515,1516,1517,1518,1520,1525,1527,1528,1530]}}},"404":{"id":404,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"Unpin","id":17,"args":null},"for":{"resolved_path":{"path":"Keys","id":134,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"127":{"id":127,"crate_id":0,"name":"with_capacity_in","span":{"filename":"src/map.rs","begin":[415,5],"end":[417,6]},"visibility":"public","docs":"Creates an empty `HashMap` with the specified capacity using the given allocator.\n\nThe hash map will be able to hold at least `capacity` elements without\nreallocating. If `capacity` is 0, the hash map will not allocate.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashMap` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashMap`], for example with\n[`with_capacity_and_hasher_in`](HashMap::with_capacity_and_hasher_in) method.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\nuse bumpalo::Bump;\n\nlet bump = Bump::new();\nlet mut map = HashMap::with_capacity_in(5, &bump);\n\n// The created HashMap holds none elements\nassert_eq!(map.len(), 0);\n// But it can hold at least 5 elements without reallocating\nlet empty_map_capacity = map.capacity();\nassert!(empty_map_capacity >= 5);\n\n// Now we insert some 5 elements inside created HashMap\nmap.insert(\"One\",   1);\nmap.insert(\"Two\",   2);\nmap.insert(\"Three\", 3);\nmap.insert(\"Four\",  4);\nmap.insert(\"Five\",  5);\n\n// We can see that the HashMap holds 5 elements\nassert_eq!(map.len(), 5);\n// But its capacity isn't changed\nassert_eq!(map.capacity(), empty_map_capacity)\n```","links":{"HashMap::with_capacity_and_hasher_in":126,"`HashMap`":7},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["capacity",{"primitive":"usize"}],["alloc",{"generic":"A"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1008":{"id":1008,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"Drain","id":839,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"731":{"id":731,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Send","id":11,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Send","id":11,"args":null},"for":{"resolved_path":{"path":"RawEntryMut","id":699,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"1612":{"id":1612,"crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[178,17],"end":[178,26]},"visibility":"default","docs":null,"links":{},"attrs":["automatically_derived"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"path":"StructuralPartialEq","id":1613,"args":null},"for":{"resolved_path":{"path":"TryReserveError","id":159,"args":null}},"items":[],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"1335":{"id":1335,"crate_id":0,"name":null,"span":{"filename":"src/table.rs","begin":[1577,1],"end":[1771,2]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Allocator","id":109,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"path":"OccupiedEntry","id":1239,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[1330,1331,1332,1333,1334],"is_negative":false,"is_synthetic":false,"blanket_impl":null}}},"454":{"id":454,"crate_id":0,"name":"Item","span":{"filename":"src/map.rs","begin":[3350,5],"end":[3350,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"V"}}}}}},"177":{"id":177,"crate_id":0,"name":"get_many_key_value_unchecked_mut","span":{"filename":"src/map.rs","begin":[1719,5],"end":[1728,6]},"visibility":"public","docs":"Attempts to get mutable references to `N` values in the map at once, with immutable\nreferences to the corresponding keys, without validating that the values are unique.\n\nReturns an array of length `N` with the results of each query. `None` will be returned if\nany of the keys are missing.\n\nFor a safe alternative see [`get_many_key_value_mut`](`HashMap::get_many_key_value_mut`).\n\n# Safety\n\nCalling this method with overlapping keys is *[undefined behavior]* even if the resulting\nreferences are not used.\n\n[undefined behavior]: https://doc.rust-lang.org/reference/behavior-considered-undefined.html\n\n# Examples\n\n```\nuse hashbrown::HashMap;\n\nlet mut libraries = HashMap::new();\nlibraries.insert(\"Bodleian Library\".to_string(), 1602);\nlibraries.insert(\"Athenæum\".to_string(), 1807);\nlibraries.insert(\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), 1691);\nlibraries.insert(\"Library of Congress\".to_string(), 1800);\n\nlet got = libraries.get_many_key_value_mut([\n    \"Bodleian Library\",\n    \"Herzogin-Anna-Amalia-Bibliothek\",\n]);\nassert_eq!(\n    got,\n    [\n        Some((&\"Bodleian Library\".to_string(), &mut 1602)),\n        Some((&\"Herzogin-Anna-Amalia-Bibliothek\".to_string(), &mut 1691)),\n    ],\n);\n// Missing keys result in None\nlet got = libraries.get_many_key_value_mut([\n    \"Bodleian Library\",\n    \"Gewandhaus\",\n]);\nassert_eq!(\n    got,\n    [\n        Some((&\"Bodleian Library\".to_string(), &mut 1602)),\n        None,\n    ],\n);\n```","links":{"`HashMap::get_many_key_value_mut`":176},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}],["ks",{"array":{"type":{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Q"}}},"len":"N"}}]],"output":{"array":{"type":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"V"}}}]}}],"constraints":[]}}}},"len":"N"}},"is_c_variadic":false},"generics":{"params":[{"name":"Q","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"N","kind":{"const":{"type":{"primitive":"usize"},"default":null}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Q"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Equivalent","id":167,"args":{"angle_bracketed":{"args":[{"type":{"generic":"K"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"path":"Sized","id":24,"args":null},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":true,"is_async":false,"abi":"Rust"},"has_body":true}}},"1058":{"id":1058,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"RefUnwindSafe","id":21,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"Intersection","id":858,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"781":{"id":781,"crate_id":0,"name":"insert","span":{"filename":"src/raw_entry.rs","begin":[1322,5],"end":[1329,6]},"visibility":"public","docs":"Sets the value of the entry with the `VacantEntry`'s key,\nand returns a mutable reference to it.\n\n# Examples\n\n```\nuse hashbrown::hash_map::{HashMap, RawEntryMut};\n\nlet mut map: HashMap<&str, u32> = [(\"a\", 100), (\"b\", 200)].into();\n\nmatch map.raw_entry_mut().from_key(&\"c\") {\n    RawEntryMut::Occupied(_) => panic!(),\n    RawEntryMut::Vacant(v) => assert_eq!(v.insert(\"c\", 300), (&mut \"c\", &mut 300)),\n}\n\nassert_eq!(map[&\"c\"], 300);\n```","links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"generic":"Self"}],["key",{"generic":"K"}],["value",{"generic":"V"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"K"}}},{"borrowed_ref":{"lifetime":"'a","is_mutable":true,"type":{"generic":"V"}}}]},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Hash","id":166,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"BuildHasher","id":71,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1385":{"id":1385,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryInto","id":44,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"AbsentEntry","id":1240,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[39,41],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"504":{"id":504,"crate_id":0,"name":"next","span":{"filename":"src/map.rs","begin":[2611,5],"end":[2613,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":null,"self_type":{"generic":"Self"},"trait":{"path":"","id":270,"args":null}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"227":{"id":227,"crate_id":0,"name":"IntoIter","span":{"filename":"src/map.rs","begin":[3057,5],"end":[3057,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"type":{"resolved_path":{"path":"Iter","id":140,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}}],"constraints":[]}}}}}}},"831":{"id":831,"crate_id":0,"name":"with_capacity_in","span":{"filename":"src/set.rs","begin":[251,5],"end":[255,6]},"visibility":"public","docs":"Creates an empty `HashSet` with the specified capacity.\n\nThe hash set will be able to hold at least `capacity` elements without\nreallocating. If `capacity` is 0, the hash set will not allocate.\n\n# HashDoS resistance\n\nThe `hash_builder` normally use a fixed key by default and that does\nnot allow the `HashSet` to be protected against attacks such as [`HashDoS`].\nUsers who require HashDoS resistance should explicitly use\n[`std::collections::hash_map::RandomState`]\nas the hasher when creating a [`HashSet`], for example with\n[`with_capacity_and_hasher_in`](HashSet::with_capacity_and_hasher_in) method.\n\n[`HashDoS`]: https://en.wikipedia.org/wiki/Collision_attack\n[`std::collections::hash_map::RandomState`]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html\n\n# Examples\n\n```\nuse hashbrown::HashSet;\nlet set: HashSet<i32> = HashSet::with_capacity(10);\nassert!(set.capacity() >= 10);\n```","links":{"`HashSet`":8,"HashSet::with_capacity_and_hasher_in":830},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["capacity",{"primitive":"usize"}],["alloc",{"generic":"A"}]],"output":{"generic":"Self"},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1435":{"id":1435,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"path":"Into","id":36,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"constraints":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"TryFrom","id":40,"args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"constraints":[]}}},"for":{"resolved_path":{"path":"IterMut","id":1254,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"constraints":[]}}}},"items":[45,47],"is_negative":false,"is_synthetic":false,"blanket_impl":{"generic":"T"}}}},"554":{"id":554,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"Sync","id":13,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"Sync","id":13,"args":null},"for":{"resolved_path":{"path":"Entry","id":163,"args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"K"}},{"type":{"generic":"V"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}},"277":{"id":277,"crate_id":0,"name":"fmt","span":{"filename":"src/map.rs","begin":[2171,5],"end":[2173,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"resolved_path":{"path":"fmt::Formatter","id":61,"args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"constraints":[]}}}}}}]],"output":{"resolved_path":{"path":"fmt::Result","id":62,"args":null}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"1158":{"id":1158,"crate_id":0,"name":"next","span":{"filename":"src/set.rs","begin":[2166,5],"end":[2168,6]},"visibility":"default","docs":null,"links":{},"attrs":[{"other":"#[<cfg_attr>(feature = \"inline-more\", inline)]"},{"other":"#[attr = Inline(Hint)]"}],"deprecation":null,"inner":{"function":{"sig":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"is_mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"path":"Option","id":169,"args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","is_mutable":false,"type":{"generic":"T"}}}}],"constraints":[]}}}},"is_c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"is_const":false,"is_unsafe":false,"is_async":false,"abi":"Rust"},"has_body":true}}},"881":{"id":881,"crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"is_synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"A"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"path":"UnwindSafe","id":19,"args":null},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"path":"UnwindSafe","id":19,"args":null},"for":{"resolved_path":{"path":"HashSet","id":8,"args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"S"}},{"type":{"generic":"A"}}],"constraints":[]}}}},"items":[],"is_negative":false,"is_synthetic":true,"blanket_impl":null}}}},"paths":{"2366":{"crate_id":2,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2089":{"crate_id":1,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"50":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1812":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2416":{"crate_id":4,"path":["foldhash","quality","FoldHasher"],"kind":"struct"},"2139":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1258":{"crate_id":0,"path":["hashbrown","table","IterHashMut"],"kind":"struct"},"1862":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2466":{"crate_id":1,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"2189":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"150":{"crate_id":0,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"1912":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1635":{"crate_id":1,"path":["core","hint"],"kind":"module"},"2239":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1962":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1685":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"2289":{"crate_id":2,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2012":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"854":{"crate_id":0,"path":["hashbrown","set","Difference"],"kind":"struct"},"1735":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"2339":{"crate_id":2,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2062":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1785":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2389":{"crate_id":2,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2112":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1835":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2439":{"crate_id":5,"path":["allocator_api2","stable","slice","SliceExt"],"kind":"trait"},"2162":{"crate_id":1,"path":["core","marker","UnsizedConstParamTy"],"kind":"trait"},"1885":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"2489":{"crate_id":1,"path":["core","i64"],"kind":"primitive"},"2212":{"crate_id":1,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"1935":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1658":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2262":{"crate_id":1,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"223":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1985":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1708":{"crate_id":1,"path":["core","bstr","ByteStr"],"kind":"struct"},"2312":{"crate_id":2,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2035":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1758":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2362":{"crate_id":2,"path":["alloc","string","IntoChars"],"kind":"struct"},"2085":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"1808":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"46":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"2412":{"crate_id":3,"path":["compiler_builtins","math","libm_math","generic","fma","Norm"],"kind":"struct"},"1254":{"crate_id":0,"path":["hashbrown","table","IterMut"],"kind":"struct"},"2135":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1858":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2462":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"1581":{"crate_id":0,"path":["hashbrown","hash_set"],"kind":"module"},"2185":{"crate_id":1,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"1908":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"146":{"crate_id":0,"path":["hashbrown","map","Drain"],"kind":"struct"},"1631":{"crate_id":2,"path":["alloc","alloc","handle_alloc_error"],"kind":"function"},"2235":{"crate_id":1,"path":["core","sync","atomic","Sealed"],"kind":"trait"},"1958":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"1681":{"crate_id":1,"path":["core","intrinsics","AtomicOrdering"],"kind":"enum"},"2285":{"crate_id":2,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2008":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1731":{"crate_id":1,"path":["core","range","Range"],"kind":"struct"},"2335":{"crate_id":2,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"2058":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1781":{"crate_id":1,"path":["core","core_arch","simd","f16x4"],"kind":"struct"},"19":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2385":{"crate_id":2,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2108":{"crate_id":1,"path":["core","fmt","builders","FromFn"],"kind":"struct"},"1831":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"69":{"crate_id":0,"path":["hashbrown","hasher","DefaultHasher"],"kind":"struct"},"2435":{"crate_id":5,"path":["allocator_api2","stable","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2158":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1881":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatNInner"],"kind":"struct"},"2485":{"crate_id":1,"path":["core","f128"],"kind":"primitive"},"723":{"crate_id":0,"path":["hashbrown","raw_entry","RawVacantEntryMut"],"kind":"struct"},"2208":{"crate_id":1,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1931":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"169":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"1654":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2258":{"crate_id":1,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"1981":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1704":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2308":{"crate_id":2,"path":["alloc","sync","UniqueArc"],"kind":"struct"},"2031":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1754":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2358":{"crate_id":2,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2081":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1804":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"42":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"2408":{"crate_id":3,"path":["compiler_builtins","math","libm_math","support","env","Round"],"kind":"enum"},"2131":{"crate_id":1,"path":["core","task","wake","ExtData"],"kind":"enum"},"1854":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2458":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2181":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"1904":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"142":{"crate_id":0,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1627":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2231":{"crate_id":1,"path":["core","pat","RangePattern"],"kind":"trait"},"1954":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1677":{"crate_id":1,"path":["core","num","niche_types","U64NotAllOnes"],"kind":"struct"},"2281":{"crate_id":2,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2004":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"242":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1727":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2331":{"crate_id":2,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2054":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"15":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1777":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"619":{"crate_id":0,"path":["hashbrown","map","EntryRef","Occupied"],"kind":"variant"},"2381":{"crate_id":2,"path":["alloc","collections","btree","set","entry","Entry"],"kind":"enum"},"2104":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1827":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2431":{"crate_id":5,"path":["allocator_api2","stable","vec","drain","Drain"],"kind":"struct"},"2154":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1877":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2481":{"crate_id":1,"path":["core","tuple"],"kind":"primitive"},"2204":{"crate_id":1,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"165":{"crate_id":0,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1927":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1650":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2254":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1977":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1700":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2304":{"crate_id":2,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2027":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1750":{"crate_id":1,"path":["core","wtf8","CodePoint"],"kind":"struct"},"2354":{"crate_id":2,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2077":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1800":{"crate_id":1,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"2404":{"crate_id":3,"path":["compiler_builtins","int","big","u256"],"kind":"struct"},"2127":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1850":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2454":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"2177":{"crate_id":1,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"138":{"crate_id":0,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1900":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1623":{"crate_id":1,"path":["core","core_arch","arch","x86_64"],"kind":"module"},"2227":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"188":{"crate_id":0,"path":["hashbrown","raw_entry","RawEntryBuilderMut"],"kind":"struct"},"1950":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1673":{"crate_id":1,"path":["core","num","niche_types","NonZeroUsizeInner"],"kind":"struct"},"2277":{"crate_id":2,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2000":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"842":{"crate_id":0,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"1723":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2327":{"crate_id":2,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2050":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"288":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1773":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"11":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"2377":{"crate_id":2,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2100":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1823":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"61":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"2427":{"crate_id":5,"path":["allocator_api2","stable","raw_vec","TryReserveErrorKind"],"kind":"enum"},"2150":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1873":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"111":{"crate_id":5,"path":["allocator_api2","stable","alloc","global","Global"],"kind":"struct"},"2477":{"crate_id":1,"path":["core","pointer"],"kind":"primitive"},"2200":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1923":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1646":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2250":{"crate_id":1,"path":["core","core_simd","swizzle","extract","Extract"],"kind":"struct"},"1973":{"crate_id":1,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"1696":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2300":{"crate_id":2,"path":["alloc","rc","UniqueRcUninit"],"kind":"struct"},"2023":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1746":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2350":{"crate_id":2,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2073":{"crate_id":1,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"1796":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2400":{"crate_id":2,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2123":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1846":{"crate_id":1,"path":["core","ffi","va_list","VaListImpl"],"kind":"struct"},"2450":{"crate_id":1,"path":["core","str","converts","from_utf8"],"kind":"function"},"688":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"2173":{"crate_id":2,"path":["alloc","slice","Concat"],"kind":"trait"},"1896":{"crate_id":1,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"134":{"crate_id":0,"path":["hashbrown","map","Keys"],"kind":"struct"},"1619":{"crate_id":0,"path":["hashbrown"],"kind":"module"},"2223":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1946":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1669":{"crate_id":1,"path":["core","num","niche_types","NonZeroI64Inner"],"kind":"struct"},"2273":{"crate_id":2,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1996":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1719":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2323":{"crate_id":2,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2046":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1769":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"7":{"crate_id":0,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2373":{"crate_id":2,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2096":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1819":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"938":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"57":{"crate_id":2,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2423":{"crate_id":5,"path":["allocator_api2","stable","alloc","AllocError"],"kind":"struct"},"2146":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1869":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2473":{"crate_id":1,"path":["core","bool"],"kind":"primitive"},"1592":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2196":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1919":{"crate_id":1,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"1642":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2246":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1969":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"1692":{"crate_id":1,"path":["core","marker","variance","PhantomInvariantLifetime"],"kind":"struct"},"2296":{"crate_id":2,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2019":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1742":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2346":{"crate_id":2,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2069":{"crate_id":1,"path":["core","mem","drop_guard","DropGuard"],"kind":"struct"},"1792":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2396":{"crate_id":2,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2119":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1842":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"2446":{"crate_id":1,"path":["core","mem","replace"],"kind":"function"},"2169":{"crate_id":1,"path":["core","slice","GetDisjointMutIndex"],"kind":"trait"},"1892":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"2496":{"crate_id":1,"path":["core","isize"],"kind":"primitive"},"2219":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1942":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"784":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1665":{"crate_id":1,"path":["core","num","niche_types","NonZeroU128Inner"],"kind":"struct"},"2269":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"1992":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"230":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1715":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2319":{"crate_id":2,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2042":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1765":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2369":{"crate_id":2,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2092":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1815":{"crate_id":1,"path":["core","core_arch","simd","i32x32"],"kind":"struct"},"2419":{"crate_id":4,"path":["foldhash","quality","FixedState"],"kind":"struct"},"2142":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1261":{"crate_id":0,"path":["hashbrown","table","Drain"],"kind":"struct"},"1865":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2469":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2192":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"153":{"crate_id":0,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1915":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1638":{"crate_id":1,"path":["core","hash","macros","Hash"],"kind":"proc_derive"},"2242":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"1965":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1688":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"2292":{"crate_id":2,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"2015":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1738":{"crate_id":1,"path":["core","fmt","DebugAsHex"],"kind":"enum"},"2342":{"crate_id":2,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2065":{"crate_id":1,"path":["core","core_arch","x86","__m512h"],"kind":"struct"},"1788":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2392":{"crate_id":2,"path":["alloc","vec","peek_mut","PeekMut"],"kind":"struct"},"2115":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1838":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2442":{"crate_id":1,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2165":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1888":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"2492":{"crate_id":1,"path":["core","u16"],"kind":"primitive"},"2215":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1938":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"1661":{"crate_id":1,"path":["core","num","niche_types","Nanoseconds"],"kind":"struct"},"2265":{"crate_id":1,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"1988":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1711":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"2315":{"crate_id":2,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2038":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1761":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2365":{"crate_id":2,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2088":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1811":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2415":{"crate_id":4,"path":["foldhash","fast","FixedState"],"kind":"struct"},"2138":{"crate_id":1,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"1861":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2465":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"2188":{"crate_id":1,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"1911":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1634":{"crate_id":1,"path":["core","slice"],"kind":"module"},"2238":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1961":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1684":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2288":{"crate_id":2,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2011":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1734":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2338":{"crate_id":2,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2061":{"crate_id":1,"path":["core","core_arch","x86","__m128h"],"kind":"struct"},"1784":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2388":{"crate_id":2,"path":["alloc","collections","btree","set","CursorMutKey"],"kind":"struct"},"2111":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1834":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2438":{"crate_id":5,"path":["allocator_api2","stable","slice","to_vec_in","DropGuard"],"kind":"struct"},"2161":{"crate_id":1,"path":["core","marker","ConstParamTy_"],"kind":"trait"},"1884":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2488":{"crate_id":1,"path":["core","i32"],"kind":"primitive"},"2211":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1934":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1657":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2261":{"crate_id":1,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"1984":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1707":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"2311":{"crate_id":2,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2034":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1757":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2361":{"crate_id":2,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2084":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"1807":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"926":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"2411":{"crate_id":3,"path":["compiler_builtins","math","libm_math","support","hex_float","HexFloatParseError"],"kind":"struct"},"2134":{"crate_id":1,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"1857":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2461":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"699":{"crate_id":0,"path":["hashbrown","raw_entry","RawEntryMut"],"kind":"enum"},"1303":{"crate_id":0,"path":["hashbrown","table","Entry","Occupied"],"kind":"variant"},"2184":{"crate_id":1,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1907":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1630":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2234":{"crate_id":1,"path":["core","sync","atomic","AtomicPrimitive"],"kind":"trait"},"1957":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1680":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"2284":{"crate_id":2,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2007":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"245":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1730":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"2334":{"crate_id":2,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2057":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1780":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"622":{"crate_id":0,"path":["hashbrown","map","EntryRef","Vacant"],"kind":"variant"},"2384":{"crate_id":2,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2107":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1830":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2434":{"crate_id":5,"path":["allocator_api2","stable","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2157":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"1880":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2484":{"crate_id":1,"path":["core","f64"],"kind":"primitive"},"2207":{"crate_id":1,"path":["core","marker","variance","sealed","Sealed"],"kind":"trait"},"1930":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"1653":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2257":{"crate_id":1,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"1980":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1703":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2307":{"crate_id":2,"path":["alloc","sync","UniqueArcUninit"],"kind":"struct"},"545":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2030":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1753":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2357":{"crate_id":2,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2080":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"922":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1803":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2407":{"crate_id":3,"path":["compiler_builtins","math","libm_math","support","big","i256"],"kind":"struct"},"2130":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1853":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2457":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"2180":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"1903":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1626":{"crate_id":1,"path":["core","num","niche_types","NonZeroU16Inner"],"kind":"struct"},"2230":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1953":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1676":{"crate_id":1,"path":["core","num","niche_types","I32NotAllOnes"],"kind":"struct"},"2280":{"crate_id":2,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2003":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1726":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2330":{"crate_id":2,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2053":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1776":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2380":{"crate_id":2,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"2103":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"945":{"crate_id":0,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"64":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1826":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"2430":{"crate_id":5,"path":["allocator_api2","stable","vec","splice","Splice"],"kind":"struct"},"2153":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1876":{"crate_id":1,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2480":{"crate_id":1,"path":["core","str"],"kind":"primitive"},"2203":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"1926":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1649":{"crate_id":1,"path":["core","num","dec2flt","decimal_seq","DecimalSeq"],"kind":"struct"},"2253":{"crate_id":1,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1976":{"crate_id":1,"path":["core","escape","MaybeEscaped"],"kind":"struct"},"214":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1699":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2303":{"crate_id":2,"path":["alloc","string","Drain"],"kind":"struct"},"2026":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1749":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2353":{"crate_id":2,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2076":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1799":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"918":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2403":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2126":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1849":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2453":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"2176":{"crate_id":1,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"1899":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1622":{"crate_id":1,"path":["core","mem"],"kind":"module"},"2226":{"crate_id":1,"path":["core","ffi","va_list","sealed","Sealed"],"kind":"trait"},"1949":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1672":{"crate_id":1,"path":["core","num","niche_types","UsizeNoHighBit"],"kind":"struct"},"2276":{"crate_id":2,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1999":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"237":{"crate_id":0,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1722":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2326":{"crate_id":2,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2049":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1772":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2376":{"crate_id":2,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2099":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1822":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2426":{"crate_id":5,"path":["allocator_api2","stable","raw_vec","TryReserveError"],"kind":"struct"},"2149":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1872":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2476":{"crate_id":1,"path":["core","unit"],"kind":"primitive"},"2199":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1922":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1645":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2249":{"crate_id":1,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"1972":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1695":{"crate_id":1,"path":["core","marker","variance","PhantomInvariant"],"kind":"struct"},"537":{"crate_id":0,"path":["hashbrown","map","Entry","Occupied"],"kind":"variant"},"2299":{"crate_id":2,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"2022":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1745":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2349":{"crate_id":2,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2072":{"crate_id":1,"path":["core","error","tags","Value"],"kind":"struct"},"33":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"914":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1795":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2399":{"crate_id":2,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1241":{"crate_id":0,"path":["hashbrown","table","Entry"],"kind":"enum"},"2122":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1845":{"crate_id":1,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"2449":{"crate_id":1,"path":["core","str","converts","from_utf8_unchecked"],"kind":"function"},"2172":{"crate_id":2,"path":["alloc","boxed","Box"],"kind":"struct"},"1895":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"2499":{"crate_id":1,"path":["core","fn"],"kind":"primitive"},"2222":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1945":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1668":{"crate_id":1,"path":["core","num","niche_types","NonZeroI32Inner"],"kind":"struct"},"2272":{"crate_id":2,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"1995":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1718":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"enum"},"2322":{"crate_id":2,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2045":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1164":{"crate_id":0,"path":["hashbrown","set","Entry","Occupied"],"kind":"variant"},"1768":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2372":{"crate_id":2,"path":["alloc","boxed","convert","from","StringError"],"kind":"struct"},"2095":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1818":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2422":{"crate_id":4,"path":["foldhash","seed","global","GlobalSeedStorage"],"kind":"struct"},"2145":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"106":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1868":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2472":{"crate_id":6,"path":["equivalent"],"kind":"module"},"2195":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1918":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1641":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2245":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1968":{"crate_id":1,"path":["core","wtf8","EncodeWide"],"kind":"struct"},"1691":{"crate_id":1,"path":["core","marker","variance","PhantomContravariantLifetime"],"kind":"struct"},"2295":{"crate_id":2,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2018":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"860":{"crate_id":0,"path":["hashbrown","set","Union"],"kind":"struct"},"1741":{"crate_id":1,"path":["core","slice","GetDisjointMutError"],"kind":"enum"},"2345":{"crate_id":2,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2068":{"crate_id":1,"path":["core","clone","UseCloned"],"kind":"trait"},"1791":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2395":{"crate_id":2,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2118":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1841":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"2445":{"crate_id":1,"path":["core","mem","take"],"kind":"function"},"2168":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1891":{"crate_id":1,"path":["core","range","iter","IterRangeFrom"],"kind":"struct"},"2495":{"crate_id":1,"path":["core","u128"],"kind":"primitive"},"2218":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"1941":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1664":{"crate_id":1,"path":["core","num","niche_types","NonZeroU64Inner"],"kind":"struct"},"2268":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"1991":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1714":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2318":{"crate_id":2,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2041":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1764":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2368":{"crate_id":2,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2091":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"1814":{"crate_id":1,"path":["core","core_arch","simd","u16x64"],"kind":"struct"},"52":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"2418":{"crate_id":4,"path":["foldhash","quality","SeedableRandomState"],"kind":"struct"},"2141":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1864":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"2468":{"crate_id":2,"path":["alloc"],"kind":"module"},"2191":{"crate_id":1,"path":["core","pin","PinCoerceUnsized"],"kind":"trait"},"1914":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1637":{"crate_id":1,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2241":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1964":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1687":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"2291":{"crate_id":2,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2014":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1737":{"crate_id":1,"path":["core","fmt","Sign"],"kind":"enum"},"856":{"crate_id":0,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2341":{"crate_id":2,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2064":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1787":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"25":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"2391":{"crate_id":2,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2114":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1837":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"2441":{"crate_id":2,"path":["alloc","alloc","alloc"],"kind":"function"},"2164":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1887":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"2491":{"crate_id":1,"path":["core","u8"],"kind":"primitive"},"2214":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1937":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"1660":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2264":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"1987":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1710":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"2314":{"crate_id":2,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2037":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1760":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2364":{"crate_id":2,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2087":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"1810":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"929":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2414":{"crate_id":4,"path":["foldhash","fast","SeedableRandomState"],"kind":"struct"},"1256":{"crate_id":0,"path":["hashbrown","table","IterHash"],"kind":"struct"},"2137":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1860":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2464":{"crate_id":1,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"1583":{"crate_id":0,"path":["hashbrown","hash_table"],"kind":"module"},"1306":{"crate_id":0,"path":["hashbrown","table","Entry","Vacant"],"kind":"variant"},"2187":{"crate_id":1,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"1910":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"148":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1633":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"2237":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1960":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1683":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"2287":{"crate_id":2,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2010":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"248":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"1733":{"crate_id":1,"path":["core","range","RangeFrom"],"kind":"struct"},"2337":{"crate_id":2,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2060":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"21":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1783":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2387":{"crate_id":2,"path":["alloc","collections","btree","set","CursorMut"],"kind":"struct"},"2110":{"crate_id":1,"path":["core","fmt","num_buffer","NumBufferTrait"],"kind":"trait"},"71":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1833":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2437":{"crate_id":5,"path":["allocator_api2","stable","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2160":{"crate_id":1,"path":["core","intrinsics","fallback","DisjointBitOr"],"kind":"trait"},"1883":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2487":{"crate_id":1,"path":["core","i16"],"kind":"primitive"},"2210":{"crate_id":1,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"1933":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1656":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2260":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1983":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1706":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"2310":{"crate_id":2,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2033":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1756":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"2360":{"crate_id":2,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2083":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"44":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1806":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2410":{"crate_id":3,"path":["compiler_builtins","math","libm_math","support","feature_detect","Flags"],"kind":"struct"},"2133":{"crate_id":1,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"1252":{"crate_id":0,"path":["hashbrown","table","Iter"],"kind":"struct"},"1856":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1579":{"crate_id":0,"path":["hashbrown","hash_map"],"kind":"module"},"2460":{"crate_id":1,"path":["core","write"],"kind":"macro"},"2183":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1906":{"crate_id":1,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"1629":{"crate_id":4,"path":["foldhash","fast","RandomState"],"kind":"struct"},"2233":{"crate_id":1,"path":["core","random","Distribution"],"kind":"trait"},"1956":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1679":{"crate_id":1,"path":["core","num","niche_types","CodePointInner"],"kind":"struct"},"2283":{"crate_id":2,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2006":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1729":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"2333":{"crate_id":2,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2056":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1779":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"2383":{"crate_id":2,"path":["alloc","collections","btree","set","entry","VacantEntry"],"kind":"struct"},"621":{"crate_id":0,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2106":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1829":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"67":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"2433":{"crate_id":5,"path":["allocator_api2","stable","vec","drain","drop","DropGuard"],"kind":"struct"},"2156":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1879":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2483":{"crate_id":1,"path":["core","f32"],"kind":"primitive"},"721":{"crate_id":0,"path":["hashbrown","raw_entry","RawEntryMut","Occupied"],"kind":"variant"},"2206":{"crate_id":1,"path":["core","marker","variance","Variance"],"kind":"trait"},"1929":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"167":{"crate_id":6,"path":["equivalent","Equivalent"],"kind":"trait"},"1652":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2256":{"crate_id":1,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"1979":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1702":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2306":{"crate_id":2,"path":["alloc","sync","Weak"],"kind":"struct"},"2029":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1752":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"2356":{"crate_id":2,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2079":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1802":{"crate_id":1,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"40":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"2406":{"crate_id":3,"path":["compiler_builtins","math","libm_math","support","big","u256"],"kind":"struct"},"2129":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1852":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2456":{"crate_id":1,"path":["core","ptr","metadata","metadata"],"kind":"function"},"2179":{"crate_id":1,"path":["core","clone","uninit","InitializingSlice"],"kind":"struct"},"1902":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"140":{"crate_id":0,"path":["hashbrown","map","Iter"],"kind":"struct"},"1625":{"crate_id":1,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"2229":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"1952":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"190":{"crate_id":0,"path":["hashbrown","raw_entry","RawEntryBuilder"],"kind":"struct"},"1675":{"crate_id":1,"path":["core","num","niche_types","U32NotAllOnes"],"kind":"struct"},"2279":{"crate_id":2,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2002":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1725":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"2329":{"crate_id":2,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2052":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"290":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1775":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"13":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"2379":{"crate_id":2,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2102":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1825":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2429":{"crate_id":5,"path":["allocator_api2","stable","vec","Vec"],"kind":"struct"},"2152":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1875":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2479":{"crate_id":1,"path":["core","slice"],"kind":"primitive"},"2202":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1925":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"163":{"crate_id":0,"path":["hashbrown","map","Entry"],"kind":"enum"},"1648":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2252":{"crate_id":1,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1975":{"crate_id":1,"path":["core","escape","AlwaysEscaped"],"kind":"struct"},"1698":{"crate_id":1,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"540":{"crate_id":0,"path":["hashbrown","map","Entry","Vacant"],"kind":"variant"},"2302":{"crate_id":2,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2025":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1748":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2352":{"crate_id":2,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2075":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"36":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"1798":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2402":{"crate_id":2,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2125":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1848":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2452":{"crate_id":1,"path":["core","intrinsics","disjoint_bitor"],"kind":"function"},"2175":{"crate_id":1,"path":["core","ffi","va_list","VaArgSafe"],"kind":"trait"},"1898":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"136":{"crate_id":0,"path":["hashbrown","map","Values"],"kind":"struct"},"1621":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"type_alias"},"2225":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1948":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"186":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1671":{"crate_id":1,"path":["core","num","niche_types","NonZeroCharInner"],"kind":"struct"},"2275":{"crate_id":2,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1998":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1721":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2325":{"crate_id":2,"path":["alloc","bstr","ByteString"],"kind":"struct"},"2048":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1167":{"crate_id":0,"path":["hashbrown","set","Entry","Vacant"],"kind":"variant"},"9":{"crate_id":0,"path":["hashbrown","hasher","DefaultHashBuilder"],"kind":"struct"},"1771":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2375":{"crate_id":2,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2098":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1821":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2425":{"crate_id":5,"path":["allocator_api2","stable","boxed","Box"],"kind":"struct"},"2148":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"109":{"crate_id":5,"path":["allocator_api2","stable","alloc","Allocator"],"kind":"trait"},"1871":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2475":{"crate_id":1,"path":["core","char"],"kind":"primitive"},"2198":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"159":{"crate_id":0,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1921":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1644":{"crate_id":1,"path":["core","ops","deref","Receiver"],"kind":"trait"},"2248":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1971":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1694":{"crate_id":1,"path":["core","marker","variance","PhantomContravariant"],"kind":"struct"},"2298":{"crate_id":2,"path":["alloc","rc","Weak"],"kind":"struct"},"536":{"crate_id":0,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2021":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1744":{"crate_id":1,"path":["core","str","pattern","Utf8Pattern"],"kind":"enum"},"2348":{"crate_id":2,"path":["alloc","collections","btree","set","Cursor"],"kind":"struct"},"2071":{"crate_id":1,"path":["core","error","Request"],"kind":"struct"},"1794":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"32":{"crate_id":1,"path":["core","clone","CloneToUninit"],"kind":"trait"},"2398":{"crate_id":2,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2121":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1240":{"crate_id":0,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"1844":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"struct"},"2448":{"crate_id":1,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"686":{"crate_id":2,"path":["alloc","string","String"],"kind":"struct"},"2171":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1894":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2498":{"crate_id":1,"path":["core","reference"],"kind":"primitive"},"2221":{"crate_id":1,"path":["core","ops","range","OneSidedRangeBound"],"kind":"enum"},"1944":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1667":{"crate_id":1,"path":["core","num","niche_types","NonZeroI16Inner"],"kind":"struct"},"2271":{"crate_id":2,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1994":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1717":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2321":{"crate_id":2,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1163":{"crate_id":0,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2044":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1767":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2371":{"crate_id":2,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2094":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1817":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2421":{"crate_id":4,"path":["foldhash","seed","global","GlobalSeed"],"kind":"struct"},"1263":{"crate_id":0,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"2144":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"1867":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1590":{"crate_id":0,"path":["hashbrown","TryReserveError","CapacityOverflow"],"kind":"variant"},"2471":{"crate_id":5,"path":["allocator_api2"],"kind":"module"},"2194":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1917":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"155":{"crate_id":0,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1640":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"2244":{"crate_id":1,"path":["core","core_simd","swizzle","shift_elements_right","Shift"],"kind":"struct"},"1967":{"crate_id":1,"path":["core","wtf8","Wtf8CodePoints"],"kind":"struct"},"1690":{"crate_id":1,"path":["core","marker","variance","PhantomCovariantLifetime"],"kind":"struct"},"2294":{"crate_id":2,"path":["alloc","collections","vec_deque","truncate_front","Dropper"],"kind":"struct"},"2017":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1740":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2344":{"crate_id":2,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2067":{"crate_id":1,"path":["core","core_arch","x86","bf16"],"kind":"struct"},"1790":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"28":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2394":{"crate_id":2,"path":["alloc","task","LocalWake"],"kind":"trait"},"2117":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1840":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"2444":{"crate_id":1,"path":["core","mem","forget"],"kind":"function"},"2167":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1890":{"crate_id":1,"path":["core","range","iter","IterRangeInclusive"],"kind":"struct"},"2494":{"crate_id":1,"path":["core","u64"],"kind":"primitive"},"1613":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2217":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1940":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1663":{"crate_id":1,"path":["core","num","niche_types","NonZeroU32Inner"],"kind":"struct"},"2267":{"crate_id":1,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"1990":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1713":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2317":{"crate_id":2,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"2040":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1763":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2367":{"crate_id":2,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2090":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1813":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"932":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2417":{"crate_id":4,"path":["foldhash","quality","RandomState"],"kind":"struct"},"2140":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1863":{"crate_id":1,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"2467":{"crate_id":1,"path":["core"],"kind":"module"},"2190":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1913":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1636":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"2240":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1963":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1686":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2290":{"crate_id":2,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2013":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1736":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"2340":{"crate_id":2,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2063":{"crate_id":1,"path":["core","core_arch","x86","__m256h"],"kind":"struct"},"24":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1786":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2390":{"crate_id":2,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"2113":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1836":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2440":{"crate_id":6,"path":["equivalent","Comparable"],"kind":"trait"},"2163":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1886":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"2490":{"crate_id":1,"path":["core","i128"],"kind":"primitive"},"2213":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1936":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1659":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2263":{"crate_id":1,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"1986":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1709":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2313":{"crate_id":2,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2036":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1759":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2363":{"crate_id":2,"path":["alloc","wtf8","Wtf8Buf"],"kind":"struct"},"2086":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1809":{"crate_id":1,"path":["core","core_arch","simd","f16x32"],"kind":"struct"},"2413":{"crate_id":4,"path":["foldhash","fast","FoldHasher"],"kind":"struct"},"2136":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1859":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2463":{"crate_id":1,"path":["core","ptr","without_provenance"],"kind":"function"},"2186":{"crate_id":1,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"1305":{"crate_id":0,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"1909":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1632":{"crate_id":1,"path":["core","array"],"kind":"module"},"2236":{"crate_id":1,"path":["core","slice","private_get_disjoint_mut_index","Sealed"],"kind":"trait"},"1959":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1682":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2286":{"crate_id":2,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2009":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1732":{"crate_id":1,"path":["core","range","RangeInclusive"],"kind":"struct"},"2336":{"crate_id":2,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2059":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1782":{"crate_id":1,"path":["core","core_arch","simd","f16x8"],"kind":"struct"},"2386":{"crate_id":2,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"1228":{"crate_id":0,"path":["hashbrown","table","HashTable"],"kind":"struct"},"2109":{"crate_id":1,"path":["core","fmt","num_buffer","NumBuffer"],"kind":"struct"},"1832":{"crate_id":1,"path":["core","array","iter","iter_inner","PolymorphicIter"],"kind":"struct"},"2436":{"crate_id":5,"path":["allocator_api2","stable","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2159":{"crate_id":1,"path":["core","intrinsics","fallback","CarryingMulAdd"],"kind":"trait"},"1882":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2486":{"crate_id":1,"path":["core","i8"],"kind":"primitive"},"724":{"crate_id":0,"path":["hashbrown","raw_entry","RawEntryMut","Vacant"],"kind":"variant"},"2209":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"1932":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1655":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"2259":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1982":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1705":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2309":{"crate_id":2,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"270":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2032":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1755":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2359":{"crate_id":2,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2082":{"crate_id":1,"path":["core","ffi","va_list","VaList"],"kind":"struct"},"1805":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2409":{"crate_id":3,"path":["compiler_builtins","math","libm_math","support","env","Status"],"kind":"struct"},"2132":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1855":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2459":{"crate_id":1,"path":["core","iter"],"kind":"module"},"2182":{"crate_id":1,"path":["core","cell","lazy","force_mut","really_init_mut","PoisonOnPanic"],"kind":"struct"},"1905":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1628":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"2232":{"crate_id":1,"path":["core","random","RandomSource"],"kind":"trait"},"1955":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1678":{"crate_id":1,"path":["core","num","niche_types","I64NotAllOnes"],"kind":"struct"},"2282":{"crate_id":2,"path":["alloc","collections","btree","node","drop_key_val","Dropper"],"kind":"struct"},"2005":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1728":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2332":{"crate_id":2,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2055":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1778":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2382":{"crate_id":2,"path":["alloc","collections","btree","set","entry","OccupiedEntry"],"kind":"struct"},"2105":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1828":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2432":{"crate_id":5,"path":["allocator_api2","stable","raw_vec","RawVec"],"kind":"struct"},"2155":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"1878":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2482":{"crate_id":1,"path":["core","f16"],"kind":"primitive"},"720":{"crate_id":0,"path":["hashbrown","raw_entry","RawOccupiedEntryMut"],"kind":"struct"},"2205":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1928":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"166":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1651":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2255":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1978":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1701":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"2305":{"crate_id":2,"path":["alloc","sync","Arc"],"kind":"struct"},"2028":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1751":{"crate_id":1,"path":["core","wtf8","Wtf8"],"kind":"struct"},"2355":{"crate_id":2,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2078":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1801":{"crate_id":1,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"2405":{"crate_id":3,"path":["compiler_builtins","int","big","i256"],"kind":"struct"},"2128":{"crate_id":1,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"1851":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2455":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"2178":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"1901":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1624":{"crate_id":1,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"2228":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1951":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1674":{"crate_id":1,"path":["core","num","niche_types","NonZeroIsizeInner"],"kind":"struct"},"2278":{"crate_id":2,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2001":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1724":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2328":{"crate_id":2,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2051":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1774":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2378":{"crate_id":2,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2101":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1824":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"62":{"crate_id":1,"path":["core","fmt","Result"],"kind":"type_alias"},"2428":{"crate_id":5,"path":["allocator_api2","stable","vec","into_iter","IntoIter"],"kind":"struct"},"2151":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1874":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2478":{"crate_id":1,"path":["core","array"],"kind":"primitive"},"2201":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1924":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1647":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2251":{"crate_id":1,"path":["core","core_simd","vector","splat","splat_rt","Splat"],"kind":"struct"},"1974":{"crate_id":1,"path":["core","escape","MaybeEscapedCharacter"],"kind":"union"},"1697":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2301":{"crate_id":2,"path":["alloc","slice","to_vec_in","to_vec","DropGuard"],"kind":"struct"},"539":{"crate_id":0,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2024":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"866":{"crate_id":0,"path":["hashbrown","set","Entry"],"kind":"enum"},"1747":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"2351":{"crate_id":2,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2074":{"crate_id":1,"path":["core","error","tags","Ref"],"kind":"struct"},"1797":{"crate_id":1,"path":["core","core_arch","simd","f16x16"],"kind":"struct"},"2401":{"crate_id":2,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2124":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1847":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2451":{"crate_id":1,"path":["core","str","pattern"],"kind":"module"},"689":{"crate_id":2,"path":["alloc","string","ToString"],"kind":"trait"},"2174":{"crate_id":2,"path":["alloc","slice","Join"],"kind":"trait"},"1897":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1620":{"crate_id":1,"path":["core","marker","MetaSized"],"kind":"trait"},"2224":{"crate_id":1,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"1947":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1670":{"crate_id":1,"path":["core","num","niche_types","NonZeroI128Inner"],"kind":"struct"},"2274":{"crate_id":2,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"1997":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"839":{"crate_id":0,"path":["hashbrown","set","Drain"],"kind":"struct"},"1720":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2324":{"crate_id":2,"path":["alloc","borrow","Cow"],"kind":"enum"},"1166":{"crate_id":0,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2047":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1770":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"8":{"crate_id":0,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2374":{"crate_id":2,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2097":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1820":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2424":{"crate_id":5,"path":["allocator_api2","stable","unique","Unique"],"kind":"struct"},"2147":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"1870":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1593":{"crate_id":0,"path":["hashbrown","TryReserveError","AllocError"],"kind":"variant"},"2474":{"crate_id":1,"path":["core","never"],"kind":"primitive"},"2197":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1920":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"1643":{"crate_id":1,"path":["core","marker","UnsafeUnpin"],"kind":"trait"},"2247":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1970":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1693":{"crate_id":1,"path":["core","marker","variance","PhantomCovariant"],"kind":"struct"},"2297":{"crate_id":2,"path":["alloc","rc","Rc"],"kind":"struct"},"2020":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1743":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2347":{"crate_id":2,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2070":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"1793":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"31":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"2397":{"crate_id":2,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1239":{"crate_id":0,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"2120":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1843":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"2447":{"crate_id":1,"path":["core","ffi","primitives","c_char"],"kind":"type_alias"},"2170":{"crate_id":2,"path":["alloc","vec","Vec"],"kind":"struct"},"1893":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"2497":{"crate_id":1,"path":["core","usize"],"kind":"primitive"},"2220":{"crate_id":1,"path":["core","ops","range","IntoBounds"],"kind":"trait"},"1943":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"181":{"crate_id":0,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1666":{"crate_id":1,"path":["core","num","niche_types","NonZeroI8Inner"],"kind":"struct"},"2270":{"crate_id":2,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1993":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1716":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"835":{"crate_id":0,"path":["hashbrown","set","Iter"],"kind":"struct"},"2320":{"crate_id":2,"path":["alloc","alloc","Global"],"kind":"struct"},"2043":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1766":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2370":{"crate_id":2,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2093":{"crate_id":1,"path":["core","pin","unsafe_pinned","UnsafePinned"],"kind":"struct"},"1816":{"crate_id":1,"path":["core","core_arch","simd","u32x32"],"kind":"struct"},"935":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2420":{"crate_id":4,"path":["foldhash","seed","SharedSeed"],"kind":"struct"},"2143":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"1866":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2470":{"crate_id":4,"path":["foldhash"],"kind":"module"},"2193":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"1916":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1639":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2243":{"crate_id":1,"path":["core","core_simd","swizzle","shift_elements_left","Shift"],"kind":"struct"},"1966":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1689":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"2293":{"crate_id":2,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2016":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"858":{"crate_id":0,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1739":{"crate_id":1,"path":["core","fmt","FormattingOptions"],"kind":"struct"},"2343":{"crate_id":2,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2066":{"crate_id":1,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1789":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2393":{"crate_id":2,"path":["alloc","task","Wake"],"kind":"trait"},"2116":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1839":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2443":{"crate_id":1,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"1285":{"crate_id":0,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2166":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1889":{"crate_id":1,"path":["core","range","iter","IterRange"],"kind":"struct"},"2493":{"crate_id":1,"path":["core","u32"],"kind":"primitive"},"2216":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1939":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1662":{"crate_id":1,"path":["core","num","niche_types","NonZeroU8Inner"],"kind":"struct"},"2266":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"1989":{"crate_id":1,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1712":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2316":{"crate_id":2,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2039":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1762":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"}},"external_crates":{"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"allocator_api2","html_root_url":null},"6":{"name":"equivalent","html_root_url":null},"4":{"name":"foldhash","html_root_url":null},"2":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"}},"target":{"triple":"x86_64-unknown-linux-gnu","target_features":[{"name":"adx","implies_features":[],"unstable_feature_gate":null,"globally_enabled":false},{"name":"aes","implies_features":["sse2"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"amx-avx512","implies_features":["amx-tile"],"unstable_feature_gate":"x86_amx_intrinsics","globally_enabled":false},{"name":"amx-bf16","implies_features":["amx-tile"],"unstable_feature_gate":"x86_amx_intrinsics","globally_enabled":false},{"name":"amx-complex","implies_features":["amx-tile"],"unstable_feature_gate":"x86_amx_intrinsics","globally_enabled":false},{"name":"amx-fp8","implies_features":["amx-tile"],"unstable_feature_gate":"x86_amx_intrinsics","globally_enabled":false},{"name":"amx-fp16","implies_features":["amx-tile"],"unstable_feature_gate":"x86_amx_intrinsics","globally_enabled":false},{"name":"amx-int8","implies_features":["amx-tile"],"unstable_feature_gate":"x86_amx_intrinsics","globally_enabled":false},{"name":"amx-movrs","implies_features":["amx-tile"],"unstable_feature_gate":"x86_amx_intrinsics","globally_enabled":false},{"name":"amx-tf32","implies_features":["amx-tile"],"unstable_feature_gate":"x86_amx_intrinsics","globally_enabled":false},{"name":"amx-tile","implies_features":[],"unstable_feature_gate":"x86_amx_intrinsics","globally_enabled":false},{"name":"amx-transpose","implies_features":["amx-tile"],"unstable_feature_gate":"x86_amx_intrinsics","globally_enabled":false},{"name":"apxf","implies_features":[],"unstable_feature_gate":"apx_target_feature","globally_enabled":false},{"name":"avx","implies_features":["sse4.2"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"avx2","implies_features":["avx"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"avx10.1","implies_features":["avx512bf16","avx512bitalg","avx512bw","avx512cd","avx512dq","avx512f","avx512fp16","avx512ifma","avx512vbmi","avx512vbmi2","avx512vl","avx512vnni","avx512vpopcntdq"],"unstable_feature_gate":"avx10_target_feature","globally_enabled":false},{"name":"avx10.2","implies_features":["avx10.1"],"unstable_feature_gate":"avx10_target_feature","globally_enabled":false},{"name":"avx512bf16","implies_features":["avx512bw"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"avx512bitalg","implies_features":["avx512bw"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"avx512bw","implies_features":["avx512f"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"avx512cd","implies_features":["avx512f"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"avx512dq","implies_features":["avx512f"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"avx512f","implies_features":["avx2","fma","f16c"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"avx512fp16","implies_features":["avx512bw"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"avx512ifma","implies_features":["avx512f"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"avx512vbmi","implies_features":["avx512bw"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"avx512vbmi2","implies_features":["avx512bw"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"avx512vl","implies_features":["avx512f"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"avx512vnni","implies_features":["avx512f"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"avx512vp2intersect","implies_features":["avx512f"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"avx512vpopcntdq","implies_features":["avx512f"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"avxifma","implies_features":["avx2"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"avxneconvert","implies_features":["avx2"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"avxvnni","implies_features":["avx2"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"avxvnniint8","implies_features":["avx2"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"avxvnniint16","implies_features":["avx2"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"bmi1","implies_features":[],"unstable_feature_gate":null,"globally_enabled":false},{"name":"bmi2","implies_features":[],"unstable_feature_gate":null,"globally_enabled":false},{"name":"cmpxchg16b","implies_features":[],"unstable_feature_gate":null,"globally_enabled":false},{"name":"ermsb","implies_features":[],"unstable_feature_gate":"ermsb_target_feature","globally_enabled":false},{"name":"f16c","implies_features":["avx"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"fma","implies_features":["avx"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"fxsr","implies_features":[],"unstable_feature_gate":null,"globally_enabled":true},{"name":"gfni","implies_features":["sse2"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"kl","implies_features":["sse2"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"lahfsahf","implies_features":[],"unstable_feature_gate":"lahfsahf_target_feature","globally_enabled":false},{"name":"lzcnt","implies_features":[],"unstable_feature_gate":null,"globally_enabled":false},{"name":"movbe","implies_features":[],"unstable_feature_gate":null,"globally_enabled":false},{"name":"movrs","implies_features":[],"unstable_feature_gate":"movrs_target_feature","globally_enabled":false},{"name":"pclmulqdq","implies_features":["sse2"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"popcnt","implies_features":[],"unstable_feature_gate":null,"globally_enabled":false},{"name":"prfchw","implies_features":[],"unstable_feature_gate":"prfchw_target_feature","globally_enabled":false},{"name":"rdrand","implies_features":[],"unstable_feature_gate":null,"globally_enabled":false},{"name":"rdseed","implies_features":[],"unstable_feature_gate":null,"globally_enabled":false},{"name":"rtm","implies_features":[],"unstable_feature_gate":"rtm_target_feature","globally_enabled":false},{"name":"sha","implies_features":["sse2"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"sha512","implies_features":["avx2"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"sm3","implies_features":["avx"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"sm4","implies_features":["avx2"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"soft-float","implies_features":[],"unstable_feature_gate":"x87_target_feature","globally_enabled":false},{"name":"sse","implies_features":[],"unstable_feature_gate":null,"globally_enabled":true},{"name":"sse2","implies_features":["sse"],"unstable_feature_gate":null,"globally_enabled":true},{"name":"sse3","implies_features":["sse2"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"sse4.1","implies_features":["ssse3"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"sse4.2","implies_features":["sse4.1"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"sse4a","implies_features":["sse3"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"ssse3","implies_features":["sse3"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"tbm","implies_features":[],"unstable_feature_gate":null,"globally_enabled":false},{"name":"vaes","implies_features":["avx2","aes"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"vpclmulqdq","implies_features":["avx","pclmulqdq"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"widekl","implies_features":["kl"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"x87","implies_features":[],"unstable_feature_gate":"x87_target_feature","globally_enabled":true},{"name":"xop","implies_features":["avx","sse4a"],"unstable_feature_gate":"xop_target_feature","globally_enabled":false},{"name":"xsave","implies_features":[],"unstable_feature_gate":null,"globally_enabled":false},{"name":"xsavec","implies_features":["xsave"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"xsaveopt","implies_features":["xsave"],"unstable_feature_gate":null,"globally_enabled":false},{"name":"xsaves","implies_features":["xsave"],"unstable_feature_gate":null,"globally_enabled":false}]},"format_version":56}