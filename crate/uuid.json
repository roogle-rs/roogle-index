{"root":"0:0:2835","crate_version":"1.9.1","includes_private":false,"index":{"0:485":{"id":"0:485","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[80,53],"end":[80,62]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32745:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13742:34972":{"id":"1:13742:34972","crate_id":1,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"‚ù§\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_debug().to_string(), \"‚ù§\\\\n!\");\n```","links":{"`char::escape_debug`":"1:5124:34972"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"1:44680:4505","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13667:27901":{"id":"1:13667:27901","crate_id":1,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"4:12452:482","self::pattern":"1:13301:3997"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"1:13116:4498","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3091-0:256:3737":{"id":"b:1:3091-0:256:3737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3061:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocalContext","id":"0:256:3737","args":{"angle_bracketed":{"args":[{"type":{"generic":"C"}}],"bindings":[]}}}},"items":["1:3094:141","1:3095:1841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42605:3735-0:643:2531":{"id":"a:1:42605:3735-0:643:2531","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42605:3735","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:594:2492":{"id":"0:594:2492","crate_id":0,"name":"NoContext","span":{"filename":"src/timestamp.rs","begin":[903,4],"end":[903,25]},"visibility":"public","docs":"An empty counter that will always return the value `0`.\n\nThis type can be used when constructing version 7 UUIDs. When used to\nconstruct a version 7 UUID, the entire counter segment of the UUID will be\nfilled with a random value. This type does not maintain ordering of UUIDs\nwithin a millisecond but is efficient.\n\nThis type should not be used when constructing version 1 or version 6 UUIDs.\nWhen used to construct a version 1 or version 6 UUID, the counter\nsegment will remain zero.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":["a:1:3304:252-0:594:2492","a:1:3339:4264-0:594:2492","a:1:42604:4004-0:594:2492","a:1:32743:240-0:594:2492","a:1:32802:4092-0:594:2492","a:1:42605:3735-0:594:2492","b:1:3085-0:594:2492","b:1:2776-0:594:2492","b:1:3921-0:594:2492","b:1:2808-0:594:2492","b:1:2811-0:594:2492","b:1:2779-0:594:2492","b:1:3091-0:594:2492","b:1:3081-0:594:2492","b:1:3096-0:594:2492","b:5:783-0:594:2492","0:598","0:291","0:601","0:600","0:596"]}}},"0:198:3473":{"id":"0:198:3473","crate_id":0,"name":"from_uuid","span":{"filename":"src/fmt.rs","begin":[692,4],"end":[694,5]},"visibility":"public","docs":"Creates a [`Urn`] from a [`Uuid`].\n\n[`Uuid`]: ../struct.Uuid.html\n[`Urn`]: struct.Urn.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["uuid",{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:312":{"id":"0:312","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[454,0],"end":[932,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:313:2585","0:314:2603","0:315:2606","0:316:2608","0:317:2618","0:318:2626","0:319:2635","0:320:2665","0:323:2681","0:326:2686","0:327:2698","0:328:2706","0:329:2619","0:330:2728","0:331:2738","0:332:2636","0:333:2748","0:334:2759","0:337:2769","0:338:2784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:786:27427":{"id":"5:786:27427","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2811-0:643:2531":{"id":"b:1:2811-0:643:2531","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3299:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2806:4246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2813:27426"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13624:3776":{"id":"1:13624:3776","crate_id":1,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"üóª‚ààüåè\");\n\nassert_eq!(Some(\"üóª\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"1:42513:194"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"1:42511:197","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:11434:243","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:11434:243","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3339:4264-0:468:2760":{"id":"a:1:3339:4264-0:468:2760","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3339:4264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13682:31964":{"id":"1:13682:31964","crate_id":1,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"4:12452:482","str::splitn":"1:13679:31962","self::pattern":"1:13301:3997"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"1:44503:4516","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13322:4491","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:172:3503":{"id":"0:172:3503","crate_id":0,"name":"encode_lower","span":{"filename":"src/fmt.rs","begin":[310,4],"end":[312,5]},"visibility":"public","docs":"Writes the [`Uuid`] as a lower-case hyphenated string to\n`buffer`, and returns the subslice of the buffer that contains the\nencoded UUID.\n\nThis is slightly more efficient than using the formatting\ninfrastructure as it avoids virtual calls, and may avoid\ndouble buffering.\n\n[`Uuid`]: ../struct.Uuid.html\n\n# Panics\n\nPanics if the buffer is not large enough: it must have length at least\n[`LENGTH`]. [`Uuid::encode_buffer`] can be used to get a\nsufficiently-large temporary buffer.\n\n[`LENGTH`]: #associatedconstant.LENGTH\n[`Uuid::encode_buffer`]: ../struct.Uuid.html#method.encode_buffer\n\n# Examples\n\n```rust\nuse uuid::Uuid;\n\nfn main() -> Result<(), uuid::Error> {\n    let uuid = Uuid::parse_str(\"936DA01f9abd4d9d80c702af85c822a8\")?;\n\n    // the encoded portion is returned\n    assert_eq!(\n        uuid.hyphenated()\n            .encode_lower(&mut Uuid::encode_buffer()),\n        \"936da01f-9abd-4d9d-80c7-02af85c822a8\"\n    );\n\n    // the buffer is mutated directly, and trailing contents remains\n    let mut buf = [b'!'; 40];\n    uuid.hyphenated().encode_lower(&mut buf);\n    assert_eq!(\n        &buf as &[_],\n        b\"936da01f-9abd-4d9d-80c7-02af85c822a8!!!!\" as &[_]\n    );\n\n    Ok(())\n}\n```\n*/","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["buffer",{"borrowed_ref":{"lifetime":"'buf","mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"borrowed_ref":{"lifetime":"'buf","mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:783-0:446:3432":{"id":"b:5:783-0:446:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:779:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:785:3978","5:786:27427","5:787:27428"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:592:891":{"id":"0:592:891","crate_id":0,"name":"hash","span":{"filename":"src/timestamp.rs","begin":[42,44],"end":[42,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"1:10756:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:783-0:661:2583":{"id":"b:5:783-0:661:2583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:779:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:785:3978","5:786:27427","5:787:27428"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13707:34963":{"id":"1:13707:34963","crate_id":1,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3339:4264-0:352:2500":{"id":"a:1:3339:4264-0:352:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3339:4264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:352:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:319:2635":{"id":"0:319:2635","crate_id":0,"name":"get_version","span":{"filename":"src/lib.rs","begin":[567,4],"end":[581,5]},"visibility":"public","docs":"Returns the version of the UUID.\n\nThis represents the algorithm used to generate the value.\nIf the version field doesn't contain a recognized version then `None`\nis returned. If you're trying to read the version for a future extension\nyou can also use [`Uuid::get_version_num`] to unconditionally return a\nnumber. Future extensions may start to return `Some` once they're\nstandardized and supported.\n\n# Examples\n\nBasic usage:\n\n```\n# use uuid::{Uuid, Version};\n# fn main() -> Result<(), uuid::Error> {\nlet my_uuid = Uuid::parse_str(\"02f09a3f-1624-3b1d-8409-44eff7708208\")?;\n\nassert_eq!(Some(Version::Md5), my_uuid.get_version());\n# Ok(())\n# }\n```\n\n# References\n\n* [Version Field in RFC 9562](https://www.ietf.org/rfc/rfc9562.html#section-4.2)","links":{"`Uuid::get_version_num`":"0:318:2626"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42511:197","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:85:141":{"id":"0:85:141","crate_id":0,"name":"Error","span":{"filename":"src/parser.rs","begin":[31,4],"end":[31,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"1:13620:2619":{"id":"1:13620:2619","crate_id":1,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"1:12848:3290"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13632:34953":{"id":"1:13632:34953","crate_id":1,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nunsafe {\n    assert_eq!(\"L√∂we ËÄÅËôé L√©opard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"4:12458:1754","str::slice_mut_unchecked":"1:13633:34954","crate::ops::Index":"1:40057:4730"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:783-0:490:3437":{"id":"b:5:783-0:490:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:779:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:785:3978","5:786:27427","5:787:27428"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:238:3627":{"id":"0:238:3627","crate_id":0,"name":"usable_bits","span":{"filename":"src/timestamp.rs","begin":[396,4],"end":[401,5]},"visibility":"default","docs":"The number of usable bits from the least significant bit in the result of [`ClockSequence::generate_sequence`]\nor [`ClockSequence::generate_timestamp_sequence`].\n\nThe number of usable bits must not exceed 128.\n\nThe number of usable bits is not expected to change between calls. An implementation of `ClockSequence` should\nalways return the same value from this method.","links":{"`ClockSequence::generate_sequence`":"0:236:3695","`ClockSequence::generate_timestamp_sequence`":"0:237:3626"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:234:2493","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32743:240-0:490:3437":{"id":"a:1:32743:240-0:490:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32743:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:350:141":{"id":"0:350:141","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[964,4],"end":[964,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:262:819":{"id":"0:262:819","crate_id":0,"name":"fmt","span":{"filename":"src/timestamp.rs","begin":[560,12],"end":[562,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"std::fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"std::fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13637:31956":{"id":"1:13637:31956","crate_id":1,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that‚Äôs not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-L√∂f\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-L√∂f\", last);\n}\nassert_eq!(\"PER Martin-L√∂f\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside ‚Äú√∂‚Äù\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"1:13636:31955"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"1:42511:197","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:541":{"id":"0:541","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"1:10543:3426","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:542:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:16:2860":{"id":"0:16:2860","crate_id":0,"name":"max","span":{"filename":"src/builder.rs","begin":[98,4],"end":[100,5]},"visibility":"public","docs":"The 'max UUID' (all ones).\n\nThe max UUID is a special form of UUID that is specified to have all\n128 bits set to one.\n\n# References\n\n* [Max UUID in RFC 9562](https://www.ietf.org/rfc/rfc9562.html#section-5.10)\n\n# Examples\n\nBasic usage:\n\n```\n# use uuid::Uuid;\nlet uuid = Uuid::max();\n\nassert_eq!(\n    \"ffffffff-ffff-ffff-ffff-ffffffffffff\",\n    uuid.hyphenated().to_string(),\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112:819":{"id":"0:112:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[12,0],"end":[1040,1]},"visibility":"public","docs":"Adapters for alternative string formats.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:424:3429","0:446:3432","0:468:2760","0:490:3437"],"is_stripped":false}}},"0:459:891":{"id":"0:459:891","crate_id":0,"name":"hash","span":{"filename":"src/fmt.rs","begin":[74,42],"end":[74,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"1:10756:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:42:3233":{"id":"0:42:3233","crate_id":0,"name":"from_unix_timestamp_millis","span":{"filename":"src/builder.rs","begin":[641,4],"end":[646,5]},"visibility":"public","docs":"Creates a `Builder` for a version 7 UUID using the supplied Unix timestamp and counter bytes.\n\nThis method will set the variant field within the counter bytes without attempting to shift\nthe data around it. Callers using the counter as a monotonic value should be careful not to\nstore significant data in the 2 least significant bits of the 3rd byte.\n\n# Examples\n\nCreating a UUID using the current system timestamp:\n\n```\n# use std::convert::TryInto;\nuse std::time::{Duration, SystemTime};\n# fn main() -> Result<(), Box<dyn std::error::Error>> {\n# use uuid::{Builder, Uuid, Variant, Version, Timestamp, NoContext};\n# let rng = || [\n#     70, 235, 208, 238, 14, 109, 67, 201, 185, 13\n# ];\nlet ts = SystemTime::now().duration_since(SystemTime::UNIX_EPOCH)?;\n\nlet random_bytes = rng();\n\nlet uuid = Builder::from_unix_timestamp_millis(ts.as_millis().try_into()?, &random_bytes).into_uuid();\n\nassert_eq!(Some(Version::SortRand), uuid.get_version());\nassert_eq!(Variant::RFC4122, uuid.get_variant());\n# Ok(())\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["millis",{"primitive":"u64"}],["counter_random_bytes",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"array":{"type":{"primitive":"u8"},"len":"10"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13621:34952":{"id":"1:13621:34952","crate_id":1,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"üóª‚ààüåè\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"üçî‚ààüåè\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32743:240-0:424:3429":{"id":"a:1:32743:240-0:424:3429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32743:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3921-0:643:2531":{"id":"b:1:3921-0:643:2531","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3919:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3923:1854"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:211":{"id":"0:211","crate_id":0,"name":null,"span":{"filename":"src/timestamp.rs","begin":[50,0],"end":[175,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:212:3625","0:213:2773","0:214:2781","0:215:3635","0:216:3638","0:217:3642","0:220:3649"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3339:4264-0:576:2494":{"id":"a:1:3339:4264-0:576:2494","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3339:4264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:3099:141":{"id":"1:3099:141","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"1:32667:3972","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:128":{"id":"0:128","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[36,0],"end":[40,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::std::string::String","id":"5:7801:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:129:849"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:195:2858":{"id":"0:195:2858","crate_id":0,"name":"into_uuid","span":{"filename":"src/fmt.rs","begin":[677,4],"end":[679,5]},"visibility":"public","docs":"Consumes the [`Simple`], returning the underlying [`Uuid`].\n\n# Examples\n\n```rust\nuse uuid::Uuid;\n\nlet simple = Uuid::nil().simple();\nassert_eq!(simple.into_uuid(), Uuid::nil());\n```","links":{"`Simple`":"0:446:3432","`Uuid`":"0:661:2583"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3339:4264-0:446:3432":{"id":"a:1:3339:4264-0:446:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3339:4264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:369":{"id":"0:369","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[4,33],"end":[4,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32745:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:783-0:424:3429":{"id":"b:5:783-0:424:3429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:779:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:785:3978","5:786:27427","5:787:27428"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3921-0:352:2500":{"id":"b:1:3921-0:352:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3919:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:352:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3923:1854"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:444":{"id":"0:444","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[68,64],"end":[68,74]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","lt","le"],"trait":{"name":"PartialOrd","id":"1:2900:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:445:1319"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3921-0:256:3737":{"id":"b:1:3921-0:256:3737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3919:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocalContext","id":"0:256:3737","args":{"angle_bracketed":{"args":[{"type":{"generic":"C"}}],"bindings":[]}}}},"items":["1:3923:1854"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:59:2858":{"id":"0:59:2858","crate_id":0,"name":"into_uuid","span":{"filename":"src/builder.rs","begin":[902,4],"end":[904,5]},"visibility":"public","docs":"Convert the builder into a [`Uuid`].\n\n# Examples\n\nBasic usage:\n\n```\n# use uuid::Builder;\nlet uuid = Builder::nil().into_uuid();\n\nassert_eq!(\n    uuid.hyphenated().to_string(),\n    \"00000000-0000-0000-0000-000000000000\"\n);\n```","links":{"`Uuid`":"0:661:2583"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3085-0:604:2507":{"id":"b:1:3085-0:604:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3087:849"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13664:31957":{"id":"1:13664:31957","crate_id":1,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"1:13301:3997","`DoubleEndedIterator`":"1:8451:133","prim@char":"4:12452:482","str::split_whitespace":"1:13642:27896","str::rsplit":"1:13670:31960"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"1:44381:4515","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:783-0:643:2531":{"id":"b:5:783-0:643:2531","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:779:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:785:3978","5:786:27427","5:787:27428"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:495":{"id":"0:495","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[86,16],"end":[86,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3299:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13634:31951":{"id":"1:13634:31951","crate_id":1,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-L√∂f\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-L√∂f\", last);\n```","links":{"str::split_at_checked":"1:13636:31955","str::split_at_mut":"1:13635:31952"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:678:1319":{"id":"0:678:1319","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[438,48],"end":[438,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"1:42511:197","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"1:31503:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13741:33142":{"id":"1:13741:33142","crate_id":1,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"1:1126:10026"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42604:4004-0:661:2583":{"id":"a:1:42604:4004-0:661:2583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42604:4004","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:207:2490":{"id":"0:207:2490","crate_id":0,"name":"timestamp","span":{"filename":"src/timestamp.rs","begin":[1,0],"end":[961,1]},"visibility":"public","docs":"Generating UUIDs from timestamps.\n\nTimestamps are used in a few UUID versions as a source of decentralized\nuniqueness (as in versions 1 and 6), and as a way to enable sorting (as\nin versions 6 and 7). Timestamps aren't encoded the same way by all UUID\nversions so this module provides a single [`Timestamp`] type that can\nconvert between them.\n\n# Timestamp representations in UUIDs\n\nVersions 1 and 6 UUIDs use a bespoke timestamp that consists of the\nnumber of 100ns ticks since `1582-10-15 00:00:00`, along with\na counter value to avoid duplicates.\n\nVersion 7 UUIDs use a more standard timestamp that consists of the\nnumber of millisecond ticks since the Unix epoch (`1970-01-01 00:00:00`).\n\n# References\n\n* [UUID Version 1 in RFC 9562](https://www.ietf.org/rfc/rfc9562.html#section-5.1)\n* [UUID Version 7 in RFC 9562](https://www.ietf.org/rfc/rfc9562.html#section-5.7)\n* [Timestamp Considerations in RFC 9562](https://www.ietf.org/rfc/rfc9562.html#section-6.1)","links":{"`Timestamp`":"0:576:2494"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:246:2491","0:210:3613","0:576:2494","0:234:2493"],"is_stripped":false}}},"0:81":{"id":"0:81","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[22,0],"end":[28,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"1:13261:3313","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:82:140","0:83:3314"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:589":{"id":"0:589","crate_id":0,"name":null,"span":{"filename":"src/timestamp.rs","begin":[42,40],"end":[42,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2863:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2779-0:352:2500":{"id":"b:1:2779-0:352:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2773:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:352:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2781:27422"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:568":{"id":"0:568","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:569:849"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:450:486":{"id":"0:450:486","crate_id":0,"name":"clone","span":{"filename":"src/fmt.rs","begin":[74,9],"end":[74,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:192:3511":{"id":"0:192:3511","crate_id":0,"name":"encode_upper","span":{"filename":"src/fmt.rs","begin":[649,4],"end":[651,5]},"visibility":"public","docs":"Writes the [`Uuid`] as an upper-case simple string to `buffer`,\nand returns the subslice of the buffer that contains the encoded UUID.\n\n[`Uuid`]: ../struct.Uuid.html\n\n# Panics\n\nPanics if the buffer is not large enough: it must have length at least\n[`LENGTH`]. [`Uuid::encode_buffer`] can be used to get a\nsufficiently-large temporary buffer.\n\n[`LENGTH`]: #associatedconstant.LENGTH\n[`Uuid::encode_buffer`]: ../struct.Uuid.html#method.encode_buffer\n\n# Examples\n\n```rust\nuse uuid::Uuid;\n\nfn main() -> Result<(), uuid::Error> {\n    let uuid = Uuid::parse_str(\"936da01f9abd4d9d80c702af85c822a8\")?;\n\n    // the encoded portion is returned\n    assert_eq!(\n        uuid.simple().encode_upper(&mut Uuid::encode_buffer()),\n        \"936DA01F9ABD4D9D80C702AF85C822A8\"\n    );\n\n    // the buffer is mutated directly, and trailing contents remains\n    let mut buf = [b'!'; 36];\n    assert_eq!(\n        uuid.simple().encode_upper(&mut buf),\n        \"936DA01F9ABD4D9D80C702AF85C822A8\"\n    );\n    assert_eq!(\n        &buf as &[_],\n        b\"936DA01F9ABD4D9D80C702AF85C822A8!!!!\" as &[_]\n    );\n\n    Ok(())\n}\n```\n*/","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["buffer",{"borrowed_ref":{"lifetime":"'buf","mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"borrowed_ref":{"lifetime":"'buf","mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32743:240-0:446:3432":{"id":"a:1:32743:240-0:446:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32743:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:452":{"id":"0:452","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[74,22],"end":[74,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10530:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:453:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32802:4092-0:357:141":{"id":"a:1:32802:4092-0:357:141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32802:4092","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:3339:4264-0:424:3429":{"id":"a:1:3339:4264-0:424:3429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3339:4264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42605:3735-0:424:3429":{"id":"a:1:42605:3735-0:424:3429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42605:3735","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:263":{"id":"0:263","crate_id":0,"name":null,"span":{"filename":"src/timestamp.rs","begin":[565,8],"end":[570,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"C","kind":{"type":{"bounds":[{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ThreadLocalContext","id":"0:256:3737","args":{"angle_bracketed":{"args":[{"type":{"generic":"C"}}],"bindings":[]}}}},"items":["0:265:1200"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:441":{"id":"0:441","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[68,53],"end":[68,62]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32745:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:180:3473":{"id":"0:180:3473","crate_id":0,"name":"from_uuid","span":{"filename":"src/fmt.rs","begin":[404,4],"end":[406,5]},"visibility":"public","docs":"Creates a [`Braced`] from a [`Uuid`].\n\n[`Uuid`]: ../struct.Uuid.html\n[`Braced`]: struct.Braced.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["uuid",{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:783-0:594:2492":{"id":"b:5:783-0:594:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:779:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:785:3978","5:786:27427","5:787:27428"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:217:3642":{"id":"0:217:3642","crate_id":0,"name":"to_unix","span":{"filename":"src/timestamp.rs","begin":[149,4],"end":[151,5]},"visibility":"public","docs":"Get the value of the timestamp as a Unix timestamp, as used in version 7 UUIDs.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"u64"},{"primitive":"u32"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215:3635":{"id":"0:215:3635","crate_id":0,"name":"from_unix","span":{"filename":"src/timestamp.rs","begin":[109,4],"end":[125,5]},"visibility":"public","docs":"Construct a `Timestamp` from a Unix timestamp and up to a 128-bit counter, as used in version 7 UUIDs.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["context",{"impl_trait":[{"trait_bound":{"trait":{"name":"ClockSequence","id":"0:234:2493","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"impl_trait":[{"trait_bound":{"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u128"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}}}}]}}},"generic_params":[],"modifier":"none"}}]}],["seconds",{"primitive":"u64"}],["subsec_nanos",{"primitive":"u32"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl Into<u128>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u128"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl ClockSequence<Output = impl Into<u128>>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ClockSequence","id":"0:234:2493","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"impl_trait":[{"trait_bound":{"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u128"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:553:849":{"id":"0:553:849","crate_id":0,"name":"from","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:89:3326":{"id":"0:89:3326","crate_id":0,"name":"try_parse","span":{"filename":"src/parser.rs","begin":[98,4],"end":[100,5]},"visibility":"public","docs":"Parses a `Uuid` from a string of hexadecimal digits with optional\nhyphens.\n\nThis function is similar to [`parse_str`], in fact `parse_str` shares\nthe same underlying parser. The difference is that if `try_parse`\nfails, it won't generate very useful error messages. The `parse_str`\nfunction will eventually be deprecated in favor of `try_parse`.\n\nTo parse a UUID from a byte stream instead of a UTF8 string, see\n[`try_parse_ascii`].\n\n# Examples\n\nParse a hyphenated UUID:\n\n```\n# use uuid::{Uuid, Version, Variant};\n# fn main() -> Result<(), uuid::Error> {\nlet uuid = Uuid::try_parse(\"550e8400-e29b-41d4-a716-446655440000\")?;\n\nassert_eq!(Some(Version::Random), uuid.get_version());\nassert_eq!(Variant::RFC4122, uuid.get_variant());\n# Ok(())\n# }\n```\n\n[`parse_str`]: #method.parse_str\n[`try_parse_ascii`]: #method.try_parse_ascii","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42643:229","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42605:3735-0:446:3432":{"id":"a:1:42605:3735-0:446:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42605:3735","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:330:2728":{"id":"0:330:2728","crate_id":0,"name":"into_bytes","span":{"filename":"src/lib.rs","begin":[805,4],"end":[807,5]},"visibility":"public","docs":"Consumes self and returns the underlying byte value of the UUID.\n\n# Examples\n\n```\n# use uuid::Uuid;\nlet bytes = [\n    0xa1, 0xa2, 0xa3, 0xa4,\n    0xb1, 0xb2,\n    0xc1, 0xc2,\n    0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8,\n];\nlet uuid = Uuid::from_bytes(bytes);\nassert_eq!(bytes, uuid.into_bytes());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Bytes","id":"0:310:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2781:27422":{"id":"1:2781:27422","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2808-0:661:2583":{"id":"b:1:2808-0:661:2583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2806:4246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2810:27426"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3921-0:604:2507":{"id":"b:1:3921-0:604:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3919:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3923:1854"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:347":{"id":"0:347","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[956,0],"end":[960,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"std::vec::Vec","id":"5:7214:270","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:348:849"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:676:714":{"id":"0:676:714","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[438,37],"end":[438,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2776-0:357:141":{"id":"b:1:2776-0:357:141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2770:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2778:3423"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:537:819":{"id":"0:537:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:675":{"id":"0:675","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[438,37],"end":[438,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2858:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:676:714"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:23:2941":{"id":"0:23:2941","crate_id":0,"name":"from_u128_le","span":{"filename":"src/builder.rs","begin":[249,4],"end":[268,5]},"visibility":"public","docs":"Creates a UUID from a 128bit value in little-endian order.\n\nThe entire value will be flipped to convert into big-endian order.\nThis is based on the endianness of the UUID, rather than the target\nenvironment so bytes will be flipped on both big and little endian\nmachines.\n\n# Examples\n\nBasic usage:\n\n```\n# use uuid::Uuid;\nlet v = 0xa1a2a3a4b1b2c1c2d1d2d3d4d5d6d7d8u128;\n\nlet uuid = Uuid::from_u128_le(v);\n\nassert_eq!(\n    \"d8d7d6d5-d4d3-d2d1-c2c1-b2b1a4a3a2a1\",\n    uuid.hyphenated().to_string(),\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["v",{"primitive":"u128"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3095:1841":{"id":"1:3095:1841","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"1:42643:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13614:34949":{"id":"1:13614:34949","crate_id":1,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nassert!(s.is_char_boundary(0));\n// start of `ËÄÅ`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `√∂`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `ËÄÅ`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13626:9910":{"id":"1:13626:9910","crate_id":1,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"1:42513:194"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"1:42511:197","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:11434:243","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:11434:243","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13644:34471":{"id":"1:13644:34471","crate_id":1,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"1:44635:4508","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:783-0:468:2760":{"id":"b:5:783-0:468:2760","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:779:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:785:3978","5:786:27427","5:787:27428"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:352:2500":{"id":"0:352:2500","crate_id":0,"name":"Builder","span":{"filename":"src/builder.rs","begin":[47,0],"end":[47,25]},"visibility":"public","docs":"A builder for creating a UUID.\n\nThis type is useful if you need to mutate individual fields of a [`Uuid`]\nwhile constructing it. Since the [`Uuid`] type is `Copy`, it doesn't offer\nany methods to mutate in place. They live on the `Builder` instead.\n\nThe `Builder` type also always exposes APIs to construct [`Uuid`]s for any\nversion without needing crate features or additional dependencies. It's a\nlower-level API than the methods on [`Uuid`].\n\n# Examples\n\nCreating a version 4 UUID from externally generated random bytes:\n\n```\n# use uuid::{Builder, Version, Variant};\n# let rng = || [\n#     70, 235, 208, 238, 14, 109, 67, 201, 185, 13, 204, 195, 90,\n# 145, 63, 62,\n# ];\nlet random_bytes = rng();\n\nlet uuid = Builder::from_random_bytes(random_bytes).into_uuid();\n\nassert_eq!(Some(Version::Random), uuid.get_version());\nassert_eq!(Variant::RFC4122, uuid.get_variant());\n```","links":{"`Uuid`":"0:661:2583"},"attrs":["#[allow(missing_copy_implementations)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:32","a:1:3304:252-0:352:2500","a:1:3339:4264-0:352:2500","a:1:42604:4004-0:352:2500","a:1:32743:240-0:352:2500","a:1:32802:4092-0:352:2500","a:1:42605:3735-0:352:2500","b:1:3085-0:352:2500","b:1:2776-0:352:2500","b:1:3921-0:352:2500","b:1:2779-0:352:2500","b:1:3091-0:352:2500","b:1:3081-0:352:2500","b:1:3096-0:352:2500","0:355"]}}},"b:1:2779-0:357:141":{"id":"b:1:2779-0:357:141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2773:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2781:27422"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:538":{"id":"0:538","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"1:10541:3424","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:539:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:465:714":{"id":"0:465:714","crate_id":0,"name":"eq","span":{"filename":"src/fmt.rs","begin":[74,53],"end":[74,62]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:477:60":{"id":"0:477:60","crate_id":0,"name":"default","span":{"filename":"src/fmt.rs","begin":[80,29],"end":[80,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:614:2515":{"id":"0:614:2515","crate_id":0,"name":"Md5","span":{"filename":"src/lib.rs","begin":[309,4],"end":[309,11]},"visibility":"default","docs":"Version 3: MD5 hash.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"3","value":"3"}}}},"1:13685:31966":{"id":"1:13685:31966","crate_id":1,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42511:197","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:549:343":{"id":"0:549:343","crate_id":0,"name":"as_ref","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13660:4308":{"id":"1:13660:4308","crate_id":1,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('√©'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"1:42513:194","prim@char":"4:12452:482","self::pattern":"1:13301:3997"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42511:197","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13322:4491","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:661:2583":{"id":"0:661:2583","crate_id":0,"name":"Uuid","span":{"filename":"src/lib.rs","begin":[452,0],"end":[452,23]},"visibility":"public","docs":"A Universally Unique Identifier (UUID).\n\n# Examples\n\nParse a UUID given in the simple format and print it as a urn:\n\n```\n# use uuid::Uuid;\n# fn main() -> Result<(), uuid::Error> {\nlet my_uuid = Uuid::parse_str(\"a1a2a3a4b1b2c1c2d1d2d3d4d5d6d7d8\")?;\n\nprintln!(\"{}\", my_uuid.urn());\n# Ok(())\n# }\n```\n\nCreate a new random (V4) UUID and print it out in hexadecimal form:\n\n```\n// Note that this requires the `v4` feature enabled in the uuid crate.\n# use uuid::Uuid;\n# fn main() {\n# #[cfg(feature = \"v4\")] {\nlet my_uuid = Uuid::new_v4();\n\nprintln!(\"{}\", my_uuid);\n# }\n# }\n```\n\n# Formatting\n\nA UUID can be formatted in one of a few ways:\n\n* [`simple`](#method.simple): `a1a2a3a4b1b2c1c2d1d2d3d4d5d6d7d8`.\n* [`hyphenated`](#method.hyphenated):\n  `a1a2a3a4-b1b2-c1c2-d1d2-d3d4d5d6d7d8`.\n* [`urn`](#method.urn): `urn:uuid:A1A2A3A4-B1B2-C1C2-D1D2-D3D4D5D6D7D8`.\n* [`braced`](#method.braced): `{a1a2a3a4-b1b2-c1c2-d1d2-d3d4d5d6d7d8}`.\n\nThe default representation when formatting a UUID with `Display` is\nhyphenated:\n\n```\n# use uuid::Uuid;\n# fn main() -> Result<(), uuid::Error> {\nlet my_uuid = Uuid::parse_str(\"a1a2a3a4b1b2c1c2d1d2d3d4d5d6d7d8\")?;\n\nassert_eq!(\n    \"a1a2a3a4-b1b2-c1c2-d1d2-d3d4d5d6d7d8\",\n    my_uuid.to_string(),\n);\n# Ok(())\n# }\n```\n\nOther formats can be specified using adapter methods on the UUID:\n\n```\n# use uuid::Uuid;\n# fn main() -> Result<(), uuid::Error> {\nlet my_uuid = Uuid::parse_str(\"a1a2a3a4b1b2c1c2d1d2d3d4d5d6d7d8\")?;\n\nassert_eq!(\n    \"urn:uuid:a1a2a3a4-b1b2-c1c2-d1d2-d3d4d5d6d7d8\",\n    my_uuid.urn().to_string(),\n);\n# Ok(())\n# }\n```\n\n# Endianness\n\nThe specification for UUIDs encodes the integer fields that make up the\nvalue in big-endian order. This crate assumes integer inputs are already in\nthe correct order by default, regardless of the endianness of the\nenvironment. Most methods that accept integers have a `_le` variant (such as\n`from_fields_le`) that assumes any integer values will need to have their\nbytes flipped, regardless of the endianness of the environment.\n\nMost users won't need to worry about endianness unless they need to operate\non individual fields (such as when converting between Microsoft GUIDs). The\nimportant things to remember are:\n\n- The endianness is in terms of the fields of the UUID, not the environment.\n- The endianness is assumed to be big-endian when there's no `_le` suffix\n  somewhere.\n- Byte-flipping in `_le` methods applies to each integer.\n- Endianness roundtrips, so if you create a UUID with `from_fields_le`\n  you'll get the same values back out with `to_fields_le`.\n\n# ABI\n\nThe `Uuid` type is always guaranteed to be have the same ABI as [`Bytes`].","links":{"`Bytes`":"0:310:2504"},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:13","0:87","0:136","0:312","a:1:3304:252-0:661:2583","a:1:3339:4264-0:661:2583","a:1:42604:4004-0:661:2583","a:1:32743:240-0:661:2583","a:1:32802:4092-0:661:2583","a:1:42605:3735-0:661:2583","b:1:3085-0:661:2583","b:1:2776-0:661:2583","b:1:3921-0:661:2583","b:1:2808-0:661:2583","b:1:2811-0:661:2583","b:1:2779-0:661:2583","b:1:3091-0:661:2583","b:1:3081-0:661:2583","b:1:3096-0:661:2583","b:5:783-0:661:2583","b:5:5974-0:661:2583","0:550","0:343","0:548","0:554","0:677","0:558","0:562","0:664","0:667","0:666","0:84","0:128","0:347","0:132","0:574","0:570","0:675","0:134","0:568","0:546","0:552","0:126","0:566","0:556","0:345","0:124","0:544","0:81","0:572","0:669","0:674","0:349","0:672","0:560","0:341","0:564"]}}},"0:345":{"id":"0:345","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[948,0],"end":[953,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"1:3049:78","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:346:343"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13723:34968":{"id":"1:13723:34968","crate_id":1,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"4:12452:482","self::pattern":"1:13301:3997"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13322:4491","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3096-0:357:141":{"id":"b:1:3096-0:357:141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3099:141","1:3100:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3081-0:357:141":{"id":"b:1:3081-0:357:141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3084:2969"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3085-0:446:3432":{"id":"b:1:3085-0:446:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3087:849"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:533":{"id":"0:533","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"1:10543:3426","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:534:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:133:819":{"id":"0:133:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[54,4],"end":[56,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2779-0:424:3429":{"id":"b:1:2779-0:424:3429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2773:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2781:27422"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:586":{"id":"0:586","crate_id":0,"name":null,"span":{"filename":"src/timestamp.rs","begin":[42,29],"end":[42,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32745:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:315:2606":{"id":"0:315:2606","crate_id":0,"name":"NAMESPACE_URL","span":{"filename":"src/lib.rs","begin":[468,4],"end":[471,7]},"visibility":"public","docs":"UUID namespace for Uniform Resource Locators (URLs).","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"1:13736:10015":{"id":"1:13736:10015","crate_id":1,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√∂S\"));\nassert!(!\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√ñS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:20:2920":{"id":"0:20:2920","crate_id":0,"name":"from_fields_le","span":{"filename":"src/builder.rs","begin":[168,4],"end":[187,5]},"visibility":"public","docs":"Creates a UUID from four field values in little-endian order.\n\nThe bytes in the `d1`, `d2` and `d3` fields will be flipped to convert\ninto big-endian order. This is based on the endianness of the UUID,\nrather than the target environment so bytes will be flipped on both\nbig and little endian machines.\n\n# Examples\n\nBasic usage:\n\n```\n# use uuid::Uuid;\nlet d1 = 0xa1a2a3a4;\nlet d2 = 0xb1b2;\nlet d3 = 0xc1c2;\nlet d4 = [0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8];\n\nlet uuid = Uuid::from_fields_le(d1, d2, d3, &d4);\n\nassert_eq!(\n    \"a4a3a2a1-b2b1-c2c1-d1d2-d3d4d5d6d7d8\",\n    uuid.hyphenated().to_string(),\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["d1",{"primitive":"u32"}],["d2",{"primitive":"u16"}],["d3",{"primitive":"u16"}],["d4",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"array":{"type":{"primitive":"u8"},"len":"8"}}}}]],"output":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13641:2666":{"id":"1:13641:2666","crate_id":1,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"1:44367:2504","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:677":{"id":"0:677","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[438,48],"end":[438,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","lt","le"],"trait":{"name":"PartialOrd","id":"1:2900:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:678:1319"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3096-0:490:3437":{"id":"b:1:3096-0:490:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3099:141","1:3100:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13703:34961":{"id":"1:13703:34961","crate_id":1,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:581":{"id":"0:581","crate_id":0,"name":null,"span":{"filename":"src/timestamp.rs","begin":[42,9],"end":[42,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10530:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:582:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3081-0:352:2500":{"id":"b:1:3081-0:352:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:352:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3084:2969"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3081-0:256:3737":{"id":"b:1:3081-0:256:3737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocalContext","id":"0:256:3737","args":{"angle_bracketed":{"args":[{"type":{"generic":"C"}}],"bindings":[]}}}},"items":["1:3084:2969"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5974-0:357:141":{"id":"b:5:5974-0:357:141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"1:10535:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5972:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5976:1814"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:545:849":{"id":"0:545:849","crate_id":0,"name":"from","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:14:2786":{"id":"0:14:2786","crate_id":0,"name":"nil","span":{"filename":"src/builder.rs","begin":[72,4],"end":[74,5]},"visibility":"public","docs":"The 'nil UUID' (all zeros).\n\nThe nil UUID is a special form of UUID that is specified to have all\n128 bits set to zero.\n\n# References\n\n* [Nil UUID in RFC 9562](https://www.ietf.org/rfc/rfc9562.html#section-5.9)\n\n# Examples\n\nBasic usage:\n\n```\n# use uuid::Uuid;\nlet uuid = Uuid::nil();\n\nassert_eq!(\n    \"00000000-0000-0000-0000-000000000000\",\n    uuid.hyphenated().to_string(),\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:13":{"id":"0:13","crate_id":0,"name":null,"span":{"filename":"src/builder.rs","begin":[49,0],"end":[492,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"crate::Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:14:2786","0:16:2860","0:18:2914","0:20:2920","0:22:2938","0:23:2941","0:24:2947","0:25:2787","0:27:3184","0:29:2807","0:30:2978","0:31:3191"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:40:3218":{"id":"0:40:3218","crate_id":0,"name":"from_sorted_rfc4122_timestamp","span":{"filename":"src/builder.rs","begin":[602,4],"end":[610,5]},"visibility":"public","docs":"Creates a `Builder` for a version 6 UUID using the supplied timestamp and node ID.\n\nThis method will encode the ticks, counter, and node ID in a sortable UUID.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ticks",{"primitive":"u64"}],["counter",{"primitive":"u16"}],["node_id",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"array":{"type":{"primitive":"u8"},"len":"6"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2776-0:446:3432":{"id":"b:1:2776-0:446:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2770:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2778:3423"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:84":{"id":"0:84","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[30,0],"end":[36,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:85:141","0:86:1839"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3091-0:357:141":{"id":"b:1:3091-0:357:141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3061:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3094:141","1:3095:1841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2811-0:594:2492":{"id":"b:1:2811-0:594:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3299:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2806:4246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2813:27426"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:672":{"id":"0:672","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[438,32],"end":[438,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","clamp","min"],"trait":{"name":"Ord","id":"1:2894:198","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:673:493"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:445:1319":{"id":"0:445:1319","crate_id":0,"name":"partial_cmp","span":{"filename":"src/fmt.rs","begin":[68,64],"end":[68,74]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"1:42511:197","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"1:31503:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:603:2835":{"id":"0:603:2835","crate_id":0,"name":"uuid","span":{"filename":"src/macros.rs","begin":[27,0],"end":[92,1]},"visibility":"public","docs":"Parse [`Uuid`][uuid::Uuid]s from string literals at compile time.\n\n## Usage\n\nThis macro transforms the string literal representation of a\n[`Uuid`][uuid::Uuid] into the bytes representation, raising a compilation\nerror if it cannot properly be parsed.\n\n## Examples\n\nSetting a global constant:\n\n```\n# use uuid::{uuid, Uuid};\npub const SCHEMA_ATTR_CLASS: Uuid = uuid!(\"00000000-0000-0000-0000-ffff00000000\");\npub const SCHEMA_ATTR_UUID: Uuid = uuid!(\"00000000-0000-0000-0000-ffff00000001\");\npub const SCHEMA_ATTR_NAME: Uuid = uuid!(\"00000000-0000-0000-0000-ffff00000002\");\n```\n\nDefining a local variable:\n\n```\n# use uuid::uuid;\nlet uuid = uuid!(\"urn:uuid:F9168C5E-CEB2-4faa-B6BF-329BF39FA1E4\");\n```\n\n## Compilation Failures\n\nInvalid UUIDs are rejected:\n\n```compile_fail\n# use uuid::uuid;\nlet uuid = uuid!(\"F9168C5E-ZEB2-4FAA-B6BF-329BF39FA1E4\");\n```\n\nEnable the feature `macro-diagnostics` to see the error messages below.\n\nProvides the following compilation error:\n\n```txt\nerror: invalid character: expected an optional prefix of `urn:uuid:` followed by [0-9a-fA-F-], found Z at 9\n    |\n    |     let id = uuid!(\"F9168C5E-ZEB2-4FAA-B6BF-329BF39FA1E4\");\n    |                              ^\n```\n\nTokens that aren't string literals are also rejected:\n\n```compile_fail\n# use uuid::uuid;\nlet uuid_str: &str = \"550e8400e29b41d4a716446655440000\";\nlet uuid = uuid!(uuid_str);\n```\n\nProvides the following compilation error:\n\n```txt\nerror: expected string literal\n  |\n  |     let uuid = uuid!(uuid_str);\n  |                      ^^^^^^^^\n```\n\n[uuid::Uuid]: https://docs.rs/uuid/*/uuid/struct.Uuid.html","links":{},"attrs":["#[cfg(not(feature = \"macro-diagnostics\"))]","#[macro_export]"],"deprecation":null,"inner":{"macro":"macro_rules! uuid {\n    ($uuid:literal) => { ... };\n}"}},"0:174:3511":{"id":"0:174:3511","crate_id":0,"name":"encode_upper","span":{"filename":"src/fmt.rs","begin":[361,4],"end":[363,5]},"visibility":"public","docs":"Writes the [`Uuid`] as an upper-case hyphenated string to\n`buffer`, and returns the subslice of the buffer that contains the\nencoded UUID.\n\nThis is slightly more efficient than using the formatting\ninfrastructure as it avoids virtual calls, and may avoid\ndouble buffering.\n\n[`Uuid`]: ../struct.Uuid.html\n\n# Panics\n\nPanics if the buffer is not large enough: it must have length at least\n[`LENGTH`]. [`Uuid::encode_buffer`] can be used to get a\nsufficiently-large temporary buffer.\n\n[`LENGTH`]: #associatedconstant.LENGTH\n[`Uuid::encode_buffer`]: ../struct.Uuid.html#method.encode_buffer\n\n# Examples\n\n```rust\nuse uuid::Uuid;\n\nfn main() -> Result<(), uuid::Error> {\n    let uuid = Uuid::parse_str(\"936da01f9abd4d9d80c702af85c822a8\")?;\n\n    // the encoded portion is returned\n    assert_eq!(\n        uuid.hyphenated()\n            .encode_upper(&mut Uuid::encode_buffer()),\n        \"936DA01F-9ABD-4D9D-80C7-02AF85C822A8\"\n    );\n\n    // the buffer is mutated directly, and trailing contents remains\n    let mut buf = [b'!'; 40];\n    uuid.hyphenated().encode_upper(&mut buf);\n    assert_eq!(\n        &buf as &[_],\n        b\"936DA01F-9ABD-4D9D-80C7-02AF85C822A8!!!!\" as &[_]\n    );\n\n    Ok(())\n}\n```\n*/","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["buffer",{"borrowed_ref":{"lifetime":"'buf","mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"borrowed_ref":{"lifetime":"'buf","mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:611:2513":{"id":"0:611:2513","crate_id":0,"name":"Dce","span":{"filename":"src/lib.rs","begin":[307,4],"end":[307,11]},"visibility":"default","docs":"Version 2: DCE Security.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"2","value":"2"}}}},"0:129:849":{"id":"0:129:849","crate_id":0,"name":"from","span":{"filename":"src/fmt.rs","begin":[37,4],"end":[39,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["uuid",{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:309-0:357:141":{"id":"0:309-0:357:141","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[284,34],"end":[284,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Error","name":"Error","id":"0:357:141","glob":false}}},"1:13622:342":{"id":"1:13622:342","crate_id":1,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:13623:3464","`u8`":"4:12471:1884"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:483":{"id":"0:483","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[80,48],"end":[80,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","clamp","min"],"trait":{"name":"Ord","id":"1:2894:198","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:484:493"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3091-0:424:3429":{"id":"b:1:3091-0:424:3429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3061:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3094:141","1:3095:1841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:169":{"id":"0:169","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[249,0],"end":[392,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:170:2761","0:171:3473","0:172:3503","0:174:3511","0:176:3263","0:177:2858"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:659":{"id":"0:659","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[329,29],"end":[329,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2858:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:660:714"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:424:3429":{"id":"0:424:3429","crate_id":0,"name":"Hyphenated","span":{"filename":"src/fmt.rs","begin":[70,0],"end":[70,28]},"visibility":"public","docs":"Format a [`Uuid`] as a hyphenated string, like\n`67e55044-10b1-426f-9247-bb680e5fe0c8`.","links":{"`Uuid`":"0:661:2583"},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:169","a:1:3304:252-0:424:3429","a:1:3339:4264-0:424:3429","a:1:42604:4004-0:424:3429","a:1:32743:240-0:424:3429","a:1:32802:4092-0:424:3429","a:1:42605:3735-0:424:3429","b:1:3085-0:424:3429","b:1:2776-0:424:3429","b:1:3921-0:424:3429","b:1:2808-0:424:3429","b:1:2811-0:424:3429","b:1:2779-0:424:3429","b:1:3091-0:424:3429","b:1:3081-0:424:3429","b:1:3096-0:424:3429","b:5:783-0:424:3429","b:5:5974-0:424:3429","0:550","0:430","0:512","0:548","0:439","0:429","0:432","0:441","0:444","0:427","0:546","0:442","0:434","0:517","0:544","0:514","0:436"]}}},"1:2813:27426":{"id":"1:2813:27426","crate_id":1,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:189:3473":{"id":"0:189:3473","crate_id":0,"name":"from_uuid","span":{"filename":"src/fmt.rs","begin":[549,4],"end":[551,5]},"visibility":"public","docs":"Creates a [`Simple`] from a [`Uuid`].\n\n[`Uuid`]: ../struct.Uuid.html\n[`Simple`]: struct.Simple.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["uuid",{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3085-0:594:2492":{"id":"b:1:3085-0:594:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3087:849"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:141:2796":{"id":"0:141:2796","crate_id":0,"name":"urn","span":{"filename":"src/fmt.rs","begin":[119,4],"end":[121,5]},"visibility":"public","docs":"Get a [`Urn`] formatter.","links":{"`Urn`":"0:468:2760"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:669":{"id":"0:669","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[438,26],"end":[438,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"1:10748:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:670:891"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:73":{"id":"0:73","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[171,4],"end":[171,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cause","source","provide","description","type_id"],"trait":{"name":"Error","id":"1:3144:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:643:2531":{"id":"0:643:2531","crate_id":0,"name":"Variant","span":{"filename":"src/lib.rs","begin":[332,0],"end":[342,1]},"visibility":"public","docs":"The reserved variants of UUIDs.\n\n# References\n\n* [Variant Field in RFC 9562](https://www.ietf.org/rfc/rfc9562.html#section-4.1)","links":{},"attrs":["#[non_exhaustive]","#[repr(u8)]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:644:2533","0:647:2536","0:649:2538","0:651:154"],"impls":["a:1:3304:252-0:643:2531","a:1:3339:4264-0:643:2531","a:1:42604:4004-0:643:2531","a:1:32743:240-0:643:2531","a:1:32802:4092-0:643:2531","a:1:42605:3735-0:643:2531","b:1:3085-0:643:2531","b:1:2776-0:643:2531","b:1:3921-0:643:2531","b:1:2808-0:643:2531","b:1:2811-0:643:2531","b:1:2779-0:643:2531","b:1:3091-0:643:2531","b:1:3081-0:643:2531","b:1:3096-0:643:2531","b:5:783-0:643:2531","b:5:5974-0:643:2531","0:130","0:653","0:656","0:659","0:655","0:658"]}}},"b:1:3085-0:357:141":{"id":"b:1:3085-0:357:141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3087:849"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:431:819":{"id":"0:431:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[68,22],"end":[68,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:636:486":{"id":"0:636:486","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[298,9],"end":[298,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13630:9912":{"id":"1:13630:9912","crate_id":1,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"üóª‚ààüåè\");\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:11434:243","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:11434:243","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:170:2761":{"id":"0:170:2761","crate_id":0,"name":"LENGTH","span":{"filename":"src/fmt.rs","begin":[253,4],"end":[253,33]},"visibility":"public","docs":"The length of a hyphenated [`Uuid`] string.\n\n[`Uuid`]: ../struct.Uuid.html","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"usize"},"default":"36"}}},"a:1:32802:4092-0:424:3429":{"id":"a:1:32802:4092-0:424:3429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32802:4092","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:521:819":{"id":"0:521:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:598":{"id":"0:598","crate_id":0,"name":null,"span":{"filename":"src/timestamp.rs","begin":[902,20],"end":[902,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:599:486"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:567:3423":{"id":"0:567:3423","crate_id":0,"name":"borrow","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:213:2773":{"id":"0:213:2773","crate_id":0,"name":"from_rfc4122","span":{"filename":"src/timestamp.rs","begin":[82,4],"end":[91,5]},"visibility":"public","docs":"Construct a `Timestamp` from an RFC 9562 timestamp and 14-bit counter, as used\nin versions 1 and 6 UUIDs.\n\n# Overflow\n\nIf conversion from RFC 9562 ticks to the internal timestamp format would overflow\nit will wrap.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ticks",{"primitive":"u64"}],["counter",{"primitive":"u16"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:632:2527":{"id":"0:632:2527","crate_id":0,"name":"Max","span":{"filename":"src/lib.rs","begin":[321,4],"end":[321,14]},"visibility":"default","docs":"The \"max\" (all ones) UUID.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"0xff","value":"255"}}}},"b:1:2779-0:594:2492":{"id":"b:1:2779-0:594:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2773:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2781:27422"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:514":{"id":"0:514","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"1:10541:3424","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:515:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:237:3626":{"id":"0:237:3626","crate_id":0,"name":"generate_timestamp_sequence","span":{"filename":"src/timestamp.rs","begin":[377,4],"end":[387,5]},"visibility":"default","docs":"Get the next value in the sequence, potentially also adjusting the timestamp.\n\nThis method should be preferred over `generate_sequence`.\n\nAny bits beyond [`ClockSequence::usable_bits`] in the output must be unset.","links":{"`ClockSequence::usable_bits`":"0:238:3627"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["seconds",{"primitive":"u64"}],["subsec_nanos",{"primitive":"u32"}]],"output":{"tuple":[{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:234:2493","args":null}}},{"primitive":"u64"},{"primitive":"u32"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:239":{"id":"0:239","crate_id":0,"name":null,"span":{"filename":"src/timestamp.rs","begin":[404,0],"end":[425,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ClockSequence","id":"0:234:2493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["generate_timestamp_sequence","usable_bits"],"trait":{"name":"ClockSequence","id":"0:234:2493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}},"items":["0:242:202","0:243:3695","0:244:3626","0:245:3627"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:42604:4004-0:643:2531":{"id":"a:1:42604:4004-0:643:2531","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42604:4004","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:125:819":{"id":"0:125:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[24,4],"end":[26,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42604:4004-0:446:3432":{"id":"a:1:42604:4004-0:446:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42604:4004","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:3304:252-0:446:3432":{"id":"a:1:3304:252-0:446:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3304:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:296-0:594:2492":{"id":"0:296-0:594:2492","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[235,20],"end":[235,38]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"timestamp::context::NoContext","name":"NoContext","id":"0:594:2492","glob":false}}},"0:582:819":{"id":"0:582:819","crate_id":0,"name":"fmt","span":{"filename":"src/timestamp.rs","begin":[42,9],"end":[42,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2808-0:643:2531":{"id":"b:1:2808-0:643:2531","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2806:4246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2810:27426"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:591":{"id":"0:591","crate_id":0,"name":null,"span":{"filename":"src/timestamp.rs","begin":[42,44],"end":[42,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"1:10748:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:592:891"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:143:2793":{"id":"0:143:2793","crate_id":0,"name":"braced","span":{"filename":"src/fmt.rs","begin":[132,4],"end":[134,5]},"visibility":"public","docs":"Get a [`Braced`] formatter.","links":{"`Braced`":"0:490:3437"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:273:3627":{"id":"0:273:3627","crate_id":0,"name":"usable_bits","span":{"filename":"src/timestamp.rs","begin":[589,12],"end":[591,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13639:2805":{"id":"1:13639:2805","crate_id":1,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"yÃÜ\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'yÃÜ'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"4:12452:482"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"1:44351:3992","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3339:4264-0:643:2531":{"id":"a:1:3339:4264-0:643:2531","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3339:4264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:528":{"id":"0:528","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10535:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:529:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:561:849":{"id":"0:561:849","crate_id":0,"name":"from","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:46:3184":{"id":"0:46:3184","crate_id":0,"name":"from_slice_le","span":{"filename":"src/builder.rs","begin":[722,4],"end":[724,5]},"visibility":"public","docs":"Creates a `Builder` using the supplied bytes in little endian order.\n\nThe individual fields encoded in the buffer will be flipped.\n\n# Errors\n\nThis function will return an error if `b` has any length other than 16.\n\n# Examples\n\nBasic usage:\n\n```\n# use uuid::Builder;\n# fn main() -> Result<(), uuid::Error> {\nlet bytes = [\n    0xa1, 0xa2, 0xa3, 0xa4,\n    0xb1, 0xb2,\n    0xc1, 0xc2,\n    0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8,\n];\n\nlet uuid = Builder::from_slice_le(&bytes)?.into_uuid();\n\nassert_eq!(\n    \"a4a3a2a1-b2b1-c2c1-d1d2-d3d4d5d6d7d8\",\n    uuid.hyphenated().to_string(),\n);\n# Ok(())\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["b",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42643:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:534:819":{"id":"0:534:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42605:3735-0:256:3737":{"id":"a:1:42605:3735-0:256:3737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42605:3735","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocalContext","id":"0:256:3737","args":{"angle_bracketed":{"args":[{"type":{"generic":"C"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:314:2603":{"id":"0:314:2603","crate_id":0,"name":"NAMESPACE_OID","span":{"filename":"src/lib.rs","begin":[462,4],"end":[465,7]},"visibility":"public","docs":"UUID namespace for ISO Object Identifiers (OIDs).","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:1:42605:3735-0:576:2494":{"id":"a:1:42605:3735-0:576:2494","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42605:3735","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42605:3735-0:352:2500":{"id":"a:1:42605:3735-0:352:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42605:3735","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:352:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:332:2636":{"id":"0:332:2636","crate_id":0,"name":"is_nil","span":{"filename":"src/lib.rs","begin":[842,4],"end":[844,5]},"visibility":"public","docs":"Tests if the UUID is nil (all zeros).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13611":{"id":"1:13611","crate_id":1,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["1:13612:1016","1:13613:4309","1:13614:34949","1:13615:34950","1:13617:34951","1:13620:2619","1:13621:34952","1:13622:342","1:13623:3464","1:13624:3776","1:13626:9910","1:13628:9911","1:13630:9912","1:13632:34953","1:13633:34954","1:13634:31951","1:13635:31952","1:13636:31955","1:13637:31956","1:13639:2805","1:13640:3300","1:13641:2666","1:13642:27896","1:13643:27921","1:13644:34471","1:13645:34955","1:13646:27918","1:13647:2985","1:13650:2894","1:13653:31589","1:13656:4348","1:13660:4308","1:13664:31957","1:13667:27901","1:13670:31960","1:13673:34956","1:13676:34957","1:13679:31962","1:13682:31964","1:13685:31966","1:13688:31967","1:13691:3879","1:13694:34958","1:13697:34959","1:13700:34960","1:13703:34961","1:13705:34962","1:13707:34963","1:13709:34964","1:13710:34965","1:13711:34966","1:13714:34967","1:13717:31280","1:13720:31968","1:13723:34968","1:13726:34969","1:13729:34970","1:13732:34971","1:13734:10010","1:13735:10011","1:13736:10015","1:13737:10016","1:13738:10017","1:13739:33140","1:13740:33141","1:13741:33142","1:13742:34972","1:13744:10483","1:13745:34973"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/timestamp.rs","begin":[905,4],"end":[915,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["generate_timestamp_sequence","usable_bits"],"trait":{"name":"ClockSequence","id":"0:234:2493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:292:202","0:293:3695","0:294:3627"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13615:34950":{"id":"1:13615:34950","crate_id":1,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji üßë‚Äçüî¨ (scientist) could be split so that the string only\nincludes üßë (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32743:240-0:357:141":{"id":"a:1:32743:240-0:357:141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32743:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:462:493":{"id":"0:462:493","crate_id":0,"name":"cmp","span":{"filename":"src/fmt.rs","begin":[74,48],"end":[74,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"1:31503:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3085-0:352:2500":{"id":"b:1:3085-0:352:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:352:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3087:849"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:785:3978":{"id":"5:785:3978","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:437:891":{"id":"0:437:891","crate_id":0,"name":"hash","span":{"filename":"src/fmt.rs","begin":[68,42],"end":[68,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"1:10756:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:550":{"id":"0:550","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2770:103","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:551:3423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13737:10016":{"id":"1:13737:10016","crate_id":1,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Gr√º√üe, J√ºrgen ‚ù§\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:510":{"id":"0:510","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[86,64],"end":[86,74]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","lt","le"],"trait":{"name":"PartialOrd","id":"1:2900:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:511:1319"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:513:819":{"id":"0:513:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:196":{"id":"0:196","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[682,0],"end":[830,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:197:2761","0:198:3473","0:199:3503","0:201:3511","0:203:3263","0:204:2858"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3304:252-0:594:2492":{"id":"a:1:3304:252-0:594:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3304:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:604:2507":{"id":"0:604:2507","crate_id":0,"name":"Version","span":{"filename":"src/lib.rs","begin":[301,0],"end":[322,1]},"visibility":"public","docs":"The version of the UUID, denoting the generating algorithm.\n\n# References\n\n* [Version Field in RFC 9562](https://www.ietf.org/rfc/rfc9562.html#section-4.2)","links":{},"attrs":["#[non_exhaustive]","#[repr(u8)]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:605:2509","0:608:2511","0:611:2513","0:614:2515","0:617:2517","0:620:2519","0:623:2521","0:626:2523","0:629:2525","0:632:2527"],"impls":["a:1:3304:252-0:604:2507","a:1:3339:4264-0:604:2507","a:1:42604:4004-0:604:2507","a:1:32743:240-0:604:2507","a:1:32802:4092-0:604:2507","a:1:42605:3735-0:604:2507","b:1:3085-0:604:2507","b:1:2776-0:604:2507","b:1:3921-0:604:2507","b:1:2808-0:604:2507","b:1:2811-0:604:2507","b:1:2779-0:604:2507","b:1:3091-0:604:2507","b:1:3081-0:604:2507","b:1:3096-0:604:2507","b:5:783-0:604:2507","0:638","0:637","0:635","0:640","0:641"]}}},"b:1:3085-0:424:3429":{"id":"b:1:3085-0:424:3429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3087:849"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:454":{"id":"0:454","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[74,29],"end":[74,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3133:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:455:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:573:343":{"id":"0:573:343","crate_id":0,"name":"as_ref","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:243:3695":{"id":"0:243:3695","crate_id":0,"name":"generate_sequence","span":{"filename":"src/timestamp.rs","begin":[407,4],"end":[409,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["seconds",{"primitive":"u64"}],["subsec_nanos",{"primitive":"u32"}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:234:2493","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:649:2538":{"id":"0:649:2538","crate_id":0,"name":"Microsoft","span":{"filename":"src/lib.rs","begin":[339,4],"end":[339,13]},"visibility":"default","docs":"Reserved by Microsoft for backward compatibility.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:5:5974-0:643:2531":{"id":"b:5:5974-0:643:2531","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"1:10535:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5972:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5976:1814"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32802:4092-0:661:2583":{"id":"a:1:32802:4092-0:661:2583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32802:4092","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3096-0:424:3429":{"id":"b:1:3096-0:424:3429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3099:141","1:3100:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:132":{"id":"0:132","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[53,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"1:10541:3424","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:133:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13738:10017":{"id":"1:13738:10017","crate_id":1,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GR√ú√üE, J√úRGEN ‚ù§\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"gr√ú√üe, j√úrgen ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:490:3437":{"id":"0:490:3437","crate_id":0,"name":"Braced","span":{"filename":"src/fmt.rs","begin":[88,0],"end":[88,24]},"visibility":"public","docs":"Format a [`Uuid`] as a braced hyphenated string, like\n`{67e55044-10b1-426f-9247-bb680e5fe0c8}`.","links":{"`Uuid`":"0:661:2583"},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:178","a:1:3304:252-0:490:3437","a:1:3339:4264-0:490:3437","a:1:42604:4004-0:490:3437","a:1:32743:240-0:490:3437","a:1:32802:4092-0:490:3437","a:1:42605:3735-0:490:3437","b:1:3085-0:490:3437","b:1:2776-0:490:3437","b:1:3921-0:490:3437","b:1:2808-0:490:3437","b:1:2811-0:490:3437","b:1:2779-0:490:3437","b:1:3091-0:490:3437","b:1:3081-0:490:3437","b:1:3096-0:490:3437","b:5:783-0:490:3437","b:5:5974-0:490:3437","0:498","0:505","0:508","0:502","0:510","0:536","0:496","0:507","0:574","0:570","0:568","0:500","0:538","0:572","0:541","0:493","0:495"]}}},"b:1:2811-0:446:3432":{"id":"b:1:2811-0:446:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3299:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2806:4246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2813:27426"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:509:714":{"id":"0:509:714","crate_id":0,"name":"eq","span":{"filename":"src/fmt.rs","begin":[86,53],"end":[86,62]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:127:819":{"id":"0:127:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[30,4],"end":[32,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:451":{"id":"0:451","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[74,16],"end":[74,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3299:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:42605:3735-0:468:2760":{"id":"a:1:42605:3735-0:468:2760","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42605:3735","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:503:891":{"id":"0:503:891","crate_id":0,"name":"hash","span":{"filename":"src/fmt.rs","begin":[86,42],"end":[86,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"1:10756:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2776-0:256:3737":{"id":"b:1:2776-0:256:3737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2770:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocalContext","id":"0:256:3737","args":{"angle_bracketed":{"args":[{"type":{"generic":"C"}}],"bindings":[]}}}},"items":["1:2778:3423"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:34:2978":{"id":"0:34:2978","crate_id":0,"name":"from_bytes_le","span":{"filename":"src/builder.rs","begin":[548,4],"end":[550,5]},"visibility":"public","docs":"Creates a `Builder` using the supplied bytes in little endian order.\n\nThe individual fields encoded in the buffer will be flipped.\n\n# Examples\n\nBasic usage:\n\n```\n# fn main() -> Result<(), uuid::Error> {\n# use uuid::{Builder, Uuid};\nlet bytes = [\n    0xa1, 0xa2, 0xa3, 0xa4,\n    0xb1, 0xb2,\n    0xc1, 0xc2,\n    0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8,\n];\n\nlet uuid = Builder::from_bytes_le(bytes).into_uuid();\n\nassert_eq!(\n    \"a4a3a2a1-b2b1-c2c1-d1d2-d3d4d5d6d7d8\",\n    uuid.hyphenated().to_string(),\n);\n# Ok(())\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["b",{"resolved_path":{"name":"Bytes","id":"0:310:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5974-0:446:3432":{"id":"b:5:5974-0:446:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"1:10535:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5972:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5976:1814"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:461":{"id":"0:461","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[74,48],"end":[74,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","clamp","min"],"trait":{"name":"Ord","id":"1:2894:198","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:462:493"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:220:3649":{"id":"0:220:3649","crate_id":0,"name":"to_unix_nanos","span":{"filename":"src/timestamp.rs","begin":[172,4],"end":[174,5]},"visibility":"public","docs":"Get the number of fractional nanoseconds in the Unix timestamp.\n\nThis method is deprecated and probably doesn't do what you're expecting it to.\nIt doesn't return the timestamp as nanoseconds since the Unix epoch, it returns\nthe fractional seconds of the timestamp.","links":{},"attrs":["#[deprecated(note =\n\"use `to_unix` instead; this method will be removed in a future release\")]"],"deprecation":{"since":null,"note":"use `to_unix` instead; this method will be removed in a future release"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32802:4092-0:446:3432":{"id":"a:1:32802:4092-0:446:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32802:4092","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:337:2769":{"id":"0:337:2769","crate_id":0,"name":"get_timestamp","span":{"filename":"src/lib.rs","begin":[889,4],"end":[911,5]},"visibility":"public","docs":"If the UUID is the correct version (v1, v6, or v7) this will return\nthe timestamp in a version-agnostic [`Timestamp`]. For other versions\nthis will return `None`.\n\n# Roundtripping\n\nThis method is unlikely to roundtrip a timestamp in a UUID due to the way\nUUIDs encode timestamps. The timestamp returned from this method will be truncated to\n100ns precision for version 1 and 6 UUIDs, and to millisecond precision for version 7 UUIDs.","links":{"`Timestamp`":"0:576:2494"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42511:197","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3304:252-0:490:3437":{"id":"a:1:3304:252-0:490:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3304:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:297-0:234:2493":{"id":"0:297-0:234:2493","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[235,40],"end":[235,53]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"timestamp::ClockSequence","name":"ClockSequence","id":"0:234:2493","glob":false}}},"0:500":{"id":"0:500","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[86,38],"end":[86,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2863:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:298-0:576:2494":{"id":"0:298-0:576:2494","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[235,55],"end":[235,64]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"timestamp::Timestamp","name":"Timestamp","id":"0:576:2494","glob":false}}},"1:13656:4348":{"id":"1:13656:4348","crate_id":1,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('√©'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"1:42513:194","prim@char":"4:12452:482","self::pattern":"1:13301:3997"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42511:197","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13697:34959":{"id":"1:13697:34959","crate_id":1,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"1:13301:3997","`DoubleEndedIterator`":"1:8451:133","prim@char":"4:12452:482","str::rmatch_indices":"1:13700:34960"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"1:44531:4510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:556":{"id":"0:556","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"1:3049:78","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:557:343"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13732:34971":{"id":"1:13732:34971","crate_id":1,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"1:13262:140","`FromStr`":"1:13261:3313"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42643:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"1:13261:3313","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"1:13261:3313","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:320:2665":{"id":"0:320:2665","crate_id":0,"name":"as_fields","span":{"filename":"src/lib.rs","begin":[626,4],"end":[640,5]},"visibility":"public","docs":"Returns the four field values of the UUID.\n\nThese values can be passed to the [`Uuid::from_fields`] method to get\nthe original `Uuid` back.\n\n* The first field value represents the first group of (eight) hex\n  digits, taken as a big-endian `u32` value.  For V1 UUIDs, this field\n  represents the low 32 bits of the timestamp.\n* The second field value represents the second group of (four) hex\n  digits, taken as a big-endian `u16` value.  For V1 UUIDs, this field\n  represents the middle 16 bits of the timestamp.\n* The third field value represents the third group of (four) hex digits,\n  taken as a big-endian `u16` value.  The 4 most significant bits give\n  the UUID version, and for V1 UUIDs, the last 12 bits represent the\n  high 12 bits of the timestamp.\n* The last field value represents the last two groups of four and twelve\n  hex digits, taken in order.  The first 1-3 bits of this indicate the\n  UUID variant, and for V1 UUIDs, the next 13-15 bits indicate the clock\n  sequence and the last 48 bits indicate the node ID.\n\n# Examples\n\n```\n# use uuid::Uuid;\n# fn main() -> Result<(), uuid::Error> {\nlet uuid = Uuid::nil();\n\nassert_eq!(uuid.as_fields(), (0, 0, 0, &[0u8; 8]));\n\nlet uuid = Uuid::parse_str(\"a1a2a3a4-b1b2-c1c2-d1d2-d3d4d5d6d7d8\")?;\n\nassert_eq!(\n    uuid.as_fields(),\n    (\n        0xa1a2a3a4,\n        0xb1b2,\n        0xc1c2,\n        &[0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8],\n    )\n);\n# Ok(())\n# }\n```","links":{"`Uuid::from_fields`":"0:18:2914"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"u32"},{"primitive":"u16"},{"primitive":"u16"},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"array":{"type":{"primitive":"u8"},"len":"8"}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:126":{"id":"0:126","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[29,0],"end":[33,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10535:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:127:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:130":{"id":"0:130","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[42,0],"end":[51,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10535:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:131:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2808-0:424:3429":{"id":"b:1:2808-0:424:3429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2806:4246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2810:27426"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:199:3503":{"id":"0:199:3503","crate_id":0,"name":"encode_lower","span":{"filename":"src/fmt.rs","begin":[746,4],"end":[748,5]},"visibility":"public","docs":"Writes the [`Uuid`] as a lower-case URN string to\n`buffer`, and returns the subslice of the buffer that contains the\nencoded UUID.\n\nThis is slightly more efficient than using the formatting\ninfrastructure as it avoids virtual calls, and may avoid\ndouble buffering.\n\n[`Uuid`]: ../struct.Uuid.html\n\n# Panics\n\nPanics if the buffer is not large enough: it must have length at least\n[`LENGTH`]. [`Uuid::encode_buffer`] can be used to get a\nsufficiently-large temporary buffer.\n\n[`LENGTH`]: #associatedconstant.LENGTH\n[`Uuid::encode_buffer`]: ../struct.Uuid.html#method.encode_buffer\n\n# Examples\n\n```rust\nuse uuid::Uuid;\n\nfn main() -> Result<(), uuid::Error> {\n    let uuid = Uuid::parse_str(\"936DA01f9abd4d9d80c702af85c822a8\")?;\n\n    // the encoded portion is returned\n    assert_eq!(\n        uuid.urn().encode_lower(&mut Uuid::encode_buffer()),\n        \"urn:uuid:936da01f-9abd-4d9d-80c7-02af85c822a8\"\n    );\n\n    // the buffer is mutated directly, and trailing contents remains\n    let mut buf = [b'!'; 49];\n    uuid.urn().encode_lower(&mut buf);\n    assert_eq!(\n        uuid.urn().encode_lower(&mut buf),\n        \"urn:uuid:936da01f-9abd-4d9d-80c7-02af85c822a8\"\n    );\n    assert_eq!(\n        &buf as &[_],\n        b\"urn:uuid:936da01f-9abd-4d9d-80c7-02af85c822a8!!!!\" as &[_]\n    );\n     \n    Ok(())\n}\n```\n*/","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["buffer",{"borrowed_ref":{"lifetime":"'buf","mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"borrowed_ref":{"lifetime":"'buf","mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2808-0:594:2492":{"id":"b:1:2808-0:594:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2806:4246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2810:27426"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:463":{"id":"0:463","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[74,53],"end":[74,62]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32745:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:623:2521":{"id":"0:623:2521","crate_id":0,"name":"SortMac","span":{"filename":"src/lib.rs","begin":[315,4],"end":[315,15]},"visibility":"default","docs":"Version 6: Sortable Timestamp and node ID.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"6","value":"6"}}}},"0:473":{"id":"0:473","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[80,16],"end":[80,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3299:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3096-0:604:2507":{"id":"b:1:3096-0:604:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3099:141","1:3100:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:83:3314":{"id":"0:83:3314","crate_id":0,"name":"from_str","span":{"filename":"src/parser.rs","begin":[25,4],"end":[27,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["uuid_str",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42643:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:13261:3313","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:318:2626":{"id":"0:318:2626","crate_id":0,"name":"get_version_num","span":{"filename":"src/lib.rs","begin":[537,4],"end":[539,5]},"visibility":"public","docs":"Returns the version number of the UUID.\n\nThis represents the algorithm used to generate the value.\nThis method is the future-proof alternative to [`Uuid::get_version`].\n\n# Examples\n\nBasic usage:\n\n```\n# use uuid::Uuid;\n# fn main() -> Result<(), uuid::Error> {\nlet my_uuid = Uuid::parse_str(\"02f09a3f-1624-3b1d-8409-44eff7708208\")?;\n\nassert_eq!(3, my_uuid.get_version_num());\n# Ok(())\n# }\n```\n\n# References\n\n* [Version Field in RFC 9562](https://www.ietf.org/rfc/rfc9562.html#section-4.2)","links":{"`Uuid::get_version`":"0:319:2635"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32743:240-0:352:2500":{"id":"a:1:32743:240-0:352:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32743:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:352:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:366":{"id":"0:366","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[4,27],"end":[4,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"1:10748:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:367:891"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:641":{"id":"0:641","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[298,29],"end":[298,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2858:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:642:714"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:554":{"id":"0:554","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:555:849"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:546":{"id":"0:546","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:547:849"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:235:202":{"id":"0:235:202","crate_id":0,"name":"Output","span":{"filename":"src/timestamp.rs","begin":[363,4],"end":[363,16]},"visibility":"default","docs":"The type of sequence returned by this counter.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"0:647:2536":{"id":"0:647:2536","crate_id":0,"name":"RFC4122","span":{"filename":"src/lib.rs","begin":[337,4],"end":[337,11]},"visibility":"default","docs":"As described in the RFC 9562 Specification (default).\n(for backward compatibility it is not yet renamed)","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:1:2779-0:643:2531":{"id":"b:1:2779-0:643:2531","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2773:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2781:27422"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:617:2517":{"id":"0:617:2517","crate_id":0,"name":"Random","span":{"filename":"src/lib.rs","begin":[311,4],"end":[311,14]},"visibility":"default","docs":"Version 4: Random.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"4","value":"4"}}}},"0:515:819":{"id":"0:515:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2811-0:424:3429":{"id":"b:1:2811-0:424:3429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3299:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2806:4246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2813:27426"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:551:3423":{"id":"0:551:3423","crate_id":0,"name":"borrow","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:278:3695":{"id":"0:278:3695","crate_id":0,"name":"generate_sequence","span":{"filename":"src/timestamp.rs","begin":[597,12],"end":[599,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["seconds",{"primitive":"u64"}],["subsec_nanos",{"primitive":"u32"}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:234:2493","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:588:714":{"id":"0:588:714","crate_id":0,"name":"eq","span":{"filename":"src/timestamp.rs","begin":[42,29],"end":[42,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:574":{"id":"0:574","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2770:103","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:575:3423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:242:202":{"id":"0:242:202","crate_id":0,"name":"Output","span":{"filename":"src/timestamp.rs","begin":[405,4],"end":[405,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"ClockSequence","id":"0:234:2493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"1:13645:34955":{"id":"1:13645:34955","crate_id":1,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"1:44645:4509","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13653:31589":{"id":"1:13653:31589","crate_id":1,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"4:12452:482","self::pattern":"1:13301:3997"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13322:4491","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:428:486":{"id":"0:428:486","crate_id":0,"name":"clone","span":{"filename":"src/fmt.rs","begin":[68,9],"end":[68,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:290-0:248:3311":{"id":"0:290-0:248:3311","crate_id":0,"name":null,"span":{"filename":"src/timestamp.rs","begin":[648,4],"end":[648,27]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"std_support","name":"std_support","id":"0:248:3311","glob":true}}},"1:13726:34969":{"id":"1:13726:34969","crate_id":1,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"4:12452:482","self::pattern":"1:13301:3997"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13739:33140":{"id":"1:13739:33140","crate_id":1,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"1:1126:10026"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:268:202":{"id":"0:268:202","crate_id":0,"name":"Output","span":{"filename":"src/timestamp.rs","begin":[573,12],"end":[573,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"C"},"trait":{"name":"ClockSequence","id":"0:234:2493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"1:13617:34951":{"id":"1:13617:34951","crate_id":1,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°üíõ\");\n```","links":{"str::floor_char_boundary":"1:13615:34950"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:544":{"id":"0:544","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:545:849"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32743:240-0:256:3737":{"id":"a:1:32743:240-0:256:3737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32743:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocalContext","id":"0:256:3737","args":{"angle_bracketed":{"args":[{"type":{"generic":"C"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:3304:252-0:576:2494":{"id":"a:1:3304:252-0:576:2494","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3304:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:38:3209":{"id":"0:38:3209","crate_id":0,"name":"from_random_bytes","span":{"filename":"src/builder.rs","begin":[583,4],"end":[587,5]},"visibility":"public","docs":"Creates a `Builder` for a version 4 UUID using the supplied random bytes.\n\nThis method assumes the bytes are already sufficiently random, it will only\nset the appropriate bits for the UUID version and variant.\n\n# Examples\n\n```\n# use uuid::{Builder, Variant, Version};\n# let rng = || [\n#     70, 235, 208, 238, 14, 109, 67, 201, 185, 13, 204, 195, 90,\n# 145, 63, 62,\n# ];\nlet random_bytes = rng();\nlet uuid = Builder::from_random_bytes(random_bytes).into_uuid();\n\nassert_eq!(Some(Version::Random), uuid.get_version());\nassert_eq!(Variant::RFC4122, uuid.get_variant());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["random_bytes",{"resolved_path":{"name":"Bytes","id":"0:310:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3084:2969":{"id":"1:3084:2969","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:3058:148"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:467:1319":{"id":"0:467:1319","crate_id":0,"name":"partial_cmp","span":{"filename":"src/fmt.rs","begin":[74,64],"end":[74,74]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"1:42511:197","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"1:31503:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:54:3251":{"id":"0:54:3251","crate_id":0,"name":"set_variant","span":{"filename":"src/builder.rs","begin":[836,4],"end":[839,5]},"visibility":"public","docs":"Specifies the variant of the UUID.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["v",{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:449":{"id":"0:449","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[74,9],"end":[74,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:450:486"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:32":{"id":"0:32","crate_id":0,"name":null,"span":{"filename":"src/builder.rs","begin":[494,0],"end":[905,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Builder","id":"0:352:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:33:2807","0:34:2978","0:35:3199","0:37:3202","0:38:3209","0:39:3214","0:40:3218","0:42:3233","0:44:3238","0:45:2787","0:46:3184","0:47:2914","0:49:2920","0:51:2938","0:52:2941","0:53:2786","0:54:3251","0:55:3204","0:56:3257","0:57:2857","0:58:3263","0:59:2858"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:783-0:357:141":{"id":"b:5:783-0:357:141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:779:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:785:3978","5:786:27427","5:787:27428"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:476":{"id":"0:476","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[80,29],"end":[80,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3133:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:477:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32802:4092-0:594:2492":{"id":"a:1:32802:4092-0:594:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32802:4092","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:32802:4092-0:352:2500":{"id":"a:1:32802:4092-0:352:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32802:4092","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:352:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:178":{"id":"0:178","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[394,0],"end":[537,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:179:2761","0:180:3473","0:181:3503","0:183:3511","0:185:3263","0:186:2858"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2811-0:604:2507":{"id":"b:1:2811-0:604:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3299:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2806:4246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2813:27426"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:656":{"id":"0:656","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[329,22],"end":[329,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10530:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:657:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:30:2978":{"id":"0:30:2978","crate_id":0,"name":"from_bytes_le","span":{"filename":"src/builder.rs","begin":[446,4],"end":[451,5]},"visibility":"public","docs":"Creates a UUID using the supplied bytes in little endian order.\n\nThe individual fields encoded in the buffer will be flipped.\n\n# Examples\n\nBasic usage:\n\n```\n# fn main() -> Result<(), uuid::Error> {\n# use uuid::Uuid;\nlet bytes = [\n    0xa1, 0xa2, 0xa3, 0xa4,\n    0xb1, 0xb2,\n    0xc1, 0xc2,\n    0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8,\n];\n\nlet uuid = Uuid::from_bytes_le(bytes);\n\nassert_eq!(\n    \"a4a3a2a1-b2b1-c2c1-d1d2-d3d4d5d6d7d8\",\n    uuid.hyphenated().to_string(),\n);\n# Ok(())\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["b",{"resolved_path":{"name":"Bytes","id":"0:310:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3921-0:490:3437":{"id":"b:1:3921-0:490:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3919:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3923:1854"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3085-0:643:2531":{"id":"b:1:3085-0:643:2531","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3087:849"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/timestamp.rs","begin":[572,8],"end":[592,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ClockSequence","id":"0:234:2493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["generate_timestamp_sequence","usable_bits"],"trait":{"name":"ClockSequence","id":"0:234:2493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocalContext","id":"0:256:3737","args":{"angle_bracketed":{"args":[{"type":{"generic":"C"}}],"bindings":[]}}}},"items":["0:268:202","0:269:3695","0:271:3626","0:273:3627"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3091-0:604:2507":{"id":"b:1:3091-0:604:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3061:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3094:141","1:3095:1841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3091-0:352:2500":{"id":"b:1:3091-0:352:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3061:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:352:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3094:141","1:3095:1841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:47:2914":{"id":"0:47:2914","crate_id":0,"name":"from_fields","span":{"filename":"src/builder.rs","begin":[746,4],"end":[748,5]},"visibility":"public","docs":"Creates a `Builder` from four field values.\n\n# Examples\n\nBasic usage:\n\n```\n# use uuid::Builder;\nlet d1 = 0xa1a2a3a4;\nlet d2 = 0xb1b2;\nlet d3 = 0xc1c2;\nlet d4 = [0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8];\n\nlet uuid = Builder::from_fields(d1, d2, d3, &d4).into_uuid();\n\nassert_eq!(\n    uuid.hyphenated().to_string(),\n    \"a1a2a3a4-b1b2-c1c2-d1d2-d3d4d5d6d7d8\"\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["d1",{"primitive":"u32"}],["d2",{"primitive":"u16"}],["d3",{"primitive":"u16"}],["d4",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"array":{"type":{"primitive":"u8"},"len":"8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3091-0:446:3432":{"id":"b:1:3091-0:446:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3061:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3094:141","1:3095:1841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42604:4004-0:357:141":{"id":"a:1:42604:4004-0:357:141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42604:4004","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13735:10011":{"id":"1:13735:10011","crate_id":1,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"1:40412:4270","Self::is_ascii":"1:13734:10010"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42511:197","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"1:40412:4270","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:562":{"id":"0:562","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:563:849"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:3100:1839":{"id":"1:3100:1839","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"1:42643:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:657:819":{"id":"0:657:819","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[329,22],"end":[329,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:474":{"id":"0:474","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[80,22],"end":[80,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10530:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:475:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3081-0:490:3437":{"id":"b:1:3081-0:490:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3084:2969"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:68":{"id":"0:68","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[131,0],"end":[164,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10535:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:69:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2808-0:604:2507":{"id":"b:1:2808-0:604:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2806:4246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2810:27426"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:355":{"id":"0:355","crate_id":0,"name":null,"span":{"filename":"src/builder.rs","begin":[46,9],"end":[46,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_copy_implementations)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10530:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:352:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:356:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2779-0:604:2507":{"id":"b:1:2779-0:604:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2773:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2781:27422"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3304:252-0:256:3737":{"id":"a:1:3304:252-0:256:3737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3304:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocalContext","id":"0:256:3737","args":{"angle_bracketed":{"args":[{"type":{"generic":"C"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:32743:240-0:594:2492":{"id":"a:1:32743:240-0:594:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32743:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:644:2533":{"id":"0:644:2533","crate_id":0,"name":"NCS","span":{"filename":"src/lib.rs","begin":[334,4],"end":[334,13]},"visibility":"default","docs":"Reserved by the NCS for backward compatibility.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"0u8","value":"0"}}}},"0:658":{"id":"0:658","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[329,29],"end":[329,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32745:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:329:2619":{"id":"0:329:2619","crate_id":0,"name":"as_bytes","span":{"filename":"src/lib.rs","begin":[785,4],"end":[787,5]},"visibility":"public","docs":"Returns a slice of 16 octets containing the value.\n\nThis method borrows the underlying byte value of the UUID.\n\n# Examples\n\n```\n# use uuid::Uuid;\nlet bytes1 = [\n    0xa1, 0xa2, 0xa3, 0xa4,\n    0xb1, 0xb2,\n    0xc1, 0xc2,\n    0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8,\n];\nlet uuid1 = Uuid::from_bytes_ref(&bytes1);\n\nlet bytes2 = uuid1.as_bytes();\nlet uuid2 = Uuid::from_bytes_ref(bytes2);\n\nassert_eq!(uuid1, uuid2);\n\nassert!(std::ptr::eq(\n    uuid2 as *const Uuid as *const u8,\n    &bytes1 as *const [u8; 16] as *const u8,\n));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:310:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3081-0:576:2494":{"id":"b:1:3081-0:576:2494","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3084:2969"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:179:2761":{"id":"0:179:2761","crate_id":0,"name":"LENGTH","span":{"filename":"src/fmt.rs","begin":[398,4],"end":[398,33]},"visibility":"public","docs":"The length of a braced [`Uuid`] string.\n\n[`Uuid`]: ../struct.Uuid.html","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"usize"},"default":"38"}}},"0:33:2807":{"id":"0:33:2807","crate_id":0,"name":"from_bytes","span":{"filename":"src/builder.rs","begin":[517,4],"end":[519,5]},"visibility":"public","docs":"Creates a `Builder` using the supplied bytes.\n\n# Examples\n\nBasic usage:\n\n```\n# use uuid::Builder;\nlet bytes = [\n    0xa1, 0xa2, 0xa3, 0xa4,\n    0xb1, 0xb2,\n    0xc1, 0xc2,\n    0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8,\n];\n\nlet uuid = Builder::from_bytes(bytes).into_uuid();\n\nassert_eq!(\n    \"a1a2a3a4-b1b2-c1c2-d1d2-d3d4d5d6d7d8\",\n    uuid.hyphenated().to_string(),\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["b",{"resolved_path":{"name":"Bytes","id":"0:310:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:653":{"id":"0:653","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[329,9],"end":[329,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:654:486"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:57:2857":{"id":"0:57:2857","crate_id":0,"name":"with_version","span":{"filename":"src/builder.rs","begin":[862,4],"end":[866,5]},"visibility":"public","docs":"Specifies the version number of the UUID.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["v",{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42605:3735-0:604:2507":{"id":"a:1:42605:3735-0:604:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42605:3735","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:53:2786":{"id":"0:53:2786","crate_id":0,"name":"nil","span":{"filename":"src/builder.rs","begin":[831,4],"end":[833,5]},"visibility":"public","docs":"Creates a `Builder` with an initial [`Uuid::nil`].\n\n# Examples\n\nBasic usage:\n\n```\n# use uuid::Builder;\nlet uuid = Builder::nil().into_uuid();\n\nassert_eq!(\n    \"00000000-0000-0000-0000-000000000000\",\n    uuid.hyphenated().to_string(),\n);\n```","links":{"`Uuid::nil`":"0:14:2786"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:363:819":{"id":"0:363:819","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[4,16],"end":[4,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:194:3263":{"id":"0:194:3263","crate_id":0,"name":"as_uuid","span":{"filename":"src/fmt.rs","begin":[663,4],"end":[665,5]},"visibility":"public","docs":"Get a reference to the underlying [`Uuid`].\n\n# Examples\n\n```rust\nuse uuid::Uuid;\n\nlet simple = Uuid::nil().simple();\nassert_eq!(*simple.as_uuid(), Uuid::nil());\n```","links":{"`Uuid`":"0:661:2583"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:783-0:604:2507":{"id":"b:5:783-0:604:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:779:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:785:3978","5:786:27427","5:787:27428"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:144:3448":{"id":"0:144:3448","crate_id":0,"name":"as_braced","span":{"filename":"src/fmt.rs","begin":[138,4],"end":[141,5]},"visibility":"public","docs":"Get a borrowed [`Braced`] formatter.","links":{"`Braced`":"0:490:3437"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:140:3442":{"id":"0:140:3442","crate_id":0,"name":"as_simple","span":{"filename":"src/fmt.rs","begin":[112,4],"end":[115,5]},"visibility":"public","docs":"Get a borrowed [`Simple`] formatter.","links":{"`Simple`":"0:446:3432"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13700:34960":{"id":"1:13700:34960","crate_id":1,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"1:13301:3997","`DoubleEndedIterator`":"1:8451:133","prim@char":"4:12452:482","str::match_indices":"1:13697:34959"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"1:44549:4511","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13322:4491","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:555:849":{"id":"0:555:849","crate_id":0,"name":"from","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:338:2784":{"id":"0:338:2784","crate_id":0,"name":"get_node_id","span":{"filename":"src/lib.rs","begin":[915,4],"end":[931,5]},"visibility":"public","docs":"If the UUID is the correct version (v1, or v6) this will return the\nnode value as a 6-byte array. For other versions this will return `None`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"1:42511:197","args":{"angle_bracketed":{"args":[{"type":{"array":{"type":{"primitive":"u8"},"len":"6"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:308-0:352:2500":{"id":"0:308-0:352:2500","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[284,16],"end":[284,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::builder::Builder","name":"Builder","id":"0:352:2500","glob":false}}},"0:453:819":{"id":"0:453:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[74,22],"end":[74,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:293:3695":{"id":"0:293:3695","crate_id":0,"name":"generate_sequence","span":{"filename":"src/timestamp.rs","begin":[908,8],"end":[910,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_seconds",{"primitive":"u64"}],["_nanos",{"primitive":"u32"}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:234:2493","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3304:252-0:352:2500":{"id":"a:1:3304:252-0:352:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3304:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:352:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:433:60":{"id":"0:433:60","crate_id":0,"name":"default","span":{"filename":"src/fmt.rs","begin":[68,29],"end":[68,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:313:2585":{"id":"0:313:2585","crate_id":0,"name":"NAMESPACE_DNS","span":{"filename":"src/lib.rs","begin":[456,4],"end":[459,7]},"visibility":"public","docs":"UUID namespace for Domain Name System (DNS).","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:1:3921-0:661:2583":{"id":"b:1:3921-0:661:2583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3919:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3923:1854"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42604:4004-0:490:3437":{"id":"a:1:42604:4004-0:490:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42604:4004","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:317:2618":{"id":"0:317:2618","crate_id":0,"name":"get_variant","span":{"filename":"src/lib.rs","begin":[502,4],"end":[513,5]},"visibility":"public","docs":"Returns the variant of the UUID structure.\n\nThis determines the interpretation of the structure of the UUID.\nThis method simply reads the value of the variant byte. It doesn't\nvalidate the rest of the UUID as conforming to that variant.\n\n# Examples\n\nBasic usage:\n\n```\n# use uuid::{Uuid, Variant};\n# fn main() -> Result<(), uuid::Error> {\nlet my_uuid = Uuid::parse_str(\"02f09a3f-1624-3b1d-8409-44eff7708208\")?;\n\nassert_eq!(Variant::RFC4122, my_uuid.get_variant());\n# Ok(())\n# }\n```\n\n# References\n\n* [Variant Field in RFC 9562](https://www.ietf.org/rfc/rfc9562.html#section-4.1)","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:571:849":{"id":"0:571:849","crate_id":0,"name":"from","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13711:34966":{"id":"1:13711:34966","crate_id":1,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"4:12452:482","self::pattern":"1:13301:3997"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"1:13327:4490","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5974-0:661:2583":{"id":"b:5:5974-0:661:2583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"1:10535:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5972:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5976:1814"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:86:1839":{"id":"0:86:1839","crate_id":0,"name":"try_from","span":{"filename":"src/parser.rs","begin":[33,4],"end":[35,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["uuid_str",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42643:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:3065:262","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:597:819":{"id":"0:597:819","crate_id":0,"name":"fmt","span":{"filename":"src/timestamp.rs","begin":[902,13],"end":[902,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:351:1839":{"id":"0:351:1839","crate_id":0,"name":"try_from","span":{"filename":"src/lib.rs","begin":[966,4],"end":[968,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"resolved_path":{"name":"std::vec::Vec","id":"5:7214:270","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42643:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"1:3065:262","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:2810:27426":{"id":"1:2810:27426","crate_id":1,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2776-0:424:3429":{"id":"b:1:2776-0:424:3429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2770:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2778:3423"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:583":{"id":"0:583","crate_id":0,"name":null,"span":{"filename":"src/timestamp.rs","begin":[42,16],"end":[42,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:584:486"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:269:3695":{"id":"0:269:3695","crate_id":0,"name":"generate_sequence","span":{"filename":"src/timestamp.rs","begin":[575,12],"end":[578,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["seconds",{"primitive":"u64"}],["subsec_nanos",{"primitive":"u32"}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:234:2493","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3304:252-0:661:2583":{"id":"a:1:3304:252-0:661:2583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3304:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:288:3627":{"id":"0:288:3627","crate_id":0,"name":"usable_bits","span":{"filename":"src/timestamp.rs","begin":[636,12],"end":[643,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:234:2493","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13642:27896":{"id":"1:13642:27896","crate_id":1,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"1:13643:27921"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"1:44655:4499","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13647:2985":{"id":"1:13647:2985","crate_id":1,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"4:12452:482","self::pattern":"1:13301:3997"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2776-0:661:2583":{"id":"b:1:2776-0:661:2583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2770:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2778:3423"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5974-0:468:2760":{"id":"b:5:5974-0:468:2760","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"1:10535:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5972:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5976:1814"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:37:3202":{"id":"0:37:3202","crate_id":0,"name":"from_md5_bytes","span":{"filename":"src/builder.rs","begin":[558,4],"end":[562,5]},"visibility":"public","docs":"Creates a `Builder` for a version 3 UUID using the supplied MD5 hashed bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["md5_bytes",{"resolved_path":{"name":"Bytes","id":"0:310:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:660:714":{"id":"0:660:714","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[329,29],"end":[329,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13646:27918":{"id":"1:13646:27918","crate_id":1,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Za≈º√≥≈Çƒá gƒô≈õlƒÖ ja≈∫≈Ñ\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"1:44673:4496","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:635":{"id":"0:635","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[298,9],"end":[298,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:636:486"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:181:3503":{"id":"0:181:3503","crate_id":0,"name":"encode_lower","span":{"filename":"src/fmt.rs","begin":[455,4],"end":[457,5]},"visibility":"public","docs":"Writes the [`Uuid`] as a lower-case hyphenated string surrounded by\nbraces to `buffer`, and returns the subslice of the buffer that contains\nthe encoded UUID.\n\nThis is slightly more efficient than using the formatting\ninfrastructure as it avoids virtual calls, and may avoid\ndouble buffering.\n\n[`Uuid`]: ../struct.Uuid.html\n\n# Panics\n\nPanics if the buffer is not large enough: it must have length at least\n[`LENGTH`]. [`Uuid::encode_buffer`] can be used to get a\nsufficiently-large temporary buffer.\n\n[`LENGTH`]: #associatedconstant.LENGTH\n[`Uuid::encode_buffer`]: ../struct.Uuid.html#method.encode_buffer\n\n# Examples\n\n```rust\nuse uuid::Uuid;\n\nfn main() -> Result<(), uuid::Error> {\n    let uuid = Uuid::parse_str(\"936DA01f9abd4d9d80c702af85c822a8\")?;\n\n    // the encoded portion is returned\n    assert_eq!(\n        uuid.braced()\n            .encode_lower(&mut Uuid::encode_buffer()),\n        \"{936da01f-9abd-4d9d-80c7-02af85c822a8}\"\n    );\n\n    // the buffer is mutated directly, and trailing contents remains\n    let mut buf = [b'!'; 40];\n    uuid.braced().encode_lower(&mut buf);\n    assert_eq!(\n        &buf as &[_],\n        b\"{936da01f-9abd-4d9d-80c7-02af85c822a8}!!\" as &[_]\n    );\n\n    Ok(())\n}\n```\n*/","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["buffer",{"borrowed_ref":{"lifetime":"'buf","mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"borrowed_ref":{"lifetime":"'buf","mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3339:4264-0:490:3437":{"id":"a:1:3339:4264-0:490:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3339:4264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3085-0:490:3437":{"id":"b:1:3085-0:490:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3087:849"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13714:34967":{"id":"1:13714:34967","crate_id":1,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"4:12452:482","self::pattern":"1:13301:3997"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3081-0:446:3432":{"id":"b:1:3081-0:446:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3084:2969"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:371:714":{"id":"0:371:714","crate_id":0,"name":"eq","span":{"filename":"src/error.rs","begin":[4,33],"end":[4,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42604:4004-0:256:3737":{"id":"a:1:42604:4004-0:256:3737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42604:4004","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocalContext","id":"0:256:3737","args":{"angle_bracketed":{"args":[{"type":{"generic":"C"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:642:714":{"id":"0:642:714","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[298,29],"end":[298,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:185:3263":{"id":"0:185:3263","crate_id":0,"name":"as_uuid","span":{"filename":"src/fmt.rs","begin":[520,4],"end":[522,5]},"visibility":"public","docs":"Get a reference to the underlying [`Uuid`].\n\n# Examples\n\n```rust\nuse uuid::Uuid;\n\nlet braced = Uuid::nil().braced();\nassert_eq!(*braced.as_uuid(), Uuid::nil());\n```","links":{"`Uuid`":"0:661:2583"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:427":{"id":"0:427","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[68,9],"end":[68,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:428:486"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:511:1319":{"id":"0:511:1319","crate_id":0,"name":"partial_cmp","span":{"filename":"src/fmt.rs","begin":[86,64],"end":[86,74]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"1:42511:197","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"1:31503:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:638":{"id":"0:638","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[298,22],"end":[298,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10530:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:639:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:284:3695":{"id":"0:284:3695","crate_id":0,"name":"generate_sequence","span":{"filename":"src/timestamp.rs","begin":[620,12],"end":[624,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["seconds",{"primitive":"u64"}],["subsec_nanos",{"primitive":"u32"}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:234:2493","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:137:2837":{"id":"0:137:2837","crate_id":0,"name":"hyphenated","span":{"filename":"src/fmt.rs","begin":[93,4],"end":[95,5]},"visibility":"public","docs":"Get a [`Hyphenated`] formatter.","links":{"`Hyphenated`":"0:424:3429"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42605:3735-0:661:2583":{"id":"a:1:42605:3735-0:661:2583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42605:3735","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:197:2761":{"id":"0:197:2761","crate_id":0,"name":"LENGTH","span":{"filename":"src/fmt.rs","begin":[686,4],"end":[686,33]},"visibility":"public","docs":"The length of a URN [`Uuid`] string.\n\n[`Uuid`]: ../struct.Uuid.html","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"usize"},"default":"45"}}},"5:5729:35669":{"id":"5:5729:35669","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Œ£\";\n\nassert_eq!(\"œÉ\", sigma.to_lowercase());\n\n// but at the end of a word, it's œÇ, not œÉ:\nlet odysseus = \"·ΩàŒîŒ•Œ£Œ£ŒïŒéŒ£\";\n\nassert_eq!(\"·ΩÄŒ¥œÖœÉœÉŒµœçœÇ\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7801:248"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7801:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3091-0:468:2760":{"id":"b:1:3091-0:468:2760","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3061:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3094:141","1:3095:1841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3304:252-0:643:2531":{"id":"a:1:3304:252-0:643:2531","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3304:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:569:849":{"id":"0:569:849","crate_id":0,"name":"from","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5976:1814":{"id":"5:5976:1814","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7801:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:547:849":{"id":"0:547:849","crate_id":0,"name":"from","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:244:3626":{"id":"0:244:3626","crate_id":0,"name":"generate_timestamp_sequence","span":{"filename":"src/timestamp.rs","begin":[411,4],"end":[417,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["seconds",{"primitive":"u64"}],["subsec_nanos",{"primitive":"u32"}]],"output":{"tuple":[{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:234:2493","args":null}}},{"primitive":"u64"},{"primitive":"u32"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2776-0:490:3437":{"id":"b:1:2776-0:490:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2770:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2778:3423"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:548":{"id":"0:548","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"1:3049:78","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:549:343"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:439":{"id":"0:439","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[68,48],"end":[68,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","clamp","min"],"trait":{"name":"Ord","id":"1:2894:198","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:440:493"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3085-0:256:3737":{"id":"b:1:3085-0:256:3737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocalContext","id":"0:256:3737","args":{"angle_bracketed":{"args":[{"type":{"generic":"C"}}],"bindings":[]}}}},"items":["1:3087:849"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:134":{"id":"0:134","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[59,0],"end":[64,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"1:10543:3426","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:135:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13673:34956":{"id":"1:13673:34956","crate_id":1,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"1:13301:3997","str::split":"1:13664:31957","prim@char":"4:12452:482","`DoubleEndedIterator`":"1:8451:133","str::rsplit_terminator":"1:13676:34957"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"1:44431:4519","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2776-0:604:2507":{"id":"b:1:2776-0:604:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2770:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2778:3423"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:326:2686":{"id":"0:326:2686","crate_id":0,"name":"as_u128","span":{"filename":"src/lib.rs","begin":[701,4],"end":[703,5]},"visibility":"public","docs":"Returns a 128bit value containing the value.\n\nThe bytes in the UUID will be packed directly into a `u128`.\n\n# Examples\n\n```\n# use uuid::Uuid;\n# fn main() -> Result<(), uuid::Error> {\nlet uuid = Uuid::parse_str(\"a1a2a3a4-b1b2-c1c2-d1d2-d3d4d5d6d7d8\")?;\n\nassert_eq!(\n    uuid.as_u128(),\n    0xa1a2a3a4b1b2c1c2d1d2d3d4d5d6d7d8,\n);\n# Ok(())\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:525":{"id":"0:525","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"1:10543:3426","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:526:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3921-0:468:2760":{"id":"b:1:3921-0:468:2760","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3919:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3923:1854"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:18:2914":{"id":"0:18:2914","crate_id":0,"name":"from_fields","span":{"filename":"src/builder.rs","begin":[122,4],"end":[141,5]},"visibility":"public","docs":"Creates a UUID from four field values.\n\n# Examples\n\nBasic usage:\n\n```\n# use uuid::Uuid;\nlet d1 = 0xa1a2a3a4;\nlet d2 = 0xb1b2;\nlet d3 = 0xc1c2;\nlet d4 = [0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8];\n\nlet uuid = Uuid::from_fields(d1, d2, d3, &d4);\n\nassert_eq!(\n    \"a1a2a3a4-b1b2-c1c2-d1d2-d3d4d5d6d7d8\",\n    uuid.hyphenated().to_string(),\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["d1",{"primitive":"u32"}],["d2",{"primitive":"u16"}],["d3",{"primitive":"u16"}],["d4",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"array":{"type":{"primitive":"u8"},"len":"8"}}}}]],"output":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:248:3311":{"id":"0:248:3311","crate_id":0,"name":"std_support","span":{"filename":"src/timestamp.rs","begin":[550,4],"end":[550,19]},"visibility":{"restricted":{"parent":"0:246:2491","path":"::timestamp::context"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:256:3737"],"is_stripped":true}}},"0:639:819":{"id":"0:639:819","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[298,22],"end":[298,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:522":{"id":"0:522","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"1:10541:3424","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:523:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:3087:849":{"id":"1:3087:849","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3081-0:424:3429":{"id":"b:1:3081-0:424:3429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3084:2969"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2808-0:490:3437":{"id":"b:1:2808-0:490:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2806:4246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2810:27426"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3339:4264-0:604:2507":{"id":"a:1:3339:4264-0:604:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3339:4264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13636:31955":{"id":"1:13636:31955","crate_id":1,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that‚Äôs not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-L√∂f\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-L√∂f\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside ‚Äú√∂‚Äù\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"1:13637:31956"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"1:42511:197","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:558":{"id":"0:558","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2770:103","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:559:3423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:361:486":{"id":"0:361:486","crate_id":0,"name":"clone","span":{"filename":"src/error.rs","begin":[4,9],"end":[4,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3921-0:594:2492":{"id":"b:1:3921-0:594:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3919:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3923:1854"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:49:2920":{"id":"0:49:2920","crate_id":0,"name":"from_fields_le","span":{"filename":"src/builder.rs","begin":[770,4],"end":[772,5]},"visibility":"public","docs":"Creates a `Builder` from four field values.\n\n# Examples\n\nBasic usage:\n\n```\n# use uuid::Builder;\nlet d1 = 0xa1a2a3a4;\nlet d2 = 0xb1b2;\nlet d3 = 0xc1c2;\nlet d4 = [0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8];\n\nlet uuid = Builder::from_fields_le(d1, d2, d3, &d4).into_uuid();\n\nassert_eq!(\n    uuid.hyphenated().to_string(),\n    \"a4a3a2a1-b2b1-c2c1-d1d2-d3d4d5d6d7d8\"\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["d1",{"primitive":"u32"}],["d2",{"primitive":"u16"}],["d3",{"primitive":"u16"}],["d4",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"array":{"type":{"primitive":"u8"},"len":"8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:171:3473":{"id":"0:171:3473","crate_id":0,"name":"from_uuid","span":{"filename":"src/fmt.rs","begin":[259,4],"end":[261,5]},"visibility":"public","docs":"Creates a [`Hyphenated`] from a [`Uuid`].\n\n[`Uuid`]: ../struct.Uuid.html\n[`Hyphenated`]: struct.Hyphenated.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["uuid",{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:346:343":{"id":"0:346:343","crate_id":0,"name":"as_ref","span":{"filename":"src/lib.rs","begin":[950,4],"end":[952,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3081-0:604:2507":{"id":"b:1:3081-0:604:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3084:2969"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:341":{"id":"0:341","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[934,0],"end":[939,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3133:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:342:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:487:714":{"id":"0:487:714","crate_id":0,"name":"eq","span":{"filename":"src/fmt.rs","begin":[80,53],"end":[80,62]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:489:1319":{"id":"0:489:1319","crate_id":0,"name":"partial_cmp","span":{"filename":"src/fmt.rs","begin":[80,64],"end":[80,74]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"1:42511:197","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"1:31503:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3096-0:446:3432":{"id":"b:1:3096-0:446:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3099:141","1:3100:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5722:35667":{"id":"5:5722:35667","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:296:3990","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:296:3990","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:440:493":{"id":"0:440:493","crate_id":0,"name":"cmp","span":{"filename":"src/fmt.rs","begin":[68,48],"end":[68,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"1:31503:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:432":{"id":"0:432","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[68,29],"end":[68,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3133:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:433:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:51:2938":{"id":"0:51:2938","crate_id":0,"name":"from_u128","span":{"filename":"src/builder.rs","begin":[791,4],"end":[793,5]},"visibility":"public","docs":"Creates a `Builder` from a 128bit value.\n\n# Examples\n\nBasic usage:\n\n```\n# use uuid::Builder;\nlet v = 0xa1a2a3a4b1b2c1c2d1d2d3d4d5d6d7d8u128;\n\nlet uuid = Builder::from_u128(v).into_uuid();\n\nassert_eq!(\n    \"a1a2a3a4-b1b2-c1c2-d1d2-d3d4d5d6d7d8\",\n    uuid.hyphenated().to_string(),\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["v",{"primitive":"u128"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:236:3695":{"id":"0:236:3695","crate_id":0,"name":"generate_sequence","span":{"filename":"src/timestamp.rs","begin":[370,4],"end":[370,81]},"visibility":"default","docs":"Get the next value in the sequence to feed into a timestamp.\n\nThis method will be called each time a [`Timestamp`] is constructed.\n\nAny bits beyond [`ClockSequence::usable_bits`] in the output must be unset.","links":{"`ClockSequence::usable_bits`":"0:238:3627","`Timestamp`":"0:576:2494"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["seconds",{"primitive":"u64"}],["subsec_nanos",{"primitive":"u32"}]],"output":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:234:2493","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:58:3263":{"id":"0:58:3263","crate_id":0,"name":"as_uuid","span":{"filename":"src/builder.rs","begin":[883,4],"end":[885,5]},"visibility":"public","docs":"Get a reference to the underlying [`Uuid`].\n\n# Examples\n\nBasic usage:\n\n```\n# use uuid::Builder;\nlet builder = Builder::nil();\n\nlet uuid1 = builder.as_uuid();\nlet uuid2 = builder.as_uuid();\n\nassert_eq!(uuid1, uuid2);\n```","links":{"`Uuid`":"0:661:2583"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:360":{"id":"0:360","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[4,9],"end":[4,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:361:486"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:283:202":{"id":"0:283:202","crate_id":0,"name":"Output","span":{"filename":"src/timestamp.rs","begin":[618,12],"end":[618,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"C"},"trait":{"name":"ClockSequence","id":"0:234:2493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:552":{"id":"0:552","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:553:849"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:585":{"id":"0:585","crate_id":0,"name":null,"span":{"filename":"src/timestamp.rs","begin":[42,23],"end":[42,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3299:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13633:34954":{"id":"1:13633:34954","crate_id":1,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"4:12458:1754","crate::ops::IndexMut":"1:3583:4731","str::slice_unchecked":"1:13632:34953"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3081-0:661:2583":{"id":"b:1:3081-0:661:2583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3084:2969"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:331:2738":{"id":"0:331:2738","crate_id":0,"name":"to_bytes_le","span":{"filename":"src/lib.rs","begin":[833,4],"end":[839,5]},"visibility":"public","docs":"Returns the bytes of the UUID in little-endian order.\n\nThe bytes will be flipped to convert into little-endian order. This is\nbased on the endianness of the UUID, rather than the target environment\nso bytes will be flipped on both big and little endian machines.\n\n# Examples\n\n```\nuse uuid::Uuid;\n\n# fn main() -> Result<(), uuid::Error> {\nlet uuid = Uuid::parse_str(\"a1a2a3a4-b1b2-c1c2-d1d2-d3d4d5d6d7d8\")?;\n\nassert_eq!(\n    uuid.to_bytes_le(),\n    ([\n        0xa4, 0xa3, 0xa2, 0xa1, 0xb2, 0xb1, 0xc2, 0xc1, 0xd1, 0xd2,\n        0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8\n    ])\n);\n# Ok(())\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"0:310:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3091-0:594:2492":{"id":"b:1:3091-0:594:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3061:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3094:141","1:3095:1841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3304:252-0:424:3429":{"id":"a:1:3304:252-0:424:3429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3304:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:210:3613":{"id":"0:210:3613","crate_id":0,"name":"UUID_TICKS_BETWEEN_EPOCHS","span":{"filename":"src/timestamp.rs","begin":[30,0],"end":[30,65]},"visibility":"public","docs":"The number of 100 nanosecond ticks between the RFC 9562 epoch\n(`1582-10-15 00:00:00`) and the Unix epoch (`1970-01-01 00:00:00`).","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"primitive":"u64"},"const":{"expr":"0x01B2_1DD2_1381_4000","value":"122_192_928_000_000_000u64","is_literal":true}}}},"0:464":{"id":"0:464","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[74,53],"end":[74,62]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2858:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:465:714"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:234:2493":{"id":"0:234:2493","crate_id":0,"name":"ClockSequence","span":{"filename":"src/timestamp.rs","begin":[361,0],"end":[402,1]},"visibility":"public","docs":"A counter that can be used by versions 1 and 6 UUIDs to support\nthe uniqueness of timestamps.\n\n# References\n\n* [UUID Version 1 in RFC 9562](https://www.ietf.org/rfc/rfc9562.html#section-5.1)\n* [UUID Version 6 in RFC 9562](https://www.ietf.org/rfc/rfc9562.html#section-5.6)\n* [UUID Generator States in RFC 9562](https://www.ietf.org/rfc/rfc9562.html#section-6.3)","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:235:202","0:236:3695","0:237:3626","0:238:3627"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:275","0:291","0:239","0:266","0:281"]}}},"b:1:3096-0:661:2583":{"id":"b:1:3096-0:661:2583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3099:141","1:3100:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13691:3879":{"id":"1:13691:3879","crate_id":1,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"1:13301:3997","`DoubleEndedIterator`":"1:8451:133","prim@char":"4:12452:482","str::rmatches":"1:13694:34958"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"1:44585:4512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:55:3204":{"id":"0:55:3204","crate_id":0,"name":"with_variant","span":{"filename":"src/builder.rs","begin":[842,4],"end":[853,5]},"visibility":"public","docs":"Specifies the variant of the UUID.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["v",{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:280:3627":{"id":"0:280:3627","crate_id":0,"name":"usable_bits","span":{"filename":"src/timestamp.rs","begin":[609,12],"end":[614,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:234:2493","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13709:34964":{"id":"1:13709:34964","crate_id":1,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™\";\nassert!(Some('◊¢') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42604:4004-0:576:2494":{"id":"a:1:42604:4004-0:576:2494","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42604:4004","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:32802:4092-0:604:2507":{"id":"a:1:32802:4092-0:604:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32802:4092","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:214:2781":{"id":"0:214:2781","crate_id":0,"name":"from_unix_time","span":{"filename":"src/timestamp.rs","begin":[94,4],"end":[106,5]},"visibility":"public","docs":"Construct a `Timestamp` from a Unix timestamp and up to a 128-bit counter, as used in version 7 UUIDs.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["seconds",{"primitive":"u64"}],["subsec_nanos",{"primitive":"u32"}],["counter",{"primitive":"u128"}],["usable_counter_bits",{"primitive":"u8"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42605:3735-0:357:141":{"id":"a:1:42605:3735-0:357:141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42605:3735","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:183:3511":{"id":"0:183:3511","crate_id":0,"name":"encode_upper","span":{"filename":"src/fmt.rs","begin":[506,4],"end":[508,5]},"visibility":"public","docs":"Writes the [`Uuid`] as an upper-case hyphenated string surrounded by\nbraces to `buffer`, and returns the subslice of the buffer that contains\nthe encoded UUID.\n\nThis is slightly more efficient than using the formatting\ninfrastructure as it avoids virtual calls, and may avoid\ndouble buffering.\n\n[`Uuid`]: ../struct.Uuid.html\n\n# Panics\n\nPanics if the buffer is not large enough: it must have length at least\n[`LENGTH`]. [`Uuid::encode_buffer`] can be used to get a\nsufficiently-large temporary buffer.\n\n[`LENGTH`]: #associatedconstant.LENGTH\n[`Uuid::encode_buffer`]: ../struct.Uuid.html#method.encode_buffer\n\n# Examples\n\n```rust\nuse uuid::Uuid;\n\nfn main() -> Result<(), uuid::Error> {\n    let uuid = Uuid::parse_str(\"936da01f9abd4d9d80c702af85c822a8\")?;\n\n    // the encoded portion is returned\n    assert_eq!(\n        uuid.braced()\n            .encode_upper(&mut Uuid::encode_buffer()),\n        \"{936DA01F-9ABD-4D9D-80C7-02AF85C822A8}\"\n    );\n\n    // the buffer is mutated directly, and trailing contents remains\n    let mut buf = [b'!'; 40];\n    uuid.braced().encode_upper(&mut buf);\n    assert_eq!(\n        &buf as &[_],\n        b\"{936DA01F-9ABD-4D9D-80C7-02AF85C822A8}!!\" as &[_]\n    );\n\n    Ok(())\n}\n```\n*/","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["buffer",{"borrowed_ref":{"lifetime":"'buf","mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"borrowed_ref":{"lifetime":"'buf","mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:362":{"id":"0:362","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[4,16],"end":[4,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10530:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:363:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:529:819":{"id":"0:529:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:29:2807":{"id":"0:29:2807","crate_id":0,"name":"from_bytes","span":{"filename":"src/builder.rs","begin":[415,4],"end":[417,5]},"visibility":"public","docs":"Creates a UUID using the supplied bytes.\n\n# Examples\n\nBasic usage:\n\n```\n# fn main() -> Result<(), uuid::Error> {\n# use uuid::Uuid;\nlet bytes = [\n    0xa1, 0xa2, 0xa3, 0xa4,\n    0xb1, 0xb2,\n    0xc1, 0xc2,\n    0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8,\n];\n\nlet uuid = Uuid::from_bytes(bytes);\n\nassert_eq!(\n    uuid.hyphenated().to_string(),\n    \"a1a2a3a4-b1b2-c1c2-d1d2-d3d4d5d6d7d8\"\n);\n# Ok(())\n# }\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bytes",{"resolved_path":{"name":"Bytes","id":"0:310:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13679:31962":{"id":"1:13679:31962","crate_id":1,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"4:12452:482","self::pattern":"1:13301:3997","str::rsplitn":"1:13682:31964"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"1:44485:4517","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:292:202":{"id":"0:292:202","crate_id":0,"name":"Output","span":{"filename":"src/timestamp.rs","begin":[906,8],"end":[906,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u16"}}}},"a:1:42605:3735-0:594:2492":{"id":"a:1:42605:3735-0:594:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42605:3735","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:466":{"id":"0:466","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[74,64],"end":[74,74]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","lt","le"],"trait":{"name":"PartialOrd","id":"1:2900:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:467:1319"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:275":{"id":"0:275","crate_id":0,"name":null,"span":{"filename":"src/timestamp.rs","begin":[594,8],"end":[615,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ClockSequence","id":"0:234:2493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["generate_timestamp_sequence","usable_bits"],"trait":{"name":"ClockSequence","id":"0:234:2493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"core::panic::AssertUnwindSafe","id":"1:9548:3734","args":{"angle_bracketed":{"args":[{"type":{"generic":"C"}}],"bindings":[]}}}},"items":["0:277:202","0:278:3695","0:279:3626","0:280:3627"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:629:2525":{"id":"0:629:2525","crate_id":0,"name":"Custom","span":{"filename":"src/lib.rs","begin":[319,4],"end":[319,14]},"visibility":"default","docs":"Version 8: Custom.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"8","value":"8"}}}},"0:124":{"id":"0:124","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[22,0],"end":[27,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10530:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:125:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13612:1016":{"id":"1:13612:1016","crate_id":1,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"∆íoo\".len(), 4); // fancy f!\nassert_eq!(\"∆íoo\".chars().count(), 3);\n```","links":{"prim@char":"4:12452:482"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:32802:4092-0:490:3437":{"id":"a:1:32802:4092-0:490:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32802:4092","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:35:3199":{"id":"0:35:3199","crate_id":0,"name":"from_rfc4122_timestamp","span":{"filename":"src/builder.rs","begin":[553,4],"end":[555,5]},"visibility":"public","docs":"Creates a `Builder` for a version 1 UUID using the supplied timestamp and node ID.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["ticks",{"primitive":"u64"}],["counter",{"primitive":"u16"}],["node_id",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"array":{"type":{"primitive":"u8"},"len":"6"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:349":{"id":"0:349","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[963,0],"end":[969,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"5:7214:270","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:350:141","0:351:1839"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13717:31280":{"id":"1:13717:31280","crate_id":1,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"4:12452:482","self::pattern":"1:13301:3997"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42511:197","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3091-0:661:2583":{"id":"b:1:3091-0:661:2583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3061:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3094:141","1:3095:1841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3339:4264-0:594:2492":{"id":"a:1:3339:4264-0:594:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3339:4264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/timestamp.rs","begin":[559,8],"end":[563,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10530:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocalContext","id":"0:256:3737","args":{"angle_bracketed":{"args":[{"type":{"generic":"C"}}],"bindings":[]}}}},"items":["0:262:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:667":{"id":"0:667","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[438,22],"end":[438,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2863:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2779-0:661:2583":{"id":"b:1:2779-0:661:2583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2773:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2781:27422"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13613:4309":{"id":"1:13613:4309","crate_id":1,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:364":{"id":"0:364","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[4,23],"end":[4,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2863:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:256:3737":{"id":"0:256:3737","crate_id":0,"name":"ThreadLocalContext","span":{"filename":"src/timestamp.rs","begin":[557,8],"end":[557,72]},"visibility":"public","docs":"A wrapper for a context that uses thread-local storage.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"C","kind":{"type":{"bounds":[{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:263","a:1:3304:252-0:256:3737","a:1:3339:4264-0:256:3737","a:1:42604:4004-0:256:3737","a:1:32743:240-0:256:3737","a:1:32802:4092-0:256:3737","a:1:42605:3735-0:256:3737","b:1:3085-0:256:3737","b:1:2776-0:256:3737","b:1:3921-0:256:3737","b:1:2779-0:256:3737","b:1:3091-0:256:3737","b:1:3081-0:256:3737","b:1:3096-0:256:3737","0:266","0:260"]}}},"0:135:819":{"id":"0:135:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[61,4],"end":[63,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:575:3423":{"id":"0:575:3423","crate_id":0,"name":"borrow","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:559:3423":{"id":"0:559:3423","crate_id":0,"name":"borrow","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:456":{"id":"0:456","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[74,38],"end":[74,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2863:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32802:4092-0:468:2760":{"id":"a:1:32802:4092-0:468:2760","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32802:4092","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:488":{"id":"0:488","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[80,64],"end":[80,74]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","lt","le"],"trait":{"name":"PartialOrd","id":"1:2900:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:489:1319"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:542:819":{"id":"0:542:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:651:154":{"id":"0:651:154","crate_id":0,"name":"Future","span":{"filename":"src/lib.rs","begin":[341,4],"end":[341,10]},"visibility":"default","docs":"Reserved for future expansion.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"1:13734:10010":{"id":"1:13734:10010","crate_id":1,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:342:60":{"id":"0:342:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[936,4],"end":[938,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:508":{"id":"0:508","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[86,53],"end":[86,62]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2858:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:509:714"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:370":{"id":"0:370","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[4,33],"end":[4,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2858:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:371:714"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:654:486":{"id":"0:654:486","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[329,9],"end":[329,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:655":{"id":"0:655","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[329,16],"end":[329,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3299:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:620:2519":{"id":"0:620:2519","crate_id":0,"name":"Sha1","span":{"filename":"src/lib.rs","begin":[313,4],"end":[313,12]},"visibility":"default","docs":"Version 5: SHA-1 hash.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"5","value":"5"}}}},"1:13720:31968":{"id":"1:13720:31968","crate_id":1,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"4:12452:482","self::pattern":"1:13301:3997"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42511:197","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13322:4491","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:608:2511":{"id":"0:608:2511","crate_id":0,"name":"Mac","span":{"filename":"src/lib.rs","begin":[305,4],"end":[305,11]},"visibility":"default","docs":"Version 1: Timestamp and node ID.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"1","value":"1"}}}},"b:1:2776-0:643:2531":{"id":"b:1:2776-0:643:2531","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2770:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2778:3423"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3096-0:576:2494":{"id":"b:1:3096-0:576:2494","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3099:141","1:3100:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:539:819":{"id":"0:539:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3921-0:446:3432":{"id":"b:1:3921-0:446:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3919:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3923:1854"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:484:493":{"id":"0:484:493","crate_id":0,"name":"cmp","span":{"filename":"src/fmt.rs","begin":[80,48],"end":[80,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"1:31503:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:498":{"id":"0:498","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[86,29],"end":[86,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3133:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:499:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32802:4092-0:576:2494":{"id":"a:1:32802:4092-0:576:2494","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32802:4092","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:2776-0:576:2494":{"id":"b:1:2776-0:576:2494","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2770:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2778:3423"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:443:714":{"id":"0:443:714","crate_id":0,"name":"eq","span":{"filename":"src/fmt.rs","begin":[68,53],"end":[68,62]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2808-0:357:141":{"id":"b:1:2808-0:357:141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2806:4246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2810:27426"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2779-0:468:2760":{"id":"b:1:2779-0:468:2760","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2773:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2781:27422"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:3094:141":{"id":"1:3094:141","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"1:2778:3423":{"id":"1:2778:3423","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42604:4004-0:468:2760":{"id":"a:1:42604:4004-0:468:2760","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42604:4004","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:204:2858":{"id":"0:204:2858","crate_id":0,"name":"into_uuid","span":{"filename":"src/fmt.rs","begin":[827,4],"end":[829,5]},"visibility":"public","docs":"Consumes the [`Urn`], returning the underlying [`Uuid`].\n\n# Examples\n\n```rust\nuse uuid::Uuid;\n\nlet urn = Uuid::nil().urn();\nassert_eq!(urn.into_uuid(), Uuid::nil());\n```","links":{"`Uuid`":"0:661:2583","`Urn`":"0:468:2760"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:471":{"id":"0:471","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[80,9],"end":[80,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:472:486"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:531:819":{"id":"0:531:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:565:343":{"id":"0:565:343","crate_id":0,"name":"as_ref","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3081-0:594:2492":{"id":"b:1:3081-0:594:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3084:2969"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32743:240-0:576:2494":{"id":"a:1:32743:240-0:576:2494","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32743:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:131:819":{"id":"0:131:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[43,4],"end":[50,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:334:2759":{"id":"0:334:2759","crate_id":0,"name":"encode_buffer","span":{"filename":"src/lib.rs","begin":[876,4],"end":[878,5]},"visibility":"public","docs":"A buffer that can be used for `encode_...` calls, that is\nguaranteed to be long enough for any of the format adapters.\n\n# Examples\n\n```\n# use uuid::Uuid;\nlet uuid = Uuid::nil();\n\nassert_eq!(\n    uuid.simple().encode_lower(&mut Uuid::encode_buffer()),\n    \"00000000000000000000000000000000\"\n);\n\nassert_eq!(\n    uuid.hyphenated()\n        .encode_lower(&mut Uuid::encode_buffer()),\n    \"00000000-0000-0000-0000-000000000000\"\n);\n\nassert_eq!(\n    uuid.urn().encode_lower(&mut Uuid::encode_buffer()),\n    \"urn:uuid:00000000-0000-0000-0000-000000000000\"\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"array":{"type":{"primitive":"u8"},"len":"45"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:523:819":{"id":"0:523:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:24:2947":{"id":"0:24:2947","crate_id":0,"name":"from_u64_pair","span":{"filename":"src/builder.rs","begin":[288,4],"end":[307,5]},"visibility":"public","docs":"Creates a UUID from two 64bit values.\n\n# Examples\n\nBasic usage:\n\n```\n# use uuid::Uuid;\nlet hi = 0xa1a2a3a4b1b2c1c2u64;\nlet lo = 0xd1d2d3d4d5d6d7d8u64;\n\nlet uuid = Uuid::from_u64_pair(hi, lo);\n\nassert_eq!(\n    \"a1a2a3a4-b1b2-c1c2-d1d2-d3d4d5d6d7d8\",\n    uuid.hyphenated().to_string(),\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["high_bits",{"primitive":"u64"}],["low_bits",{"primitive":"u64"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:2835":{"id":"0:0:2835","crate_id":0,"name":"uuid","span":{"filename":"src/lib.rs","begin":[12,0],"end":[1895,1]},"visibility":"public","docs":"Generate and parse universally unique identifiers (UUIDs).\n\nHere's an example of a UUID:\n\n```text\n67e55044-10b1-426f-9247-bb680e5fe0c8\n```\n\nA UUID is a unique 128-bit value, stored as 16 octets, and regularly\nformatted as a hex string in five groups. UUIDs are used to assign unique\nidentifiers to entities without requiring a central allocating authority.\n\nThey are particularly useful in distributed systems, though can be used in\ndisparate areas, such as databases and network protocols.  Typically a UUID\nis displayed in a readable string form as a sequence of hexadecimal digits,\nseparated into groups by hyphens.\n\nThe uniqueness property is not strictly guaranteed, however for all\npractical purposes, it can be assumed that an unintentional collision would\nbe extremely unlikely.\n\nUUIDs have a number of standardized encodings that are specified in [RFC 9562](https://www.ietf.org/rfc/rfc9562.html).\n\n# Getting started\n\nAdd the following to your `Cargo.toml`:\n\n```toml\n[dependencies.uuid]\nversion = \"1.9.1\"\nfeatures = [\n    \"v4\",                # Lets you generate random UUIDs\n    \"fast-rng\",          # Use a faster (but still sufficiently random) RNG\n    \"macro-diagnostics\", # Enable better diagnostics for compile-time UUIDs\n]\n```\n\nWhen you want a UUID, you can generate one:\n\n```\n# fn main() {\n# #[cfg(feature = \"v4\")]\n# {\nuse uuid::Uuid;\n\nlet id = Uuid::new_v4();\n# }\n# }\n```\n\nIf you have a UUID value, you can use its string literal form inline:\n\n```\nuse uuid::{uuid, Uuid};\n\nconst ID: Uuid = uuid!(\"67e55044-10b1-426f-9247-bb680e5fe0c8\");\n```\n\n# Working with different UUID versions\n\nThis library supports all standardized methods for generating UUIDs through individual Cargo features.\n\nBy default, this crate depends on nothing but the Rust standard library and can parse and format\nUUIDs, but cannot generate them. Depending on the kind of UUID you'd like to work with, there\nare Cargo features that enable generating them:\n\n* `v1` - Version 1 UUIDs using a timestamp and monotonic counter.\n* `v3` - Version 3 UUIDs based on the MD5 hash of some data.\n* `v4` - Version 4 UUIDs with random data.\n* `v5` - Version 5 UUIDs based on the SHA1 hash of some data.\n* `v6` - Version 6 UUIDs using a timestamp and monotonic counter.\n* `v7` - Version 7 UUIDs using a Unix timestamp.\n* `v8` - Version 8 UUIDs using user-defined data.\n\nThis library also includes a [`Builder`] type that can be used to help construct UUIDs of any\nversion without any additional dependencies or features. It's a lower-level API than [`Uuid`]\nthat can be used when you need control over implicit requirements on things like a source\nof randomness.\n\n## Which UUID version should I use?\n\nIf you just want to generate unique identifiers then consider version 4 (`v4`) UUIDs. If you want\nto use UUIDs as database keys or need to sort them then consider version 7 (`v7`) UUIDs.\nOther versions should generally be avoided unless there's an existing need for them.\n\nSome UUID versions supersede others. Prefer version 6 over version 1 and version 5 over version 3.\n\n# Other features\n\nOther crate features can also be useful beyond the version support:\n\n* `macro-diagnostics` - enhances the diagnostics of `uuid!` macro.\n* `serde` - adds the ability to serialize and deserialize a UUID using\n  `serde`.\n* `borsh` - adds the ability to serialize and deserialize a UUID using\n  `borsh`.\n* `arbitrary` - adds an `Arbitrary` trait implementation to `Uuid` for\n  fuzzing.\n* `fast-rng` - uses a faster algorithm for generating random UUIDs.\n  This feature requires more dependencies to compile, but is just as suitable for\n  UUIDs as the default algorithm.\n* `bytemuck` - adds a `Pod` trait implementation to `Uuid` for byte manipulation\n\n# Unstable features\n\nSome features are unstable. They may be incomplete or depend on other\nunstable libraries. These include:\n\n* `zerocopy` - adds support for zero-copy deserialization using the\n  `zerocopy` library.\n\nUnstable features may break between minor releases.\n\nTo allow unstable features, you'll need to enable the Cargo feature as\nnormal, but also pass an additional flag through your environment to opt-in\nto unstable `uuid` features:\n\n```text\nRUSTFLAGS=\"--cfg uuid_unstable\"\n```\n\n# Building for other targets\n\n## WebAssembly\n\nFor WebAssembly, enable the `js` feature:\n\n```toml\n[dependencies.uuid]\nversion = \"1.9.1\"\nfeatures = [\n    \"v4\",\n    \"v7\",\n    \"js\",\n]\n```\n\n## Embedded\n\nFor embedded targets without the standard library, you'll need to\ndisable default features when building `uuid`:\n\n```toml\n[dependencies.uuid]\nversion = \"1.9.1\"\ndefault-features = false\n```\n\nSome additional features are supported in no-std environments:\n\n* `v1`, `v3`, `v5`, `v6`, and `v8`.\n* `serde`.\n\nIf you need to use `v4` or `v7` in a no-std environment, you'll need to\nfollow [`getrandom`'s docs] on configuring a source of randomness\non currently unsupported targets. Alternatively, you can produce\nrandom bytes yourself and then pass them to [`Builder::from_random_bytes`]\nwithout enabling the `v4` or `v7` features.\n\n# Examples\n\nParse a UUID given in the simple format and print it as a URN:\n\n```\n# use uuid::Uuid;\n# fn main() -> Result<(), uuid::Error> {\nlet my_uuid = Uuid::parse_str(\"a1a2a3a4b1b2c1c2d1d2d3d4d5d6d7d8\")?;\n\nprintln!(\"{}\", my_uuid.urn());\n# Ok(())\n# }\n```\n\nGenerate a random UUID and print it out in hexadecimal form:\n\n```\n// Note that this requires the `v4` feature to be enabled.\n# use uuid::Uuid;\n# fn main() {\n# #[cfg(feature = \"v4\")] {\nlet my_uuid = Uuid::new_v4();\n\nprintln!(\"{}\", my_uuid);\n# }\n# }\n```\n\n# References\n\n* [Wikipedia: Universally Unique Identifier](http://en.wikipedia.org/wiki/Universally_unique_identifier)\n* [RFC 9562: Universally Unique IDentifiers (UUID)](https://www.ietf.org/rfc/rfc9562.html).\n\n[`wasm-bindgen`]: https://crates.io/crates/wasm-bindgen\n[`cargo-web`]: https://crates.io/crates/cargo-web\n[`getrandom`'s docs]: https://docs.rs/getrandom","links":{"`Uuid`":"0:661:2583","`Builder::from_random_bytes`":"0:38:3209","`Builder`":"0:352:2500"},"attrs":["#![no_std]","#![deny(missing_debug_implementations, missing_docs)]","#![allow(clippy::mixed_attributes_style)]","#![doc(html_logo_url =\n\"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\nhtml_favicon_url = \"https://www.rust-lang.org/favicon.ico\", html_root_url =\n\"https://docs.rs/uuid/1.9.1\")]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:112:819","0:207:2490","0:296-0:594:2492","0:297-0:234:2493","0:298-0:576:2494","0:308-0:352:2500","0:309-0:357:141","0:310:2504","0:604:2507","0:643:2531","0:661:2583","0:603:2835"],"is_stripped":false}}},"1:13670:31960":{"id":"1:13670:31960","crate_id":1,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"1:13301:3997","`DoubleEndedIterator`":"1:8451:133","prim@char":"4:12452:482","str::split":"1:13664:31957"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"1:44399:4514","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13322:4491","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:560":{"id":"0:560","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:561:849"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:294:3627":{"id":"0:294:3627","crate_id":0,"name":"usable_bits","span":{"filename":"src/timestamp.rs","begin":[912,8],"end":[914,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13694:34958":{"id":"1:13694:34958","crate_id":1,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"1:13301:3997","`DoubleEndedIterator`":"1:8451:133","prim@char":"4:12452:482","str::matches":"1:13691:3879"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"1:44603:4513","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13322:4491","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13740:33141":{"id":"1:13740:33141","crate_id":1,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"1:1126:10026"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5737:35670":{"id":"5:5737:35670","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tsch√º√ü\";\n\nassert_eq!(\"TSCH√úSS\", s.to_uppercase());\n```","links":{"`String`":"5:7801:248"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7801:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5739:10473":{"id":"5:5739:10473","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7801:248"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7801:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:25:2787":{"id":"0:25:2787","crate_id":0,"name":"from_slice","span":{"filename":"src/builder.rs","begin":[338,4],"end":[346,5]},"visibility":"public","docs":"Creates a UUID using the supplied bytes.\n\n# Errors\n\nThis function will return an error if `b` has any length other than 16.\n\n# Examples\n\nBasic usage:\n\n```\n# fn main() -> Result<(), uuid::Error> {\n# use uuid::Uuid;\nlet bytes = [\n    0xa1, 0xa2, 0xa3, 0xa4,\n    0xb1, 0xb2,\n    0xc1, 0xc2,\n    0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8,\n];\n\nlet uuid = Uuid::from_slice(&bytes)?;\n\nassert_eq!(\n    \"a1a2a3a4-b1b2-c1c2-d1d2-d3d4d5d6d7d8\",\n    uuid.hyphenated().to_string(),\n);\n# Ok(())\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["b",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42643:229","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:316:2608":{"id":"0:316:2608","crate_id":0,"name":"NAMESPACE_X500","span":{"filename":"src/lib.rs","begin":[474,4],"end":[477,7]},"visibility":"public","docs":"UUID namespace for X.500 Distinguished Names (DNs).","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:506:493":{"id":"0:506:493","crate_id":0,"name":"cmp","span":{"filename":"src/fmt.rs","begin":[86,48],"end":[86,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"1:31503:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:472:486":{"id":"0:472:486","crate_id":0,"name":"clone","span":{"filename":"src/fmt.rs","begin":[80,9],"end":[80,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:526:819":{"id":"0:526:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:446:3432":{"id":"0:446:3432","crate_id":0,"name":"Simple","span":{"filename":"src/fmt.rs","begin":[76,0],"end":[76,24]},"visibility":"public","docs":"Format a [`Uuid`] as a simple string, like\n`67e5504410b1426f9247bb680e5fe0c8`.","links":{"`Uuid`":"0:661:2583"},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:187","a:1:3304:252-0:446:3432","a:1:3339:4264-0:446:3432","a:1:42604:4004-0:446:3432","a:1:32743:240-0:446:3432","a:1:32802:4092-0:446:3432","a:1:42605:3735-0:446:3432","b:1:3085-0:446:3432","b:1:2776-0:446:3432","b:1:3921-0:446:3432","b:1:2808-0:446:3432","b:1:2811-0:446:3432","b:1:2779-0:446:3432","b:1:3091-0:446:3432","b:1:3081-0:446:3432","b:1:3096-0:446:3432","b:5:783-0:446:3432","b:5:5974-0:446:3432","0:461","0:554","0:558","0:456","0:520","0:525","0:552","0:454","0:464","0:466","0:522","0:556","0:463","0:458","0:451","0:449","0:452"]}}},"b:1:2811-0:661:2583":{"id":"b:1:2811-0:661:2583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3299:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2806:4246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2813:27426"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2776-0:594:2492":{"id":"b:1:2776-0:594:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2770:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2778:3423"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:246:2491":{"id":"0:246:2491","crate_id":0,"name":"context","span":{"filename":"src/timestamp.rs","begin":[428,0],"end":[428,15]},"visibility":"public","docs":"Default implementations for the [`ClockSequence`] trait.","links":{"`ClockSequence`":"0:234:2493"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:594:2492","0:290-0:248:3311"],"is_stripped":false}}},"0:327:2698":{"id":"0:327:2698","crate_id":0,"name":"to_u128_le","span":{"filename":"src/lib.rs","begin":[730,4],"end":[732,5]},"visibility":"public","docs":"Returns a 128bit little-endian value containing the value.\n\nThe bytes in the `u128` will be flipped to convert into big-endian\norder. This is based on the endianness of the UUID, rather than the\ntarget environment so bytes will be flipped on both big and little\nendian machines.\n\nNote that this will produce a different result than\n[`Uuid::to_fields_le`], because the entire UUID is reversed, rather\nthan reversing the individual fields in-place.\n\n# Examples\n\n```\n# use uuid::Uuid;\n# fn main() -> Result<(), uuid::Error> {\nlet uuid = Uuid::parse_str(\"a1a2a3a4-b1b2-c1c2-d1d2-d3d4d5d6d7d8\")?;\n\nassert_eq!(\n    uuid.to_u128_le(),\n    0xd8d7d6d5d4d3d2d1c2c1b2b1a4a3a2a1,\n);\n# Ok(())\n# }\n```","links":{"`Uuid::to_fields_le`":"0:323:2681"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3096-0:468:2760":{"id":"b:1:3096-0:468:2760","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3099:141","1:3100:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:367:891":{"id":"0:367:891","crate_id":0,"name":"hash","span":{"filename":"src/error.rs","begin":[4,27],"end":[4,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"1:10756:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3096-0:256:3737":{"id":"b:1:3096-0:256:3737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocalContext","id":"0:256:3737","args":{"angle_bracketed":{"args":[{"type":{"generic":"C"}}],"bindings":[]}}}},"items":["1:3099:141","1:3100:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:518:819":{"id":"0:518:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:176:3263":{"id":"0:176:3263","crate_id":0,"name":"as_uuid","span":{"filename":"src/fmt.rs","begin":[375,4],"end":[377,5]},"visibility":"public","docs":"Get a reference to the underlying [`Uuid`].\n\n# Examples\n\n```rust\nuse uuid::Uuid;\n\nlet hyphenated = Uuid::nil().hyphenated();\nassert_eq!(*hyphenated.as_uuid(), Uuid::nil());\n```","links":{"`Uuid`":"0:661:2583"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:271:3626":{"id":"0:271:3626","crate_id":0,"name":"generate_timestamp_sequence","span":{"filename":"src/timestamp.rs","begin":[580,12],"end":[587,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["seconds",{"primitive":"u64"}],["subsec_nanos",{"primitive":"u32"}]],"output":{"tuple":[{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:234:2493","args":null}}},{"primitive":"u64"},{"primitive":"u32"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3096-0:643:2531":{"id":"b:1:3096-0:643:2531","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3099:141","1:3100:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13676:34957":{"id":"1:13676:34957","crate_id":1,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"1:13301:3997","str::split":"1:13664:31957","prim@char":"4:12452:482","str::split_terminator":"1:13673:34956"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"1:44449:4518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13322:4491","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:640":{"id":"0:640","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[298,29],"end":[298,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32745:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:310:2504":{"id":"0:310:2504","crate_id":0,"name":"Bytes","span":{"filename":"src/lib.rs","begin":[291,0],"end":[291,26]},"visibility":"public","docs":"A 128-bit (16 byte) buffer containing the UUID.\n\n# ABI\n\nThe `Bytes` type is always guaranteed to be have the same ABI as [`Uuid`].","links":{"`Uuid`":"0:661:2583"},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"array":{"type":{"primitive":"u8"},"len":"16"}},"generics":{"params":[],"where_predicates":[]}}}},"b:1:3096-0:352:2500":{"id":"b:1:3096-0:352:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:352:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3099:141","1:3100:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:188:2761":{"id":"0:188:2761","crate_id":0,"name":"LENGTH","span":{"filename":"src/fmt.rs","begin":[543,4],"end":[543,33]},"visibility":"public","docs":"The length of a simple [`Uuid`] string.\n\n[`Uuid`]: ../struct.Uuid.html","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"usize"},"default":"32"}}},"0:201:3511":{"id":"0:201:3511","crate_id":0,"name":"encode_upper","span":{"filename":"src/fmt.rs","begin":[799,4],"end":[801,5]},"visibility":"public","docs":"Writes the [`Uuid`] as an upper-case URN string to\n`buffer`, and returns the subslice of the buffer that contains the\nencoded UUID.\n\nThis is slightly more efficient than using the formatting\ninfrastructure as it avoids virtual calls, and may avoid\ndouble buffering.\n\n[`Uuid`]: ../struct.Uuid.html\n\n# Panics\n\nPanics if the buffer is not large enough: it must have length at least\n[`LENGTH`]. [`Uuid::encode_buffer`] can be used to get a\nsufficiently-large temporary buffer.\n\n[`LENGTH`]: #associatedconstant.LENGTH\n[`Uuid::encode_buffer`]: ../struct.Uuid.html#method.encode_buffer\n\n# Examples\n\n```rust\nuse uuid::Uuid;\n\nfn main() -> Result<(), uuid::Error> {\n    let uuid = Uuid::parse_str(\"936da01f9abd4d9d80c702af85c822a8\")?;\n\n    // the encoded portion is returned\n    assert_eq!(\n        uuid.urn().encode_upper(&mut Uuid::encode_buffer()),\n        \"urn:uuid:936DA01F-9ABD-4D9D-80C7-02AF85C822A8\"\n    );\n\n    // the buffer is mutated directly, and trailing contents remains\n    let mut buf = [b'!'; 49];\n    assert_eq!(\n        uuid.urn().encode_upper(&mut buf),\n        \"urn:uuid:936DA01F-9ABD-4D9D-80C7-02AF85C822A8\"\n    );\n    assert_eq!(\n        &buf as &[_],\n        b\"urn:uuid:936DA01F-9ABD-4D9D-80C7-02AF85C822A8!!!!\" as &[_]\n    );\n\n    Ok(())\n}\n```\n*/","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["buffer",{"borrowed_ref":{"lifetime":"'buf","mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"borrowed_ref":{"lifetime":"'buf","mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:626:2523":{"id":"0:626:2523","crate_id":0,"name":"SortRand","span":{"filename":"src/lib.rs","begin":[317,4],"end":[317,16]},"visibility":"default","docs":"Version 7: Timestamp and random.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"7","value":"7"}}}},"0:142:3445":{"id":"0:142:3445","crate_id":0,"name":"as_urn","span":{"filename":"src/fmt.rs","begin":[125,4],"end":[128,5]},"visibility":"public","docs":"Get a borrowed [`Urn`] formatter.","links":{"`Urn`":"0:468:2760"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:203:3263":{"id":"0:203:3263","crate_id":0,"name":"as_uuid","span":{"filename":"src/fmt.rs","begin":[813,4],"end":[815,5]},"visibility":"public","docs":"Get a reference to the underlying [`Uuid`].\n\n# Examples\n\n```rust\nuse uuid::Uuid;\n\nlet urn = Uuid::nil().urn();\nassert_eq!(*urn.as_uuid(), Uuid::nil());\n```","links":{"`Uuid`":"0:661:2583"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:328:2706":{"id":"0:328:2706","crate_id":0,"name":"as_u64_pair","span":{"filename":"src/lib.rs","begin":[753,4],"end":[756,5]},"visibility":"public","docs":"Returns two 64bit values containing the value.\n\nThe bytes in the UUID will be split into two `u64`.\nThe first u64 represents the 64 most significant bits,\nthe second one represents the 64 least significant.\n\n# Examples\n\n```\n# use uuid::Uuid;\n# fn main() -> Result<(), uuid::Error> {\nlet uuid = Uuid::parse_str(\"a1a2a3a4-b1b2-c1c2-d1d2-d3d4d5d6d7d8\")?;\nassert_eq!(\n    uuid.as_u64_pair(),\n    (0xa1a2a3a4b1b2c1c2, 0xd1d2d3d4d5d6d7d8),\n);\n# Ok(())\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"u64"},{"primitive":"u64"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:670:891":{"id":"0:670:891","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[438,26],"end":[438,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"1:10756:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3304:252-0:357:141":{"id":"a:1:3304:252-0:357:141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3304:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:139:2795":{"id":"0:139:2795","crate_id":0,"name":"simple","span":{"filename":"src/fmt.rs","begin":[106,4],"end":[108,5]},"visibility":"public","docs":"Get a [`Simple`] formatter.","links":{"`Simple`":"0:446:3432"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2776-0:468:2760":{"id":"b:1:2776-0:468:2760","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2770:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2778:3423"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3091-0:576:2494":{"id":"b:1:3091-0:576:2494","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3061:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3094:141","1:3095:1841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:277:202":{"id":"0:277:202","crate_id":0,"name":"Output","span":{"filename":"src/timestamp.rs","begin":[595,12],"end":[595,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"C"},"trait":{"name":"ClockSequence","id":"0:234:2493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"a:1:3304:252-0:604:2507":{"id":"a:1:3304:252-0:604:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3304:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:458":{"id":"0:458","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[74,42],"end":[74,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"1:10748:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:459:891"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:605:2509":{"id":"0:605:2509","crate_id":0,"name":"Nil","span":{"filename":"src/lib.rs","begin":[303,4],"end":[303,13]},"visibility":"default","docs":"The \"nil\" (all zeros) UUID.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":{"expr":"0u8","value":"0"}}}},"0:584:486":{"id":"0:584:486","crate_id":0,"name":"clone","span":{"filename":"src/timestamp.rs","begin":[42,16],"end":[42,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:27:3184":{"id":"0:27:3184","crate_id":0,"name":"from_slice_le","span":{"filename":"src/builder.rs","begin":[379,4],"end":[387,5]},"visibility":"public","docs":"Creates a UUID using the supplied bytes in little endian order.\n\nThe individual fields encoded in the buffer will be flipped.\n\n# Errors\n\nThis function will return an error if `b` has any length other than 16.\n\n# Examples\n\nBasic usage:\n\n```\n# fn main() -> Result<(), uuid::Error> {\n# use uuid::Uuid;\nlet bytes = [\n    0xa1, 0xa2, 0xa3, 0xa4,\n    0xb1, 0xb2,\n    0xc1, 0xc2,\n    0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8,\n];\n\nlet uuid = Uuid::from_slice_le(&bytes)?;\n\nassert_eq!(\n    uuid.hyphenated().to_string(),\n    \"a4a3a2a1-b2b1-c2c1-d1d2-d3d4d5d6d7d8\"\n);\n# Ok(())\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["b",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42643:229","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13729:34970":{"id":"1:13729:34970","crate_id":1,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"4:12452:482","self::pattern":"1:13301:3997"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13322:4491","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3339:4264-0:256:3737":{"id":"a:1:3339:4264-0:256:3737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3339:4264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocalContext","id":"0:256:3737","args":{"angle_bracketed":{"args":[{"type":{"generic":"C"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5740:10012":{"id":"5:5740:10012","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:13737:10016"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7801:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2811-0:576:2494":{"id":"b:1:2811-0:576:2494","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3299:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2806:4246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2813:27426"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2808-0:446:3432":{"id":"b:1:2808-0:446:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2806:4246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2810:27426"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2779-0:490:3437":{"id":"b:1:2779-0:490:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2773:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2781:27422"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:212:3625":{"id":"0:212:3625","crate_id":0,"name":"now","span":{"filename":"src/timestamp.rs","begin":[59,4],"end":[73,5]},"visibility":"public","docs":"Get a timestamp representing the current system time and up to a 128-bit counter.\n\nThis method defers to the standard library's `SystemTime` type.\n\n# Panics\n\nThis method will panic if calculating the elapsed time since the Unix epoch fails.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["context",{"impl_trait":[{"trait_bound":{"trait":{"name":"ClockSequence","id":"0:234:2493","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"impl_trait":[{"trait_bound":{"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u128"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}}}}]}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"impl Into<u128>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u128"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}},{"name":"impl ClockSequence<Output = impl Into<u128>>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ClockSequence","id":"0:234:2493","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"impl_trait":[{"trait_bound":{"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u128"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}]}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3081-0:468:2760":{"id":"b:1:3081-0:468:2760","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3084:2969"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3085-0:576:2494":{"id":"b:1:3085-0:576:2494","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3087:849"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2811-0:490:3437":{"id":"b:1:2811-0:490:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3299:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2806:4246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2813:27426"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:348:849":{"id":"0:348:849","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[957,4],"end":[959,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:31:3191":{"id":"0:31:3191","crate_id":0,"name":"from_bytes_ref","span":{"filename":"src/builder.rs","begin":[484,4],"end":[487,5]},"visibility":"public","docs":"Creates a reference to a UUID from a reference to the supplied bytes.\n\n# Examples\n\nBasic usage:\n\n```\n# fn main() -> Result<(), uuid::Error> {\n# use uuid::Uuid;\nlet bytes = [\n    0xa1, 0xa2, 0xa3, 0xa4,\n    0xb1, 0xb2,\n    0xc1, 0xc2,\n    0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8,\n];\n\nlet uuid = Uuid::from_bytes_ref(&bytes);\n\nassert_eq!(\n    uuid.hyphenated().to_string(),\n    \"a1a2a3a4-b1b2-c1c2-d1d2-d3d4d5d6d7d8\"\n);\n\nassert!(std::ptr::eq(\n    uuid as *const Uuid as *const u8,\n    &bytes as *const [u8; 16] as *const u8,\n));\n# Ok(())\n# }\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bytes",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Bytes","id":"0:310:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:536":{"id":"0:536","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10535:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:537:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:494:486":{"id":"0:494:486","crate_id":0,"name":"clone","span":{"filename":"src/fmt.rs","begin":[86,9],"end":[86,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:468:2760":{"id":"0:468:2760","crate_id":0,"name":"Urn","span":{"filename":"src/fmt.rs","begin":[82,0],"end":[82,21]},"visibility":"public","docs":"Format a [`Uuid`] as a URN string, like\n`urn:uuid:67e55044-10b1-426f-9247-bb680e5fe0c8`.","links":{"`Uuid`":"0:661:2583"},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:196","a:1:3304:252-0:468:2760","a:1:3339:4264-0:468:2760","a:1:42604:4004-0:468:2760","a:1:32743:240-0:468:2760","a:1:32802:4092-0:468:2760","a:1:42605:3735-0:468:2760","b:1:3085-0:468:2760","b:1:2776-0:468:2760","b:1:3921-0:468:2760","b:1:2808-0:468:2760","b:1:2811-0:468:2760","b:1:2779-0:468:2760","b:1:3091-0:468:2760","b:1:3081-0:468:2760","b:1:3096-0:468:2760","b:5:783-0:468:2760","b:5:5974-0:468:2760","0:471","0:562","0:480","0:528","0:474","0:485","0:476","0:533","0:566","0:486","0:483","0:473","0:488","0:478","0:530","0:560","0:564"]}}},"0:429":{"id":"0:429","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[68,16],"end":[68,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3299:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:783-0:576:2494":{"id":"b:5:783-0:576:2494","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:779:255","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:785:3978","5:786:27427","5:787:27428"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:88:2874":{"id":"0:88:2874","crate_id":0,"name":"parse_str","span":{"filename":"src/parser.rs","begin":[64,4],"end":[68,5]},"visibility":"public","docs":"Parses a `Uuid` from a string of hexadecimal digits with optional\nhyphens.\n\nAny of the formats generated by this module (simple, hyphenated, urn,\nMicrosoft GUID) are supported by this parsing function.\n\nPrefer [`try_parse`] unless you need detailed user-facing diagnostics.\nThis method will be eventually deprecated in favor of `try_parse`.\n\n# Examples\n\nParse a hyphenated UUID:\n\n```\n# use uuid::{Uuid, Version, Variant};\n# fn main() -> Result<(), uuid::Error> {\nlet uuid = Uuid::parse_str(\"550e8400-e29b-41d4-a716-446655440000\")?;\n\nassert_eq!(Some(Version::Random), uuid.get_version());\nassert_eq!(Variant::RFC4122, uuid.get_variant());\n# Ok(())\n# }\n```\n\n[`try_parse`]: #method.try_parse","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42643:229","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2776-0:352:2500":{"id":"b:1:2776-0:352:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2770:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:352:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2778:3423"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:3339:4264-0:357:141":{"id":"a:1:3339:4264-0:357:141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3339:4264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3085-0:661:2583":{"id":"b:1:3085-0:661:2583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3087:849"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"1:13705:34962":{"id":"1:13705:34962","crate_id":1,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊¢') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5721":{"id":"5:5721","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5722:35667","5:5723:4593","5:5726:35668","5:5729:35669","5:5737:35670","5:5738:35671","5:5739:10473","5:5740:10012","5:5741:10013"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13710:34965":{"id":"1:13710:34965","crate_id":1,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:45:2787":{"id":"0:45:2787","crate_id":0,"name":"from_slice","span":{"filename":"src/builder.rs","begin":[687,4],"end":[689,5]},"visibility":"public","docs":"Creates a `Builder` using the supplied bytes.\n\n# Errors\n\nThis function will return an error if `b` has any length other than 16.\n\n# Examples\n\nBasic usage:\n\n```\n# use uuid::Builder;\n# fn main() -> Result<(), uuid::Error> {\nlet bytes = [\n    0xa1, 0xa2, 0xa3, 0xa4,\n    0xb1, 0xb2,\n    0xc1, 0xc2,\n    0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8,\n];\n\nlet uuid = Builder::from_slice(&bytes)?.into_uuid();\n\nassert_eq!(\n    \"a1a2a3a4-b1b2-c1c2-d1d2-d3d4d5d6d7d8\",\n    uuid.hyphenated().to_string(),\n);\n# Ok(())\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["b",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42643:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:442":{"id":"0:442","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[68,53],"end":[68,62]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2858:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:443:714"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:481:891":{"id":"0:481:891","crate_id":0,"name":"hash","span":{"filename":"src/fmt.rs","begin":[80,42],"end":[80,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"1:10756:160","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13643:27921":{"id":"1:13643:27921","crate_id":1,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"1:13642:27896"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"1:44664:4497","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:493":{"id":"0:493","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[86,9],"end":[86,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:494:486"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:434":{"id":"0:434","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[68,38],"end":[68,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2863:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5726:35668":{"id":"5:5726:35668","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7801:248"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7801:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:39:3214":{"id":"0:39:3214","crate_id":0,"name":"from_sha1_bytes","span":{"filename":"src/builder.rs","begin":[593,4],"end":[597,5]},"visibility":"public","docs":"Creates a `Builder` for a version 5 UUID using the supplied SHA-1 hashed bytes.\n\nThis method assumes the bytes are already a SHA-1 hash, it will only set the appropriate\nbits for the UUID version and variant.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["sha1_bytes",{"resolved_path":{"name":"Bytes","id":"0:310:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:530":{"id":"0:530","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"1:10541:3424","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:531:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3085-0:468:2760":{"id":"b:1:3085-0:468:2760","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3087:849"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32743:240-0:468:2760":{"id":"a:1:32743:240-0:468:2760","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32743:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:32743:240-0:604:2507":{"id":"a:1:32743:240-0:604:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32743:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3921-0:576:2494":{"id":"b:1:3921-0:576:2494","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3919:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3923:1854"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:136":{"id":"0:136","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[90,0],"end":[142,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"crate::Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:137:2837","0:138:3425","0:139:2795","0:140:3442","0:141:2796","0:142:3445","0:143:2793","0:144:3448"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:486":{"id":"0:486","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[80,53],"end":[80,62]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2858:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:487:714"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:56:3257":{"id":"0:56:3257","crate_id":0,"name":"set_version","span":{"filename":"src/builder.rs","begin":[856,4],"end":[859,5]},"visibility":"public","docs":"Specifies the version number of the UUID.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["v",{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:674":{"id":"0:674","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[438,37],"end":[438,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32745:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3091-0:643:2531":{"id":"b:1:3091-0:643:2531","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3061:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3094:141","1:3095:1841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:436":{"id":"0:436","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[68,42],"end":[68,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"1:10748:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:437:891"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:3304:252-0:468:2760":{"id":"a:1:3304:252-0:468:2760","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3304:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42604:4004-0:594:2492":{"id":"a:1:42604:4004-0:594:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42604:4004","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:637":{"id":"0:637","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[298,16],"end":[298,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3299:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:520":{"id":"0:520","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10535:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:521:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:186:2858":{"id":"0:186:2858","crate_id":0,"name":"into_uuid","span":{"filename":"src/fmt.rs","begin":[534,4],"end":[536,5]},"visibility":"public","docs":"Consumes the [`Braced`], returning the underlying [`Uuid`].\n\n# Examples\n\n```rust\nuse uuid::Uuid;\n\nlet braced = Uuid::nil().braced();\nassert_eq!(braced.into_uuid(), Uuid::nil());\n```","links":{"`Uuid`":"0:661:2583","`Braced`":"0:490:3437"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:3339:4264-0:661:2583":{"id":"a:1:3339:4264-0:661:2583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"1:3339:4264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:787:27428":{"id":"5:787:27428","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:563:849":{"id":"0:563:849","crate_id":0,"name":"from","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:333:2748":{"id":"0:333:2748","crate_id":0,"name":"is_max","span":{"filename":"src/lib.rs","begin":[847,4],"end":[849,5]},"visibility":"public","docs":"Tests if the UUID is max (all ones).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:82:140":{"id":"0:82:140","crate_id":0,"name":"Err","span":{"filename":"src/parser.rs","begin":[23,4],"end":[23,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:1:32802:4092-0:643:2531":{"id":"a:1:32802:4092-0:643:2531","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32802:4092","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13745:34973":{"id":"1:13745:34973","crate_id":1,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:5122:34973"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"1:44698:4507","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:22:2938":{"id":"0:22:2938","crate_id":0,"name":"from_u128","span":{"filename":"src/builder.rs","begin":[206,4],"end":[225,5]},"visibility":"public","docs":"Creates a UUID from a 128bit value.\n\n# Examples\n\nBasic usage:\n\n```\n# use uuid::Uuid;\nlet v = 0xa1a2a3a4b1b2c1c2d1d2d3d4d5d6d7d8u128;\n\nlet uuid = Uuid::from_u128(v);\n\nassert_eq!(\n    \"a1a2a3a4-b1b2-c1c2-d1d2-d3d4d5d6d7d8\",\n    uuid.hyphenated().to_string(),\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["v",{"primitive":"u128"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2808-0:468:2760":{"id":"b:1:2808-0:468:2760","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2806:4246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2810:27426"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:496":{"id":"0:496","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[86,22],"end":[86,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10530:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:497:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:664":{"id":"0:664","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[438,9],"end":[438,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:665:486"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:343":{"id":"0:343","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[941,0],"end":[946,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"1:3049:78","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:344:343"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:3921-0:424:3429":{"id":"b:1:3921-0:424:3429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3919:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3923:1854"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:572":{"id":"0:572","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"1:3049:78","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:573:343"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13640:3300":{"id":"1:13640:3300","crate_id":1,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"yÃÜes\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'yÃÜ')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"4:12452:482"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"1:44357:4503","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:512":{"id":"0:512","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10535:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:513:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:430":{"id":"0:430","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[68,22],"end":[68,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10530:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:431:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:69:819":{"id":"0:69:819","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[132,4],"end":[163,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2779-0:446:3432":{"id":"b:1:2779-0:446:3432","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2773:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2781:27422"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:557:343":{"id":"0:557:343","crate_id":0,"name":"as_ref","span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:599:486":{"id":"0:599:486","crate_id":0,"name":"clone","span":{"filename":"src/timestamp.rs","begin":[902,20],"end":[902,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:600":{"id":"0:600","crate_id":0,"name":null,"span":{"filename":"src/timestamp.rs","begin":[902,27],"end":[902,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3299:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2808-0:576:2494":{"id":"b:1:2808-0:576:2494","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2796:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2806:4246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2810:27426"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32743:240-0:643:2531":{"id":"a:1:32743:240-0:643:2531","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32743:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:357:141":{"id":"0:357:141","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[5,0],"end":[5,39]},"visibility":"public","docs":"A general error that can occur when working with UUIDs.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["a:1:3304:252-0:357:141","a:1:3339:4264-0:357:141","a:1:42604:4004-0:357:141","a:1:32743:240-0:357:141","a:1:32802:4092-0:357:141","a:1:42605:3735-0:357:141","b:1:3085-0:357:141","b:1:2776-0:357:141","b:1:3921-0:357:141","b:1:2808-0:357:141","b:1:2779-0:357:141","b:1:3091-0:357:141","b:1:3081-0:357:141","b:1:3096-0:357:141","b:5:783-0:357:141","b:5:5974-0:357:141","0:68","0:360","0:73","0:364","0:362","0:369","0:370","0:366"]}}},"b:5:5974-0:424:3429":{"id":"b:5:5974-0:424:3429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"1:10535:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5972:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5976:1814"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:478":{"id":"0:478","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[80,38],"end":[80,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2863:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:587":{"id":"0:587","crate_id":0,"name":null,"span":{"filename":"src/timestamp.rs","begin":[42,29],"end":[42,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2858:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:588:714"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:32743:240-0:661:2583":{"id":"a:1:32743:240-0:661:2583","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:32743:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:1:3081-0:643:2531":{"id":"b:1:3081-0:643:2531","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Variant","id":"0:643:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3084:2969"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:32802:4092-0:256:3737":{"id":"a:1:32802:4092-0:256:3737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"C","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:32802:4092","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocalContext","id":"0:256:3737","args":{"angle_bracketed":{"args":[{"type":{"generic":"C"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:138:3425":{"id":"0:138:3425","crate_id":0,"name":"as_hyphenated","span":{"filename":"src/fmt.rs","begin":[99,4],"end":[102,5]},"visibility":"public","docs":"Get a borrowed [`Hyphenated`] formatter.","links":{"`Hyphenated`":"0:424:3429"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:666":{"id":"0:666","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[438,16],"end":[438,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3299:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5738:35671":{"id":"5:5738:35671","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:296:3990","`String`":"5:7801:248"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:296:3990","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7801:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:356:819":{"id":"0:356:819","crate_id":0,"name":"fmt","span":{"filename":"src/builder.rs","begin":[46,9],"end":[46,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:187":{"id":"0:187","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[539,0],"end":[680,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:188:2761","0:189:3473","0:190:3503","0:192:3511","0:194:3263","0:195:2858"],"negative":false,"synthetic":false,"blanket_impl":null}}},"1:13744:10483":{"id":"1:13744:10483","crate_id":1,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:5125:10483"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"1:44689:4506","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:1:42604:4004-0:352:2500":{"id":"a:1:42604:4004-0:352:2500","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42604:4004","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Builder","id":"0:352:2500","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:90:3336":{"id":"0:90:3336","crate_id":0,"name":"try_parse_ascii","span":{"filename":"src/parser.rs","begin":[125,4],"end":[132,5]},"visibility":"public","docs":"Parses a `Uuid` from a string of hexadecimal digits with optional\nhyphens.\n\nThe input is expected to be a string of ASCII characters. This method\ncan be more convenient than [`try_parse`] if the UUID is being\nparsed from a byte stream instead of from a UTF8 string.\n\n# Examples\n\nParse a hyphenated UUID:\n\n```\n# use uuid::{Uuid, Version, Variant};\n# fn main() -> Result<(), uuid::Error> {\nlet uuid = Uuid::try_parse_ascii(b\"550e8400-e29b-41d4-a716-446655440000\")?;\n\nassert_eq!(Some(Version::Random), uuid.get_version());\nassert_eq!(Variant::RFC4122, uuid.get_variant());\n# Ok(())\n# }\n```\n\n[`try_parse`]: #method.try_parse","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:42643:229","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3091-0:490:3437":{"id":"b:1:3091-0:490:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3061:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3094:141","1:3095:1841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:3921-0:357:141":{"id":"b:1:3921-0:357:141","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:3919:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:357:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3923:1854"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:177:2858":{"id":"0:177:2858","crate_id":0,"name":"into_uuid","span":{"filename":"src/fmt.rs","begin":[389,4],"end":[391,5]},"visibility":"public","docs":"Consumes the [`Hyphenated`], returning the underlying [`Uuid`].\n\n# Examples\n\n```rust\nuse uuid::Uuid;\n\nlet hyphenated = Uuid::nil().hyphenated();\nassert_eq!(hyphenated.into_uuid(), Uuid::nil());\n```","links":{"`Uuid`":"0:661:2583","`Hyphenated`":"0:424:3429"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:502":{"id":"0:502","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[86,42],"end":[86,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"1:10748:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:503:891"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:570":{"id":"0:570","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3058:148","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:571:849"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5741:10013":{"id":"5:5741:10013","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"gr√º√üe, j√ºrgen ‚ù§\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:13738:10017"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7801:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:323:2681":{"id":"0:323:2681","crate_id":0,"name":"to_fields_le","span":{"filename":"src/lib.rs","begin":[669,4],"end":[681,5]},"visibility":"public","docs":"Returns the four field values of the UUID in little-endian order.\n\nThe bytes in the returned integer fields will be converted from\nbig-endian order. This is based on the endianness of the UUID,\nrather than the target environment so bytes will be flipped on both\nbig and little endian machines.\n\n# Examples\n\n```\nuse uuid::Uuid;\n\n# fn main() -> Result<(), uuid::Error> {\nlet uuid = Uuid::parse_str(\"a1a2a3a4-b1b2-c1c2-d1d2-d3d4d5d6d7d8\")?;\n\nassert_eq!(\n    uuid.to_fields_le(),\n    (\n        0xa4a3a2a1,\n        0xb2b1,\n        0xc2c1,\n        &[0xd1, 0xd2, 0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8],\n    )\n);\n# Ok(())\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"u32"},{"primitive":"u16"},{"primitive":"u16"},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"array":{"type":{"primitive":"u8"},"len":"8"}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:665:486":{"id":"0:665:486","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[438,9],"end":[438,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:190:3503":{"id":"0:190:3503","crate_id":0,"name":"encode_lower","span":{"filename":"src/fmt.rs","begin":[601,4],"end":[603,5]},"visibility":"public","docs":"Writes the [`Uuid`] as a lower-case simple string to `buffer`,\nand returns the subslice of the buffer that contains the encoded UUID.\n\nThis is slightly more efficient than using the formatting\ninfrastructure as it avoids virtual calls, and may avoid\ndouble buffering.\n\n[`Uuid`]: ../struct.Uuid.html\n\n# Panics\n\nPanics if the buffer is not large enough: it must have length at least\n[`LENGTH`]. [`Uuid::encode_buffer`] can be used to get a\nsufficiently-large temporary buffer.\n\n[`LENGTH`]: #associatedconstant.LENGTH\n[`Uuid::encode_buffer`]: ../struct.Uuid.html#method.encode_buffer\n\n# Examples\n\n```rust\nuse uuid::Uuid;\n\nfn main() -> Result<(), uuid::Error> {\n    let uuid = Uuid::parse_str(\"936DA01f9abd4d9d80c702af85c822a8\")?;\n\n    // the encoded portion is returned\n    assert_eq!(\n        uuid.simple().encode_lower(&mut Uuid::encode_buffer()),\n        \"936da01f9abd4d9d80c702af85c822a8\"\n    );\n\n    // the buffer is mutated directly, and trailing contents remains\n    let mut buf = [b'!'; 36];\n    assert_eq!(\n        uuid.simple().encode_lower(&mut buf),\n        \"936da01f9abd4d9d80c702af85c822a8\"\n    );\n    assert_eq!(\n        &buf as &[_],\n        b\"936da01f9abd4d9d80c702af85c822a8!!!!\" as &[_]\n    );\n\n    Ok(())\n}\n```\n*/","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["buffer",{"borrowed_ref":{"lifetime":"'buf","mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"borrowed_ref":{"lifetime":"'buf","mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:564":{"id":"0:564","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"1:3049:78","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:565:343"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:499:60":{"id":"0:499:60","crate_id":0,"name":"default","span":{"filename":"src/fmt.rs","begin":[86,29],"end":[86,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:602:60":{"id":"0:602:60","crate_id":0,"name":"default","span":{"filename":"src/timestamp.rs","begin":[902,33],"end":[902,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:576:2494":{"id":"0:576:2494","crate_id":0,"name":"Timestamp","span":{"filename":"src/timestamp.rs","begin":[43,0],"end":[48,1]},"visibility":"public","docs":"A timestamp that can be encoded into a UUID.\n\nThis type abstracts the specific encoding, so versions 1, 6, and 7\nUUIDs can both be supported through the same type, even\nthough they have a different representation of a timestamp.\n\n# References\n\n* [Timestamp Considerations in RFC 9562](https://www.ietf.org/rfc/rfc9562.html#section-6.1)\n* [UUID Generator States in RFC 9562](https://www.ietf.org/rfc/rfc9562.html#section-6.3)","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:211","a:1:3304:252-0:576:2494","a:1:3339:4264-0:576:2494","a:1:42604:4004-0:576:2494","a:1:32743:240-0:576:2494","a:1:32802:4092-0:576:2494","a:1:42605:3735-0:576:2494","b:1:3085-0:576:2494","b:1:2776-0:576:2494","b:1:3921-0:576:2494","b:1:2808-0:576:2494","b:1:2811-0:576:2494","b:1:2779-0:576:2494","b:1:3091-0:576:2494","b:1:3081-0:576:2494","b:1:3096-0:576:2494","b:5:783-0:576:2494","0:581","0:589","0:587","0:583","0:586","0:591","0:585"]}}},"0:87":{"id":"0:87","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[38,0],"end":[133,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"crate::Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:88:2874","0:89:3326","0:90:3336"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:507":{"id":"0:507","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[86,53],"end":[86,62]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:32745:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:286:3626":{"id":"0:286:3626","crate_id":0,"name":"generate_timestamp_sequence","span":{"filename":"src/timestamp.rs","begin":[626,12],"end":[634,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["seconds",{"primitive":"u64"}],["subsec_nanos",{"primitive":"u32"}]],"output":{"tuple":[{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:234:2493","args":null}}},{"primitive":"u64"},{"primitive":"u32"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:480":{"id":"0:480","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[80,42],"end":[80,46]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"1:10748:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:481:891"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5974-0:490:3437":{"id":"b:5:5974-0:490:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"1:10535:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5972:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5976:1814"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:265:1200":{"id":"0:265:1200","crate_id":0,"name":"new","span":{"filename":"src/timestamp.rs","begin":[567,12],"end":[569,13]},"visibility":"public","docs":"Wrap a thread-local container with a context.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["local_key",{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"resolved_path":{"name":"LocalKey","id":"4:439:188","args":{"angle_bracketed":{"args":[{"type":{"generic":"C"}}],"bindings":[]}}}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:517":{"id":"0:517","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"1:10543:3426","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:518:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:1:2779-0:576:2494":{"id":"b:1:2779-0:576:2494","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2773:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Timestamp","id":"0:576:2494","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2781:27422"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:1:42604:4004-0:604:2507":{"id":"a:1:42604:4004-0:604:2507","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42604:4004","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Version","id":"0:604:2507","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"1:13623:3464":{"id":"1:13623:3464","crate_id":1,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"4:12471:1884"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13628:9911":{"id":"1:13628:9911","crate_id":1,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"üóª‚ààüåè\";\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"1:11434:243","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:11434:243","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:596":{"id":"0:596","crate_id":0,"name":null,"span":{"filename":"src/timestamp.rs","begin":[902,13],"end":[902,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10530:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:597:819"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:497:819":{"id":"0:497:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[86,22],"end":[86,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:216:3638":{"id":"0:216:3638","crate_id":0,"name":"to_rfc4122","span":{"filename":"src/timestamp.rs","begin":[134,4],"end":[139,5]},"visibility":"public","docs":"Get the value of the timestamp as an RFC 9562 timestamp and counter,\nas used in versions 1 and 6 UUIDs.\n\n# Overflow\n\nIf conversion from RFC 9562 ticks to the internal timestamp format would overflow\nit will wrap.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"u64"},{"primitive":"u16"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13635:31952":{"id":"1:13635:31952","crate_id":1,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-L√∂f\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-L√∂f\", last);\n}\nassert_eq!(\"PER Martin-L√∂f\", s);\n```","links":{"str::split_at":"1:13634:31951","str::split_at_mut_checked":"1:13637:31956"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:52:2941":{"id":"0:52:2941","crate_id":0,"name":"from_u128_le","span":{"filename":"src/builder.rs","begin":[812,4],"end":[814,5]},"visibility":"public","docs":"Creates a UUID from a 128bit value in little-endian order.\n\n# Examples\n\nBasic usage:\n\n```\n# use uuid::Builder;\nlet v = 0xa1a2a3a4b1b2c1c2d1d2d3d4d5d6d7d8u128;\n\nlet uuid = Builder::from_u128_le(v).into_uuid();\n\nassert_eq!(\n    \"d8d7d6d5-d4d3-d2d1-c2c1-b2b1a4a3a2a1\",\n    uuid.hyphenated().to_string(),\n);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["v",{"primitive":"u128"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13650:2894":{"id":"1:13650:2894","crate_id":1,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"4:12452:482","self::pattern":"1:13301:3997"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:3923:1854":{"id":"1:3923:1854","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"1:40226:7992","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:455:60":{"id":"0:455:60","crate_id":0,"name":"default","span":{"filename":"src/fmt.rs","begin":[74,29],"end":[74,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Simple","id":"0:446:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:475:819":{"id":"0:475:819","crate_id":0,"name":"fmt","span":{"filename":"src/fmt.rs","begin":[80,22],"end":[80,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"1:10494:147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"1:10475:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:3096-0:594:2492":{"id":"b:1:3096-0:594:2492","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3055:166","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3065:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:3099:141","1:3100:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:1:2811-0:468:2760":{"id":"b:1:2811-0:468:2760","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3299:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"1:2806:4246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["1:2813:27426"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:566":{"id":"0:566","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[918,0],"end":[923,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2770:103","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Urn","id":"0:468:2760","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:567:3423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:1:42605:3735-0:490:3437":{"id":"a:1:42605:3735-0:490:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:42605:3735","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:1:42604:4004-0:424:3429":{"id":"a:1:42604:4004-0:424:3429","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:42604:4004","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Hyphenated","id":"0:424:3429","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:281":{"id":"0:281","crate_id":0,"name":null,"span":{"filename":"src/timestamp.rs","begin":[617,8],"end":[644,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"C","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ClockSequence","id":"0:234:2493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:42605:3735","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["generate_timestamp_sequence","usable_bits"],"trait":{"name":"ClockSequence","id":"0:234:2493","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::sync::Mutex","id":"4:6600:189","args":{"angle_bracketed":{"args":[{"type":{"generic":"C"}}],"bindings":[]}}}},"items":["0:283:202","0:284:3695","0:286:3626","0:288:3627"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:673:493":{"id":"0:673:493","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[438,32],"end":[438,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"1:31503:199","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"1:13688:31967":{"id":"1:13688:31967","crate_id":1,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"1:42511:197","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13322:4491","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:1:2779-0:256:3737":{"id":"b:1:2779-0:256:3737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2773:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocalContext","id":"0:256:3737","args":{"angle_bracketed":{"args":[{"type":{"generic":"C"}}],"bindings":[]}}}},"items":["1:2781:27422"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:505":{"id":"0:505","crate_id":0,"name":null,"span":{"filename":"src/fmt.rs","begin":[86,48],"end":[86,51]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","clamp","min"],"trait":{"name":"Ord","id":"1:2894:198","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Braced","id":"0:490:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:506:493"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:279:3626":{"id":"0:279:3626","crate_id":0,"name":"generate_timestamp_sequence","span":{"filename":"src/timestamp.rs","begin":[601,12],"end":[607,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["seconds",{"primitive":"u64"}],["subsec_nanos",{"primitive":"u32"}]],"output":{"tuple":[{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:234:2493","args":null}}},{"primitive":"u64"},{"primitive":"u32"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:601":{"id":"0:601","crate_id":0,"name":null,"span":{"filename":"src/timestamp.rs","begin":[902,33],"end":[902,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"1:3133:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoContext","id":"0:594:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:602:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:344:343":{"id":"0:344:343","crate_id":0,"name":"as_ref","span":{"filename":"src/lib.rs","begin":[943,4],"end":[945,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Uuid","id":"0:661:2583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:44:3238":{"id":"0:44:3238","crate_id":0,"name":"from_custom_bytes","span":{"filename":"src/builder.rs","begin":[652,4],"end":[656,5]},"visibility":"public","docs":"Creates a `Builder` for a version 8 UUID using the supplied user-defined bytes.\n\nThis method won't interpret the given bytes in any way, except to set the appropriate\nbits for the UUID version and variant.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["custom_bytes",{"resolved_path":{"name":"Bytes","id":"0:310:2504","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5723:4593":{"id":"5:5723:4593","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7801:248"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7801:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13307:3988","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:245:3627":{"id":"0:245:3627","crate_id":0,"name":"usable_bits","span":{"filename":"src/timestamp.rs","begin":[419,4],"end":[424,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:234:2493","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:32744:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"1:45184:10644":{"crate_id":1,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"4:12039:33546":{"crate_id":4,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"4:5475:206":{"crate_id":4,"path":["std","path","Path"],"kind":"struct"},"6:5311:7053":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"14:214:6486":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:22263:16010":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"5:1001:4080":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:42643:229":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"11:1674:36622":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"4:10406:8882":{"crate_id":4,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"11:102:6497":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"16:2704:5990":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"1:32802:4092":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:23532:7911":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"1:26472:273":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:2670:4586":{"crate_id":1,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"16:2570:5984":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"6:1584:6731":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:46587:8309":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:38764:10458":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"6:6381:7222":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"6:4957:6920":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:4554:8902":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"5:7580:7687":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"1:32667:3972":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"1:43202:4282":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"5:4297:7793":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"17:14902:5422":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"4:5285:8827":{"crate_id":4,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:9661:3988":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:15496:5619":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:11851:8599":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:44603:4513":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"5:6758:36011":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:12776:8642":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:22062:28229":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:4906:4291":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"17:11579:8589":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"11:854:8743":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:903:8557":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"6:5507:7146":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"4:4899:16101":{"crate_id":4,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:44990:4520":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"4:9433:7793":{"crate_id":4,"path":["std","sync","poison","Guard"],"kind":"struct"},"1:22573:7873":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"11:1564:22215":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:44227:8223":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:10487:23217":{"crate_id":17,"path":["object","common","RelocationFlags"],"kind":"enum"},"17:14845:5415":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"1:41145:8932":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"1:44357:4503":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:44967:8249":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"4:9751:33638":{"crate_id":4,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"1:3513:127":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"18:548:156":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"6:5428:7101":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"6:4997:6939":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:13028:8646":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"4:8643:8861":{"crate_id":4,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:3052:77":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"17:10549:4974":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"4:10657:8869":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:12225:5041":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"4:2335:15992":{"crate_id":4,"path":["std","fs","read_to_string"],"kind":"function"},"15:0:3908":{"crate_id":15,"path":["addr2line"],"kind":"module"},"6:5551:7159":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:8353:7661":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:14975:5435":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:34556:10454":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"16:8058:8727":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:41203:8138":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"5:3085:36403":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"11:1601:8755":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"16:7521:6266":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:234:229":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"16:2820:5995":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"0:424:3429":{"crate_id":0,"path":["uuid","fmt","Hyphenated"],"kind":"struct"},"16:6984:6024":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"11:2228:6513":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"17:12749:8640":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"4:912:6507":{"crate_id":4,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"5:5629:1754":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"0:643:2531":{"crate_id":0,"path":["uuid","Variant"],"kind":"enum"},"4:11407:8894":{"crate_id":4,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"16:7358:6014":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:12293:8620":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"16:6159:6073":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:12018:8606":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"5:884:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"6:6631:7364":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"6:532:6643":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"4:925:6508":{"crate_id":4,"path":["std","collections","hash","map","Values"],"kind":"struct"},"16:8528:6392":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"16:7508:6263":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:46640:8312":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"4:12476:985":{"crate_id":4,"path":["std","isize"],"kind":"primitive"},"4:8507:7748":{"crate_id":4,"path":["std","io","IoSlice"],"kind":"struct"},"4:6402:33618":{"crate_id":4,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"17:15641:5644":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:14807:5410":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"11:434:36617":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"17:15665:5649":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:3531:3976":{"crate_id":1,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"17:13871:5216":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"4:5114:16099":{"crate_id":4,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"5:3706:4080":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"6:8267:7641":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"17:12687:8635":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:16656:5921":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"1:34104:10451":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"5:7612:213":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"6:5217:7007":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"4:12419:9374":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:15549:5625":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"16:2506:5981":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:13006:5118":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:47779:8409":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"18:507:4816":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"4:11950:8821":{"crate_id":4,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"6:5249:7022":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"16:6573:6140":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"4:7335:9855":{"crate_id":4,"path":["std","sys","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"5:7899:4735":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"4:6600:189":{"crate_id":4,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"16:8096:8728":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:23565:7914":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"17:11831:5000":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"0:649:2538":{"crate_id":0,"path":["uuid","Variant","Microsoft"],"kind":"variant"},"1:44680:4505":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:11434:243":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"4:12424:15948":{"crate_id":4,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:2403:4604":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"4:12459:1844":{"crate_id":4,"path":["std","tuple"],"kind":"primitive"},"16:8598:8732":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"11:835:8740":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:22155:15690":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"0:490:3437":{"crate_id":0,"path":["uuid","fmt","Braced"],"kind":"struct"},"1:8504:4090":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:46529:8298":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"18:613:36658":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:10418:23215":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"6:5450:7117":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"17:11016:8577":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"4:9397:7792":{"crate_id":4,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"1:3378:10461":{"crate_id":1,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"1:11605:4081":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"4:2013:4569":{"crate_id":4,"path":["std","error","Indented"],"kind":"struct"},"4:10974:7802":{"crate_id":4,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"6:6462:7267":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"16:7424:23153":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:3029:3973":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:13958:5231":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"1:38819:10459":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"5:4132:3982":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"4:8727:4235":{"crate_id":4,"path":["std","panic","PanicHookInfo"],"kind":"struct"},"1:8451:133":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"9:176:9365":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"6:6526:7301":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"5:2294:7667":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"15:288:22238":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:908:8558":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"4:3077:141":{"crate_id":4,"path":["std","io","error","Error"],"kind":"struct"},"17:12371:5047":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:41023:8131":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"struct"},"4:4902:16079":{"crate_id":4,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"4:8498:7747":{"crate_id":4,"path":["std","io","util","Sink"],"kind":"struct"},"4:9292:4021":{"crate_id":4,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:16323:5838":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"6:6544:7313":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:7391:7527":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:42917:95":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"4:575:4051":{"crate_id":4,"path":["std","thread","Packet"],"kind":"struct"},"17:12319:8622":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"4:3042:8812":{"crate_id":4,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"5:7640:4082":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"4:3659:2834":{"crate_id":4,"path":["std","io","Write"],"kind":"trait"},"17:16019:5737":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"4:12453:1906":{"crate_id":4,"path":["std","unit"],"kind":"primitive"},"16:2920:6000":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:13014:8644":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"17:15836:5690":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"17:15769:5673":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:4705:4060":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"4:12435:31263":{"crate_id":4,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:13193:8652":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"16:5085:6049":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"16:6904:6167":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"18:515:4819":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"6:5325:7058":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"5:3342:35967":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"4:4827:7522":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"17:13145:8648":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"4:9364:7789":{"crate_id":4,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"4:1641:6510":{"crate_id":4,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"1:2820:4247":{"crate_id":1,"path":["core","clone","InitializingSlice"],"kind":"struct"},"17:14652:5367":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"11:430:36621":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:41510:8161":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"9:0:3903":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"6:6449:7266":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"11:873:8745":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"5:2172:8768":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"5:6126:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"4:9212:7785":{"crate_id":4,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"16:896:8655":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"1:34383:10453":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"16:7305:6236":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:11232:23233":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:45305:222":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"17:13349:5141":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:42530:176":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"17:12550:5080":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"16:2620:5986":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:10537:4281":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"17:15064:5453":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"4:10817:4056":{"crate_id":4,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"17:11985:8604":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"6:4984:6933":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:3339:4264":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:23192:7875":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:16084:5781":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:15896:5706":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:13119:5121":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"1:32832:4267":{"crate_id":1,"path":["core","marker","Tuple"],"kind":"trait"},"6:1632:6767":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"16:6123:6009":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"4:8249:130":{"crate_id":4,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:34037:4680":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"6:473:6606":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:13970:5232":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"4:8736:4234":{"crate_id":4,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"16:2900:5999":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"4:11272:31281":{"crate_id":4,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:2858:204":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"4:10565:34191":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"1:46608:8310":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:15024:5448":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"4:12457:1720":{"crate_id":4,"path":["std","slice"],"kind":"primitive"},"1:4953:10493":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"17:15655:5648":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:14627:5365":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"18:670:8556":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:40061:7989":{"crate_id":1,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:16595:5199":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"17:12762:8641":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"11:2551:36608":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"16:3141:4863":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"5:3865:8767":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"5:2347:36333":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"16:6421:5964":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"11:2366:8758":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"5:5835:4739":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:45398:183":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"4:11045:8850":{"crate_id":4,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"17:14031:5245":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"16:3834:6032":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:13307:3988":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:16812:5956":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"1:4589:10484":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:42333:8184":{"crate_id":1,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"16:5318:6057":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"1:3737:10465":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:12216:5040":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"1:44635:4508":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"6:7332:7493":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:16341:5844":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"4:1108:8748":{"crate_id":4,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"6:4890:6889":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:12840:5099":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:3351:3974":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"1:9511:4003":{"crate_id":1,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"17:12204:5038":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"1:41212:8139":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"17:16494:5181":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"1:41087:2504":{"crate_id":1,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"4:8753:7767":{"crate_id":4,"path":["std","path","Prefix"],"kind":"enum"},"17:14750:5398":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"16:7938:6325":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:11864:4517":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:46462:8294":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"17:16159:5794":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:31145:4289":{"crate_id":1,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:44673:4496":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"4:11085:7784":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"6:1643:6775":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:11581:4080":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"4:11021:31277":{"crate_id":4,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"12:0:3906":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"6:6876:7443":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"4:6952:236":{"crate_id":4,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"4:10983:7702":{"crate_id":4,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"5:725:8760":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:22798:15773":{"crate_id":1,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"6:479:6609":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"1:32834:117":{"crate_id":1,"path":["core","marker","ConstParamTy"],"kind":"trait"},"17:11281:8581":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:3758:10466":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"16:6188:6078":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"17:13095:5120":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"16:6462:23148":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:14114:5270":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:1625:6763":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:47466:8387":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:15679:5650":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:23554:7913":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"18:706:4492":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:14393:5330":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:14586:5358":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:44340:4504":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:3526:4085":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"0:234:2493":{"crate_id":0,"path":["uuid","timestamp","ClockSequence"],"kind":"trait"},"6:6902:7458":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"4:8010:16010":{"crate_id":4,"path":["std","sealed","Sealed"],"kind":"trait"},"1:8422:4091":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"17:12983:23351":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"17:15997:5732":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"6:6659:7377":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:41125:8931":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"11:351:36614":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"1:41181:8136":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:13002:8228":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:32745:249":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:12391:8916":{"crate_id":1,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"1:36778:6289":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"4:3620:8819":{"crate_id":4,"path":["std","io","IoSliceMut"],"kind":"struct"},"19:0:1315":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:44279:7866":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"5:2255:4045":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:881:10382":{"crate_id":1,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"17:16520:5872":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"16:4184:6035":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"6:1507:6684":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"18:608:8551":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"4:10777:8817":{"crate_id":4,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"17:13266:23220":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"6:5044:6965":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"16:2450:5972":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"17:12816:5092":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"4:8559:4515":{"crate_id":4,"path":["std","io","Split"],"kind":"struct"},"6:5019:6952":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:40830:8122":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"4:2482:15995":{"crate_id":4,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:44664:4497":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"11:396:36612":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:23245:7876":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:8866:153":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"17:11114:8579":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"6:1675:6793":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:44327:3993":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"4:3350:8813":{"crate_id":4,"path":["std","io","stdio","Stdin"],"kind":"struct"},"17:12625:5084":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:43764:8218":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:16362:5847":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:10173:9376":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"5:4483:271":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:13316:4492":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:40936:4505":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:9987:92":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"6:7487:7553":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"11:2301:6269":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"1:40057:4730":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"17:13491:5150":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"4:4311:33550":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:2105:685":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"5:296:3990":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"6:485:6612":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"16:2660:5988":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:41044:107":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"4:386:4072":{"crate_id":4,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:22076:28226":{"crate_id":1,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"4:4780:16097":{"crate_id":4,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"16:2684:5989":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"6:1563:6717":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"4:9437:237":{"crate_id":4,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"17:15573:5627":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"4:10993:143":{"crate_id":4,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"1:8178:4011":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:14031:30795":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"6:8290:7647":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:14001:5241":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"6:4869:6881":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:16187:5800":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"16:2724:5991":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:31130:4704":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"16:6914:6168":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:3583:4731":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"4:9356:8878":{"crate_id":4,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"1:47524:8389":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:2672:4587":{"crate_id":1,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"17:16198:5805":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:22:834":{"crate_id":1,"path":["core","format_args"],"kind":"macro"},"17:14612:5362":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"0:246:2491":{"crate_id":0,"path":["uuid","timestamp","context"],"kind":"module"},"6:5622:7193":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"4:8031:4058":{"crate_id":4,"path":["std","thread","ThreadId"],"kind":"struct"},"4:12478:1447":{"crate_id":4,"path":["std","reference"],"kind":"primitive"},"9:500:6583":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:3792:115":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"6:1489:6676":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"4:11298:3679":{"crate_id":4,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"16:5649:6062":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"11:2137:8747":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:44216:8937":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"4:10963:7701":{"crate_id":4,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"4:3403:8815":{"crate_id":4,"path":["std","io","stdio","Stdout"],"kind":"struct"},"16:7075:23151":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"18:765:27413":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"7:0:1936":{"crate_id":7,"path":["unwind"],"kind":"module"},"4:11068:31257":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:23620:7919":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"17:10928:8576":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"0:626:2523":{"crate_id":0,"path":["uuid","Version","SortRand"],"kind":"variant"},"4:12470:903":{"crate_id":4,"path":["std","i128"],"kind":"primitive"},"17:16399:5854":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"4:3916:8821":{"crate_id":4,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"4:8260:7707":{"crate_id":4,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"1:46838:8322":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:6599:7351":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"5:7814:3983":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:13757:5195":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:12176:5034":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"5:1213:35980":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:12736:8639":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:14299:5315":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV1"],"kind":"struct"},"17:667:4963":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"5:4369:4080":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:11432:23232":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"1:34902:6288":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"17:13205:8653":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"11:1900:6509":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:12424:8917":{"crate_id":1,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"17:12869:5148":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"16:6640:8665":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"17:13290:4931":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"4:1117:8752":{"crate_id":4,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:15315:5490":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:16728:5939":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"5:7648:4082":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"4:3313:33822":{"crate_id":4,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"18:643:4816":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"16:2772:5993":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"6:6480:7279":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:23348:27586":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"16:7959:6328":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"11:1140:8751":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"6:6882:7444":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:11673:4498":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:43754:8215":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"6:6473:7275":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:46965:8343":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"4:4163:16051":{"crate_id":4,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:12347:8625":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:16332:5842":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"4:8617:7753":{"crate_id":4,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:13890:5221":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:13301:3997":{"crate_id":1,"path":["core","str","pattern"],"kind":"module"},"1:47039:8345":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:44298:7867":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:44799:8242":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:43557:4290":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"6:5255:7024":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:47664:8399":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"5:3455:4734":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:16555:5902":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"6:4976:6928":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"6:6740:7405":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"11:2533:6514":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:14708:5376":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"16:8014:6021":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:46821:8321":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"4:11000:7805":{"crate_id":4,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"16:6890:6006":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"11:1085:36607":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"4:8213:7702":{"crate_id":4,"path":["std","fs","FileTimes"],"kind":"struct"},"1:22585:28219":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:7080:7854":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"16:6837:8697":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"1:8913:28124":{"crate_id":1,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"17:16377:5848":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"18:538:4824":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:10803:2504":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"4:6065:4032":{"crate_id":4,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"6:7563:7602":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"11:1907:6510":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"17:11065:8578":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:44905:8247":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"6:1539:6700":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:4929:6045":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:44308:8940":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"16:3587:6030":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"1:13537:122":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:47566:8391":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:23430:7904":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"4:8906:7779":{"crate_id":4,"path":["std","path","StripPrefixError"],"kind":"struct"},"6:5635:7199":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"4:11839:7825":{"crate_id":4,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:10539:4282":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"6:6564:7329":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"11:2466:4734":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"18:481:4814":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:6507:7299":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"4:7180:16125":{"crate_id":4,"path":["std","std_float","StdFloat"],"kind":"trait"},"5:7777:7694":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"16:6625:6146":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"11:1049:8748":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"11:1105:8750":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:42626:10562":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"4:8578:8863":{"crate_id":4,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"10:44:6524":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"17:16507:5195":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"14:31:8733":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"4:7951:33616":{"crate_id":4,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"16:7401:36637":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:2206:4602":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:14237:7869":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"17:12280:8618":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"11:2440:3982":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"1:3777:27926":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"5:2584:7674":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:11309:8582":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"16:7969:6329":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:6262:7846":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"18:754:4858":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"0:594:2492":{"crate_id":0,"path":["uuid","timestamp","context","NoContext"],"kind":"struct"},"1:2656:686":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"16:8028:6331":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"5:4498:36007":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"16:8165:6013":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"11:1158:8752":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:3055:166":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"6:6534:7306":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:1589:6733":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"6:8255:7639":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:31530:4258":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"17:10823:4982":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"4:8201:8851":{"crate_id":4,"path":["std","fs","ReadDir"],"kind":"struct"},"6:6680:7383":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"16:5709:23144":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:13375:10627":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"4:8583:16046":{"crate_id":4,"path":["std","net","Shutdown"],"kind":"enum"},"1:40824:4506":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"4:6895:4035":{"crate_id":4,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"5:5575:4495":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"4:9768:130":{"crate_id":4,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"0:112:819":{"crate_id":0,"path":["uuid","fmt"],"kind":"module"},"17:10663:4978":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:44977:8253":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"4:768:157":{"crate_id":4,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"5:3329:6511":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:45095:8259":{"crate_id":1,"path":["core","str","LinesMap"],"kind":"struct"},"11:2559:6518":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"5:1635:8766":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:40871:27594":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:13733:5181":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"4:1907:8799":{"crate_id":4,"path":["std","env","SplitPaths"],"kind":"struct"},"6:5334:7061":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"1:40928:4506":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"6:4902:6894":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"4:9182:7784":{"crate_id":4,"path":["std","process","ExitCode"],"kind":"struct"},"1:22932:4586":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"4:3569:7793":{"crate_id":4,"path":["std","io","Guard"],"kind":"struct"},"4:11971:8822":{"crate_id":4,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"16:7495:6259":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"4:9156:7782":{"crate_id":4,"path":["std","process","ExitStatus"],"kind":"struct"},"4:9460:165":{"crate_id":4,"path":["std","time","Instant"],"kind":"struct"},"17:15010:5447":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:47010:8344":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:22008:4258":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:14520:5350":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:47270:8383":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:23332:7888":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"4:2498:16000":{"crate_id":4,"path":["std","fs","canonicalize"],"kind":"function"},"4:9478:3679":{"crate_id":4,"path":["std","time","SystemTime"],"kind":"struct"},"4:5650:8831":{"crate_id":4,"path":["std","process","ChildStdout"],"kind":"struct"},"1:2208:4603":{"crate_id":1,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"4:1491:159":{"crate_id":4,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"14:0:3907":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"6:5593:7174":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:2770:103":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:44399:4514":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:23441:10395":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:12095:5028":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"5:6712:3982":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"4:2521:16007":{"crate_id":4,"path":["std","fs","exists"],"kind":"function"},"1:42604:4004":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:38709:10457":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"4:8235:143":{"crate_id":4,"path":["std","fs","FileType"],"kind":"struct"},"11:2380:4080":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"1:41500:8160":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:13554:5153":{"crate_id":17,"path":["object","read","RelocationMapEntry"],"kind":"struct"},"6:1657:6786":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"4:3913:8820":{"crate_id":4,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"6:4875:6882":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:2773:104":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"4:12458:1754":{"crate_id":4,"path":["std","str"],"kind":"primitive"},"1:40149:217":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:11757:23253":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"4:11473:6580":{"crate_id":4,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"1:10543:3426":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"4:12473:1872":{"crate_id":4,"path":["std","u32"],"kind":"primitive"},"6:5025:6955":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:47740:8403":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"6:491:6614":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:10549:4284":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"16:6843:6158":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:13322:23221":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:2437:8567":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"4:8879:7775":{"crate_id":4,"path":["std","path","Components"],"kind":"struct"},"6:5271:7033":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"6:5288:7044":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:12008:4910":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:7223:6221":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"4:11833:7824":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"16:3695:6031":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"5:39:4733":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"6:5533:7148":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"0:603:2835":{"crate_id":0,"path":["uuid","uuid"],"kind":"macro"},"0:611:2513":{"crate_id":0,"path":["uuid","Version","Dce"],"kind":"variant"},"4:9241:16123":{"crate_id":4,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"4:9351:8877":{"crate_id":4,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"4:8649:7755":{"crate_id":4,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"1:42251:173":{"crate_id":1,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"17:16701:5930":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"4:534:4045":{"crate_id":4,"path":["std","thread","PanicGuard"],"kind":"struct"},"4:3352:8814":{"crate_id":4,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:47603:8394":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:15753:5671":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"11:299:6499":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"11:2323:8747":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"17:16209:5806":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"4:2754:8807":{"crate_id":4,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"11:842:15961":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"17:14547:5354":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:12992:5115":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"0:632:2527":{"crate_id":0,"path":["uuid","Version","Max"],"kind":"variant"},"4:10408:8881":{"crate_id":4,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"1:41326:8153":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"6:5205:7000":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:23026:15769":{"crate_id":1,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"1:45123:8266":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:3366:6283":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"17:16642:5917":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"1:23059:15768":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"1:47347:8384":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:15586:5632":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"4:12468:916":{"crate_id":4,"path":["std","i32"],"kind":"primitive"},"5:4561:7793":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"1:13943:8923":{"crate_id":1,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"5:3303:6510":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:11720:5006":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"18:651:4816":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:13719:5180":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"4:9198:8870":{"crate_id":4,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"7:79:22131":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:11173:36654":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:12962:23350":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"8:0:3902":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:3495:10469":{"crate_id":1,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"5:7570:8785":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:40169:219":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"18:80:27402":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:12359:8626":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"14:220:6488":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"6:570:6663":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:39977:4084":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"16:7192:23152":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"6:5151:6984":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"4:8889:4080":{"crate_id":4,"path":["std","path","Iter"],"kind":"struct"},"0:604:2507":{"crate_id":0,"path":["uuid","Version"],"kind":"enum"},"4:2480:4575":{"crate_id":4,"path":["std","fs","metadata"],"kind":"function"},"4:8049:4056":{"crate_id":4,"path":["std","thread","Thread"],"kind":"struct"},"1:41710:8164":{"crate_id":1,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"1:45111:8263":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"4:12474:1878":{"crate_id":4,"path":["std","u64"],"kind":"primitive"},"4:5105:16098":{"crate_id":4,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"17:11075:36655":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:10442:23216":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:15418:5576":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"5:1626:213":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"16:7372:6015":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:1220:8561":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:14335:5321":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"16:7731:4001":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:46544:8299":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"16:7765:6306":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:46500:8296":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"5:7287:35982":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"5:4207:4081":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:12897:5106":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"1:2209:4575":{"crate_id":1,"path":["core","ptr","metadata","metadata"],"kind":"function"},"1:42289:8177":{"crate_id":1,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"15:327:9351":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:15963:5725":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:40412:4270":{"crate_id":1,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:33698:10449":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"4:8358:8855":{"crate_id":4,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:15844:5691":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"4:5195:4230":{"crate_id":4,"path":["std","panic","always_abort"],"kind":"function"},"4:1626:3982":{"crate_id":4,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:15286:5470":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"4:12450:426":{"crate_id":4,"path":["std","bool"],"kind":"primitive"},"4:9169:7783":{"crate_id":4,"path":["std","process","ExitStatusError"],"kind":"struct"},"6:5586:7172":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:42683:4080":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"17:11805:8597":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"4:8284:7663":{"crate_id":4,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:42806:87":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"18:698:4844":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"0:617:2517":{"crate_id":0,"path":["uuid","Version","Random"],"kind":"variant"},"18:563:4826":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"4:4333:16074":{"crate_id":4,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:14886:5420":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:41294:8150":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:43223:3426":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"4:963:8739":{"crate_id":4,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"16:3110:6026":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"5:984:15963":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"5:5425:16157":{"crate_id":5,"path":["alloc","rc","UniqueRcUninit"],"kind":"struct"},"1:10168:28125":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:40920:4507":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:15602:5635":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:41273:8148":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:22096:15691":{"crate_id":1,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"5:1615:8739":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:44206:7864":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"15:394:22248":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"18:689:4843":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"11:685:4081":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"16:2486:5980":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"14:7:8733":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:44351:3992":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"17:16750:5945":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"16:7337:6239":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"16:6731:8694":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"11:364:36610":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:9548:3734":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"4:6227:223":{"crate_id":4,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"10:0:3904":{"crate_id":10,"path":["adler"],"kind":"module"},"4:7801:9856":{"crate_id":4,"path":["std","panicking","begin_panic_handler","FormatStringPayload"],"kind":"struct"},"17:12524:8627":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:42732:90":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:15621:5636":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"6:5196:6995":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"5:7765:7692":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:11592:4956":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:43216:3424":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"6:5395:7083":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:45008:4521":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:46948:8342":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:47098:8348":{"crate_id":1,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"1:47717:8402":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:11617:8580":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"4:4149:16050":{"crate_id":4,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"4:10958:7796":{"crate_id":4,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"16:5144:6051":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"4:2554:3840":{"crate_id":4,"path":["std","io"],"kind":"module"},"17:11878:5016":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:15731:5665":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:44503:4516":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:3764:10468":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:13926:8920":{"crate_id":1,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"6:7308:7476":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"4:10700:33619":{"crate_id":4,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"1:22273:15688":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:41241:8143":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:1898:4480":{"crate_id":1,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"4:5020:16063":{"crate_id":4,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"6:8008:7624":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"4:8091:15947":{"crate_id":4,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:10141:23206":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:14599:5360":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:10729:4980":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:40239:7993":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"16:7578:7789":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:12583:5083":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"5:7801:248":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"16:6111:6071":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"16:6042:6008":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"17:10861:142":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"5:4162:36011":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"17:13662:5168":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"17:10843:4983":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"5:0:315":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:42649:140":{"crate_id":1,"path":["core","result","Result","Err"],"kind":"variant"},"1:43030:91":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"4:7743:34321":{"crate_id":4,"path":["std","panicking","Hook"],"kind":"enum"},"1:12816:10592":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:13222:23219":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:14084:5258":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:10977:36656":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"16:8723:141":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"6:6731:7402":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"4:6710:4024":{"crate_id":4,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:12723:8638":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"16:2640:5987":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"16:2550:5983":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"6:5670:7213":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"16:5224:6054":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"17:12570:8630":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"16:7416:8698":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"11:1884:4082":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"16:4241:6036":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:41733:8166":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"16:8483:6388":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"16:7212:6220":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:41031:8132":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"4:3687:16029":{"crate_id":4,"path":["std","io","BufRead"],"kind":"trait"},"4:9746:8851":{"crate_id":4,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"1:40219:8930":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"11:1888:3982":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"16:6173:6076":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:22064:28213":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:23543:7912":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"5:1414:8752":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"4:12456:341":{"crate_id":4,"path":["std","array"],"kind":"primitive"},"17:16684:5928":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"5:7113:4740":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:23598:7917":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"4:1930:8800":{"crate_id":4,"path":["std","env","Args"],"kind":"struct"},"16:4810:6041":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:44485:4517":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"5:3091:36399":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"6:5488:7138":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"1:44187:7863":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"6:5676:7215":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:46395:8286":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"4:7495:33551":{"crate_id":4,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"6:5520:7147":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"1:4827:8904":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"17:15439:5584":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:43209:4281":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"4:959:8738":{"crate_id":4,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:2378:23280":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"5:2367:7673":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"6:7316:7481":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:1597:6738":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"6:7518:7578":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"6:4829:6848":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:32720:8929":{"crate_id":1,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"1:14294:155":{"crate_id":1,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"4:8566:4508":{"crate_id":4,"path":["std","io","Lines"],"kind":"struct"},"4:11053:8833":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"16:6302:6096":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"6:8319:7654":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"4:8026:2500":{"crate_id":4,"path":["std","thread","Builder"],"kind":"struct"},"17:10793:4859":{"crate_id":17,"path":["object","read","read_cache","ReadCacheRange"],"kind":"struct"},"1:45298:154":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"6:7368:7509":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:3674:214":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:22704:16010":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"4:12046:7829":{"crate_id":4,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"5:1538:4081":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"5:1554:4082":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"5:3087:7670":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:22842:15774":{"crate_id":1,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"16:155:5959":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:16798:5955":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"1:32727:4291":{"crate_id":1,"path":["core","error","tags","Ref"],"kind":"struct"},"4:948:4734":{"crate_id":4,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"17:15876:5699":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:44942:8248":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"6:7469:7542":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:10791:4372":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:46515:8297":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"4:8536:8136":{"crate_id":4,"path":["std","io","Chain"],"kind":"struct"},"9:53:9354":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"4:11129:33627":{"crate_id":4,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"5:7089:4739":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"17:15557:5626":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"5:4528:7793":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"4:938:3982":{"crate_id":4,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:40982:8129":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"4:9271:16124":{"crate_id":4,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"4:11822:8844":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:12648:5085":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"4:10774:8815":{"crate_id":4,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"0:620:2519":{"crate_id":0,"path":["uuid","Version","Sha1"],"kind":"variant"},"4:12465:750":{"crate_id":4,"path":["std","f128"],"kind":"primitive"},"11:881:8746":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"6:1727:6815":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"5:2815:7677":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"6:4921:6907":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:15:2804":{"crate_id":1,"path":["core","write"],"kind":"macro"},"17:15760:5672":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"6:8302:7649":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"4:1871:8798":{"crate_id":4,"path":["std","env","VarsOs"],"kind":"struct"},"5:4998:220":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"4:12475:1860":{"crate_id":4,"path":["std","u128"],"kind":"primitive"},"4:12469:922":{"crate_id":4,"path":["std","i64"],"kind":"primitive"},"1:10547:4283":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"0:0:2835":{"crate_id":0,"path":["uuid"],"kind":"module"},"11:2539:6515":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"6:5471:7132":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"4:8276:8854":{"crate_id":4,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"4:12451:1196":{"crate_id":4,"path":["std","never"],"kind":"primitive"},"1:10530:122":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"5:6526:16180":{"crate_id":5,"path":["alloc","sync","UniqueArcUninit"],"kind":"struct"},"1:32803:4268":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:15540:5624":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:15410:5573":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"6:5629:7196":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"6:6723:7401":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"16:2966:6002":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"0:446:3432":{"crate_id":0,"path":["uuid","fmt","Simple"],"kind":"struct"},"1:0:574":{"crate_id":1,"path":["core"],"kind":"module"},"11:809:4734":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"4:12471:1884":{"crate_id":4,"path":["std","u8"],"kind":"primitive"},"17:15689:5651":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:4028:3982":{"crate_id":1,"path":["core","array","drain","Drain"],"kind":"struct"},"4:11782:7818":{"crate_id":4,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"4:9316:4050":{"crate_id":4,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:13537:5110":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"1:6885:7849":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"16:3987:4876":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"6:6813:7429":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:23587:7916":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"17:15829:5689":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"4:6434:8836":{"crate_id":4,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:14773:5407":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"9:236:8215":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"4:5316:8827":{"crate_id":4,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"0:605:2509":{"crate_id":0,"path":["uuid","Version","Nil"],"kind":"variant"},"16:6098:8656":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"17:14533:5054":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:2796:114":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"4:9305:8871":{"crate_id":4,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"4:4943:16067":{"crate_id":4,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"11:2349:8748":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"4:3446:8817":{"crate_id":4,"path":["std","io","stdio","Stderr"],"kind":"struct"},"16:8546:6395":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"16:6064:6010":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:24072:239":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"5:7123:4741":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"1:40886:8126":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:41115:7840":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"6:545:6650":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"16:8503:6389":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"5:3930:4734":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"17:11926:5023":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"0:468:2760":{"crate_id":0,"path":["uuid","fmt","Urn"],"kind":"struct"},"17:12306:5044":{"crate_id":17,"path":["object","read","macho","fat","MachOFatFile"],"kind":"struct"},"1:4896:7839":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"5:7750:10535":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:43733:4374":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:46301:8276":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"4:1647:6511":{"crate_id":4,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"4:11141:33634":{"crate_id":4,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"4:8255:7704":{"crate_id":4,"path":["std","hash","random","RandomState"],"kind":"struct"},"1:41016:8130":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"1:43104:4017":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"16:6998:6172":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"17:10534:4973":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:15739:5668":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:11163:5016":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:43452:4289":{"crate_id":1,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"4:1869:8797":{"crate_id":4,"path":["std","env","Vars"],"kind":"struct"},"5:1576:6507":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:22551:15693":{"crate_id":1,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"1:4984:4061":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:3133:126":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"11:2400:4081":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"1:45293:8270":{"crate_id":1,"path":["core","future","async_drop","Noop"],"kind":"struct"},"4:4941:16066":{"crate_id":4,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:15905:5707":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:13427:5146":{"crate_id":17,"path":["object","read","ObjectMapFile"],"kind":"struct"},"17:14917:5426":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"4:4997:8826":{"crate_id":4,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:43497:27599":{"crate_id":1,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"17:11222:8580":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:41075:8134":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"11:2545:6516":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:44127:8935":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"16:8636:23159":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:12122:5030":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"18:491:4815":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:15777:5675":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"4:11788:8895":{"crate_id":4,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"17:16036:5744":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:506:4917":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:13157:8649":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"16:8612:6025":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:3381:10462":{"crate_id":1,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"17:14284:5310":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:47638:8397":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:10494:147":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"17:11421:8583":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:12798:23349":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"16:6970:6007":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:10332:23212":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"16:6876:6164":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"16:7350:6241":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"4:9229:7786":{"crate_id":4,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:3049:78":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"1:33274:6282":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:46722:8316":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:11678:8591":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:44178:7862":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:44956:10634":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:7074:7855":{"crate_id":1,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"6:5282:7041":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"6:8031:7636":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:45323:210":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"17:5305:8572":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"4:6881:4034":{"crate_id":4,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"17:11733:23252":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"1:2215:4601":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"4:2020:802":{"crate_id":4,"path":["std","ffi"],"kind":"module"},"1:45103:8261":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:3386:10463":{"crate_id":1,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"17:14460:5341":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"16:7030:6181":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"16:8223:6339":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"16:4983:6047":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:13547:8654":{"crate_id":17,"path":["object","read","RelocationMap"],"kind":"struct"},"1:42555:4082":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"4:8672:7509":{"crate_id":4,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"4:5682:116":{"crate_id":4,"path":["std","process","Command"],"kind":"struct"},"1:23510:7909":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"1:47495:8388":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"16:6028:6005":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:46363:8284":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"17:14019:5242":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"4:4225:16056":{"crate_id":4,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"5:6042:3982":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"6:5648:7205":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:12920:5108":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:46739:8317":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:3058:148":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"16:5417:6060":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"16:3126:22287":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"5:6579:16127":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"1:5367:444":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"16:4873:6043":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"4:11333:165":{"crate_id":4,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"5:3267:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:34238:10452":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"4:6310:33636":{"crate_id":4,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"4:12479:13":{"crate_id":4,"path":["std","fn"],"kind":"primitive"},"1:41375:8157":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:44878:8246":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:12149:5032":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"17:13055:5000":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"5:888:8761":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:42595:4002":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:14692:5371":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"5:1784:36011":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"4:0:1746":{"crate_id":4,"path":["std"],"kind":"module"},"1:884:193":{"crate_id":1,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"4:996:8746":{"crate_id":4,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:41316:8152":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:11892:8914":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"11:1893:4734":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"5:1594:8753":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"3:0:3900":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"17:13798:5199":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"4:9420:190":{"crate_id":4,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:12787:5087":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"16:5757:6064":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"4:6824:4027":{"crate_id":4,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:16171:5796":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:13041:8647":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"4:4825:7520":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"4:4221:16055":{"crate_id":4,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:12335:8624":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"16:2840:5996":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"4:9256:16122":{"crate_id":4,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:43772:8219":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"4:8572:8861":{"crate_id":4,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:11630:4515":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"6:7463:7540":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:3299:120":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"6:6748:7406":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"6:6777:7416":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"17:15887:5703":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:15946:5721":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"4:954:8753":{"crate_id":4,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"4:2718:8808":{"crate_id":4,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:44698:4507":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"4:4119:16048":{"crate_id":4,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:11998:8605":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:4566:111":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:8402:149":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"16:8585:8729":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:4929:6909":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:3019:2499":{"crate_id":1,"path":["core","convert"],"kind":"module"},"1:41766:8171":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:3304:252":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"16:6738:36645":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:32713:6323":{"crate_id":1,"path":["core","error","tags","Value"],"kind":"struct"},"4:1652:6512":{"crate_id":4,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:2112:4700":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"4:3075:229":{"crate_id":4,"path":["std","io","error","Result"],"kind":"type_alias"},"1:22030:28222":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"18:735:27412":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:13116:4498":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"11:785:6508":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"17:11401:4991":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"6:5387:7078":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:13933:5226":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:42699:4082":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"1:3551:145":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"4:8097:15982":{"crate_id":4,"path":["std","env","VarError"],"kind":"enum"},"1:46316:8279":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:45315:230":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:41194:7830":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"9:390:22138":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"18:635:4839":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"6:0:1021":{"crate_id":6,"path":["libc"],"kind":"module"},"17:14416:5333":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"4:5865:223":{"crate_id":4,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:44367:2504":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:44655:4499":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"4:4362:16077":{"crate_id":4,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"5:7824:3984":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"4:12466:928":{"crate_id":4,"path":["std","i8"],"kind":"primitive"},"4:12467:910":{"crate_id":4,"path":["std","i16"],"kind":"primitive"},"16:8711:6408":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"0:207:2490":{"crate_id":0,"path":["uuid","timestamp"],"kind":"module"},"1:46754:8318":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"16:7907:6324":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:2849:493":{"crate_id":1,"path":["core","cmp"],"kind":"module"},"1:23299:7885":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"11:1914:6511":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"5:7620:7688":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"4:8112:8850":{"crate_id":4,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:40189:10464":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"17:12605:5016":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:45388:8943":{"crate_id":1,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"6:5057:6969":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:11606:5016":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:10246:23209":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"16:4267:6037":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"17:317:8557":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:6823:7432":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"0:661:2583":{"crate_id":0,"path":["uuid","Uuid"],"kind":"struct"},"16:2880:5998":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"6:5265:7030":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:14083:8924":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"18:680:4840":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:32743:240":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"4:11363:7811":{"crate_id":4,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"1:47172:8350":{"crate_id":1,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"1:40943:10509":{"crate_id":1,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"17:10778:8573":{"crate_id":17,"path":["object","read","read_cache","ReadCache"],"kind":"struct"},"16:7990:6330":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:41264:8147":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:14220:5282":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"4:6746:4033":{"crate_id":4,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"17:14560:5355":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"16:7789:36644":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"16:8209:6011":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"4:984:8743":{"crate_id":4,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:31156:27617":{"crate_id":1,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"16:4120:6033":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"6:5295:7046":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"4:599:4053":{"crate_id":4,"path":["std","thread","JoinHandle"],"kind":"struct"},"6:1494:6678":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:22094:16010":{"crate_id":1,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1:47612:8395":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:2894:198":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"17:5131:8571":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"1:32709:8928":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"17:11386:23231":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"16:6658:8675":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:44266:8938":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"4:1984:4568":{"crate_id":4,"path":["std","error","Report"],"kind":"struct"},"6:5069:6978":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"5:6179:16172":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"4:904:4082":{"crate_id":4,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"16:7259:6234":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:5494:7140":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"6:8261:7640":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"5:6158:4016":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"14:165:22221":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"16:6144:23145":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:11653:5004":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:15812:5681":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"6:5357:7064":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"4:7428:31574":{"crate_id":4,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:11878:4516":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"4:5986:4018":{"crate_id":4,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"4:8011:4073":{"crate_id":4,"path":["std","thread","local","AccessError"],"kind":"struct"},"7:32:22124":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:1339:8562":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"4:9447:4030":{"crate_id":4,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"1:46707:8315":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"4:7397:33621":{"crate_id":4,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"13:0:3901":{"crate_id":13,"path":["std_detect"],"kind":"module"},"16:7471:6258":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:11539:5000":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"5:1369:6269":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:46927:8341":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:3548:144":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:4608:10485":{"crate_id":1,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"1:41717:8165":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:41232:8141":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"4:9496:4678":{"crate_id":4,"path":["std","time","SystemTimeError"],"kind":"struct"},"16:2796:5994":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:12056:5024":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:12392:5049":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:11553:8587":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:16145:5788":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:3752:150":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"5:1604:8738":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"16:7386:6243":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"4:10387:8799":{"crate_id":4,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"1:44288:8939":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:43481:6366":{"crate_id":1,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:34171:10450":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:3144:141":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"1:42708:199":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"16:5255:6055":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:41282:8149":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"4:1932:8801":{"crate_id":4,"path":["std","env","ArgsOs"],"kind":"struct"},"5:7540:4082":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"6:1690:6802":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:40074:216":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"16:6852:6159":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"16:5198:6053":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"4:8516:16009":{"crate_id":4,"path":["std","io","SeekFrom"],"kind":"enum"},"16:2467:5974":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"4:6706:4023":{"crate_id":4,"path":["std","sync","once","Once"],"kind":"struct"},"1:47687:8400":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"16:4404:6038":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:23139:7874":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:12851:5103":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"1:8875:10546":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:14375:5329":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:41335:8154":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:13471:5092":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"16:2950:6001":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:4823:224":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"17:12163:5033":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"17:13515:23222":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"16:4766:6040":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:15136:5110":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:5468:996":{"crate_id":1,"path":["core","iter"],"kind":"module"},"17:12191:5037":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"1:6185:7793":{"crate_id":1,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:46771:8319":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"6:6765:7414":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"6:5301:7049":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:11080:28408":{"crate_id":1,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"1:45115:8264":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"5:7214:270":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"11:671:4080":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"16:7949:6018":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"6:578:6668":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"16:4902:6044":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"5:7604:4082":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:22706:15689":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:23609:7918":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"18:598:36660":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"16:5172:6052":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"17:14043:5246":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"16:3441:6029":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"1:14214:118":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"1:11785:4514":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"6:7454:7536":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:8365:10548":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"4:8895:7778":{"crate_id":4,"path":["std","path","Ancestors"],"kind":"struct"},"2:0:516":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"4:4829:7524":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"1:23368:27613":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"11:1880:4080":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:41524:8162":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:10541:3424":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:31124:4249":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:33970:3975":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:15148:5464":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:8369:10547":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"17:15077:5454":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:40899:8127":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"4:9206:4082":{"crate_id":4,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:14796:5408":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"11:740:8739":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:46800:8320":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"16:5379:6059":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"16:7044:6012":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:46669:8313":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"10:36:6523":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"14:202:3981":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"6:4896:6891":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:3919:71":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"17:15090:5455":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:44381:4515":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"6:6521:7300":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"4:9190:4080":{"crate_id":4,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"4:5362:207":{"crate_id":4,"path":["std","path","PathBuf"],"kind":"struct"},"6:5441:7111":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"6:6672:7381":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"4:2086:200":{"crate_id":4,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"16:6368:6105":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:13169:8650":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"1:41748:8168":{"crate_id":1,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:2806:4246":{"crate_id":1,"path":["core","clone","CloneToUninit"],"kind":"trait"},"1:40860:8123":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"6:5186:6988":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:47649:8398":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:10535:132":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"1:45301:167":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"4:12477:1946":{"crate_id":4,"path":["std","usize"],"kind":"primitive"},"1:46416:8291":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:10296:23211":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:2863:138":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"6:1530:6694":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:1500:6681":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"11:0:3905":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"1:47077:8347":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:41758:8169":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:10756:160":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"1:47545:8390":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"15:306:22239":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"6:1667:6792":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"4:3668:34066":{"crate_id":4,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"17:13983:5233":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:4161:4082":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"4:630:15942":{"crate_id":4,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:44689:4506":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"16:4844:6042":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"16:3014:22285":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"6:6716:7400":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"4:682:8792":{"crate_id":4,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"6:4937:6911":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"4:4171:16052":{"crate_id":4,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"11:1725:159":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:15531:5620":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"1:3554:146":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:14405:5332":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:10784:8574":{"crate_id":17,"path":["object","read","read_cache","ReadCacheInternal"],"kind":"struct"},"1:43519:4289":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"16:4956:6046":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:47060:8346":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:7414:7528":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:13361:5142":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:22275:7872":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:31092:4703":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"4:8668:8865":{"crate_id":4,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"6:5341:7062":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"17:15864:5698":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:44645:4509":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:42491:8193":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"6:559:6658":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"4:1854:711":{"crate_id":4,"path":["std","env"],"kind":"module"},"6:7341:7499":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:12066:2507":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"5:7548:7686":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"17:16264:5822":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"5:7560:3982":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"16:7716:36642":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:22047:28216":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"4:11280:7808":{"crate_id":4,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"17:11465:4996":{"crate_id":17,"path":["object","read","archive","ArchiveSymbolIterator"],"kind":"struct"},"6:6917:7469":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:45414:8274":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"17:14055:5247":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:47193:8351":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"6:7361:7505":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"16:8121:213":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"4:12463:755":{"crate_id":4,"path":["std","f32"],"kind":"primitive"},"17:15431:5583":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:4464:7793":{"crate_id":1,"path":["core","array","Guard"],"kind":"struct"},"4:9425:4022":{"crate_id":4,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"5:3337:6509":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:10696:4979":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:3542:4089":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"11:328:6502":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"6:6419:7249":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"11:2148:8748":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:32734:7985":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"5:1888:4734":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"6:553:6655":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:43742:160":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"6:5562:7165":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"4:8553:2504":{"crate_id":4,"path":["std","io","Bytes"],"kind":"struct"},"17:11952:8601":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:13322:4491":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:15785:5677":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"5:7789:8786":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"4:4113:16049":{"crate_id":4,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"4:11037:8865":{"crate_id":4,"path":["std","sys","pal","unix","linux","pidfd","PidFd"],"kind":"struct"},"17:3854:8570":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:7829:10512":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"1:3436:6284":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:42547:4081":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"17:14997:5446":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"4:687:15944":{"crate_id":4,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"6:6443:7265":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"11:772:6507":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"4:1099:8747":{"crate_id":4,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"4:11012:7748":{"crate_id":4,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"1:7724:4320":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"0:210:3613":{"crate_id":0,"path":["uuid","timestamp","UUID_TICKS_BETWEEN_EPOCHS"],"kind":"constant"},"6:8273:7642":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"6:6666:7378":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"18:718:4849":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:47392:8385":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:46558:8300":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"14:187:22226":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"11:488:157":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"6:1551:6709":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"5:3095:36398":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"16:4152:6034":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"5:2161:8767":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"1:45099:8260":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"4:990:8745":{"crate_id":4,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:46625:8311":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"4:3307:34818":{"crate_id":4,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"16:5282:6056":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:43725:8214":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:10394:23214":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"1:42417:28207":{"crate_id":1,"path":["core","net","parser","AddrKind"],"kind":"enum"},"4:10771:8813":{"crate_id":4,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"16:2990:6003":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:42564:4001":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"17:10218:23208":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:14947:5429":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:0:3910":{"crate_id":17,"path":["object"],"kind":"module"},"1:3061:263":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:4542:8901":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"4:6020:4020":{"crate_id":4,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"6:5682:7218":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:11971:8603":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:44196:8936":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"5:6930:36011":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:465:3276":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"4:2328:8805":{"crate_id":4,"path":["std","fs","DirEntry"],"kind":"struct"},"16:8105:6335":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"0:651:154":{"crate_id":0,"path":["uuid","Variant","Future"],"kind":"variant"},"1:6376:7848":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"17:12035:6513":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"6:4947:6917":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:10950:28438":{"crate_id":1,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"0:608:2511":{"crate_id":0,"path":["uuid","Version","Mac"],"kind":"variant"},"4:10953:7794":{"crate_id":4,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"5:1122:36011":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"6:5127:6982":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"6:1696:6803":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:12860:5104":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"17:13070:5016":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"17:14127:5274":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"16:7058:6183":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"16:6808:6004":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"4:2508:16005":{"crate_id":4,"path":["std","fs","read_dir"],"kind":"function"},"17:2406:8564":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"6:5462:7126":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"17:15351:5521":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"16:7980:6019":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:43974:8222":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:6708:7396":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"6:5570:7167":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:11823:8913":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"6:4792:6821":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"4:8624:7754":{"crate_id":4,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:10516:23218":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"4:12472:1866":{"crate_id":4,"path":["std","u16"],"kind":"primitive"},"17:16385:5851":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"5:7590:35964":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:42439:8191":{"crate_id":1,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:23417:7903":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"6:1684:6799":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"4:7813:9857":{"crate_id":4,"path":["std","panicking","begin_panic_handler","StaticStrPayload"],"kind":"struct"},"1:32744:242":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"17:13306:5139":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:22930:29935":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"5:7883:4734":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"17:14859:5416":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:23576:7915":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"17:16668:5923":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"16:7282:6235":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:43442:8200":{"crate_id":1,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:13327:4490":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"16:6781:6151":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:3356:4679":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"6:7350:7500":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"18:589:4827":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"4:3405:8816":{"crate_id":4,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:15931:5717":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:16283:5827":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:13838:5210":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:11712:8911":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"16:8179:6337":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"4:6489:7696":{"crate_id":4,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"4:12238:33295":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"16:2748:5992":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"13:110:36625":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"1:45131:7808":{"crate_id":1,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:22167:7872":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:16241:5821":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"16:8320:23158":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"5:1486:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"6:7577:7611":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"1:45425:6521":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"16:6256:6088":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"17:14507:5347":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"16:5348:6058":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:43469:8211":{"crate_id":1,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:3829:131":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:23324:7887":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:10748:156":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"1:2900:205":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"11:1005:6269":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:3309:4063":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"4:5616:8828":{"crate_id":4,"path":["std","process","Child"],"kind":"struct"},"17:13854:5214":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"4:3448:8818":{"crate_id":4,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"4:4349:16076":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"6:7539:7592":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"16:6953:6171":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"6:5541:7153":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"5:4329:7793":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"1:42769:97":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:46348:8283":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"14:40:5196":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"5:3693:185":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:46448:8293":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:8559:181":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"4:11887:9758":{"crate_id":4,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"5:3308:35972":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"6:5165:6985":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:12848:3290":{"crate_id":1,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:11224:28436":{"crate_id":1,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"4:663:4570":{"crate_id":4,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:13062:8232":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:22918:15776":{"crate_id":1,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"16:7554:23154":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"6:4842:6858":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:15036:5449":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:47623:8396":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:10368:23213":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"4:11794:7821":{"crate_id":4,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"4:5630:8830":{"crate_id":4,"path":["std","process","ChildStdin"],"kind":"struct"},"1:3297:268":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"17:13082:8580":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"6:5366:7068":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:46690:8314":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"4:3496:16036":{"crate_id":4,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"4:9323:31273":{"crate_id":4,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:40111:215":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:41303:8151":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"4:5666:8832":{"crate_id":4,"path":["std","process","ChildStderr"],"kind":"struct"},"6:5139:6983":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:44449:4518":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:13909:5222":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"4:11563:33631":{"crate_id":4,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"16:7919:8720":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"4:1630:4734":{"crate_id":4,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"6:6770:7415":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"16:6408:6109":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:22969:15777":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"17:16218:5808":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:14257:7871":{"crate_id":1,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"4:3602:7751":{"crate_id":4,"path":["std","io","Read"],"kind":"trait"},"1:43717:4375":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"4:8196:4911":{"crate_id":4,"path":["std","fs","Metadata"],"kind":"struct"},"17:14872:5417":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"5:779:255":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"4:4177:16053":{"crate_id":4,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:42880:88":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:12234:5125":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:13610:5161":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"16:6269:6089":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"4:5543:132":{"crate_id":4,"path":["std","path","Display"],"kind":"struct"},"4:7825:9858":{"crate_id":4,"path":["std","panicking","begin_panic","Payload"],"kind":"struct"},"0:576:2494":{"crate_id":0,"path":["uuid","timestamp","Timestamp"],"kind":"struct"},"1:47437:8386":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"4:679:8790":{"crate_id":4,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:10476:2834":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"16:8565:6398":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:16761:5946":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"1:11087:28435":{"crate_id":1,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"11:830:8753":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"6:1521:6689":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:40129:218":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"6:5349:7063":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"16:5060:6048":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"6:538:6646":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"6:7548:7595":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:4753:3748":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"17:11706:8593":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"17:16026:5739":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"4:3851:16047":{"crate_id":4,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"4:11261:7783":{"crate_id":4,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:13945:5229":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"16:0:3909":{"crate_id":16,"path":["gimli"],"kind":"module"},"4:4211:16054":{"crate_id":4,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:22983:4586":{"crate_id":1,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"17:11691:8592":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"16:7159:6207":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:23410:7900":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"4:6211:7696":{"crate_id":4,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"17:12082:5026":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"1:43067:98":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"5:1385:8748":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:8118:4854":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:16714:5936":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"17:16132:5782":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:11630:5002":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"11:1920:6512":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"1:45364:8271":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"5:7262:36025":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"17:15121:5461":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:15050:5450":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"6:7986:7623":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"4:6827:4028":{"crate_id":4,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"4:8368:3177":{"crate_id":4,"path":["std","io","error","ErrorKind"],"kind":"enum"},"5:2265:7664":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"6:4881:6884":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:42954:89":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:40909:8128":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"11:1064:22214":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"16:6822:23149":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"4:4414:8823":{"crate_id":4,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:45377:30267":{"crate_id":1,"path":["core","task","wake","ExtData"],"kind":"enum"},"4:2245:132":{"crate_id":4,"path":["std","ffi","os_str","Display"],"kind":"struct"},"17:12135:5031":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"4:881:4080":{"crate_id":4,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"17:15989:5731":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"1:42646:196":{"crate_id":1,"path":["core","result","Result","Ok"],"kind":"variant"},"1:11750:8912":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"17:15973:5728":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:46331:8280":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"4:1635:6509":{"crate_id":4,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:13261:3313":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:14058:208":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"6:7586:7614":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"5:3363:6512":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"6:6623:7363":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"6:6700:7392":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"17:10115:23205":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:14738:5395":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:22904:16010":{"crate_id":1,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"1:22880:15775":{"crate_id":1,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"4:1623:4082":{"crate_id":4,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:5195:10503":{"crate_id":1,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:3185:4573":{"crate_id":1,"path":["core","error","Request"],"kind":"struct"},"17:11958:8602":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"17:14483:5346":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"4:2793:8811":{"crate_id":4,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:5426:8908":{"crate_id":1,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"1:2029:7793":{"crate_id":1,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"5:5301:4016":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"6:5007:6946":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"6:8249:7638":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"6:4805:6830":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"4:7906:8845":{"crate_id":4,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"17:11026:36653":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:10545:209":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"4:8801:8215":{"crate_id":4,"path":["std","path","State"],"kind":"enum"},"6:6411:7247":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:11777:5013":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"0:614:2515":{"crate_id":0,"path":["uuid","Version","Md5"],"kind":"variant"},"16:6084:6066":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"6:5051:6967":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:5388:29922":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"6:5230:7011":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"16:2415:22257":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"6:1711:6810":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"4:2732:10610":{"crate_id":4,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"16:2590:5985":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"5:7531:4732":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"5:1249:35976":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"1:45356:8941":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"13:229:6496":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"16:7807:36646":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"5:3799:36011":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"4:5872:7696":{"crate_id":4,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:497:6617":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"4:8268:8853":{"crate_id":4,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"4:12464:771":{"crate_id":4,"path":["std","f64"],"kind":"primitive"},"4:8489:4854":{"crate_id":4,"path":["std","io","util","Empty"],"kind":"struct"},"1:22045:28218":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:44585:4512":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:44431:4519":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"6:5482:7137":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:8296:7648":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"4:9310:118":{"crate_id":4,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"16:6205:23146":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"4:2083:201":{"crate_id":4,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:11424:16010":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:12108:5029":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:11358:23230":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:14963:5433":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"16:7838:23155":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:42451:7753":{"crate_id":1,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:45149:134":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"1:23260:7877":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"16:5113:6050":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"6:564:6660":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"5:281:36011":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"4:12462:752":{"crate_id":4,"path":["std","f16"],"kind":"primitive"},"1:46853:8323":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"6:5319:7057":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:12044:8612":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"4:11717:8215":{"crate_id":4,"path":["std","sys","thread_local","native","eager","State"],"kind":"enum"},"17:11503:4999":{"crate_id":17,"path":["object","read","archive","ArchiveSymbol"],"kind":"struct"},"4:8077:15946":{"crate_id":4,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"17:12028:8607":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"16:6942:6170":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:11788:8594":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"4:507:33623":{"crate_id":4,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"17:16775:5950":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"17:12826:5094":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"1:42991:96":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:14438:5340":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:13398:5145":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:34729:10455":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"4:5807:16118":{"crate_id":4,"path":["std","process","Termination"],"kind":"trait"},"1:23310:28177":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"6:5381:7075":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"5:1229:36402":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:5641:7202":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"16:8669:6323":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"5:4574:36007":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:3028:16010":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:12260:23324":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCacheSlice"],"kind":"enum"},"1:41172:8933":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"5:7695:3991":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"16:6680:8681":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"16:8066:23156":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"9:328:6561":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"16:8298:6351":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:41724:4023":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:3747:259":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"16:5689:6063":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:2142:1385":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"17:13385:5143":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"4:4018:8822":{"crate_id":4,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:42635:4064":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"6:7448:7534":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:13039:8231":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"4:11029:31269":{"crate_id":4,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"6:6493:7288":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:15475:5614":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"4:8839:16113":{"crate_id":4,"path":["std","path","Component"],"kind":"enum"},"16:7542:6268":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:22018:28222":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"16:6239:6083":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:13078:8233":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:12941:5111":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"4:9344:8876":{"crate_id":4,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:22149:15687":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"4:9377:31276":{"crate_id":4,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"17:11566:8588":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"4:12053:7829":{"crate_id":4,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"6:6758:7413":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"17:15160:5468":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:322:8558":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"6:5107:6980":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"6:7431:7529":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"16:7462:8699":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"11:2420:4082":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"1:41222:137":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"6:5375:7074":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:4832:8905":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"4:973:15961":{"crate_id":4,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"4:11248:7782":{"crate_id":4,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"5:5972:256":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"6:4816:6838":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"0:623:2521":{"crate_id":0,"path":["uuid","Version","SortMac"],"kind":"variant"},"1:41152:7865":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"17:3720:8569":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:12952:5112":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"5:7721:4062":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"17:16632:5916":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"1:7946:10539":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"4:5804:7430":{"crate_id":4,"path":["std","process","exit"],"kind":"function"},"16:5727:4973":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:7085:7853":{"crate_id":1,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"6:1569:6719":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:43536:141":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"0:647:2536":{"crate_id":0,"path":["uuid","Variant","RFC4122"],"kind":"variant"},"16:7016:6179":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:14099:5264":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"18:521:27414":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"6:8284:7646":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:41049:8133":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"6:6691:7386":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"4:6386:7869":{"crate_id":4,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"6:5224:7008":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"16:5742:4974":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:14573:5357":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"11:798:3982":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:4:1280":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"17:14821:5412":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"16:8043:36636":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:13818:5209":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:2282:192":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"16:6502:22256":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:41097:10521":{"crate_id":1,"path":["core","ffi","c_char"],"kind":"type_alias"},"4:380:4071":{"crate_id":4,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:45107:8262":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:14349:3989":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"16:6749:6148":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:15852:5692":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:8199:7637":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:3503:8568":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:11864:8600":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"4:5993:4019":{"crate_id":4,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"0:644:2533":{"crate_id":0,"path":["uuid","Variant","NCS"],"kind":"variant"},"17:11319:36650":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"4:9139:8869":{"crate_id":4,"path":["std","process","CommandArgs"],"kind":"struct"},"6:6437:7262":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:45119:8265":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:40013:10470":{"crate_id":1,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"1:42305:10554":{"crate_id":1,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:42473:8192":{"crate_id":1,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"4:12027:7828":{"crate_id":4,"path":["std","alloc","System"],"kind":"struct"},"18:113:27404":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"5:3084:3978":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:40089:213":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"11:2566:3991":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:41365:8156":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"18:726:4852":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"18:581:4258":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:14312:5317":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV2"],"kind":"struct"},"6:5477:7135":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"17:16613:5209":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"1:42691:4081":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"17:14832:5413":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"9:422:22139":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:583:8560":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"4:6537:223":{"crate_id":4,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"5:3296:4080":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"14:160:8733":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:14933:5427":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"4:8206:7701":{"crate_id":4,"path":["std","fs","OpenOptions"],"kind":"struct"},"4:11147:33635":{"crate_id":4,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"16:3889:4868":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:23499:7908":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"17:12931:5110":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:11124:36651":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"11:708:8738":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:15701:5654":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:10564:4975":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"6:1703:6806":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"5:2147:7663":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"17:13921:5225":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:16008:5736":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:46483:8295":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"4:12452:482":{"crate_id":4,"path":["std","char"],"kind":"primitive"},"17:13209:141":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:45437:8275":{"crate_id":1,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1:44763:10633":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"4:1085:6269":{"crate_id":4,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"4:3539:8167":{"crate_id":4,"path":["std","io","util","Repeat"],"kind":"struct"},"1:23276:7881":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"4:7896:4963":{"crate_id":4,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"4:8223:7703":{"crate_id":4,"path":["std","fs","Permissions"],"kind":"struct"},"4:9452:4031":{"crate_id":4,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"1:41060:10535":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:46898:8340":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"17:11475:23233":{"crate_id":17,"path":["object","read","archive","SymbolIteratorInternal"],"kind":"enum"},"5:6560:16126":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:15714:5660":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:46380:8285":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"4:10280:8188":{"crate_id":4,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"16:6794:6152":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"16:6696:8684":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"16:8151:6023":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"18:659:8552":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"16:4694:6039":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"4:8824:7770":{"crate_id":4,"path":["std","path","PrefixComponent"],"kind":"struct"},"17:12699:8636":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"5:211:8759":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"6:5658:7206":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"17:14140:5275":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:14346:5324":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:12976:5114":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"5:5571:4494":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"17:12673:8631":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:44531:4510":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"4:2326:142":{"crate_id":4,"path":["std","fs","File"],"kind":"struct"},"17:14269:5306":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:7168:6208":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:15106:5457":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"16:2435:22284":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"6:6611:7356":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:5603:7179":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"5:3850:7663":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"4:5736:8833":{"crate_id":4,"path":["std","process","Stdio"],"kind":"struct"},"17:13570:23223":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"11:1023:8747":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"18:0:3911":{"crate_id":18,"path":["memchr"],"kind":"module"},"4:1619:4080":{"crate_id":4,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"16:6713:8686":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:42273:8175":{"crate_id":1,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:38654:10456":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:31503:199":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:22546:16010":{"crate_id":1,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"4:1974:2488":{"crate_id":4,"path":["std","error"],"kind":"module"},"4:8635:8864":{"crate_id":4,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"4:4495:8824":{"crate_id":4,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"0:629:2525":{"crate_id":0,"path":["uuid","Version","Custom"],"kind":"variant"},"6:5241:7018":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:14327:5319":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"5:1400:8747":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"6:4970:6925":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"4:967:8740":{"crate_id":4,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"16:6866:23150":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"6:586:6672":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"4:4341:16075":{"crate_id":4,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:40226:7992":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"17:11515:8585":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"16:8626:6401":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"16:8233:23157":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:14072:5255":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:10796:4373":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"6:7604:7617":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:13451:5148":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:3065:262":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"6:4990:6936":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:30862:10366":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"9:480:22136":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"4:9581:8800":{"crate_id":4,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"1:23521:7910":{"crate_id":1,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"16:6389:8658":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:7895:28272":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:13692:5172":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"16:6608:209":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:23462:16010":{"crate_id":1,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"17:13592:5158":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:41351:4837":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"6:523:6637":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"4:10548:116":{"crate_id":4,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"4:12455:1340":{"crate_id":4,"path":["std","pointer"],"kind":"primitive"},"5:7706:15960":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"6:5088:6979":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:7830:10513":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:43957:8220":{"crate_id":1,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"6:5405:7090":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"11:2121:6269":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"16:3308:5971":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"1:42605:3735":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"4:4939:16064":{"crate_id":4,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:42843:94":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:16297:5829":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:47583:8392":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:11906:8915":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:23054:15770":{"crate_id":1,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"5:6839:4082":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:43970:8221":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"4:3310:33825":{"crate_id":4,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:14672:5370":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:9982:85":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:47702:8401":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"16:546:5961":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"11:2495:22210":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"1:45173:4682":{"crate_id":1,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"17:11448:8584":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:16822:5226":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"6:8343:7659":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"16:8000:6020":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"4:2331:4594":{"crate_id":4,"path":["std","fs","read"],"kind":"function"},"1:8869:4083":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:13966:8147":{"crate_id":1,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"1:45127:8267":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:12409:23325":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:11457:4995":{"crate_id":17,"path":["object","read","archive","ArchiveOffset"],"kind":"struct"},"11:123:6498":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"11:698:4082":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"9:355:22152":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"16:2860:5997":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"5:4909:819":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"5:5526:36011":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"4:8694:7756":{"crate_id":4,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:10097:23204":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"1:12832:8918":{"crate_id":1,"path":["core","slice","GetManyMutError"],"kind":"struct"},"4:12403:8898":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"0:310:2504":{"crate_id":0,"path":["uuid","Bytes"],"kind":"type_alias"},"16:6588:6143":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"5:788:121":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:12249:8617":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"17:16179:5799":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:13781:5196":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:10938:36649":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:10167:23207":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"16:2530:5982":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"4:11315:7810":{"crate_id":4,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"17:16739:5944":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"1:10475:229":{"crate_id":1,"path":["core","fmt","Result"],"kind":"type_alias"},"17:10630:4977":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"16:7883:6113":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"4:8629:16078":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:41739:8167":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"4:5128:16100":{"crate_id":4,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"18:623:36657":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:15981:5729":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:42511:197":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"4:4569:8825":{"crate_id":4,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:10031:23203":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"5:7737:7689":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:14152:5278":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:41250:8144":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:11291:36652":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:12886:5105":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"17:14640:5366":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:33486:6279":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"4:12070:33625":{"crate_id":4,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"6:4914:6903":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:10274:23210":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:12462:4500":{"crate_id":1,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"16:8267:6347":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:2227:8563":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"18:531:4821":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"6:6638:7365":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"4:4680:16079":{"crate_id":4,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:12711:8637":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:16832:5231":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"4:11910:8820":{"crate_id":4,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:472:8559":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:47592:8393":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"4:5879:7697":{"crate_id":4,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"6:1514:6686":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"6:5420:7096":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"1:46433:8292":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"6:5179:6986":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:44784:8236":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"16:3048:22286":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"16:6440:23147":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"5:928:15962":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"17:13181:8651":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"1:3346:4266":{"crate_id":1,"path":["core","marker","FnPtr"],"kind":"trait"},"4:4702:16080":{"crate_id":4,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:39398:10460":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"5:1585:6508":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:10597:4976":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"6:4964:6923":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"6:5036:6960":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:43511:74":{"crate_id":1,"path":["core","fmt","rt","Argument"],"kind":"struct"},"6:8330:7655":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"4:4815:16053":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"16:6337:6099":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"4:8363:2525":{"crate_id":4,"path":["std","io","error","Custom"],"kind":"struct"},"1:4674:8903":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"5:1523:4080":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:44813:8244":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:22147:16010":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"4:9739:142":{"crate_id":4,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"16:8137:6022":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"17:12537:8628":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"4:8546:8160":{"crate_id":4,"path":["std","io","Take"],"kind":"struct"},"4:10474:9535":{"crate_id":4,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"4:9442:238":{"crate_id":4,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"4:7839:9859":{"crate_id":4,"path":["std","panicking","rust_panic_without_hook","RewrapBox"],"kind":"struct"},"17:11902:5021":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"4:11808:7822":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"4:2648:8806":{"crate_id":4,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"6:517:6634":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:15939:5720":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"17:11527:8586":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:16786:5952":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"1:23012:16010":{"crate_id":1,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"11:1580:8754":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"4:2496:15999":{"crate_id":4,"path":["std","fs","read_link"],"kind":"function"},"6:6790:7423":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:13635:5162":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:23383:27604":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"4:4233:16058":{"crate_id":4,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"5:3719:4081":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:44549:4511":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"9:445:22137":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:12906:5107":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:44253:7865":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"4:439:188":{"crate_id":4,"path":["std","thread","local","LocalKey"],"kind":"struct"},"6:8308:7650":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"18:96:27403":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:4962:4292":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"4:3677:16008":{"crate_id":4,"path":["std","io","Seek"],"kind":"trait"},"1:44830:8245":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"18:573:4816":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:15953:5722":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"16:5449:6061":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:10313:4300":{"crate_id":1,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"5:6284:7793":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"17:11818:8598":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"6:5117:6981":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:6652:7376":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:42539:4080":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"5:5142:7793":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:16311:5836":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:5015:4293":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"4:10934:8889":{"crate_id":4,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"4:9145:202":{"crate_id":4,"path":["std","process","Output"],"kind":"struct"},"1:8413:168":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:47143:8349":{"crate_id":1,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"4:894:4081":{"crate_id":4,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:14358:5326":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"6:8014:7626":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"6:5412:1267":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"17:15919:5714":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":30}