{"root":"0:0:1401","crate_version":"1.1.4","includes_private":false,"index":{"2:11439:3795":{"id":"2:11439:3795","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:50080:3758","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11450:56403":{"id":"2:11450:56403","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:11116:3535","prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[469,0],"end":[479,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_sorted_by","sum","rev","any","reduce","min_by","partition","flatten","all","peekable","chain","take","is_sorted_by_key","product","unzip","try_reduce","min_by_key","partition_in_place","fuse","skip_while","le","intersperse","next_chunk","map","position","__iterator_get_unchecked","cmp_by","copied","find","max","is_partitioned","inspect","take_while","eq","intersperse_with","last","gt","partial_cmp_by","cloned","find_map","max_by","try_fold","partial_cmp","by_ref","map_while","for_each","advance_by","enumerate","eq_by","cycle","ge","count","skip","try_for_each","try_find","try_collect","max_by_key","scan","cmp","filter","zip","nth","collect","size_hint","is_sorted","lt","array_chunks","rposition","fold","min","collect_into","flat_map","filter_map","step_by","ne"],"trait":{"name":"Iterator","id":"2:7156:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1709","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:231:1713","0:232:928","0:234:1724"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:179:1713":{"id":"0:179:1713","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[315,4],"end":[315,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"b:2:7046-0:60:1620":{"id":"b:2:7046-0:60:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7156:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7042:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1620","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:7048:1713","2:7049:1714","2:7050:762"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:221":{"id":"0:221","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[461,0],"end":[461,53]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7426:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1702","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2676:225-0:60:1620":{"id":"a:2:2676:225-0:60:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1620","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11526:60592":{"id":"2:11526:60592","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11116:3535"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11435:60574":{"id":"2:11435:60574","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"str::slice_mut_unchecked":"2:11436:60575","`str`":"1:12306:1352","crate::ops::Index":"2:2987:3204"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:217-0:47:1621":{"id":"a:2:2662:217-0:47:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:56:1724":{"id":"0:56:1724","crate_id":0,"name":"size_hint","span":{"filename":"src/cached.rs","begin":[134,4],"end":[136,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:289":{"id":"0:289","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[493,9],"end":[493,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:291:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:234:1724":{"id":"0:234:1724","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[476,4],"end":[478,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:217-0:223:1709":{"id":"a:2:2662:217-0:223:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1709","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2519:673":{"id":"2:2519:673","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[358,0],"end":[358,59]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7735:1628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:1628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11418:60571":{"id":"2:11418:60571","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11447:56402":{"id":"2:11447:56402","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11116:3535"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2241-0:47:1621":{"id":"b:2:2241-0:47:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:53651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7736:2063-0:60:1620":{"id":"a:2:7736:2063-0:60:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2063","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1620","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2523-0:285:1714":{"id":"b:2:2523-0:285:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2241-0:276:1702":{"id":"b:2:2241-0:276:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:53651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:193:762":{"id":"0:193:762","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[339,4],"end":[341,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1709","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:156":{"id":"0:156","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[141,0],"end":[161,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2928:1649","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:158:576"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:60:1620":{"id":"0:60:1620","crate_id":0,"name":"CachedIntoIter","span":{"filename":"src/cached.rs","begin":[143,0],"end":[145,1]},"visibility":"public","docs":"An iterator that moves out of a `CachedThreadLocal`.","links":{},"attrs":["#[deprecated(since = \"1.1.0\", note = \"Use `IntoIter` instead\")]"],"deprecation":{"since":"1.1.0","note":"Use `IntoIter` instead"},"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:7735:1628-0:60:1620","a:2:2676:225-0:60:1620","a:2:2662:217-0:60:1620","a:2:2726:2388-0:60:1620","a:2:7736:2063-0:60:1620","b:2:2523-0:60:1620","b:2:2238-0:60:1620","b:2:2517-0:60:1620","b:2:2513-0:60:1620","b:2:2241-0:60:1620","b:2:2528-0:60:1620","b:2:7046-0:60:1620","b:2:3321-0:60:1620","0:63","0:68"]}},"5:5102:53680":{"id":"5:5102:53680","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:11536:53683"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:1628-0:276:1702":{"id":"a:2:7735:1628-0:276:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:1628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5091:61229":{"id":"5:5091:61229","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:6967:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:1628-0:47:1621":{"id":"a:2:7735:1628-0:47:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:1628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:187:762":{"id":"0:187:762","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[330,4],"end":[332,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:7042:149","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11473:60577":{"id":"2:11473:60577","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"`DoubleEndedIterator`":"2:7079:120","prim@char":"1:12300:408","str::split":"2:11464:56392","self::pattern":"2:11116:3535","str::rsplit_terminator":"2:11476:60578"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:50160:3763","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11456:2538":{"id":"2:11456:2538","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"2:11116:3535","`None`":"2:48136:176","prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:19:915":{"id":"0:19:915","crate_id":0,"name":"new","span":{"filename":"src/cached.rs","begin":[26,4],"end":[30,5]},"visibility":"public","docs":"Creates a new empty `CachedThreadLocal`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1622","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:248:1724":{"id":"0:248:1724","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[509,4],"end":[511,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11538:60594":{"id":"2:11538:60594","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4467:60594"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50409:3776","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:191:1713":{"id":"0:191:1713","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[336,4],"end":[336,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}},"0:44:655":{"id":"0:44:655","crate_id":0,"name":"fmt","span":{"filename":"src/cached.rs","begin":[112,4],"end":[114,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:155:59":{"id":"0:155:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[136,4],"end":[138,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11436:60575":{"id":"2:11436:60575","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"str::slice_unchecked":"2:11435:60574","`str`":"1:12306:1352","crate::ops::IndexMut":"2:2991:3205"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:11517:54061":{"id":"2:11517:54061","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11116:3535"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:235":{"id":"0:235","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[481,0],"end":[481,53]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7102:1730","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1709","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2726:2388-0:11:1622":{"id":"a:2:2726:2388-0:11:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2388","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1622","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11503:60584":{"id":"2:11503:60584","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:11:1622":{"id":"b:2:2528-0:11:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1622","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:231:1713":{"id":"0:231:1713","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[470,4],"end":[470,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}},"0:251":{"id":"0:251","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[515,0],"end":[515,46]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7426:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11429:1650":{"id":"2:11429:1650","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:48136:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9298:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9298:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:225-0:285:1714":{"id":"a:2:2676:225-0:285:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2238-0:60:1620":{"id":"b:2:2238-0:60:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1620","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2017"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:47:1621":{"id":"b:2:2238-0:47:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2017"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2662:217-0:285:1714":{"id":"a:2:2662:217-0:285:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7735:1628-0:60:1620":{"id":"a:2:7735:1628-0:60:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7735:1628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:1628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1620","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11511:60589":{"id":"2:11511:60589","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:11116:3535","prim@char":"1:12300:408"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11141:3539","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5084:61227":{"id":"5:5084:61227","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:1660","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6718:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:1660","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6718:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2527:1427":{"id":"2:2527:1427","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:217-0:276:1702":{"id":"a:2:2662:217-0:276:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11415:789":{"id":"2:11415:789","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12300:408"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:2063-0:11:1622":{"id":"a:2:7736:2063-0:11:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2063","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1622","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3321-0:276:1702":{"id":"b:2:3321-0:276:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2662:217-0:138:1636":{"id":"a:2:2662:217-0:138:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:55:928":{"id":"0:55:928","crate_id":0,"name":"next","span":{"filename":"src/cached.rs","begin":[129,4],"end":[131,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:284:655":{"id":"0:284:655","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[446,9],"end":[446,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[344,0],"end":[350,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"2:2564:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:196:1718"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:7046-0:276:1702":{"id":"b:2:7046-0:276:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7156:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7042:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:7048:1713","2:7049:1714","2:7050:762"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:36:1713":{"id":"0:36:1713","crate_id":0,"name":"Item","span":{"filename":"src/cached.rs","begin":[95,4],"end":[95,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}},"0:175:1655":{"id":"0:175:1655","crate_id":0,"name":"iter_mut","span":{"filename":"src/lib.rs","begin":[296,4],"end":[301,5]},"visibility":"public","docs":"Returns a mutable iterator over the local values of all threads in\nunspecified order.\n\nSince this call borrows the `ThreadLocal` mutably, this operation can\nbe done safely---the mutable borrow statically guarantees no other\nthreads are currently accessing their associated values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1709","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:165:1651":{"id":"0:165:1651","crate_id":0,"name":"get","span":{"filename":"src/lib.rs","begin":[198,4],"end":[201,5]},"visibility":"public","docs":"Returns the element for the current thread, if it exists.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:218:1713":{"id":"0:218:1713","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[453,4],"end":[453,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}},"0:181:762":{"id":"0:181:762","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[318,4],"end":[323,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:225-0:276:1702":{"id":"a:2:2676:225-0:276:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11541:60595":{"id":"2:11541:60595","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4465:60595"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50427:3777","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:199:655":{"id":"0:199:655","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[353,4],"end":[355,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:54:1713":{"id":"0:54:1713","crate_id":0,"name":"Item","span":{"filename":"src/cached.rs","begin":[126,4],"end":[126,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[83,0],"end":[92,1]},"visibility":{"restricted":{"parent":"0:3:1618","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7042:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1622","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:30:1713","0:31:1714","0:32:762"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2517-0:47:1621":{"id":"b:2:2517-0:47:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:47:1621":{"id":"0:47:1621","crate_id":0,"name":"CachedIterMut","span":{"filename":"src/cached.rs","begin":[121,0],"end":[123,1]},"visibility":"public","docs":"Mutable iterator over the contents of a `CachedThreadLocal`.","links":{},"attrs":["#[deprecated(since = \"1.1.0\", note = \"Use `IterMut` instead\")]"],"deprecation":{"since":"1.1.0","note":"Use `IterMut` instead"},"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:7735:1628-0:47:1621","a:2:2676:225-0:47:1621","a:2:2662:217-0:47:1621","a:2:2726:2388-0:47:1621","a:2:7736:2063-0:47:1621","b:2:2523-0:47:1621","b:2:2238-0:47:1621","b:2:2517-0:47:1621","b:2:2513-0:47:1621","b:2:2241-0:47:1621","b:2:2528-0:47:1621","b:2:7046-0:47:1621","b:2:3321-0:47:1621","0:51","0:57"]}},"0:220:1724":{"id":"0:220:1724","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[457,4],"end":[459,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:47:1621":{"id":"b:2:2528-0:47:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2513-0:285:1714":{"id":"b:2:2513-0:285:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2516:2496"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2531:127":{"id":"2:2531:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39378:3218","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:67:1724":{"id":"0:67:1724","crate_id":0,"name":"size_hint","span":{"filename":"src/cached.rs","begin":[156,4],"end":[158,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:27:1712":{"id":"0:27:1712","crate_id":0,"name":"clear","span":{"filename":"src/cached.rs","begin":[78,4],"end":[80,5]},"visibility":"public","docs":"Removes all thread-specific values from the `ThreadLocal`, effectively\nreseting it to its original state.\n\nSince this call borrows the `ThreadLocal` mutably, this operation can\nbe done safely---the mutable borrow statically guarantees no other\nthreads are currently accessing their associated values.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11514:60590":{"id":"2:11514:60590","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11116:3535"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11523:60591":{"id":"2:11523:60591","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11116:3535"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:41:1718":{"id":"0:41:1718","crate_id":0,"name":"get_or_default","span":{"filename":"src/cached.rs","begin":[106,4],"end":[108,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates a default one if\nit doesn't exist.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11467:56394":{"id":"2:11467:56394","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11116:3535"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:10940:2832","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:2063-0:138:1636":{"id":"a:2:7736:2063-0:138:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2063","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:276:1702":{"id":"0:276:1702","crate_id":0,"name":"Iter","span":{"filename":"src/lib.rs","begin":[447,0],"end":[450,1]},"visibility":"public","docs":"Iterator over the contents of a `ThreadLocal`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:7735:1628-0:276:1702","a:2:2676:225-0:276:1702","a:2:2662:217-0:276:1702","a:2:2726:2388-0:276:1702","a:2:7736:2063-0:276:1702","b:2:2523-0:276:1702","b:2:2238-0:276:1702","b:2:2517-0:276:1702","b:2:2513-0:276:1702","b:2:2241-0:276:1702","b:2:2528-0:276:1702","b:2:7046-0:276:1702","b:2:3321-0:276:1702","0:281","0:215","0:221"]}},"0:237":{"id":"0:237","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[482,0],"end":[482,49]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7426:1625","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1709","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:138:1636":{"id":"b:2:2238-0:138:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2017"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11494:60581":{"id":"2:11494:60581","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"`DoubleEndedIterator`":"2:7079:120","self::pattern":"2:11116:3535","prim@char":"1:12300:408","str::matches":"2:11491:2029"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50332:3771","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11535:53682":{"id":"2:11535:53682","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:31:1714":{"id":"0:31:1714","crate_id":0,"name":"IntoIter","span":{"filename":"src/cached.rs","begin":[85,4],"end":[85,38]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1620","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"b:2:2517-0:138:1636":{"id":"b:2:2517-0:138:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:223:1709":{"id":"b:2:2238-0:223:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1709","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2017"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11444:4290":{"id":"2:11444:4290","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50364:3282","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[147,0],"end":[159,1]},"visibility":{"restricted":{"parent":"0:3:1618","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_sorted_by","sum","rev","any","reduce","min_by","partition","flatten","all","peekable","chain","take","is_sorted_by_key","product","unzip","try_reduce","min_by_key","partition_in_place","fuse","skip_while","le","intersperse","next_chunk","map","position","__iterator_get_unchecked","cmp_by","copied","find","max","is_partitioned","inspect","take_while","eq","intersperse_with","last","gt","partial_cmp_by","cloned","find_map","max_by","try_fold","partial_cmp","by_ref","map_while","for_each","advance_by","enumerate","eq_by","cycle","ge","count","skip","try_for_each","try_find","try_collect","max_by_key","scan","cmp","filter","zip","nth","collect","size_hint","is_sorted","lt","array_chunks","rposition","fold","min","collect_into","flat_map","filter_map","step_by","ne"],"trait":{"name":"Iterator","id":"2:7156:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1620","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:65:1713","0:66:928","0:67:1724"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:159":{"id":"0:159","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[163,0],"end":[312,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:161:915","0:162:1664","0:165:1651","0:166:1679","0:169:1683","0:174:773","0:175:1655","0:176:1712"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2513-0:223:1709":{"id":"b:2:2513-0:223:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1709","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2516:2496"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:7049:1714":{"id":"2:7049:1714","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"I"}}},"0:20:1651":{"id":"0:20:1651","crate_id":0,"name":"get","span":{"filename":"src/cached.rs","begin":[34,4],"end":[36,5]},"visibility":"public","docs":"Returns the element for the current thread, if it exists.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:285:1714":{"id":"b:2:2528-0:285:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:158:576":{"id":"0:158:576","crate_id":0,"name":"drop","span":{"filename":"src/lib.rs","begin":[142,4],"end":[160,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:60:1620":{"id":"b:2:2523-0:60:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1620","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2517-0:11:1622":{"id":"b:2:2517-0:11:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1622","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:33":{"id":"0:33","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[94,0],"end":[101,1]},"visibility":{"restricted":{"parent":"0:3:1618","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7042:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1622","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"items":["0:36:1713","0:37:1714","0:38:762"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:242:655":{"id":"0:242:655","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[487,4],"end":[489,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:138:1636":{"id":"b:2:2523-0:138:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7736:2063-0:285:1714":{"id":"a:2:7736:2063-0:285:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2063","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5088:61228":{"id":"5:5088:61228","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:6967:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5083":{"id":"5:5083","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:4994:1352","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5084:61227","5:5085:1733","5:5088:61228","5:5091:61229","5:5099:61230","5:5100:61231","5:5101:2179","5:5102:53680","5:5103:53681"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2517-0:285:1714":{"id":"b:2:2517-0:285:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11485:60579":{"id":"2:11485:60579","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11488:60580":{"id":"2:11488:60580","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11433:1723":{"id":"2:11433:1723","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9298:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9298:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:7046-0:47:1621":{"id":"b:2:7046-0:47:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7156:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7042:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:7048:1713","2:7049:1714","2:7050:762"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:11427:1651":{"id":"2:11427:1651","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:48136:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9298:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9298:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:60:1620":{"id":"b:2:2528-0:60:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1620","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:119":{"id":"0:119","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[74,33],"end":[74,46]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"cached::CachedIterMut","name":"CachedIterMut","id":"0:47:1621","glob":false}},"0:162:1664":{"id":"0:162:1664","crate_id":0,"name":"with_capacity","span":{"filename":"src/lib.rs","begin":[172,4],"end":[195,5]},"visibility":"public","docs":"Creates a new `ThreadLocal` with an initial capacity. If less than the capacity threads\naccess the thread local it will never reallocate. The capacity may be rounded up to the\nnearest power of two.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["capacity",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:219:928":{"id":"0:219:928","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[454,4],"end":[456,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:7156:156","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:196:1718":{"id":"0:196:1718","crate_id":0,"name":"get_or_default","span":{"filename":"src/lib.rs","begin":[347,4],"end":[349,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates a default one if\nit doesn't exist.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:243":{"id":"0:243","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[499,0],"end":[512,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_sorted_by","sum","rev","any","reduce","min_by","partition","flatten","all","peekable","chain","take","is_sorted_by_key","product","unzip","try_reduce","min_by_key","partition_in_place","fuse","skip_while","le","intersperse","next_chunk","map","position","__iterator_get_unchecked","cmp_by","copied","find","max","is_partitioned","inspect","take_while","eq","intersperse_with","last","gt","partial_cmp_by","cloned","find_map","max_by","try_fold","partial_cmp","by_ref","map_while","for_each","advance_by","enumerate","eq_by","cycle","ge","count","skip","try_for_each","try_find","try_collect","max_by_key","scan","cmp","filter","zip","nth","collect","size_hint","is_sorted","lt","array_chunks","rposition","fold","min","collect_into","flat_map","filter_map","step_by","ne"],"trait":{"name":"Iterator","id":"2:7156:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:245:1713","0:246:928","0:248:1724"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2243:53651":{"id":"2:2243:53651","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3323:1440":{"id":"2:3323:1440","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46617:3240","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5099:61230":{"id":"5:5099:61230","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:6967:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:276:1702":{"id":"b:2:2528-0:276:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7735:1628-0:285:1714":{"id":"a:2:7735:1628-0:285:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7735:1628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:1628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2516:2496":{"id":"2:2516:2496","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2490:132"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5100:61231":{"id":"5:5100:61231","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:286:1660","`String`":"5:6967:221"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:1660","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6718:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11537:53684":{"id":"2:11537:53684","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:239":{"id":"0:239","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[486,0],"end":[490,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1709","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:242:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2513-0:60:1620":{"id":"b:2:2513-0:60:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1620","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2516:2496"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:176:1712":{"id":"0:176:1712","crate_id":0,"name":"clear","span":{"filename":"src/lib.rs","begin":[309,4],"end":[311,5]},"visibility":"public","docs":"Removes all thread-specific values from the `ThreadLocal`, effectively\nreseting it to its original state.\n\nSince this call borrows the `ThreadLocal` mutably, this operation can\nbe done safely---the mutable borrow statically guarantees no other\nthreads are currently accessing their associated values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:60:1620":{"id":"b:2:2517-0:60:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1620","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11540:3101":{"id":"2:11540:3101","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4468:3101"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50418:3102","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11510:60588":{"id":"2:11510:60588","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2241-0:223:1709":{"id":"b:2:2241-0:223:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1709","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:53651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2513-0:47:1621":{"id":"b:2:2513-0:47:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2516:2496"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:180:1714":{"id":"0:180:1714","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[316,4],"end":[316,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"2:2532:1426":{"id":"2:2532:1426","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:161:915":{"id":"0:161:915","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[165,4],"end":[167,5]},"visibility":"public","docs":"Creates a new empty `ThreadLocal`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:223:1709":{"id":"0:223:1709","crate_id":0,"name":"IterMut","span":{"filename":"src/lib.rs","begin":[464,0],"end":[467,1]},"visibility":"public","docs":"Mutable iterator over the contents of a `ThreadLocal`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:7735:1628-0:223:1709","a:2:2676:225-0:223:1709","a:2:2662:217-0:223:1709","a:2:2726:2388-0:223:1709","a:2:7736:2063-0:223:1709","b:2:2523-0:223:1709","b:2:2238-0:223:1709","b:2:2517-0:223:1709","b:2:2513-0:223:1709","b:2:2241-0:223:1709","b:2:2528-0:223:1709","b:2:7046-0:223:1709","b:2:3321-0:223:1709","0:228","0:235","0:237","0:239"]}},"b:2:2523-0:223:1709":{"id":"b:2:2523-0:223:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1709","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2528-0:138:1636":{"id":"b:2:2528-0:138:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2676:225-0:47:1621":{"id":"a:2:2676:225-0:47:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2241-0:285:1714":{"id":"b:2:2241-0:285:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:53651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:285:1714":{"id":"b:2:2238-0:285:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2017"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:11:1622":{"id":"0:11:1622","crate_id":0,"name":"CachedThreadLocal","span":{"filename":"src/cached.rs","begin":[13,0],"end":[15,1]},"visibility":"public","docs":"Wrapper around [`ThreadLocal`].\n\nThis used to add a fast path for a single thread, however that has been\nobsoleted by performance improvements to [`ThreadLocal`] itself.","links":{"`ThreadLocal`":"0:138:1636"},"attrs":["#[deprecated(since = \"1.1.0\", note = \"Use `ThreadLocal` instead\")]"],"deprecation":{"since":"1.1.0","note":"Use `ThreadLocal` instead"},"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:17","0:39","a:2:2676:225-0:11:1622","a:2:2662:217-0:11:1622","a:2:2726:2388-0:11:1622","a:2:7736:2063-0:11:1622","b:2:2523-0:11:1622","b:2:2238-0:11:1622","b:2:2517-0:11:1622","b:2:2513-0:11:1622","b:2:2241-0:11:1622","b:2:2528-0:11:1622","b:2:3321-0:11:1622","0:14","0:28","0:33","0:42","0:45"]}},"b:2:3321-0:47:1621":{"id":"b:2:3321-0:47:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[352,0],"end":[356,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:199:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11446:58555":{"id":"2:11446:58555","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50402:3775","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:192:1714":{"id":"0:192:1714","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[337,4],"end":[337,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1709","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"0:185:1713":{"id":"0:185:1713","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[327,4],"end":[327,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}},"0:169:1683":{"id":"0:169:1683","crate_id":0,"name":"get_or_try","span":{"filename":"src/lib.rs","begin":[218,4],"end":[227,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates it if it doesn't\nexist. If `create` fails, that error is returned and no element is\nadded.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["create",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2938:1682","args":{"parenthesized":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11442:58562":{"id":"2:11442:58562","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11443:58543"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:50384:3773","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11476:60578":{"id":"2:11476:60578","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11116:3535","str::split_terminator":"2:11473:60577","str::split":"2:11464:56392"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:50178:3764","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:246:928":{"id":"0:246:928","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[501,4],"end":[508,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2726:2388-0:285:1714":{"id":"a:2:2726:2388-0:285:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2388","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:120":{"id":"0:120","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[74,48],"end":[74,65]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"cached::CachedThreadLocal","name":"CachedThreadLocal","id":"0:11:1622","glob":false}},"2:7048:1713":{"id":"2:7048:1713","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:7156:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:11464:56392":{"id":"2:11464:56392","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"prim@char":"1:12300:408","`DoubleEndedIterator`":"2:7079:120","str::split_whitespace":"2:11442:58562","self::pattern":"2:11116:3535","str::rsplit":"2:11470:56396"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:50110:2818","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:68":{"id":"0:68","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[161,0],"end":[161,56]},"visibility":{"restricted":{"parent":"0:3:1618","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7102:1730","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1620","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11443:58543":{"id":"2:11443:58543","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11442:58562"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:50393:3774","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11509:60587":{"id":"2:11509:60587","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:11:1622":{"id":"b:2:3321-0:11:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1622","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:285:1714":{"id":"0:285:1714","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[494,0],"end":[497,1]},"visibility":"public","docs":"An iterator that moves out of a `ThreadLocal`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:7735:1628-0:285:1714","a:2:2676:225-0:285:1714","a:2:2662:217-0:285:1714","a:2:2726:2388-0:285:1714","a:2:7736:2063-0:285:1714","b:2:2523-0:285:1714","b:2:2238-0:285:1714","b:2:2517-0:285:1714","b:2:2513-0:285:1714","b:2:2241-0:285:1714","b:2:2528-0:285:1714","b:2:7046-0:285:1714","b:2:3321-0:285:1714","0:289","0:243","0:249","0:251"]}},"2:11534:3938":{"id":"2:11534:3938","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:66:928":{"id":"0:66:928","crate_id":0,"name":"next","span":{"filename":"src/cached.rs","begin":[151,4],"end":[153,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:174:773":{"id":"0:174:773","crate_id":0,"name":"iter","span":{"filename":"src/lib.rs","begin":[280,4],"end":[288,5]},"visibility":"public","docs":"Returns an iterator over the local values of all threads in unspecified\norder.\n\nThis call can be done safely, as `T` is required to implement [`Sync`].","links":{"`Sync`":"2:2676:225"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1702","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11438:56385":{"id":"2:11438:56385","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:11437:56384"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11426:1652":{"id":"2:11426:1652","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12317:1448"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2241-0:138:1636":{"id":"b:2:2241-0:138:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:53651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2240:2017":{"id":"2:2240:2017","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:1628-0:223:1709":{"id":"a:2:7735:1628-0:223:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:1628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1709","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:186:1714":{"id":"0:186:1714","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[328,4],"end":[328,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"2:11417:60570":{"id":"2:11417:60570","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:11:1622":{"id":"b:2:2523-0:11:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1622","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3321-0:60:1620":{"id":"b:2:3321-0:60:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1620","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:153":{"id":"0:153","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[135,0],"end":[139,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2564:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:155:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2676:225-0:11:1622":{"id":"a:2:2676:225-0:11:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1622","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2241-0:11:1622":{"id":"b:2:2241-0:11:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1622","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:53651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:249":{"id":"0:249","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[514,0],"end":[514,50]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7102:1730","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2726:2388-0:47:1621":{"id":"a:2:2726:2388-0:47:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2388","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11482:56400":{"id":"2:11482:56400","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"2:11116:3535","str::splitn":"2:11479:56398","prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:50232:2828","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:7046-0:223:1709":{"id":"b:2:7046-0:223:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7156:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7042:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1709","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:7048:1713","2:7049:1714","2:7050:762"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:2241-0:60:1620":{"id":"b:2:2241-0:60:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1620","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:53651"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2662:217-0:60:1620":{"id":"a:2:2662:217-0:60:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1620","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:138:1636":{"id":"0:138:1636","crate_id":0,"name":"ThreadLocal","span":{"filename":"src/lib.rs","begin":[102,0],"end":[115,1]},"visibility":"public","docs":"Thread-local variable wrapper\n\nSee the [module-level documentation](index.html) for more.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:159","0:194","a:2:2662:217-0:138:1636","a:2:2726:2388-0:138:1636","a:2:7736:2063-0:138:1636","b:2:2523-0:138:1636","b:2:2238-0:138:1636","b:2:2517-0:138:1636","b:2:2513-0:138:1636","b:2:2241-0:138:1636","b:2:2528-0:138:1636","b:2:3321-0:138:1636","0:151","0:153","0:156","0:177","0:182","0:188","0:197","0:200"]}},"2:11431:1690":{"id":"2:11431:1690","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9298:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9298:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"5:5101:2179":{"id":"5:5101:2179","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:6967:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:223:1709":{"id":"b:2:2528-0:223:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1709","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:30:1713":{"id":"0:30:1713","crate_id":0,"name":"Item","span":{"filename":"src/cached.rs","begin":[84,4],"end":[84,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"2:11507:60586":{"id":"2:11507:60586","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2526:127":{"id":"2:2526:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:166:1679":{"id":"0:166:1679","crate_id":0,"name":"get_or","span":{"filename":"src/lib.rs","begin":[205,4],"end":[213,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates it if it doesn't\nexist.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["create",{"kind":"generic","inner":"F"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2938:1682","args":{"parenthesized":{"inputs":[],"output":{"kind":"generic","inner":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:23:1683":{"id":"0:23:1683","crate_id":0,"name":"get_or_try","span":{"filename":"src/cached.rs","begin":[52,4],"end":[57,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates it if it doesn't\nexist. If `create` fails, that error is returned and no element is\nadded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["create",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2938:1682","args":{"parenthesized":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5103:53681":{"id":"5:5103:53681","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:11537:53684"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11423:56316":{"id":"2:11423:56316","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:10684:3897"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11437:56384":{"id":"2:11437:56384","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:11438:56385"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11532:3600":{"id":"2:11532:3600","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:11077:3241","FromStr::Err":"2:11078:126"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48278:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:11077:3241","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11077:3241","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:281":{"id":"0:281","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,9],"end":[446,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:284:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2523-0:47:1621":{"id":"b:2:2523-0:47:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11420:60572":{"id":"2:11420:60572","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:11418:60571"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:32:762":{"id":"0:32:762","crate_id":0,"name":"into_iter","span":{"filename":"src/cached.rs","begin":[87,4],"end":[91,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1620","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5085:1733":{"id":"5:5085:1733","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:6967:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6967:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11460:2502":{"id":"2:11460:2502","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"self::pattern":"2:11116:3535","`None`":"2:48136:176","prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2513-0:11:1622":{"id":"b:2:2513-0:11:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1622","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2516:2496"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[74,17],"end":[74,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"cached::CachedIntoIter","name":"CachedIntoIter","id":"0:60:1620","glob":false}},"0:14":{"id":"0:14","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[17,0],"end":[21,1]},"visibility":{"restricted":{"parent":"0:3:1618","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2564:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1622","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:16:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3321-0:138:1636":{"id":"b:2:3321-0:138:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11424:60573":{"id":"2:11424:60573","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:223:1709":{"id":"b:2:2517-0:223:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1709","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11536:53683":{"id":"2:11536:53683","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:1401":{"id":"0:0:1401","crate_id":0,"name":"thread_local","span":{"filename":"src/lib.rs","begin":[8,0],"end":[638,1]},"visibility":"public","docs":"Per-object thread-local storage\n\nThis library provides the `ThreadLocal` type which allows a separate copy of\nan object to be used for each thread. This allows for per-object\nthread-local storage, unlike the standard library's `thread_local!` macro\nwhich only allows static thread-local storage.\n\nPer-thread objects are not destroyed when a thread exits. Instead, objects\nare only destroyed when the `ThreadLocal` containing them is destroyed.\n\nYou can also iterate over the thread-local values of all thread in a\n`ThreadLocal` object using the `iter_mut` and `into_iter` methods. This can\nonly be done if you have mutable access to the `ThreadLocal` object, which\nguarantees that you are the only thread currently accessing it.\n\nNote that since thread IDs are recycled when a thread exits, it is possible\nfor one thread to retrieve the object of another thread. Since this can only\noccur after a thread has exited this does not lead to any race conditions.\n\n# Examples\n\nBasic usage of `ThreadLocal`:\n\n```rust\nuse thread_local::ThreadLocal;\nlet tls: ThreadLocal<u32> = ThreadLocal::new();\nassert_eq!(tls.get(), None);\nassert_eq!(tls.get_or(|| 5), &5);\nassert_eq!(tls.get(), Some(&5));\n```\n\nCombining thread-local values into a single result:\n\n```rust\nuse thread_local::ThreadLocal;\nuse std::sync::Arc;\nuse std::cell::Cell;\nuse std::thread;\n\nlet tls = Arc::new(ThreadLocal::new());\n\n// Create a bunch of threads to do stuff\nfor _ in 0..5 {\n    let tls2 = tls.clone();\n    thread::spawn(move || {\n        // Increment a counter to count some event...\n        let cell = tls2.get_or(|| Cell::new(0));\n        cell.set(cell.get() + 1);\n    }).join().unwrap();\n}\n\n// Once all threads are done, collect the counter values and return the\n// sum of all thread-local counter values.\nlet tls = Arc::try_unwrap(tls).unwrap();\nlet total = tls.into_iter().fold(0, |x, y| x + y.get());\nassert_eq!(total, 5);\n```","links":{},"attrs":["#![warn(missing_docs)]","#![allow(clippy :: mutex_atomic)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:118","0:119","0:120","0:138:1636","0:276:1702","0:223:1709","0:285:1714"],"is_stripped":false}},"b:2:3321-0:223:1709":{"id":"b:2:3321-0:223:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1709","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7736:2063-0:47:1621":{"id":"a:2:7736:2063-0:47:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2063","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:39":{"id":"0:39","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[103,0],"end":[109,1]},"visibility":{"restricted":{"parent":"0:3:1618","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"2:2564:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1622","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:41:1718"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2726:2388-0:60:1620":{"id":"a:2:2726:2388-0:60:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2388","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1620","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:7050:762":{"id":"2:7050:762","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2726:2388-0:138:1636":{"id":"a:2:2726:2388-0:138:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2388","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7736:2063-0:223:1709":{"id":"a:2:7736:2063-0:223:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2063","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1709","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:291:655":{"id":"0:291:655","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[493,9],"end":[493,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[23,0],"end":[81,1]},"visibility":{"restricted":{"parent":"0:3:1618","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1622","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:19:915","0:20:1651","0:21:1679","0:23:1683","0:26:1655","0:27:1712"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2726:2388-0:276:1702":{"id":"a:2:2726:2388-0:276:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2388","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[139,0],"end":[139,68]},"visibility":{"restricted":{"parent":"0:3:1618","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7102:1730","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:37:1714":{"id":"0:37:1714","crate_id":0,"name":"IntoIter","span":{"filename":"src/cached.rs","begin":[96,4],"end":[96,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"2:11425:309":{"id":"2:11425:309","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:12317:1448","str::as_mut_ptr":"2:11426:1652"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:42":{"id":"0:42","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[111,0],"end":[115,1]},"visibility":{"restricted":{"parent":"0:3:1618","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1622","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:44:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2513-0:276:1702":{"id":"b:2:2513-0:276:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2516:2496"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2662:217-0:11:1622":{"id":"a:2:2662:217-0:11:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1622","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2513-0:138:1636":{"id":"b:2:2513-0:138:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2516:2496"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11520:56405":{"id":"2:11520:56405","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11116:3535"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:232:928":{"id":"0:232:928","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[471,4],"end":[475,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48134:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:177":{"id":"0:177","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[314,0],"end":[324,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7042:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:179:1713","0:180:1714","0:181:762"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:188":{"id":"0:188","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[335,0],"end":[342,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7042:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"items":["0:191:1713","0:192:1714","0:193:762"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:245:1713":{"id":"0:245:1713","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[500,4],"end":[500,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:21:1679":{"id":"0:21:1679","crate_id":0,"name":"get_or","span":{"filename":"src/cached.rs","begin":[41,4],"end":[46,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates it if it doesn't\nexist.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["create",{"kind":"generic","inner":"F"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2938:1682","args":{"parenthesized":{"inputs":[],"output":{"kind":"generic","inner":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11440:3566":{"id":"2:11440:3566","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:50086:3759","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:276:1702":{"id":"b:2:2238-0:276:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2017"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11470:56396":{"id":"2:11470:56396","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"prim@char":"1:12300:408","`DoubleEndedIterator`":"2:7079:120","self::pattern":"2:11116:3535","str::split":"2:11464:56392"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:50128:2826","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:276:1702":{"id":"b:2:2523-0:276:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11529:60593":{"id":"2:11529:60593","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:11116:3535","prim@char":"1:12300:408"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:11:1622":{"id":"b:2:2238-0:11:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1622","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2017"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11453:56404":{"id":"2:11453:56404","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:11116:3535","prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11497:60582":{"id":"2:11497:60582","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11116:3535","prim@char":"1:12300:408","str::rmatch_indices":"2:11500:60583","`DoubleEndedIterator`":"2:7079:120"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:50260:3767","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:26:1655":{"id":"0:26:1655","crate_id":0,"name":"iter_mut","span":{"filename":"src/cached.rs","begin":[65,4],"end":[69,5]},"visibility":"public","docs":"Returns a mutable iterator over the local values of all threads.\n\nSince this call borrows the `ThreadLocal` mutably, this operation can\nbe done safely---the mutable borrow statically guarantees no other\nthreads are currently accessing their associated values.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11445:60576":{"id":"2:11445:60576","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50374:3772","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:2063-0:276:1702":{"id":"a:2:7736:2063-0:276:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:2063","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11505:60585":{"id":"2:11505:60585","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:225-0:223:1709":{"id":"a:2:2676:225-0:223:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1709","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:151":{"id":"0:151","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[133,0],"end":[133,47]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11414":{"id":"2:11414","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:10679:1352","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11415:789","2:11416:2503","2:11417:60570","2:11418:60571","2:11420:60572","2:11423:56316","2:11424:60573","2:11425:309","2:11426:1652","2:11427:1651","2:11429:1650","2:11431:1690","2:11433:1723","2:11435:60574","2:11436:60575","2:11437:56384","2:11438:56385","2:11439:3795","2:11440:3566","2:11441:3990","2:11442:58562","2:11443:58543","2:11444:4290","2:11445:60576","2:11446:58555","2:11447:56402","2:11450:56403","2:11453:56404","2:11456:2538","2:11460:2502","2:11464:56392","2:11467:56394","2:11470:56396","2:11473:60577","2:11476:60578","2:11479:56398","2:11482:56400","2:11485:60579","2:11488:60580","2:11491:2029","2:11494:60581","2:11497:60582","2:11500:60583","2:11503:60584","2:11505:60585","2:11507:60586","2:11509:60587","2:11510:60588","2:11511:60589","2:11514:60590","2:11517:54061","2:11520:56405","2:11523:60591","2:11526:60592","2:11529:60593","2:11532:3600","2:11534:3938","2:11535:53682","2:11536:53683","2:11537:53684","2:11538:60594","2:11540:3101","2:11541:60595"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3321-0:285:1714":{"id":"b:2:3321-0:285:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:16:59":{"id":"0:16:59","crate_id":0,"name":"default","span":{"filename":"src/cached.rs","begin":[18,4],"end":[20,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1622","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11441:3990":{"id":"2:11441:3990","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:50096:3280","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11491:2029":{"id":"2:11491:2029","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"prim@char":"1:12300:408","`DoubleEndedIterator`":"2:7079:120","self::pattern":"2:11116:3535","str::matches":"2:11491:2029"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:50314:3770","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:38:762":{"id":"0:38:762","crate_id":0,"name":"into_iter","span":{"filename":"src/cached.rs","begin":[98,4],"end":[100,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2726:2388-0:223:1709":{"id":"a:2:2726:2388-0:223:1709","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:2388","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1709","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:182":{"id":"0:182","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[326,0],"end":[333,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7042:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1636","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"items":["0:185:1713","0:186:1714","0:187:762"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11500:60583":{"id":"2:11500:60583","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"`DoubleEndedIterator`":"2:7079:120","prim@char":"1:12300:408","self::pattern":"2:11116:3535","str::match_indices":"2:11497:60582"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:50278:3768","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11136:3538","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11416:2503":{"id":"2:11416:2503","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:276:1702":{"id":"b:2:2517-0:276:1702","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11479:56398":{"id":"2:11479:56398","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12300:408","str::rsplitn":"2:11482:56400","self::pattern":"2:11116:3535"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:50214:2830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11121:3536","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:7046-0:285:1714":{"id":"b:2:7046-0:285:1714","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7156:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7042:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1714","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:7048:1713","2:7049:1714","2:7050:762"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:51":{"id":"0:51","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[125,0],"end":[137,1]},"visibility":{"restricted":{"parent":"0:3:1618","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_sorted_by","sum","rev","any","reduce","min_by","partition","flatten","all","peekable","chain","take","is_sorted_by_key","product","unzip","try_reduce","min_by_key","partition_in_place","fuse","skip_while","le","intersperse","next_chunk","map","position","__iterator_get_unchecked","cmp_by","copied","find","max","is_partitioned","inspect","take_while","eq","intersperse_with","last","gt","partial_cmp_by","cloned","find_map","max_by","try_fold","partial_cmp","by_ref","map_while","for_each","advance_by","enumerate","eq_by","cycle","ge","count","skip","try_for_each","try_find","try_collect","max_by_key","scan","cmp","filter","zip","nth","collect","size_hint","is_sorted","lt","array_chunks","rposition","fold","min","collect_into","flat_map","filter_map","step_by","ne"],"trait":{"name":"Iterator","id":"2:7156:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:54:1713","0:55:928","0:56:1724"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:65:1713":{"id":"0:65:1713","crate_id":0,"name":"Item","span":{"filename":"src/cached.rs","begin":[148,4],"end":[148,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[452,0],"end":[460,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_sorted_by","sum","rev","any","reduce","min_by","partition","flatten","all","peekable","chain","take","is_sorted_by_key","product","unzip","try_reduce","min_by_key","partition_in_place","fuse","skip_while","le","intersperse","next_chunk","map","position","__iterator_get_unchecked","cmp_by","copied","find","max","is_partitioned","inspect","take_while","eq","intersperse_with","last","gt","partial_cmp_by","cloned","find_map","max_by","try_fold","partial_cmp","by_ref","map_while","for_each","advance_by","enumerate","eq_by","cycle","ge","count","skip","try_for_each","try_find","try_collect","max_by_key","scan","cmp","filter","zip","nth","collect","size_hint","is_sorted","lt","array_chunks","rposition","fold","min","collect_into","flat_map","filter_map","step_by","ne"],"trait":{"name":"Iterator","id":"2:7156:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:218:1713","0:219:928","0:220:1724"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[117,0],"end":[117,65]},"visibility":{"restricted":{"parent":"0:3:1618","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7735:1628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:1628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1622","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"paths":{"16:6210:4511":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"12:810:3350":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:2905:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"6:6975:8797":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:11300:5946":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"5:1396:3349":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:49908:2817":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:49939:2809":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"9:382:4073":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:5845:2222":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"6:1695:8091":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:9885:5804":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:8422:2218":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:51811:6989":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:10583:4692":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:20056:1873":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:8448:152":{"crate_id":1,"path":["std","net","ip_addr","IpAddr"],"kind":"enum"},"2:50527:3543":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:13214:6416":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"16:4849:6580":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"1:11682:7261":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:8973:3386":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:49918:2815":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"12:119:4248":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:47639:2182":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:9947:47076":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:11154:3219":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:12325:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:6563:3588":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"5:1196:1640":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"6:4126:8130":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:13413:6487":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:5064:3180":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:7875:2611":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:20786:16235":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:12142:5069":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:9225:3213":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:21459:3833":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"20:84:2076":{"crate_id":20,"path":["once_cell","unsync","OnceCell"],"kind":"struct"},"5:217:4015":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:53310:3685":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:11034:5909":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"16:5614:4374":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"6:4224:8195":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:48337:1714":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:21984:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"5:1954:3982":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"16:7343:4465":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:8705:3480":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:12926:6345":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:4810:8428":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"6:4102:8113":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:12896:6334":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:9751:4776":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:1826:7076":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:9609:2833":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:2401:3441":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"14:0:1922":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:5087:3170":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"6:4294:8226":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:11457:3214":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:12307:6140":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:2445:3262":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:47128:6976":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:20329:3107":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"9:920:4077":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"6:4354:8258":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:4716:8387":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:11909:6060":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:49131:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"2:1643:2258":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"16:2771:4633":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"1:6782:2134":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"6:567:7942":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:8435:2818":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:21190:3816":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:11594:6015":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:57047:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:46523:198":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:8295:46886":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:9239:3214":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:48185:1713":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"6:4212:8186":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:12008:6093":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:51965:3690":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:11774:6041":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:20341:3743":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"12:725:3348":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"5:6862:2105":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"5:3350:1702":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"5:2477:4036":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:10310:5855":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:13492:6508":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:10894:4754":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:7433:2189":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"12:751:3142":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:1021:4829":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:47400:2219":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:4534:8299":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:20950:59466":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"16:5460:4363":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"16:4144:6560":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:29408:3885":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"5:853:4017":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"5:6967:221":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"17:12211:6130":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:9331:3336":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:10283:5853":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:8605:2560":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:52480:3663":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:9155:5780":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:11903:5264":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:49465:5244":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"16:7166:4321":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:3125:5689":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:8609:2571":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"16:2868:4395":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"5:782:4016":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"16:3263:6552":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:5380:2209":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:4904:8691":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:51032:192":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:13176:6408":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:8737:3245":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:12948:6350":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:47290:2212":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"12:1840:3142":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"17:12060:6099":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:1044:7258":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"16:7044:4315":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"6:4367:8262":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"16:6668:4658":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"16:5472:4364":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:0:1344":{"crate_id":1,"path":["std"],"kind":"module"},"4:0:1916":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:51935:3702":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:11585:5066":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:48751:2125":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"5:4027:241":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"6:4206:8183":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:11116:3535":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"12:1872:3147":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"1:3470:58135":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"16:4817:6579":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"16:5388:4359":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:29649:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:11089:8910":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"6:4527:8298":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:12303:1017":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"16:7288:4527":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:46567:2099":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:8941:5776":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"5:271:5008":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"17:10506:5864":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:11974:6090":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"6:4605:8335":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:50880:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"0:0:1401":{"crate_id":0,"path":["thread_local"],"kind":"module"},"1:12316:718":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"5:5505:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:10374:4786":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:686:11291":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"16:2705:4630":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"16:4262:6562":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"16:7329:4531":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"9:33:4169":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"9:586:4117":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"1:6921:7084":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"2:1825:2165":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:11134:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"16:3457:5698":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:20529:3657":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:12311:630":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:10394:4788":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"12:1628:5006":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"16:5433:4361":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:3160:3459":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"17:11761:6039":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"1:8694:3514":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:12319:1446":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:8639:3469":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:2843:3131":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:12092:2091":{"crate_id":2,"path":["core","const_closure","ConstFnMutClosure"],"kind":"struct"},"16:8056:4334":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:11698:135":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:47261:2210":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:10360:4844":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:9113:5039":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"2:54092:3665":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"17:12964:6353":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"16:6654:4522":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:8904:3382":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:353:2624":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:2341:4643":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:12781:6321":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:9644:4704":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"16:2993:4637":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:3953:3318":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"2:7735:1628":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:29621:1627":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:49418:5242":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:8106:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:47415:2220":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:52190:3703":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:9213:183":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:990:3355":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:13231:6423":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"1:4246:3156":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:2385:3436":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"5:870:1702":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"12:300:1703":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"6:4200:8181":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"6:7226:8812":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:3486:3224":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:9277:1714":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:8687:3106":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"16:7319:4530":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:47385:2218":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"0:285:1714":{"crate_id":0,"path":["thread_local","IntoIter"],"kind":"struct"},"1:2253:1692":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"16:2367:4625":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:46901:3619":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"16:6735:4479":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:6681:2131":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:9691:4775":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:51117:3233":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"18:707:3534":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:3422:3220":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:3199:2164":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:8083:3433":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"1:9315:3335":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:52125:3659":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:11342:111":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"17:8981:5777":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:13047:6371":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:6441:5254":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"1:5574:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:10756:3211":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"1:4254:3157":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:3174:3631":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"5:6727:1714":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:46984:3776":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"16:7237:4323":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"6:592:7955":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"12:60:7251":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:13594:6533":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"6:600:7960":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"17:10385:4787":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"14:165:45186":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"9:896:4080":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"16:5780:4383":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:9464:1709":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:8881:61386":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:21951:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:11786:3467":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:21471:3832":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:2578:3290":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"16:7567:4485":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:13192:6411":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"6:4559:8311":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:11373:5063":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"17:12884:6331":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:9389:106":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"1:900:1709":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:545:2607":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:50384:3773":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"5:6742:3142":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"20:339:5002":{"crate_id":20,"path":["once_cell","race","once_box","OnceBox"],"kind":"struct"},"2:21280:5230":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:10866:3765":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:9395:2612":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:10207:5844":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:13168:6407":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"16:5235:6584":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:48194:1702":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:13039:6370":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"16:5184:45259":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"6:5692:8573":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:10902:1629":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"17:13459:6501":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:12305:1322":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:53908:3697":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:661:3428":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"18:521:4874":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:7300:7259":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:53516:3705":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:21296:5236":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"16:6619:4521":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"16:2411:4644":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"6:4191:8176":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:9627:4718":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:49250:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"6:1707:3481":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:12695:6304":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:9765:2829":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:774:141":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"5:6283:3963":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"12:2205:2105":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:3382:3238":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"17:12278:6137":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"16:7637:4471":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:11307:3215":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:7982:4040":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:49435:144":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:20372:3416":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:7870:2602":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:5823:3216":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"5:3339:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:8631:5189":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:9531:216":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:1552:3269":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"17:11288:5943":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:11268:3368":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"1:2652:3292":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"5:6469:5023":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:9298:219":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:8596:5188":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:53050:3672":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"6:7279:8824":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:10426:7078":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"3:0:432":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"6:4659:8357":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:8796:4696":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"16:6829:4661":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:12320:1447":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"5:1349:1702":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:11235:5930":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"17:13572:6527":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:11661:6026":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:8412:2204":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:20503:16217":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:21320:3602":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:11130:3534":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"6:6375:8699":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:46457:195":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:49899:2813":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"16:7135:4320":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:9488:4709":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"5:2955:3145":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:50490:3537":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"6:1608:8031":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:8329:3745":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:1123:3360":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"16:7942:4536":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:12033:6096":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:9897:5805":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:11954:4271":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"6:4139:8140":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:10997:5896":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:12315:722":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:11670:7090":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:11711:33034":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:4475:8278":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"16:5558:4371":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"13:220:5228":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"16:6284:4468":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"17:386:5684":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:11149:5914":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:12361:6154":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:51835:3701":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:1091:1640":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:29627:2264":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"5:4948:2802":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:9437:5253":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:50738:3861":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"6:1701:8094":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"6:4280:8218":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:12748:6310":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:4425:3515":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:2662:217":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"6:4768:8404":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:50314:3770":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:8110:46881":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:4672:11293":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:8393:4744":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"5:1595:5008":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:52736:3704":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:50825:3783":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"5:6733:4018":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:7848:3107":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"6:554:7936":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"6:5876:8640":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:8162:4758":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"6:5554:8498":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:6819:2120":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"1:973:3353":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"16:5163:4397":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"6:1738:8106":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"16:5510:4368":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:8442:3282":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:4326:2159":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"17:9930:5806":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"12:1120:4244":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"5:3561:5008":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:9183:5781":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"16:2509:4638":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:2255:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:46962:3102":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"6:5727:8588":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:49198:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:8534:5258":{"crate_id":1,"path":["std","net","ip_addr","fmt","Span"],"kind":"struct"},"6:7255:8819":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:47323:2214":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:8814:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"5:5191:3963":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"6:513:7907":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:54214:7056":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"12:1555:4255":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:52336:3683":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:21393:58772":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:5394:188":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"16:7511:4335":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:48599:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:11800:6044":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"6:5541:8489":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:12756:6311":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"6:6572:8790":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:10159:5841":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"12:1065:4242":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:21372:58769":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"16:6270:4458":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:4200:2151":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"16:5596:4373":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:9644:2826":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:50214:2830":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:11277:3212":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:8719:3489":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"1:9831:3431":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"1:11826:3468":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"17:13340:6467":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"12:2069:3358":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:47209:2205":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:47299:2199":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:50128:2826":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"13:108:61378":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:3084:3845":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:944:3142":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"18:80:7245":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"12:1836:1714":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"16:6052:4508":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:4086:2076":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:9347:3337":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:1760:2746":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"6:1518:7977":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"14:7:6840":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"5:2981:3146":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"16:6567:4475":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:7214:8810":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"16:2930:4396":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"18:599:61395":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:1476:143":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"20:369:2076":{"crate_id":20,"path":["once_cell","imp","OnceCell"],"kind":"struct"},"2:21918:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:2969:3576":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"17:9031:61385":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:5457:2198":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:50110:2818":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:1919:2749":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:887:1702":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:1608:1714":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:4117:3475":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"5:4105:5012":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"6:4698:8376":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:51987:3694":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:21786:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:11485:5993":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"6:4683:8371":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"9:977:4081":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"6:6409:8706":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:5880:203":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:13100:6386":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:52656:7002":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"14:31:6840":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:11639:6025":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:11939:6079":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"5:6444:5018":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"17:10520:5867":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:8379:3219":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:52602:7000":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"16:7059:2060":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"17:13158:6404":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:8713:3469":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"16:6109:4353":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:9464:54094":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:49665:3936":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:10651:3210":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:0:485":{"crate_id":2,"path":["core"],"kind":"module"},"2:8556:131":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:49669:2810":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:21885:2618":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:50374:3772":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:11217:5929":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"16:7211:4322":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:6217:3331":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"14:160:6840":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"18:660:4864":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:10445:4811":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"9:709:3380":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:11094:8912":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:49164:109":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"17:10490:5862":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"6:1574:8010":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"16:2793:4635":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:979:3354":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:5494:4365":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:9302:3334":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:8471:3255":{"crate_id":1,"path":["std","net","ip_addr","Ipv4Addr"],"kind":"struct"},"5:1691:3143":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"17:10420:4845":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"12:697:3352":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"12:1866:3146":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"6:4816:8431":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:10973:5895":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:608:7965":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:11070:3248":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"17:8418:4757":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:10497:47149":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"17:13134:6399":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:6838:2139":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:51881:3681":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"16:2261:4354":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:11969:202":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"17:13327:6461":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"6:4690:973":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"17:13366:6476":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"6:1643:8059":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:247:5683":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:4454:3519":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:50837:3787":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"16:5793:4384":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"6:560:7939":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"16:6241:4512":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:12299:912":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:2788:3196":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:1938:3426":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"16:5525:4369":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:50861:3870":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"12:1029:3359":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:2763:3185":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:12980:6357":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:3184:3645":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:13126:6396":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"6:4437:8275":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"18:507:5665":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"16:2842:4394":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"6:6424:8711":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:7841:3536":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"18:736:4871":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"17:9293:4828":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"6:7237:8816":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:8241:4813":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:11477:3870":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"1:3271:3296":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"18:515:4877":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:11721:6034":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:52266:3695":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"6:581:7950":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:2484:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"1:1889:5136":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:47332:2215":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:2673:222":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"6:6524:8772":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:2792:3198":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:10921:5877":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:11124:3433":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"16:5981:4392":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:11247:5933":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"6:4592:8330":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:9066:5033":{"crate_id":2,"path":["core","slice","sort","insert_head","InsertionHole"],"kind":"struct"},"16:6472:4260":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:2904:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:10296:5854":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:4014:3467":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:50393:3774":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:7079:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:12909:6340":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"17:12087:6103":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:2669:2262":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:47055:3852":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:11099:3168":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:2817:3114":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:21852:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"16:7469:4466":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:38221:1873":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"17:12816:5212":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"5:6907:4023":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"18:609:5671":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"9:592:4119":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"2:39378:3218":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:12317:1448":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"6:6415:8708":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"16:7497:4462":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:57099:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"7:79:44461":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"20:126:1872":{"crate_id":20,"path":["once_cell","unsync","Lazy"],"kind":"struct"},"6:131:39316":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:49146:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"17:11125:5910":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:21753:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:5660:3207":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:20316:3721":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"2:2758:3149":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:13031:6369":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"17:11617:6018":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"5:6750:4019":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"5:4627:3269":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"5:4748:2124":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"5:6874:2106":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"5:2948:1702":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:52412:3675":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:5317:7081":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:9250:5786":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:47349:2216":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:9824:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"6:4515:8291":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"16:2433:4328":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:6852:2140":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"17:12768:6316":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:9283:5789":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:9193:61392":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:52860:3696":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:50833:3788":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:11708:6031":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:56677:3805":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"6:6500:8762":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"6:1714:8097":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:11607:3223":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:57086:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"12:1044:4241":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"6:4629:8345":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:12739:6309":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:8864:3380":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:4505:3477":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:9303:4720":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:46968:3917":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"17:10062:5838":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"6:1654:8067":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:8962:3385":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:9723:2830":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:8055:4686":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:12322:767":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:7737:5687":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"9:0:1918":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"17:11368:5966":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"6:4231:8199":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"14:202:3988":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:49965:2194":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:8951:61393":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:1903:46971":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:11199:5921":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:11136:3538":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:20124:59501":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:21445:3890":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:52236:3691":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"6:1595:8024":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:11921:8915":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:8991:61389":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:29721:3843":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"16:6059:4624":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:49426:3111":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"16:6528:4519":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:11997:6091":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:11121:3536":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"6:1511:7974":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:50000:2825":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:6316:5047":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:48561:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:12617:6262":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:3154:3457":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"16:7357:4478":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:1962:4773":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"6:5672:8565":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"16:6017:4506":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"17:10875:4755":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:4766:3252":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"6:5587:8511":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"7:32:44454":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"6:5510:8478":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"6:4653:8355":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"18:564:4880":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"16:5219:5183":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:53160:3661":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"12:1832:1702":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"16:2631:4640":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:11496:3344":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"17:9021:5778":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:8368:4689":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"16:6252:4513":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:9098:5035":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:20101:59506":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:10250:2820":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"6:5625:8539":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:21264:3607":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:54176:7054":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:2784:3181":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"6:4274:8216":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:2753:3182":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"6:6509:8765":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:20290:3647":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"17:9458:4685":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:4017:3468":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"15:175:4262":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:7539:56006":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:10860:3299":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:52633:7001":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"5:1405:3350":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:11559:6011":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"6:7220:8811":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:4195:2150":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:50096:3280":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"6:4745:8396":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:21046:3652":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:4317:2158":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:965:3351":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:50684:3551":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"6:4361:8260":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"5:6921:3852":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:5227:2052":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:5624:59898":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"16:3010:4636":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"5:4439:655":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:4346:1624":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:10889:3766":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:10863:3295":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"17:12485:6156":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"12:353:4246":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:2987:3204":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"18:644:5665":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:598:2615":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"17:9328:4825":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:9489:2818":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:2564:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"16:6676:4463":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:9681:5731":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:13436:6500":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:9539:4707":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"5:3430:5008":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:12046:6098":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"18:614:61397":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"18:574:5665":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"12:2198:7886":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"1:8217:3399":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:47279:2221":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:12337:4811":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:47148:2194":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:50178:3764":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:1002:3357":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:50670:3550":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"6:539:7927":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:25292:3591":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"6:1541:7987":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:2588:5035":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:2726:2388":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"16:5628:4375":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:48637:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:20084:59463":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:47219:2206":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:8505:3257":{"crate_id":1,"path":["std","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"17:11841:6050":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"6:4797:8423":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:13393:6484":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:48873:2560":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:420:4399":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:13527:6521":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:50718:3860":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:29827:3844":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"17:13221:6418":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:2903:207":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"11:44:4231":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"2:8599:111":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:2774:3190":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"5:6890:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:2235:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:8123:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"5:1078:4032":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:21819:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"17:11436:5968":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:51088:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:3370:3239":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"2:46481:196":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"17:12237:6132":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"6:4461:8277":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:50086:3759":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:5680:3208":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"18:531:4878":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:13007:6361":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"9:111:4136":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"2:46626:4336":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"2:48346:180":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"6:6329:8680":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"16:7659:4454":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:6544:203":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"16:2535:4627":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"17:9526:4708":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:13059:6377":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:1636:576":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:49978:2808":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:4059:2166":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:2796:3200":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:48675:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:47178:2204":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"16:6743:4523":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:6604:163":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:4003:3091":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:50541:3546":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:21:665":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"6:4096:8112":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"16:7980:4337":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:9532:2832":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"16:3854:6559":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"5:4532:201":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:12321:1444":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"5:2743:59986":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"16:7249:4324":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"16:6842:6652":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:3236:3715":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:11684:6030":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:5709:3210":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:1931:4706":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:48219:2060":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"17:242:5682":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"17:10774:4688":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:13141:6400":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:49928:2816":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:4657:3486":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:3168:3097":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:50418:3102":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"17:10270:5852":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"5:1212:3359":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:5178:3316":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:21332:3603":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:52088:3674":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"5:2050:4033":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:8763:3247":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:11995:139":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:11271:5935":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:12349:6147":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"12:861:3357":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"18:481:4875":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:4635:8346":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:9080:5034":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"16:6359:4515":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:910:1714":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:50010:2823":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"12:444:141":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"5:5525:2124":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"6:1562:8002":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"16:3566:6554":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:46340:2640":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:12307:1430":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"17:10822:46889":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:52382:3671":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:9722:5193":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"1:3479:3225":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"5:2739:8828":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:20419:3651":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"6:4329:8245":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:12322:6144":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:8601:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:21438:8833":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:11828:6049":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:10682:4815":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"6:1500:7969":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"12:777:4233":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"16:2727:4631":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:2681:2162":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"16:6161:4509":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"5:1982:4034":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"16:4413:6567":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:9553:4722":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:9791:5801":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:4719:773":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:7924:11288":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"3:223:207":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"16:6171:4502":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"16:6123:4455":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:12306:1352":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"17:8212:4809":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"15:193:4263":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"5:5613:3269":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"5:2737:2557":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"16:534:4382":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:52434:3678":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"6:7266:8823":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:7736:2063":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:2672:223":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"17:11576:6014":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:54016:3680":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:11264:7097":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"17:10245:5850":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:13082:6382":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:8611:191":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:3157:230":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"6:5605:8523":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:1114:3359":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"5:1426:3352":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:21347:6942":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:562:5687":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:49457:5243":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:49447:3380":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:11077:3241":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"5:5350:229":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:10940:2832":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:12972:6355":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"0:223:1709":{"crate_id":0,"path":["thread_local","IterMut"],"kind":"struct"},"2:50260:3767":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:11469:56273":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"6:4598:8333":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:8946:3383":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:3319:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"16:2300:4650":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:9820:4832":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:2444:3107":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"6:6430:8712":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:9118:61391":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:58387:7067":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"2:54110:7048":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:47024:3621":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:4262:3158":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:48134:178":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"6:5504:8477":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:12148:6112":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:8561:4771":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"12:853:3356":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:10121:4753":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"16:2657:4639":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:51067:3798":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:50332:3771":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:9831:4834":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:6516:2203":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"0:276:1702":{"crate_id":0,"path":["thread_local","Iter"],"kind":"struct"},"16:4921:6582":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:47038:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:8603:2561":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:50901:3347":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:9526:215":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:4312:3161":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:7156:156":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:8475:4699":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"6:6269:8647":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:10108:4752":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:3230:3299":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:3616:1714":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:1828:7077":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"6:5684:8572":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:54119:7049":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:9370:2129":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:7051:2190":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:8814:3370":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:20253:3742":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:4403:3513":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:12514:6176":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:9433:5795":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:10139:4722":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:2487:147":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:8160:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:12118:6109":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:46885:3617":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"16:5664:4376":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:7860:55871":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"6:4726:8388":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:46864:6965":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:7150:54465":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"5:3805:1709":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:52814:3692":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"6:135:39317":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"18:538:4879":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"16:6593:4520":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:10721:5197":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"16:6781:4476":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:50364:3282":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:10434:5858":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"2:51014:202":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:9223:46933":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"6:5733:8591":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:3594:3258":{"crate_id":1,"path":["std","net","display_buffer","DisplayBuffer"],"kind":"struct"},"18:0:1926":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:12836:6325":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"6:4706:8381":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"5:6150:5008":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:2833:3126":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:10608:4695":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:12310:629":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:11947:4271":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:2812:3118":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:20378:3418":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"9:622:4120":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"5:3911:1702":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:6677:2130":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"16:3026:5694":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"18:690:4867":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:2822:3121":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"5:2960:3979":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:57073:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:9350:4827":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:46915:3921":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"16:7890:4472":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"18:766:4873":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:13279:6460":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:46545:200":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"6:4621:8341":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:50695:3552":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:2481:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:1632:3146":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"5:4072:3269":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:1611:3142":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:9738:4778":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"16:7483:4467":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:8607:2570":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:48278:207":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:8613:3320":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV4"],"kind":"struct"},"16:7929:4535":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:6137:5047":{"crate_id":1,"path":["std","sync","mpmc","array","Channel"],"kind":"struct"},"1:9836:5061":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"1:3314:3286":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"5:4042:5012":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:57060:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:6758:59978":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:8227:3294":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:11836:59628":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"2:4126:2078":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:12050:2806":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"16:7267:4525":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:11112:7179":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"6:7243:8817":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"10:0:1919":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"16:3402:6553":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"5:1415:3351":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"6:1505:7971":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:11951:6081":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:9165:61388":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:11938:3800":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"1:8429:3280":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"5:2989:3144":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:54244:7058":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"16:7435:4497":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"16:4297:6563":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:2248:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"19:0:999":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:931:3349":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:46945:3916":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"6:5861:8629":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"16:7543:4459":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:6393:3800":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:1637:3147":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:53768:3693":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:52972:3684":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"18:636:5676":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:46873:3616":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"5:3473:3293":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"5:4904:5008":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:12313:720":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"17:1771:4712":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:11164:56276":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"17:11547:6009":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:3157:3458":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:6785:2135":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:10668:5138":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"20:51:3269":{"crate_id":20,"path":["once_cell","imp","Guard"],"kind":"struct"},"17:13114:6393":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:11445:3213":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"1:8577:3510":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"1:8076:3168":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"16:6816:4660":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:53658:3673":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:50409:3776":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:20498:3107":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"16:7093:4316":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"17:9263:5787":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"16:6690:4464":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"6:487:7256":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:8441:4812":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"11:0:1920":{"crate_id":11,"path":["adler"],"kind":"module"},"16:0:1924":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:10708:4810":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:7847:4534":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:2800:3202":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"6:1525:7979":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"6:62:39250":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"6:575:7947":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:8363:2174":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:49410:3112":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"12:834:3355":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:4357:6565":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:4:983":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:50829:3786":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:9288:3107":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:50849:3790":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:9442:5259":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:2991:3205":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"17:10075:5839":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"16:6345:4461":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:8147:3293":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:2768:3187":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:50558:3547":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"6:5699:8574":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:47071:3853":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"12:1845:3143":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"1:12266:5265":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"5:6809:1714":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:2847:3133":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:11748:6038":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:13354:6473":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"6:6392:8701":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:47118:5024":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:9671:4745":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:10829:3762":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"16:2557:4628":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:11187:3542":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"16:6903:4314":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:9422:5794":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:5169:3103":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:46858:3102":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:48270:190":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"1:9384:5250":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:47043:3851":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:4262:2156":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:4369:2160":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:54191:7055":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:719:5133":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"17:10221:5848":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:11601:5255":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:5506:187":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"16:2487:4626":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:11330:5958":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"16:4327:6564":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"17:8774:4687":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:12265:6136":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:8596:111":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:50857:3785":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:1811:597":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:4324:3163":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"0:138:1636":{"crate_id":0,"path":["thread_local","ThreadLocal"],"kind":"struct"},"6:4665:8360":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:2670:2163":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"6:7249:8818":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:9283:3333":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:8494:5182":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:48880:2561":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"6:4417:8273":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"6:5498:8474":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:2780:3193":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"6:5443:8435":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"9:800:7889":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:3347:2180":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"1:11514:8914":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:50232:2828":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:20103:59504":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:4272:2157":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"16:4635:6573":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:7939:11290":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:4906:8693":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"1:960:3350":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"6:7289:8826":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:9515:164":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"5:1370:1714":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"16:4385:6566":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:8833:144":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"5:6950:4025":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:13024:6368":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"5:1241:3360":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:11813:6046":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:6137:4453":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:2917:2079":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:11784:6939":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:1550:7993":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"6:5472:8459":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:10642:4817":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:4908:8695":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:4433:3516":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:48321:1702":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"6:4115:8122":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:678:7069":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:12674:6299":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:4398:8272":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"16:4721:6576":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:2154:577":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:7429:2188":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"6:1686:8085":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:6409:5054":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"17:9108:5779":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:50841:3791":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:10684:3897":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:9555:3344":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:21409:58764":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"18:491:2080":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"16:7452:195":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"5:6937:4024":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"9:505:4068":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"1:8370:3302":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:2869:3402":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:13557:6526":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:9071:61384":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:51791:6988":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"6:4317:8239":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:49991:2822":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:2674:108":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"16:7909:4474":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"5:6302:3964":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"6:4239:8201":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:22083:3819":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"17:13536:6523":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"6:5568:8509":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:11070:5202":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:6017:2127":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:8131:3453":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"16:8069:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"20:0:1760":{"crate_id":20,"path":["once_cell"],"kind":"module"},"17:13071:6378":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"6:1668:8078":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"16:6719:4656":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:47657:2186":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"5:36:3958":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:3377:3269":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:13203:6415":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:524:5044":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"16:6790:4524":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:13518:6517":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:50633:3549":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:50512:3540":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:1967:3427":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"9:649:4121":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"2:52143:6992":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:967:5688":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:48371:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"5:677:228":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"16:4662:6574":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:3404:3174":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"8:0:1917":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:2497:233":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:8625:3321":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:4693:58835":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:484:5068":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"16:7603:4482":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:4210:3407":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:2827:3123":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:9637:5135":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:38204:180":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"6:501:7902":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"15:214:4267":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"15:0:1923":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:47200:2197":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:22050:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"17:13478:6506":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"6:4673:8365":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"6:5720:8587":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:10476:47148":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:7001:2192":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"12:1518:4253":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"6:6981:8799":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:2935:2389":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"16:6704:4477":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"16:7298:4528":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:3269:3295":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"6:4611:8338":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"16:8014:4336":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:11763:3323":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:20069:59463":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:48523:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:12630:6269":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:20531:3651":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:12198:6129":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:3249:4761":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"12:1003:3358":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:3162:134":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"9:956:4076":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"16:7426:4481":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"16:5122:6583":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:9430:7164":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"17:11356:5963":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:53970:3662":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:10257:5851":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"20:298:5125":{"crate_id":20,"path":["once_cell","race","OnceRef"],"kind":"struct"},"6:6953:8796":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"5:4952:2803":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"5:686:110":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:2851:3135":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:4496:8279":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:11515:6002":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"17:9805:4831":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:8222:3400":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:681:7071":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"6:4551:8307":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:13580:6530":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:11528:6004":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"5:1437:195":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:11847:3475":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"17:8526:4790":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:10350:4688":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:10905:3769":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:3147:3846":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"12:659:1714":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:10845:4811":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"18:681:4866":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:21137:3815":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:12301:1464":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:1887:5135":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"1:8796:2053":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"16:6034:4507":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:39418:3237":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"17:10403:4690":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"6:6322:8676":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:10854:4772":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:12022:6095":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"5:1387:3348":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:2839:3129":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"5:3542:3143":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"1:2399:3440":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"12:0:1921":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"17:12874:6330":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"16:2282:4329":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"17:9401:5793":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:49839:3757":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:47247:6977":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"5:6780:195":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:54229:7057":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:2856:3138":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:6079:2137":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"14:215:6845":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:47630:2180":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"16:6496:4518":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:50080:3758":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:2327:186":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:48713:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:7849:2626":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:5894:3332":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"6:5835:8614":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"6:6311:8671":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:39414:4040":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:2490:132":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:8330:3304":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"17:11087:5204":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"16:6070:4398":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"16:4217:6561":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"12:320:4247":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:12797:6324":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:7896:1629":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:47608:6936":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"16:7557:4460":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:11259:5934":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:7786:5057":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:9909:5194":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"12:98:4245":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"16:4441:6568":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:20781:3653":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"20:377:5177":{"crate_id":20,"path":["once_cell","race","OnceNonZeroUsize"],"kind":"struct"},"2:46633:6964":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"6:6293:8664":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"18:582:1873":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:14:1697":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:12103:6105":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:5826:3217":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"16:7372:4667":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"6:4737:8394":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:11787:6042":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:10546:46888":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:2232:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"16:5963:191":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"16:5878:4387":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:2928:1649":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"5:5416:3142":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:9446:5796":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:4191:204":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"12:387:7252":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:7102:1730":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:4585:3485":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:8822:61387":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"1:3086:3303":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"1:4302:3160":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:8391:3278":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:51024:208":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"6:5595:8516":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:9274:5788":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:53846:3677":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"6:4644:8349":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:0:1925":{"crate_id":17,"path":["object"],"kind":"module"},"2:54130:7050":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"6:4346:8253":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:6430:2193":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:8990:5030":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"6:6998:8807":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"5:6788:3983":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"16:5737:4380":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"16:5949:4390":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:49137:130":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"17:9371:5779":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:50913:3872":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:9317:4824":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"6:507:7905":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"5:2030:60069":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"5:1944:2607":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:50068:3243":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"5:3764:5008":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"6:586:7952":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:2493:234":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"16:6298:4483":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:47229:2207":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:4969:3244":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"17:10088:5840":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"5:6002:5008":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"12:985:1640":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:48252:2061":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:54267:7059":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:12164:6116":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"16:2749:4632":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:12073:6100":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"5:7061:3959":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:8093:3169":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:21243:6940":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"6:5534:8487":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:13374:6479":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:11500:5997":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"5:1060:4031":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:10233:5849":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"18:113:7249":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:5695:3209":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"18:652:5665":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"5:2255:4037":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:8666:5190":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"16:4888:6581":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"16:7278:4526":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:9631:4705":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"5:6075:1714":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"6:4300:8229":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"18:96:7246":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"12:2178:7884":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:4778:8409":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:9571:2819":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:46998:3919":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:2026:182":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"16:2894:4641":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:1864:7078":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:969:3352":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:12291:6138":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:22017:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:1105:3358":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:11384:5064":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:13404:6485":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"16:5411:4360":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:47313:2213":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"16:7970:4470":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"5:6772:1714":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:12318:1445":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:10670:4814":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:11186:5920":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:9778:4777":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:51903:3669":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"9:827:4075":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:8066:3420":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"5:6815:1714":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:2739:2491":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:8868:3109":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:9536:3340":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"1:6886:214":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:8545:207":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:54150:7052":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:47191:2196":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:46441:197":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"16:2579:4679":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"6:4185:8174":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:5203:5182":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:57034:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:10332:4851":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:7955:3361":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"12:669:3351":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:10532:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"17:9764:5800":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:13148:6401":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:52288:3698":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"6:646:39651":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:8749:6937":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"5:6400:240":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"5:7044:3143":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"6:4565:8313":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"16:6463:4517":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:11688:7262":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:8741:8680":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:8139:3291":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"16:5703:4377":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:7426:1625":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"17:11893:6055":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"1:10799:5062":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"6:6302:8670":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:11734:5811":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"17:12850:6328":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:11343:5962":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:11927:106":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:10283:2821":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:3461:2567":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:52458:3660":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"12:2053:1640":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"5:6718:2807":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"9:676:4166":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"2:47649:2184":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:9682:2827":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"6:4581:8322":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:49176:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"16:7388:4480":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:3232:3300":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:50160:3763":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:49650:6984":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"12:646:1709":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"12:274:5126":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"6:4575:8319":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"5:1359:1709":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:1604:1702":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"5:1227:3358":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:1620:3144":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"5:630:6919":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:2257:3277":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"1:6010:2126":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:10625:4697":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"16:4606:6572":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"6:1722:8101":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:7038:133":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:3192:3297":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"6:7208:8809":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"5:2747:59985":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"12:1534:4254":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:8165:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:7748:7184":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"16:2465:4649":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:2285:185":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:2290:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"1:5011:3177":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:20122:59503":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"17:8510:5183":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:48261:2644":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:53126:3679":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:7978:7097":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:58408:7068":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:8650:3471":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:1672:1055":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:9450:4314":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:12934:6348":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"12:822:3354":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:54054:3700":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"16:7825:4533":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:3980:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"5:6978:3985":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:2932:1739":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:52066:3670":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:487:5686":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:47624:2178":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"6:4449:8276":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"16:7956:4469":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:2916:4749":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:9253:3215":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:2805:3116":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:12134:6110":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:4744:3246":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:51857:3689":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"5:950:5008":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:8911:61390":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:9407:54068":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:12271:11292":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:12550:6207":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"18:548:140":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:9261:1702":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:7042:149":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:11533:3340":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:9751:2831":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:996:3356":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:8488:3256":{"crate_id":1,"path":["std","net","ip_addr","Ipv6Addr"],"kind":"struct"},"12:2190:61377":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:12638:6270":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:46640:2157":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"17:11536:6006":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:12312:723":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:50705:3553":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"6:1600:8026":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"18:590:5666":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"6:6352:8698":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:3908:3269":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:2938:1682":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:8272:4816":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:2411:3446":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"1:574:2613":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"14:187:45192":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"20:383:5178":{"crate_id":20,"path":["once_cell","race","OnceBool"],"kind":"struct"},"1:11289:54071":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:8645:3470":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:8887:3381":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:6610:2171":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"17:12176:6118":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:12304:307":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:5013:3179":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"6:4427:8274":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:11640:7087":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"5:3485:4053":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:411:162":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:1615:3143":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"1:7805:5059":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:47615:2130":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:48210:1714":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:50606:3548":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"6:4489:3488":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"5:6312:3965":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"12:762:3143":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"17:8137:46885":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:8339:46887":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"6:1580:8012":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:2029:181":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:11655:7088":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"6:4379:8271":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:49890:2814":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"17:9857:4760":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"16:6877:4313":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"5:1446:4029":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"16:3632:6556":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"18:699:4868":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:8701:5191":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"16:3689:6557":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:7192:5056":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:5887:3331":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"18:727:4870":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"20:179:2076":{"crate_id":20,"path":["once_cell","sync","OnceCell"],"kind":"struct"},"6:6538:8781":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"6:4179:8173":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"6:6448:8722":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"6:5772:8601":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:50427:3777":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"12:1859:3145":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"17:13506:6515":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:3956:3722":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:20938:3417":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"16:4574:6571":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"6:6545:8784":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"5:3363:1709":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:46991:3918":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:1626:3145":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"6:1678:8084":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:11390:5065":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"6:4540:8302":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:9207:3211":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"6:4152:8150":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:12730:6305":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"12:393:7253":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"5:5802:16429":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:6759:2174":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:11704:5068":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"16:7117:4319":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:8871:5775":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"17:13382:6480":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"16:5815:4385":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:4268:3159":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:7005:2191":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:9485:5261":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"6:545:7930":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:4804:8426":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:5009:3171":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:2676:225":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:12282:55701":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"5:0:282":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:52005:6990":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"16:7309:4529":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:12955:6352":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"6:5582:8510":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:628:3099":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"6:5523:8479":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"20:221:1872":{"crate_id":20,"path":["once_cell","sync","Lazy"],"kind":"struct"},"1:3194:3298":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:2515:3289":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:52555:6999":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:76:1501":{"crate_id":2,"path":["core","usize"],"kind":"module"},"12:2184:5546":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:10182:5842":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"16:5996:4505":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:12323:1501":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:47270:2211":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:48887:2570":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:8546:2567":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:10495:3369":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:48409:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"18:624:61394":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:12609:6259":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"1:10581:3222":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"17:9844:4835":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:46501:199":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"16:2605:4680":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"6:7166:8808":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:2612:3283":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:2383:2718":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"12:632:1702":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:8324:3744":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"16:5541:4370":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:12324:1091":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:4530:3913":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:21355:6943":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"6:0:794":{"crate_id":6,"path":["libc"],"kind":"module"},"5:286:1660":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"6:1636:8055":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"16:5761:4381":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:50853:3784":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"6:5841:8615":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:9339:4826":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"7:0:1491":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:8956:1702":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"5:6989:3986":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:6496:3331":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:57112:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:12860:6329":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"12:738:3349":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"2:48202:1709":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"9:188:4144":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"1:7057:3415":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:11759:189":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"1:8699:3517":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"16:2320:4330":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:9577:4713":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:50845:3789":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:46617:3240":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"16:4749:6577":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:2321:179":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:47169:2195":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:5763:3212":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:47601:2176":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"17:9475:4710":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:54306:7060":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:8554:3509":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"1:10857:3297":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"2:52504:3664":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"6:4506:8286":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:5646:3206":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:11106:5211":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"16:6865:4663":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:12251:6133":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:1751:8831":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:1737:2747":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"6:519:7910":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"5:2919:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"5:2738:59993":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"17:10455:4846":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:495:7899":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:52036:3682":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"17:9362:4722":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"16:4545:6570":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"6:5782:8603":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:4972:3246":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"5:5541:3993":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"5:3107:3143":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"16:3188:6551":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"1:6043:2128":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:20370:3107":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:12300:408":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"16:4689:6575":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:47374:2201":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:8071:3431":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:918:3348":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:49113:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"17:11315:5952":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:48329:1709":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:47238:2208":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:4316:3155":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:46685:3624":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:10322:3482":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"1:359:2625":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:2250:3432":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"18:755:4872":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"17:9601:4711":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"12:1138:3360":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:53096:3676":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:11054:5198":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"5:779:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"16:7396:4532":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"17:10752:4690":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"6:1532:7982":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"16:6517:4259":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"16:4786:6578":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:46925:3922":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"14:40:5896":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:2578:127":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"1:8590:3106":{"crate_id":1,"path":["std","net","socket_addr","SocketAddr"],"kind":"enum"},"9:863:4078":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"6:5741:8593":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:54165:7053":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:52890:3699":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"16:3599:6555":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:48894:2571":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:50278:3768":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:50402:3775":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:46599:3646":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:51075:3799":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:10445:5137":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"5:3015:3147":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:10654:3932":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:29663:3842":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:12298:366":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:11853:6051":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:1474:1626":{"crate_id":2,"path":["core","mem"],"kind":"module"},"2:11732:59630":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"16:4519:6569":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"12:1852:3144":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"16:6200:4510":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"16:6316:4484":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"1:11144:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"5:5956:3142":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:39427:2490":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:21044:3107":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:46426:3726":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:6709:2138":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"17:13184:6410":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"6:5749:8595":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"16:7872:4473":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"11:36:7888":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"2:8873:3110":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"6:4761:8401":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:7962:12220":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:8615:2569":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"17:13091:6385":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"6:5660:8560":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"16:6146:4501":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:9873:5803":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:9382:5792":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"6:4257:8210":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"12:1681:143":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:11141:3539":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:4441:3518":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:46379:3577":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"12:2080:3359":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:1033:1903":{"crate_id":2,"path":["core","hint","unreachable_unchecked"],"kind":"function"},"2:49234:2582":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:6233:203":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"1:7945:3151":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"1:4894:3159":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:50020:2824":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"16:5374:4456":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:48485:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:11873:6054":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"16:5839:4386":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:9501:4720":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"6:1887:40626":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"16:2683:4629":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"6:4286:8221":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:50054:3856":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:8752:3280":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:7737:2062":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:51105:3235":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"6:4307:8232":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:9700:4774":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"12:815:3353":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"16:6186:4457":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"6:5713:8585":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"5:1312:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"16:3716:6558":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"17:9061:4722":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:11161:5917":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:9658:5798":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:4838:3408":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:8819:140":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:5348:7081":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:6479:8748":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"6:6277:8652":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:2713:2489":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:29587:2263":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:47364:2217":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:8613:2568":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:54139:7051":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:9712:5192":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:21720:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"16:2389:4327":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"14:221:6847":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"13:0:1915":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:48447:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:10466:5860":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"16:5447:4362":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"16:2825:4634":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:46937:3777":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:11606:6017":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"5:2994:3980":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"5:5888:5018":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"1:4216:3406":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"12:1085:4243":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"16:153:4326":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:10949:5881":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"18:719:4869":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:20522:3107":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:52106:6991":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:11137:5913":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:9440:1702":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"16:6376:4516":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"5:3734:3142":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:9574:3345":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:9269:3330":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"16:6330:4514":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:22482:3579":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"6:4267:8213":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"9:19:4168":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"6:6554:8787":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:10796:4808":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"6:4247:8204":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"18:671:4865":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:3968:3723":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:47005:3920":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"6:5480:8461":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:12225:6131":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:6640:7084":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"6:4335:8248":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:10670:3934":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:9737:2828":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:12314:721":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:10321:4843":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"17:11174:5919":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"1:954:3143":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"17:11014:5899":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:10528:4807":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"}},"external_crates":{"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"once_cell","html_root_url":null},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}