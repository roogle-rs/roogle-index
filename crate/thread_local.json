{"root":"0:0:1429","crate_version":"1.1.7","includes_private":false,"index":{"a:2:8185:2097-0:11:1651":{"id":"a:2:8185:2097-0:11:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8185:2097","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11902:29418":{"id":"2:11902:29418","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11896:412","self::pattern":"2:11551:13564"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:11375:3013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2681:226-0:47:1650":{"id":"a:2:2681:226-0:47:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2681:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1650","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2667:218-0:47:1650":{"id":"a:2:2667:218-0:47:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1650","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11870:34563":{"id":"2:11870:34563","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11902:1380","str::slice_mut_unchecked":"2:11871:34564","crate::ops::Index":"2:2988:8281"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:2525:2542":{"id":"2:2525:2542","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2499:132"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11879:6228":{"id":"2:11879:6228","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:42904:5807","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2232-0:213:1731":{"id":"b:2:2232-0:213:1731","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2674:2254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2226:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:213:1731","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2234:2051"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11861:1677":{"id":"2:11861:1677","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11913:1477"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11885:29000":{"id":"2:11885:29000","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11896:412","self::pattern":"2:11551:13564"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11940:34574":{"id":"2:11940:34574","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2526-0:60:1649":{"id":"b:2:2526-0:60:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2499:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2528:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8184:1657-0:293:1736":{"id":"a:2:8184:1657-0:293:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8184:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8184:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:293:1736","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[147,0],"end":[159,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["intersperse_with","last","partial_cmp_by","cloned","eq","zip","find_map","try_fold","min","by_ref","map_while","for_each","advance_by","eq_by","cycle","try_find","try_for_each","min_by","try_collect","ne","scan","skip","filter","nth","count","cmp","is_sorted","array_chunks","le","rposition","all","fold","min_by_key","collect_into","size_hint","map","flat_map","filter_map","step_by","any","is_sorted_by","sum","collect","rev","reduce","max","partition","position","flatten","gt","peekable","chain","is_sorted_by_key","product","unzip","try_reduce","max_by","enumerate","partition_in_place","fuse","take","skip_while","intersperse","partial_cmp","next_chunk","ge","__iterator_get_unchecked","cmp_by","copied","find","max_by_key","is_partitioned","inspect","take_while","lt"],"trait":{"name":"Iterator","id":"2:7251:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:65:1735","0:66:943","0:67:1746"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5325:1755":{"id":"5:5325:1755","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7192:222"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7192:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2667:218-0:60:1649":{"id":"a:2:2667:218-0:60:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:227":{"id":"0:227","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[486,0],"end":[486,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7521:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:213:1731","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2537-0:293:1736":{"id":"b:2:2537-0:293:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2496:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2506:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:293:1736","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1455"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11945:34577":{"id":"2:11945:34577","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2232-0:284:1724":{"id":"b:2:2232-0:284:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2674:2254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2226:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:284:1724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2234:2051"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2537-0:284:1724":{"id":"b:2:2537-0:284:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2496:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2506:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:284:1724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1455"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:7139-0:60:1649":{"id":"b:2:7139-0:60:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7251:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7135:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:7141:1735","2:7142:1736","2:7143:775"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:42":{"id":"0:42","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[111,0],"end":[115,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9047:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9047:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:44:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:21:1702":{"id":"0:21:1702","crate_id":0,"name":"get_or","span":{"filename":"src/cached.rs","begin":[41,4],"end":[46,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates it if it doesn't\nexist.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["create",{"kind":"generic","inner":"F"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2939:1705","args":{"parenthesized":{"inputs":[],"output":{"kind":"generic","inner":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:284:1724":{"id":"0:284:1724","crate_id":0,"name":"Iter","span":{"filename":"src/lib.rs","begin":[451,0],"end":[454,1]},"visibility":"public","docs":"Iterator over the contents of a `ThreadLocal`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2681:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2681:226-0:284:1724","a:2:8185:2097-0:284:1724","a:2:8184:1657-0:284:1724","a:2:2731:2379-0:284:1724","a:2:2667:218-0:284:1724","b:2:2235-0:284:1724","b:2:2526-0:284:1724","b:2:2522-0:284:1724","b:2:3326-0:284:1724","b:2:2232-0:284:1724","b:2:2532-0:284:1724","b:2:7139-0:284:1724","b:2:2537-0:284:1724","0:205","0:289","0:211"]}},"2:11868:1745":{"id":"2:11868:1745","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9732:220","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9732:220","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:11860:312":{"id":"2:11860:312","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:11861:1677","`u8`":"1:11913:1477"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2526-0:11:1651":{"id":"b:2:2526-0:11:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2499:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2528:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[128,0],"end":[128,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2681:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:189:659":{"id":"0:189:659","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[357,4],"end":[359,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9006:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8995:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11864:1675":{"id":"2:11864:1675","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:40660:177"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40658:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9732:220","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9732:220","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:152:1687":{"id":"0:152:1687","crate_id":0,"name":"with_capacity","span":{"filename":"src/lib.rs","begin":[167,4],"end":[189,5]},"visibility":"public","docs":"Creates a new `ThreadLocal` with an initial capacity. If less than the capacity threads\naccess the thread local it will never reallocate. The capacity may be rounded up to the\nnearest power of two.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["capacity",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11972:25726":{"id":"2:11972:25726","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:292:659":{"id":"0:292:659","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[450,9],"end":[450,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9006:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8995:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3326-0:11:1651":{"id":"b:2:3326-0:11:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2674:2254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3324:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3328:1469"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:211":{"id":"0:211","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[465,0],"end":[465,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2681:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7521:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:284:1724","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[83,0],"end":[92,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7135:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:30:1735","0:31:1736","0:32:775"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:232:659":{"id":"0:232:659","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[491,4],"end":[493,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9006:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8995:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11942:34575":{"id":"2:11942:34575","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2232-0:60:1649":{"id":"b:2:2232-0:60:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2674:2254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2226:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2234:2051"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2667:218-0:129:1665":{"id":"a:2:2667:218-0:129:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2731:2379-0:60:1649":{"id":"a:2:2731:2379-0:60:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2731:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:293:1736":{"id":"0:293:1736","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[498,0],"end":[501,1]},"visibility":"public","docs":"An iterator that moves out of a `ThreadLocal`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2681:226-0:293:1736","a:2:8185:2097-0:293:1736","a:2:8184:1657-0:293:1736","a:2:2731:2379-0:293:1736","a:2:2667:218-0:293:1736","b:2:2235-0:293:1736","b:2:2526-0:293:1736","b:2:2522-0:293:1736","b:2:3326-0:293:1736","b:2:2232-0:293:1736","b:2:2532-0:293:1736","b:2:7139-0:293:1736","b:2:2537-0:293:1736","0:239","0:241","0:233","0:297"]}},"a:2:8185:2097-0:47:1650":{"id":"a:2:8185:2097-0:47:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8185:2097","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1650","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:60:1649":{"id":"0:60:1649","crate_id":0,"name":"CachedIntoIter","span":{"filename":"src/cached.rs","begin":[143,0],"end":[145,1]},"visibility":"public","docs":"An iterator that moves out of a `CachedThreadLocal`.","links":{},"attrs":["#[deprecated(since = \"1.1.0\", note = \"Use `IntoIter` instead\")]"],"deprecation":{"since":"1.1.0","note":"Use `IntoIter` instead"},"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2681:226-0:60:1649","a:2:8185:2097-0:60:1649","a:2:8184:1657-0:60:1649","a:2:2731:2379-0:60:1649","a:2:2667:218-0:60:1649","b:2:2235-0:60:1649","b:2:2526-0:60:1649","b:2:2522-0:60:1649","b:2:3326-0:60:1649","b:2:2232-0:60:1649","b:2:2532-0:60:1649","b:2:7139-0:60:1649","b:2:2537-0:60:1649","0:63","0:68"]}},"2:11964:34582":{"id":"2:11964:34582","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11896:412","self::pattern":"2:11551:13564"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11571:13562","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11874:5696":{"id":"2:11874:5696","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11896:412"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:42620:5688","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:7143:775":{"id":"2:7143:775","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[23,0],"end":[81,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:19:929","0:20:1676","0:21:1702","0:23:1706","0:26:1680","0:27:1734"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[139,0],"end":[139,68]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:7196:1752","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1650","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:224:1746":{"id":"0:224:1746","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[480,4],"end":[482,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:40658:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:208:1735":{"id":"0:208:1735","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[457,4],"end":[457,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}},"b:2:2532-0:129:1665":{"id":"b:2:2532-0:129:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2506:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2502:236","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2535:127","2:2536:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:166:1734":{"id":"0:166:1734","crate_id":0,"name":"clear","span":{"filename":"src/lib.rs","begin":[313,4],"end":[315,5]},"visibility":"public","docs":"Removes all thread-specific values from the `ThreadLocal`, effectively\nreseting it to its original state.\n\nSince this call borrows the `ThreadLocal` mutably, this operation can\nbe done safely---the mutable borrow statically guarantees no other\nthreads are currently accessing their associated values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11946:34578":{"id":"2:11946:34578","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11896:412","self::pattern":"2:11551:13564"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11576:13561","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:151:929":{"id":"0:151:929","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[160,4],"end":[162,5]},"visibility":"public","docs":"Creates a new empty `ThreadLocal`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:164:786":{"id":"0:164:786","crate_id":0,"name":"iter","span":{"filename":"src/lib.rs","begin":[284,4],"end":[292,5]},"visibility":"public","docs":"Returns an iterator over the local values of all threads in unspecified\norder.\n\nThis call can be done safely, as `T` is required to implement [`Sync`].","links":{"`Sync`":"2:2681:226"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:284:1724","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2681:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:145:59":{"id":"0:145:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[131,4],"end":[133,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:1429":{"id":"0:0:1429","crate_id":0,"name":"thread_local","span":{"filename":"src/lib.rs","begin":[8,0],"end":[646,1]},"visibility":"public","docs":"Per-object thread-local storage\n\nThis library provides the `ThreadLocal` type which allows a separate copy of\nan object to be used for each thread. This allows for per-object\nthread-local storage, unlike the standard library's `thread_local!` macro\nwhich only allows static thread-local storage.\n\nPer-thread objects are not destroyed when a thread exits. Instead, objects\nare only destroyed when the `ThreadLocal` containing them is destroyed.\n\nYou can also iterate over the thread-local values of all thread in a\n`ThreadLocal` object using the `iter_mut` and `into_iter` methods. This can\nonly be done if you have mutable access to the `ThreadLocal` object, which\nguarantees that you are the only thread currently accessing it.\n\nNote that since thread IDs are recycled when a thread exits, it is possible\nfor one thread to retrieve the object of another thread. Since this can only\noccur after a thread has exited this does not lead to any race conditions.\n\n# Examples\n\nBasic usage of `ThreadLocal`:\n\n```rust\nuse thread_local::ThreadLocal;\nlet tls: ThreadLocal<u32> = ThreadLocal::new();\nassert_eq!(tls.get(), None);\nassert_eq!(tls.get_or(|| 5), &5);\nassert_eq!(tls.get(), Some(&5));\n```\n\nCombining thread-local values into a single result:\n\n```rust\nuse thread_local::ThreadLocal;\nuse std::sync::Arc;\nuse std::cell::Cell;\nuse std::thread;\n\nlet tls = Arc::new(ThreadLocal::new());\n\n// Create a bunch of threads to do stuff\nfor _ in 0..5 {\n    let tls2 = tls.clone();\n    thread::spawn(move || {\n        // Increment a counter to count some event...\n        let cell = tls2.get_or(|| Cell::new(0));\n        cell.set(cell.get() + 1);\n    }).join().unwrap();\n}\n\n// Once all threads are done, collect the counter values and return the\n// sum of all thread-local counter values.\nlet tls = Arc::try_unwrap(tls).unwrap();\nlet total = tls.into_iter().fold(0, |x, y| x + y.get());\nassert_eq!(total, 5);\n```","links":{},"attrs":["#![warn(missing_docs)]","#![allow(clippy :: mutex_atomic)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:110-0:60:1649","0:111-0:47:1650","0:112-0:11:1651","0:129:1665","0:284:1724","0:213:1731","0:293:1736"],"is_stripped":false}},"b:2:3326-0:213:1731":{"id":"b:2:3326-0:213:1731","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2674:2254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3324:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:213:1731","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3328:1469"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3326-0:129:1665":{"id":"b:2:3326-0:129:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2674:2254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3324:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3328:1469"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11905:29420":{"id":"2:11905:29420","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11551:13564","`DoubleEndedIterator`":"2:7173:120","prim@char":"1:11896:412","str::split":"2:11899:27481"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:42668:3007","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11571:13562","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:47:1650":{"id":"b:2:2537-0:47:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2496:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2506:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1650","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1455"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:110-0:60:1649":{"id":"0:110-0:60:1649","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[75,17],"end":[75,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"cached::CachedIntoIter","name":"CachedIntoIter","id":"0:60:1649","glob":false}},"0:235:1735":{"id":"0:235:1735","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[504,4],"end":[504,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:27:1734":{"id":"0:27:1734","crate_id":0,"name":"clear","span":{"filename":"src/cached.rs","begin":[78,4],"end":[80,5]},"visibility":"public","docs":"Removes all thread-specific values from the `ThreadLocal`, effectively\nreseting it to its original state.\n\nSince this call borrows the `ThreadLocal` mutably, this operation can\nbe done safely---the mutable borrow statically guarantees no other\nthreads are currently accessing their associated values.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11949:34579":{"id":"2:11949:34579","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11896:412","self::pattern":"2:11551:13564"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2522-0:11:1651":{"id":"b:2:2522-0:11:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2499:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2496:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2525:2542"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11955:29427":{"id":"2:11955:29427","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11896:412","self::pattern":"2:11551:13564"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40658:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11571:13562","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2535:127":{"id":"2:2535:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2506:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"2:11850:802":{"id":"2:11850:802","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11896:412"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:172":{"id":"0:172","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[330,0],"end":[337,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2681:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7135:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"items":["0:175:1735","0:176:1736","0:177:775"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:221:1735":{"id":"0:221:1735","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[474,4],"end":[474,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}},"0:16:59":{"id":"0:16:59","crate_id":0,"name":"default","span":{"filename":"src/cached.rs","begin":[18,4],"end":[20,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11967:34583":{"id":"2:11967:34583","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11513:126","`FromStr`":"2:11512:8452"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40802:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:11512:8452","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11512:8452","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2526-0:47:1650":{"id":"b:2:2526-0:47:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2499:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1650","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2528:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2526-0:213:1731":{"id":"b:2:2526-0:213:1731","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2499:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:213:1731","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2528:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8184:1657-0:284:1724":{"id":"a:2:8184:1657-0:284:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8184:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:284:1724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3326-0:47:1650":{"id":"b:2:3326-0:47:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2674:2254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3324:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1650","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3328:1469"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:66:943":{"id":"0:66:943","crate_id":0,"name":"next","span":{"filename":"src/cached.rs","begin":[151,4],"end":[153,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40658:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11880:34565":{"id":"2:11880:34565","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:42914:5808","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2237:24536":{"id":"2:2237:24536","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3328:1469":{"id":"2:3328:1469","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:38986:5736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:7139-0:47:1650":{"id":"b:2:7139-0:47:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7251:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7135:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1650","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:7141:1735","2:7142:1736","2:7143:775"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:41:1740":{"id":"0:41:1740","crate_id":0,"name":"get_or_default","span":{"filename":"src/cached.rs","begin":[106,4],"end":[108,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates a default one if\nit doesn't exist.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5339:35236":{"id":"5:5339:35236","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7192:222"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7192:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:205":{"id":"0:205","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[456,0],"end":[464,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2681:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["intersperse_with","last","partial_cmp_by","cloned","eq","zip","find_map","try_fold","min","by_ref","map_while","for_each","advance_by","eq_by","cycle","try_find","try_for_each","min_by","try_collect","ne","scan","skip","filter","nth","count","cmp","is_sorted","array_chunks","le","rposition","all","fold","min_by_key","collect_into","size_hint","map","flat_map","filter_map","step_by","any","is_sorted_by","sum","collect","rev","reduce","max","partition","position","flatten","gt","peekable","chain","is_sorted_by_key","product","unzip","try_reduce","max_by","enumerate","partition_in_place","fuse","take","skip_while","intersperse","partial_cmp","next_chunk","ge","__iterator_get_unchecked","cmp_by","copied","find","max_by_key","is_partitioned","inspect","take_while","lt"],"trait":{"name":"Iterator","id":"2:7251:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:284:1724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:208:1735","0:209:943","0:210:1746"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11877:31781":{"id":"2:11877:31781","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11878:31785"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:42924:5809","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:11:1651":{"id":"b:2:2537-0:11:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2496:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2506:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1455"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:176:1736":{"id":"0:176:1736","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[332,4],"end":[332,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:284:1724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"0:181:1735":{"id":"0:181:1735","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[340,4],"end":[340,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}},"0:55:943":{"id":"0:55:943","crate_id":0,"name":"next","span":{"filename":"src/cached.rs","begin":[129,4],"end":[131,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40658:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11935:34572":{"id":"2:11935:34572","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11551:13564","`DoubleEndedIterator`":"2:7173:120","prim@char":"1:11896:412","str::match_indices":"2:11932:34571"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:42818:5804","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11571:13562","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5324:35233":{"id":"5:5324:35233","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:1757","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6939:2988","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:1757","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6939:2988","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2731:2379-0:284:1724":{"id":"a:2:2731:2379-0:284:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2731:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:284:1724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2522-0:284:1724":{"id":"b:2:2522-0:284:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2499:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2496:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:284:1724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2525:2542"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2537-0:60:1649":{"id":"b:2:2537-0:60:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2496:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2506:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1455"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:175:1735":{"id":"0:175:1735","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[331,4],"end":[331,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}},"2:11971:25725":{"id":"2:11971:25725","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11888:29002":{"id":"2:11888:29002","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11896:412","self::pattern":"2:11551:13564"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11571:13562","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2235-0:213:1731":{"id":"b:2:2235-0:213:1731","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2674:2254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2229:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:213:1731","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2237:24536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2232-0:293:1736":{"id":"b:2:2232-0:293:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2674:2254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2226:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:293:1736","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2234:2051"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:159:1706":{"id":"0:159:1706","crate_id":0,"name":"get_or_try","span":{"filename":"src/lib.rs","begin":[211,4],"end":[221,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates it if it doesn't\nexist. If `create` fails, that error is returned and no element is\nadded.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["create",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40802:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2939:1705","args":{"parenthesized":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40802:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11852:34559":{"id":"2:11852:34559","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11970:25724":{"id":"2:11970:25724","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5331:35235":{"id":"5:5331:35235","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7192:222"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7192:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[473,0],"end":[483,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["intersperse_with","last","partial_cmp_by","cloned","eq","zip","find_map","try_fold","min","by_ref","map_while","for_each","advance_by","eq_by","cycle","try_find","try_for_each","min_by","try_collect","ne","scan","skip","filter","nth","count","cmp","is_sorted","array_chunks","le","rposition","all","fold","min_by_key","collect_into","size_hint","map","flat_map","filter_map","step_by","any","is_sorted_by","sum","collect","rev","reduce","max","partition","position","flatten","gt","peekable","chain","is_sorted_by_key","product","unzip","try_reduce","max_by","enumerate","partition_in_place","fuse","take","skip_while","intersperse","partial_cmp","next_chunk","ge","__iterator_get_unchecked","cmp_by","copied","find","max_by_key","is_partitioned","inspect","take_while","lt"],"trait":{"name":"Iterator","id":"2:7251:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:213:1731","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:221:1735","0:222:943","0:224:1746"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:289":{"id":"0:289","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[450,9],"end":[450,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9047:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2681:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9047:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:284:1724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:292:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2522-0:213:1731":{"id":"b:2:2522-0:213:1731","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2499:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2496:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:213:1731","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2525:2542"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11872:29409":{"id":"2:11872:29409","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:11873:29410"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5328:35234":{"id":"5:5328:35234","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7192:222"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7192:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11911:34567":{"id":"2:11911:34567","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11551:13564","str::split":"2:11899:27481","prim@char":"1:11896:412","str::split_terminator":"2:11908:34566"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:42718:5802","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11571:13562","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5343:25723":{"id":"5:5343:25723","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:11972:25726"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7192:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11932:34571":{"id":"2:11932:34571","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11551:13564","`DoubleEndedIterator`":"2:7173:120","prim@char":"1:11896:412","str::rmatch_indices":"2:11935:34572"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:42800:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2532-0:293:1736":{"id":"b:2:2532-0:293:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2506:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2502:236","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:293:1736","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2535:127","2:2536:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11873:29410":{"id":"2:11873:29410","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:11872:29409"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2667:218-0:11:1651":{"id":"a:2:2667:218-0:11:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2235-0:11:1651":{"id":"b:2:2235-0:11:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2674:2254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2229:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2237:24536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2522-0:47:1650":{"id":"b:2:2522-0:47:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2499:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2496:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1650","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2525:2542"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:239":{"id":"0:239","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[518,0],"end":[518,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:7196:1752","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:293:1736","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:111-0:47:1650":{"id":"0:111-0:47:1650","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[75,33],"end":[75,46]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"cached::CachedIterMut","name":"CachedIterMut","id":"0:47:1650","glob":false}},"0:30:1735":{"id":"0:30:1735","crate_id":0,"name":"Item","span":{"filename":"src/cached.rs","begin":[84,4],"end":[84,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"2:11882:29426":{"id":"2:11882:29426","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11896:412","self::pattern":"2:11551:13564"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:213:1731":{"id":"0:213:1731","crate_id":0,"name":"IterMut","span":{"filename":"src/lib.rs","begin":[468,0],"end":[471,1]},"visibility":"public","docs":"Mutable iterator over the contents of a `ThreadLocal`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2681:226-0:213:1731","a:2:8185:2097-0:213:1731","a:2:8184:1657-0:213:1731","a:2:2731:2379-0:213:1731","a:2:2667:218-0:213:1731","b:2:2235-0:213:1731","b:2:2526-0:213:1731","b:2:2522-0:213:1731","b:2:3326-0:213:1731","b:2:2232-0:213:1731","b:2:2532-0:213:1731","b:2:7139-0:213:1731","b:2:2537-0:213:1731","0:227","0:218","0:225","0:229"]}},"0:129:1665":{"id":"0:129:1665","crate_id":0,"name":"ThreadLocal","span":{"filename":"src/lib.rs","begin":[102,0],"end":[110,1]},"visibility":"public","docs":"Thread-local variable wrapper\n\nSee the [module-level documentation](index.html) for more.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:149","0:184","a:2:8185:2097-0:129:1665","a:2:2731:2379-0:129:1665","a:2:2667:218-0:129:1665","b:2:2235-0:129:1665","b:2:2526-0:129:1665","b:2:2522-0:129:1665","b:2:3326-0:129:1665","b:2:2232-0:129:1665","b:2:2532-0:129:1665","b:2:2537-0:129:1665","0:172","0:178","0:167","0:146","0:190","0:141","0:187","0:143"]}},"0:32:775":{"id":"0:32:775","crate_id":0,"name":"into_iter","span":{"filename":"src/cached.rs","begin":[87,4],"end":[91,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2667:218-0:213:1731":{"id":"a:2:2667:218-0:213:1731","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:213:1731","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:297":{"id":"0:297","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[497,9],"end":[497,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9047:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9047:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:293:1736","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:299:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11858:24761":{"id":"2:11858:24761","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11119:13565"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2536:1456":{"id":"2:2536:1456","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40802:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2506:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:155:1676":{"id":"0:155:1676","crate_id":0,"name":"get","span":{"filename":"src/lib.rs","begin":[192,4],"end":[194,5]},"visibility":"public","docs":"Returns the element for the current thread, if it exists.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40658:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2526-0:293:1736":{"id":"b:2:2526-0:293:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2499:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:293:1736","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2528:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11891:2584":{"id":"2:11891:2584","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:40660:177","prim@char":"1:11896:412","self::pattern":"2:11551:13564"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40658:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2681:226-0:60:1649":{"id":"a:2:2681:226-0:60:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2681:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2731:2379-0:213:1731":{"id":"a:2:2731:2379-0:213:1731","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2731:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:213:1731","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2731:2379-0:11:1651":{"id":"a:2:2731:2379-0:11:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2731:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5323":{"id":"5:5323","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5324:35233","5:5325:1755","5:5328:35234","5:5331:35235","5:5339:35236","5:5340:35237","5:5341:2187","5:5342:25722","5:5343:25723"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5342:25722":{"id":"5:5342:25722","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:11971:25725"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7192:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11975:8266":{"id":"2:11975:8266","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4514:8266"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:42958:5656","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5341:2187":{"id":"5:5341:2187","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7192:222"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7192:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2532-0:47:1650":{"id":"b:2:2532-0:47:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2506:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2502:236","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1650","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2535:127","2:2536:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8184:1657-0:60:1649":{"id":"a:2:8184:1657-0:60:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8184:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8184:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:236:943":{"id":"0:236:943","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[505,4],"end":[512,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40658:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:7139-0:293:1736":{"id":"b:2:7139-0:293:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7251:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7135:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:293:1736","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:7141:1735","2:7142:1736","2:7143:775"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:11871:34564":{"id":"2:11871:34564","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11902:1380","crate::ops::IndexMut":"2:2992:8282","str::slice_unchecked":"2:11870:34563"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:149":{"id":"0:149","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[158,0],"end":[316,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:151:929","0:152:1687","0:155:1676","0:156:1702","0:159:1706","0:164:786","0:165:1680","0:166:1734"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:44:659":{"id":"0:44:659","crate_id":0,"name":"fmt","span":{"filename":"src/cached.rs","begin":[112,4],"end":[114,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9006:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8995:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:38:775":{"id":"0:38:775","crate_id":0,"name":"into_iter","span":{"filename":"src/cached.rs","begin":[98,4],"end":[100,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1650","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2681:226-0:284:1724":{"id":"a:2:2681:226-0:284:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2681:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:284:1724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11920:34568":{"id":"2:11920:34568","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40658:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:183:775":{"id":"0:183:775","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[343,4],"end":[345,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:213:1731","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11923:34569":{"id":"2:11923:34569","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40658:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11571:13562","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2681:226-0:293:1736":{"id":"a:2:2681:226-0:293:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2681:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:293:1736","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:67:1746":{"id":"0:67:1746","crate_id":0,"name":"size_hint","span":{"filename":"src/cached.rs","begin":[156,4],"end":[158,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:40658:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8185:2097-0:213:1731":{"id":"a:2:8185:2097-0:213:1731","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8185:2097","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:213:1731","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3326-0:284:1724":{"id":"b:2:3326-0:284:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2674:2254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3324:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:284:1724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3328:1469"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2235-0:47:1650":{"id":"b:2:2235-0:47:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2674:2254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2229:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1650","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2237:24536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:47:1650":{"id":"0:47:1650","crate_id":0,"name":"CachedIterMut","span":{"filename":"src/cached.rs","begin":[121,0],"end":[123,1]},"visibility":"public","docs":"Mutable iterator over the contents of a `CachedThreadLocal`.","links":{},"attrs":["#[deprecated(since = \"1.1.0\", note = \"Use `IterMut` instead\")]"],"deprecation":{"since":"1.1.0","note":"Use `IterMut` instead"},"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2681:226-0:47:1650","a:2:8185:2097-0:47:1650","a:2:8184:1657-0:47:1650","a:2:2731:2379-0:47:1650","a:2:2667:218-0:47:1650","b:2:2235-0:47:1650","b:2:2526-0:47:1650","b:2:2522-0:47:1650","b:2:3326-0:47:1650","b:2:2232-0:47:1650","b:2:2532-0:47:1650","b:2:7139-0:47:1650","b:2:2537-0:47:1650","0:51","0:57"]}},"0:165:1680":{"id":"0:165:1680","crate_id":0,"name":"iter_mut","span":{"filename":"src/lib.rs","begin":[300,4],"end":[305,5]},"visibility":"public","docs":"Returns a mutable iterator over the local values of all threads in\nunspecified order.\n\nSince this call borrows the `ThreadLocal` mutably, this operation can\nbe done safely---the mutable borrow statically guarantees no other\nthreads are currently accessing their associated values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:213:1731","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:20:1676":{"id":"0:20:1676","crate_id":0,"name":"get","span":{"filename":"src/cached.rs","begin":[34,4],"end":[36,5]},"visibility":"public","docs":"Returns the element for the current thread, if it exists.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40658:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:213:1731":{"id":"b:2:2537-0:213:1731","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2496:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2506:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:213:1731","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1455"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:184":{"id":"0:184","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[348,0],"end":[354,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"2:2573:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:186:1740"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:54:1735":{"id":"0:54:1735","crate_id":0,"name":"Item","span":{"filename":"src/cached.rs","begin":[126,4],"end":[126,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}},"b:2:3326-0:60:1649":{"id":"b:2:3326-0:60:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2674:2254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3324:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3328:1469"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11862:1676":{"id":"2:11862:1676","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:40660:177"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40658:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9732:220","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9732:220","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11875:5819":{"id":"2:11875:5819","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11896:412"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:42626:5799","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11969:25720":{"id":"2:11969:25720","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8185:2097-0:60:1649":{"id":"a:2:8185:2097-0:60:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8185:2097","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:7142:1736":{"id":"2:7142:1736","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"I"}}},"0:112-0:11:1651":{"id":"0:112-0:11:1651","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[75,48],"end":[75,65]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"cached::CachedThreadLocal","name":"CachedThreadLocal","id":"0:11:1651","glob":false}},"0:19:929":{"id":"0:19:929","crate_id":0,"name":"new","span":{"filename":"src/cached.rs","begin":[26,4],"end":[30,5]},"visibility":"public","docs":"Creates a new empty `CachedThreadLocal`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:186:1740":{"id":"0:186:1740","crate_id":0,"name":"get_or_default","span":{"filename":"src/lib.rs","begin":[351,4],"end":[353,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates a default one if\nit doesn't exist.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:7139-0:213:1731":{"id":"b:2:7139-0:213:1731","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7251:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7135:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:213:1731","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:7141:1735","2:7142:1736","2:7143:775"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:233":{"id":"0:233","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[503,0],"end":[516,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["intersperse_with","last","partial_cmp_by","cloned","eq","zip","find_map","try_fold","min","by_ref","map_while","for_each","advance_by","eq_by","cycle","try_find","try_for_each","min_by","try_collect","ne","scan","skip","filter","nth","count","cmp","is_sorted","array_chunks","le","rposition","all","fold","min_by_key","collect_into","size_hint","map","flat_map","filter_map","step_by","any","is_sorted_by","sum","collect","rev","reduce","max","partition","position","flatten","gt","peekable","chain","is_sorted_by_key","product","unzip","try_reduce","max_by","enumerate","partition_in_place","fuse","take","skip_while","intersperse","partial_cmp","next_chunk","ge","__iterator_get_unchecked","cmp_by","copied","find","max_by_key","is_partitioned","inspect","take_while","lt"],"trait":{"name":"Iterator","id":"2:7251:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:293:1736","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:235:1735","0:236:943","0:238:1746"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:148:580":{"id":"0:148:580","crate_id":0,"name":"drop","span":{"filename":"src/lib.rs","begin":[137,4],"end":[155,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:146":{"id":"0:146","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[136,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2929:1674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:148:580"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2532-0:11:1651":{"id":"b:2:2532-0:11:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2506:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2502:236","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2535:127","2:2536:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:14":{"id":"0:14","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[17,0],"end":[21,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2573:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:16:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:182:1736":{"id":"0:182:1736","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[341,4],"end":[341,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:213:1731","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"2:11878:31785":{"id":"2:11878:31785","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11877:31781"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:42933:5810","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5340:35237":{"id":"5:5340:35237","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:286:1757","`String`":"5:7192:222"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:1757","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6939:2988","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7192:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11855:34561":{"id":"2:11855:34561","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:11853:34560"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2235-0:129:1665":{"id":"b:2:2235-0:129:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2674:2254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2229:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2237:24536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:169:1735":{"id":"0:169:1735","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[319,4],"end":[319,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:36:1735":{"id":"0:36:1735","crate_id":0,"name":"Item","span":{"filename":"src/cached.rs","begin":[95,4],"end":[95,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}},"0:23:1706":{"id":"0:23:1706","crate_id":0,"name":"get_or_try","span":{"filename":"src/cached.rs","begin":[52,4],"end":[57,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates it if it doesn't\nexist. If `create` fails, that error is returned and no element is\nadded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["create",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40802:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2939:1705","args":{"parenthesized":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40802:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:7141:1735":{"id":"2:7141:1735","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:7251:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:11895:2548":{"id":"2:11895:2548","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:40660:177","prim@char":"1:11896:412","self::pattern":"2:11551:13564"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40658:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11571:13562","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:33":{"id":"0:33","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[94,0],"end":[101,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7135:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"items":["0:36:1735","0:37:1736","0:38:775"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2235-0:293:1736":{"id":"b:2:2235-0:293:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2674:2254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2229:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:293:1736","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2237:24536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:210:1746":{"id":"0:210:1746","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[461,4],"end":[463,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:40658:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8184:1657-0:47:1650":{"id":"a:2:8184:1657-0:47:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8184:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1650","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:11938:34573":{"id":"2:11938:34573","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:229":{"id":"0:229","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[490,0],"end":[494,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9047:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9047:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:213:1731","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:232:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11853:34560":{"id":"2:11853:34560","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:156:1702":{"id":"0:156:1702","crate_id":0,"name":"get_or","span":{"filename":"src/lib.rs","begin":[198,4],"end":[206,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates it if it doesn't\nexist.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["create",{"kind":"generic","inner":"F"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2939:1705","args":{"parenthesized":{"inputs":[],"output":{"kind":"generic","inner":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2532-0:284:1724":{"id":"b:2:2532-0:284:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2506:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2502:236","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:284:1724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2535:127","2:2536:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[519,0],"end":[519,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7521:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:293:1736","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:177:775":{"id":"0:177:775","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[334,4],"end":[336,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:7135:150","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11958:34580":{"id":"2:11958:34580","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11896:412","self::pattern":"2:11551:13564"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11571:13562","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11973:34584":{"id":"2:11973:34584","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4513:34584"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:42949:5753","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2234:2051":{"id":"2:2234:2051","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2681:226-0:11:1651":{"id":"a:2:2681:226-0:11:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2681:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11917:29424":{"id":"2:11917:29424","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11896:412","str::splitn":"2:11914:29422","self::pattern":"2:11551:13564"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:42772:3009","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11571:13562","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11851:2549":{"id":"2:11851:2549","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2532-0:60:1649":{"id":"b:2:2532-0:60:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2506:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2502:236","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2535:127","2:2536:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:171:775":{"id":"0:171:775","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[322,4],"end":[327,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:293:1736","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:167":{"id":"0:167","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[318,0],"end":[328,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7135:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:169:1735","0:170:1736","0:171:775"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:143":{"id":"0:143","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[130,0],"end":[134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2573:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:145:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11944:34576":{"id":"2:11944:34576","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8185:2097-0:129:1665":{"id":"a:2:8185:2097-0:129:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8185:2097","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:37:1736":{"id":"0:37:1736","crate_id":0,"name":"IntoIter","span":{"filename":"src/cached.rs","begin":[96,4],"end":[96,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1650","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"0:39":{"id":"0:39","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[103,0],"end":[109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"2:2573:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:41:1740"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:65:1735":{"id":"0:65:1735","crate_id":0,"name":"Item","span":{"filename":"src/cached.rs","begin":[148,4],"end":[148,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"2:11876:5650":{"id":"2:11876:5650","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:42636:3488","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:178":{"id":"0:178","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[339,0],"end":[346,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7135:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"items":["0:181:1735","0:182:1736","0:183:775"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11926:2063":{"id":"2:11926:2063","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11551:13564","`DoubleEndedIterator`":"2:7173:120","prim@char":"1:11896:412","str::matches":"2:11926:2063"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:42854:5805","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3326-0:293:1736":{"id":"b:2:3326-0:293:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2674:2254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3324:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:293:1736","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3328:1469"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:170:1736":{"id":"0:170:1736","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[320,4],"end":[320,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:293:1736","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"2:11859:34562":{"id":"2:11859:34562","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2731:2379-0:129:1665":{"id":"a:2:2731:2379-0:129:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2731:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2526-0:129:1665":{"id":"b:2:2526-0:129:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2499:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2528:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8184:1657-0:213:1731":{"id":"a:2:8184:1657-0:213:1731","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8184:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:213:1731","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:51":{"id":"0:51","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[125,0],"end":[137,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["intersperse_with","last","partial_cmp_by","cloned","eq","zip","find_map","try_fold","min","by_ref","map_while","for_each","advance_by","eq_by","cycle","try_find","try_for_each","min_by","try_collect","ne","scan","skip","filter","nth","count","cmp","is_sorted","array_chunks","le","rposition","all","fold","min_by_key","collect_into","size_hint","map","flat_map","filter_map","step_by","any","is_sorted_by","sum","collect","rev","reduce","max","partition","position","flatten","gt","peekable","chain","is_sorted_by_key","product","unzip","try_reduce","max_by","enumerate","partition_in_place","fuse","take","skip_while","intersperse","partial_cmp","next_chunk","ge","__iterator_get_unchecked","cmp_by","copied","find","max_by_key","is_partitioned","inspect","take_while","lt"],"trait":{"name":"Iterator","id":"2:7251:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1650","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:54:1735","0:55:943","0:56:1746"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2526-0:284:1724":{"id":"b:2:2526-0:284:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2499:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:284:1724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2528:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2667:218-0:293:1736":{"id":"a:2:2667:218-0:293:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:293:1736","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11899:27481":{"id":"2:11899:27481","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11551:13564","`DoubleEndedIterator`":"2:7173:120","prim@char":"1:11896:412","str::split_whitespace":"2:11877:31781","str::rsplit":"2:11905:29420"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:42650:2999","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2528:685":{"id":"2:2528:685","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8185:2097-0:293:1736":{"id":"a:2:8185:2097-0:293:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8185:2097","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:293:1736","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:26:1680":{"id":"0:26:1680","crate_id":0,"name":"iter_mut","span":{"filename":"src/cached.rs","begin":[65,4],"end":[69,5]},"visibility":"public","docs":"Returns a mutable iterator over the local values of all threads.\n\nSince this call borrows the `ThreadLocal` mutably, this operation can\nbe done safely---the mutable borrow statically guarantees no other\nthreads are currently accessing their associated values.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1650","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2522-0:60:1649":{"id":"b:2:2522-0:60:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2499:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2496:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2525:2542"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2731:2379-0:293:1736":{"id":"a:2:2731:2379-0:293:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2731:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:293:1736","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11961:34581":{"id":"2:11961:34581","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11896:412","self::pattern":"2:11551:13564"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2232-0:11:1651":{"id":"b:2:2232-0:11:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2674:2254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2226:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2234:2051"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:68":{"id":"0:68","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[161,0],"end":[161,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:7196:1752","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2541:1455":{"id":"2:2541:1455","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40802:208","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2506:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2232-0:129:1665":{"id":"b:2:2232-0:129:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2674:2254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2226:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2234:2051"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:187":{"id":"0:187","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[356,0],"end":[360,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9047:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9047:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:189:659"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2232-0:47:1650":{"id":"b:2:2232-0:47:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2674:2254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2226:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1650","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2234:2051"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2532-0:213:1731":{"id":"b:2:2532-0:213:1731","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2506:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2502:236","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:213:1731","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2535:127","2:2536:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11866:1712":{"id":"2:11866:1712","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9732:220","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9732:220","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:11952:24760":{"id":"2:11952:24760","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11896:412","self::pattern":"2:11551:13564"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40658:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11929:34570":{"id":"2:11929:34570","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11551:13564","`DoubleEndedIterator`":"2:7173:120","prim@char":"1:11896:412","str::matches":"2:11926:2063"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:42872:5806","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11571:13562","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2522-0:293:1736":{"id":"b:2:2522-0:293:1736","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2499:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2496:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:293:1736","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2525:2542"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11908:34566":{"id":"2:11908:34566","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11551:13564","str::split":"2:11899:27481","prim@char":"1:11896:412","`DoubleEndedIterator`":"2:7173:120","str::rsplit_terminator":"2:11911:34567"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:42700:5801","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:129:1665":{"id":"b:2:2537-0:129:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2496:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2506:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1455"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:299:659":{"id":"0:299:659","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[497,9],"end":[497,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9006:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8995:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2235-0:60:1649":{"id":"b:2:2235-0:60:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2674:2254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2229:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2237:24536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:31:1736":{"id":"0:31:1736","crate_id":0,"name":"IntoIter","span":{"filename":"src/cached.rs","begin":[85,4],"end":[85,38]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1649","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"0:209:943":{"id":"0:209:943","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[458,4],"end":[460,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40658:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:7251:157","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11976:34585":{"id":"2:11976:34585","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4511:34585"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:42967:5746","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2522-0:129:1665":{"id":"b:2:2522-0:129:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2499:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2496:148","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2525:2542"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:56:1746":{"id":"0:56:1746","crate_id":0,"name":"size_hint","span":{"filename":"src/cached.rs","begin":[134,4],"end":[136,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:40658:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11914:29422":{"id":"2:11914:29422","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11896:412","self::pattern":"2:11551:13564","str::rsplitn":"2:11917:29424"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:42754:3011","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11556:5682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11849":{"id":"2:11849","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11850:802","2:11851:2549","2:11852:34559","2:11853:34560","2:11855:34561","2:11858:24761","2:11859:34562","2:11860:312","2:11861:1677","2:11862:1676","2:11864:1675","2:11866:1712","2:11868:1745","2:11870:34563","2:11871:34564","2:11872:29409","2:11873:29410","2:11874:5696","2:11875:5819","2:11876:5650","2:11877:31781","2:11878:31785","2:11879:6228","2:11880:34565","2:11881:31780","2:11882:29426","2:11885:29000","2:11888:29002","2:11891:2584","2:11895:2548","2:11899:27481","2:11902:29418","2:11905:29420","2:11908:34566","2:11911:34567","2:11914:29422","2:11917:29424","2:11920:34568","2:11923:34569","2:11926:2063","2:11929:34570","2:11932:34571","2:11935:34572","2:11938:34573","2:11940:34574","2:11942:34575","2:11944:34576","2:11945:34577","2:11946:34578","2:11949:34579","2:11952:24760","2:11955:29427","2:11958:34580","2:11961:34581","2:11964:34582","2:11967:34583","2:11969:25720","2:11970:25724","2:11971:25725","2:11972:25726","2:11973:34584","2:11975:8266","2:11976:34585"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[362,0],"end":[362,59]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8184:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8184:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:129:1665","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[117,0],"end":[117,65]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8184:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8184:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1651","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2667:218-0:284:1724":{"id":"a:2:2667:218-0:284:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:284:1724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2731:2379-0:47:1650":{"id":"a:2:2731:2379-0:47:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2731:2379","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1650","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:11:1651":{"id":"0:11:1651","crate_id":0,"name":"CachedThreadLocal","span":{"filename":"src/cached.rs","begin":[13,0],"end":[15,1]},"visibility":"public","docs":"Wrapper around [`ThreadLocal`].\n\nThis used to add a fast path for a single thread, however that has been\nobsoleted by performance improvements to [`ThreadLocal`] itself.","links":{"`ThreadLocal`":"0:129:1665"},"attrs":["#[deprecated(since = \"1.1.0\", note = \"Use `ThreadLocal` instead\")]"],"deprecation":{"since":"1.1.0","note":"Use `ThreadLocal` instead"},"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:17","0:39","a:2:2681:226-0:11:1651","a:2:8185:2097-0:11:1651","a:2:2731:2379-0:11:1651","a:2:2667:218-0:11:1651","b:2:2235-0:11:1651","b:2:2526-0:11:1651","b:2:2522-0:11:1651","b:2:3326-0:11:1651","b:2:2232-0:11:1651","b:2:2532-0:11:1651","b:2:2537-0:11:1651","0:45","0:42","0:33","0:14","0:28"]}},"2:11881:31780":{"id":"2:11881:31780","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:42942:5695","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8185:2097-0:284:1724":{"id":"a:2:8185:2097-0:284:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8185:2097","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:284:1724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:7139-0:284:1724":{"id":"b:2:7139-0:284:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7251:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7135:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:284:1724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:7141:1735","2:7142:1736","2:7143:775"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:2540:127":{"id":"2:2540:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:31758:6994","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2235-0:284:1724":{"id":"b:2:2235-0:284:1724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2674:2254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2229:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:284:1724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2237:24536"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[485,0],"end":[485,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2667:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:7196:1752","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:213:1731","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:238:1746":{"id":"0:238:1746","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[513,4],"end":[515,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:40658:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:222:943":{"id":"0:222:943","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[475,4],"end":[479,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40658:179","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2681:226-0:213:1731":{"id":"a:2:2681:226-0:213:1731","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2681:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:213:1731","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"paths":{"1:8296:5997":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:8157:2999":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"1:8479:5998":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"6:6079:7783":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:4172:5995":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:531:7039":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"17:13777:4998":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:41949:3682":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:43056:5812":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"5:1992:3396":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"1:5759:2172":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:11907:634":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:39385:5760":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:20839:8478":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:2775:5307":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:13411:4886":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"5:6229:3181":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"16:5963:5146":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"11:1044:19463":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"6:4805:7481":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:42548:3004":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:42477:2990":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"16:8180:20394":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"16:7042:5295":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:7665:3697":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:11264:5689":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:39490:2202":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:20563:8480":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"11:393:6235":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:11461:3714":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:2206:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"16:7509:5071":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"6:4597:7388":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:5367:6008":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"6:7428:7962":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:43373:8068":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:5553:204":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"16:6179:3569":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"5:7115:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:5567:3267":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:1787:5973":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"16:6868:3555":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:13181:4823":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:13194:4829":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"6:4945:7552":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:2296:186":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:10626:4314":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:12098:4535":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:13233:4840":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"5:2913:34311":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:42942:5695":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"16:3585:5076":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"20:369:2103":{"crate_id":20,"path":["once_cell","imp","OnceCell"],"kind":"struct"},"2:43177:5698":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:3126:26030":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:41215:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:1801:2125":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"16:4596:5090":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:9530:3246":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:45429:5897":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:9006:131":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"16:3782:5078":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"16:6904:3599":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:41957:3684":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"0:0:1429":{"crate_id":0,"path":["thread_local"],"kind":"module"},"6:540:7045":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"16:2967:19525":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:3241:2124":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"6:4483:7370":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:11220:4367":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"18:590:4024":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"6:1663:7176":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:21661:31240":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:6182:3266":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"17:10857:20454":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:10052:4240":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"17:13803:5007":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:2731:2379":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"5:2084:5630":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:1579:5556":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:1713:2489":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"6:1617:7140":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:8598:20451":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"6:4261:7250":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"5:4307:3157":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"17:13821:5013":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"17:11544:4421":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:12113:4538":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"5:6952:1736":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:40490:5675":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"16:4510:5087":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:44647:5858":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:20832:8401":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"16:6327:3591":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:13477:4901":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"6:553:7051":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:42626:5799":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:39397:31265":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:6544:3595":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"14:7:5538":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:10645:8081":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"5:5180:2983":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:2341:2462":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:22174:2638":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:13651:4966":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:39006:5354":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"2:39723:2226":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:7843:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:4635:8439":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"18:707:4047":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"16:8025:5442":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:955:5549":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:11867:8271":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:22372:5725":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"16:5724:5120":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"5:2186:3655":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:20688:8476":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"16:4445:5085":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:3322:2188":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"1:7516:3277":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"16:6431:5201":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"11:2069:3385":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"17:12576:4627":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"5:877:1724":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:9038:35361":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:11906:633":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"17:12510:4620":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"11:697:3651":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"5:2909:34308":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"18:690:4046":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"11:1859:5557":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:4231:205":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"16:4818:5096":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"16:4480:5086":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:6290:164":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"5:4108:3157":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:48977:244":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:4574:7849":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:22108:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"18:548:140":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:9200:5684":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:11910:734":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:6403:2173":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"17:9822:4215":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:360:2645":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:8917:3698":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"1:11013:6118":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"16:6990:5288":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"9:52:3622":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"16:6535:3164":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"1:6546:2175":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:11903:1459":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"17:13324:4860":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"5:6032:8511":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:6079:3255":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:10458:1658":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"17:13659:4969":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:6518:2201":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:10712:20560":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"16:5847:5131":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:3436:2613":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:12194:190":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"5:2113:3652":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:8758:6117":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:5920:204":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"17:10440:4293":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:3086:8283":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:39751:2228":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:40861:1736":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:38947:2140":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:39380:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"6:1710:7203":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"11:2080:5551":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:7867:3395":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"5:1194:1669":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:21644:5708":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:45012:5875":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:44444:5850":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:10026:4235":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"5:7013:3656":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:41697:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"6:4628:7397":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"15:219:3615":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:11551:13564":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:2812:5312":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:40794:191":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"1:949:3381":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"6:4994:7579":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"16:5741:20382":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:13453:4897":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:8244:6087":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:9060:2617":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"5:812:3187":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:21447:5704":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:7644:8269":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:8291:5682":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:13721:4990":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:43085:5820":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:3170:13615":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:46701:5953":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"16:2931:19524":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"17:13461:4898":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:10798:20453":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:11993:4519":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"6:594:7074":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"17:12282:4580":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:39366:5759":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:21248:3671":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:8605:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:39267:5745":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:1926:8312":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:7135:150":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:13499:4906":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:8151:3488":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:40709:1735":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:2929:1674":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:10478:4296":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:11921:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"17:10823:4144":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:4679:8404":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"17:10705:4320":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:2130:581":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:46427:5939":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"6:7463:7970":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:39990:2194":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:10015:4234":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"17:8753:3484":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"5:5176:2982":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:3871:8385":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"6:4307:7284":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:5499:8457":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"16:6671:5239":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"6:1541:7091":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:975:4065":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:31794:5728":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:8864:8462":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"5:6533:3227":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:10418:5988":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"2:46724:5954":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:12307:4584":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"17:8195:20430":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:6607:2211":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:11920:1112":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:10940:3284":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"6:4422:7339":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:20841:3669":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"16:7065:5297":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:2686:2121":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"9:325:6998":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:9052:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"16:6935:5274":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:39941:5669":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:44314:5845":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:44937:5873":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:9047:111":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:38759:13545":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"17:9876:4123":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:11556:4422":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"5:6939:2988":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:46587:5945":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:11862:3715":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:43102:5821":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:40975:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:4677:8403":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:41431:2616":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:10691:20559":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:48964:244":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:10079:3007":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:44693:5865":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"11:659:1736":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:4092:6244":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"5:1379:1736":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:11878:24781":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:30004:1656":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"17:10416:4291":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"16:2808:5060":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:10092:4244":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"16:7366:20390":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"16:6728:5252":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"16:2546:5049":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:9772:4213":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"16:5886:5133":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:43214:5823":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:10516:4299":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:483:3257":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:3324:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"17:12158:4543":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"17:10000:4231":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:9545:3250":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"17:8718:3483":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:39020:2116":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"16:7743:3611":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"5:3741:3181":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:586:7069":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:7579:2646":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:11696:3293":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:4720:8272":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:9826:4216":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:43385:8071":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"17:10377:4285":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:3461:8362":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:11339:3506":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"16:7259:2094":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"6:6094:7794":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:1897:5975":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:43249:5828":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"6:4301:7283":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:13419:4889":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:8740:6116":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:9839:4217":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:41789:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"17:11484:4408":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"16:4568:5089":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:13433:4891":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"5:1401:3648":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"18:736:24298":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:42594:5795":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:8794:1724":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:39413:5761":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:8085:2183":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"17:8979:35367":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"5:5426:3215":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:9628:4202":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"11:1872:5559":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"17:13041:4800":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:9178:4176":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:10580:4309":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"5:3121:5557":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"5:1410:3649":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:7521:1654":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:45317:5895":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"5:2902:2603":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:9959:4228":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:10700:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:4070:6243":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:39963:2188":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:4240:2110":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:11001:6117":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"17:10257:4277":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"6:7469:7971":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"16:6890:3598":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"16:5998:20383":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"6:4416:7336":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"6:4812:990":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:733:141":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"6:6548:7834":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:43657:5841":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:46633:5949":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"18:699:3460":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:9322:35362":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"11:1628:3175":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:10569:4305":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:29781:8382":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"1:10946:3285":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"16:7293:5333":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"16:7543:3603":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:9986:4230":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:1787:4067":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"5:7192:222":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:46622:5948":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"16:6662:5238":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:13469:4900":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:13344:4867":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:8236:6094":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:12388:4594":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"6:1899:15479":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:2760:8466":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"11:834:3381":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"17:9498:3490":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:21609:5706":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:10068:4242":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:2905:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:8778:3662":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:8746:184":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"18:636:4036":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"14:187:19475":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"17:10747:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"16:7596:20391":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:11247:6250":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:9978:5974":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:8823:3486":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"16:6146:192":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:13219:4837":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:10142:20533":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:20411:33647":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:9115:24799":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","fast","DtorState"],"kind":"enum"},"1:5496:7755":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"16:5655:5066":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"16:7016:5289":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:4108:8410":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:44462:5851":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:11895:926":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:42538:3006":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:39510:2203":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:75:1530":{"crate_id":2,"path":["core","usize"],"kind":"module"},"17:13169:4820":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:11241:6249":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"6:4877:7525":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"6:4353:7309":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:6831:3288":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","fast","Key"],"kind":"struct"},"16:5708:3562":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"6:5660:7586":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:1596:5559":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:39333:5754":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:22141:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:11375:3013":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"6:1571:7111":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"11:2198:6995":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:40467:153":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"5:1039:6240":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"6:1559:7102":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:11911:735":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"17:12835:4696":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"6:4703:7432":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"11:738:3649":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"6:4850:7507":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:42189:5792":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"11:725:3648":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:8995:208":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:44745:5867":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"6:1534:7088":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"16:7077:20389":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"6:4583:7387":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:12980:4793":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:42503:2202":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:6003:3268":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"6:4871:7522":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"5:6997:1736":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"6:1527:7086":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"6:1645:7164":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:0:1372":{"crate_id":1,"path":["std"],"kind":"module"},"1:10626:6139":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"1:1073:5551":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:3921:8387":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:10354:4284":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"14:160:5538":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"18:671:4043":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"6:5910:7725":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:42700:5801":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"18:755:4057":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"11:387:6234":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:10720:26325":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:11576:13561":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:41965:3685":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:9181:3041":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:38821:198":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:3504:3203":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"5:4340:3208":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:2807:13773":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:39206:5739":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:10222:3411":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"16:4932:5100":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"6:7440:7964":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:12354:3255":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:44961:5874":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"6:5843:7691":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"16:6061:19497":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"9:445:19386":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"5:2633:7986":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:43150:5822":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:21500:5705":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:21734:5720":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:7144:2198":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:39640:2207":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:8975:3709":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"5:35:3177":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:3289:8367":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"18:481:4019":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:45553:5899":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:11234:4368":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"6:4618:7390":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:42208:2991":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:10125:4245":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:10936:3505":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:21096:8500":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"17:10104:3495":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"16:8269:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:9946:4227":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:39982:2192":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:42608:5798":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"6:499:7016":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"6:4379:7320":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:41095:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"6:5878:7712":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"16:3899:5081":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:38720:2649":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:22042:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:10428:4292":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:11508:6026":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"18:727:3462":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:11089:13825":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:12411:139":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"16:7478:5070":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:43034:13576":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:7173:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:13399:4883":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:13744:4991":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:43071:5817":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:13332:4861":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:9265:4177":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:1574:3171":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"6:5772:7650":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:21621:31250":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"17:9350:35368":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:21682:31246":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:41255:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"9:421:19388":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"11:1866:5558":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"16:7635:5392":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:3778:5993":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:9064:217":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:42924:5809":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"16:6243:35356":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:11897:1493":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"16:6767:5264":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:3929:8388":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"17:1947:4068":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:13015:4794":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"5:3160:34273":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"16:7335:35359":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"6:4727:7445":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:3979:8391":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:30204:31256":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"17:12915:4758":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:10412:5984":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"5:1451:196":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:42718:5802":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:43576:209":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"11:1065:35347":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:11320:3289":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:45973:5934":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:9732:220":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:44723:5866":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"5:1363:1731":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:9066:2615":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:2211:1714":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"1:4560:8389":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:12622:3499":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:640:5967":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"1:8176:6089":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"16:5594:5067":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:39460:3235":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:12923:4759":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:40935:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:9488:4193":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:40785:2459":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:46576:5944":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"16:8090:5447":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:9107:6128":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:3142:4073":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:4121:6246":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:8903:2164":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:39737:2227":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:7434:7963":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:11571:13562":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:13145:4818":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:40718:1724":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:9577:4198":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"16:5976:3543":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:13842:5016":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:14:1719":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:2338:187":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"16:2642:5053":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:4327:5083":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:39579:2216":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:2573:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:41424:2607":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:12550:4625":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:11109:4348":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"16:7711:5393":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:25617:3679":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:6751:8470":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:13159:4819":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"6:4900:7538":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:12403:4598":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:10681:4318":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"16:7669:3607":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:44869:5870":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:1848:3405":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"11:60:6232":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:11476:8086":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:46115:5935":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:11282:4383":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:12634:4636":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"16:7317:35357":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:2611:5981":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:8506:6115":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:39957:2186":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"6:7218:7960":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:6460:3593":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:39550:2213":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"17:10660:3499":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:39588:5765":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:2803:13771":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"18:660:4037":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:20413:33643":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:8632:20429":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"11:2053:1669":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:39200:5656":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:5959:7745":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:9315:3667":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"6:7452:7966":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:43282:5699":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:12293:4582":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:12563:4626":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"7:32:19372":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"16:7859:20393":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:10310:6116":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:9895:4223":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:38861:197":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"6:4787:7470":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"5:4976:2159":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"1:8970:3701":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"6:653:14498":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"0:129:1665":{"crate_id":0,"path":["thread_local","ThreadLocal"],"kind":"struct"},"6:5938:7739":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"5:286:1757":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:44582:5856":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:48990:244":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"18:599:35373":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:5382:6009":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"1:2208:5978":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:12194:4549":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:10527:20558":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"5:4855:3157":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"11:0:1954":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"16:5418:5108":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"1:3991:8394":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"11:751:3203":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:40524:8380":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"5:6975:3192":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:8144:2226":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:13309:4858":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"6:4396:7326":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:903:3203":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:20808:8401":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:40870:181":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:39027:5738":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:7803:3707":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"1:5064:189":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:11915:1475":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"6:4429:7342":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:7098:2199":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:8922:106":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"11:119:3165":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"6:6728:7918":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"8:0:1786":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:11969:4518":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"14:165:19468":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:11520:4417":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"5:1460:5629":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"6:1704:7200":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:2799:13772":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"5:1225:3385":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:39620:2229":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"5:3604:3181":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:8270:6097":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"6:4389:7323":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:11600:4439":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"5:2166:33766":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:6326:6016":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"6:4439:7349":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:21:672":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"17:9557:3471":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:2229:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:8835:6122":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:21569:3657":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:39013:5737":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"2:1895:2491":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:4570:7845":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:42636:3488":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:10555:4301":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:38806:5731":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:8092:3708":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:48925:244":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:7786:4124":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"1:7947:8370":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:10491:4297":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:4987:6001":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:2850:13778":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:43393:8073":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"16:0:1958":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:2819:13774":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:4756:8399":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"6:567:7059":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:9534:4196":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:44493:5852":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"16:7803:5401":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"1:2864:208":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"6:7511:7979":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"11:274:3378":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"6:5890:7717":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:10897:4336":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"5:2074:2626":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"5:4277:3208":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"17:12959:4788":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:2718:2533":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"16:6376:3592":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:48951:244":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:20682:8474":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:9907:3492":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:8218:5994":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"16:7683:3609":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:46567:5943":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:4828:7491":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:9064:2614":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"6:4720:7443":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:1987:182":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:4751:7455":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:12259:4579":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:40644:5679":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"11:646:1731":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"11:762:3171":{"crate_id":11,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"2:3204:2123":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:3176:13614":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"6:4218:7222":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:11033:3668":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"2:3976:5657":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:11777:111":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:8230:8411":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:1611:580":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"6:4402:7328":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"11:861:5550":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"16:5557:3558":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:49003:244":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:39611:2219":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"16:7029:5292":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:2679:108":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"9:174:3637":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:2829:13776":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"16:6254:3584":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"5:3537:1731":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:6095:3272":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"6:123:14142":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:7813:6037":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:39470:5762":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"1:10415:5986":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"5:6983:33794":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"6:7201:7952":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"1:11914:1474":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"5:4148:1724":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:11258:4382":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:9734:4212":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"5:7289:3222":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:10006:3000":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:44600:5857":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:7251:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:9513:3245":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"16:5920:3537":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:8347:6106":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"20:0:1787":{"crate_id":20,"path":["once_cell"],"kind":"module"},"2:46686:5952":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"17:13516:4913":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"16:6558:5214":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:8971:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"17:12372:4592":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:12433:4601":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"5:217:3179":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"6:5728:7630":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:13024:4798":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:12419:4599":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"16:2524:5048":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:21760:8383":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"10:36:6997":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"17:13066:4810":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"5:7146:31265":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:412:163":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"16:3030:5072":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:7268:26141":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:2301:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:13101:3520":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:31758:6994":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:1567:1736":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"6:5902:7724":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:3935:8389":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:3397:3406":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:6654:6242":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:12126:4539":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:2791:8467":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:5904:3266":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"6:4346:7305":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"6:5951:7743":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"16:2357:5041":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:20813:8473":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:7038:6247":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"6:4714:7440":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:11919:1530":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:41657:8058":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"17:9933:3479":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:41996:3686":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"5:7206:5652":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:10283:4280":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"17:10735:4325":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:45767:5902":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:8164:5807":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"5:4673:659":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:5449:2217":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"16:4037:5082":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:2343:8330":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"5:0:284":{"crate_id":5,"path":["alloc"],"kind":"module"},"6:119:14141":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"1:11214:6023":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"6:5990:7754":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:43377:8069":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:4357:2117":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:4675:8400":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:1563:1724":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:4899:2086":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"5:1429:3650":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"17:11391:3519":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:10650:8083":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"6:4795:7475":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:9069:6019":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"1:1050:1669":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:11324:5693":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"16:2905:5064":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"16:8170:5455":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:9478:4191":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:7851:6039":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:22807:3678":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:11301:5692":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"6:5931:7737":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"16:55:5433":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"5:1978:3395":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"16:5032:5103":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"6:7498:7978":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:11011:4339":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"11:777:3174":{"crate_id":11,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"2:11565:4047":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"5:6967:3203":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"6:481:7008":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:10205:6009":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:4091:2126":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"5:6302:1736":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"6:4468:7363":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:10505:4298":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"5:7005:196":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"6:487:7011":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:43584:193":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"6:7521:7981":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"6:5786:7661":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"11:632:1724":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:29970:2255":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:11502:4416":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:8573:20450":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:10316:4282":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"16:6488:5203":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"17:9721:4211":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:39427:8314":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"11:1836:1736":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:39602:2218":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"11:822:8274":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:41737:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"17:12059:4530":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:40632:5678":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:7595:2637":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:8184:1657":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:10158:3011":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:11622:13570":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"6:7481:7973":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"5:3524:1724":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:44422:5849":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:11160:3703":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:42949:5753":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:10172:3009":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:13698:4977":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"6:6059:7769":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:6230:204":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"16:4789:5095":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:9228:35366":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:40726:1731":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"18:96:6216":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:4235:2109":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:8101:3407":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"1:2357:8334":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"6:6521:7824":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"5:7040:1736":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:10668:6144":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:11105:5686":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:10680:3707":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"1:4638:8412":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:6719:7915":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:8420:20445":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:30026:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"17:13443:4894":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"16:6307:3587":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"11:1534:3388":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:8610:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:11785:4484":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"16:5677:20381":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"6:5722:7629":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:46365:5938":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:21091:8477":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"6:4882:7527":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:9424:4186":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:43405:3668":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:39948:2165":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"16:7498:5387":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"16:7588:5390":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"6:4766:7459":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:42854:5805":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:40553:3681":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"16:7519:5388":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:12085:4533":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:21727:7991":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:13367:4872":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:12522:4621":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:41685:109":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"16:3815:5079":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:2681:226":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:39340:5755":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:12496:4619":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:4410:8412":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"16:2879:5063":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"16:6132:5172":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"20:126:1901":{"crate_id":20,"path":["once_cell","unsync","Lazy"],"kind":"struct"},"1:4100:6245":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:11909:733":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"6:7195:7950":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"6:5716:7626":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:2846:13777":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:2674:2254":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"6:6628:7859":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:42933:5810":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:13667:4970":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"6:578:7064":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:11917:1473":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:42818:5804":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:46607:5947":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:8667:3467":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:22273:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"16:6022:20384":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"6:4224:7223":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"5:6115:3219":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"5:7099:2147":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"17:8490:20447":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:20729:3669":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"6:6530:7825":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:11641:4450":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"9:0:1952":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"14:215:5543":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:43640:159":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:2840:5317":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:9469:4189":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:3352:3157":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:41015:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:12483:4618":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:10655:6036":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"1:11912:731":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:13135:4817":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"16:4872:5098":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"20:300:3377":{"crate_id":20,"path":["once_cell","race","OnceRef"],"kind":"struct"},"1:11166:6149":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:8810:1736":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"6:505:7019":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:4000:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"6:4549:7384":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:5945:7740":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:4412:2119":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"18:0:1960":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:4733:3264":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:11899:1037":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:46596:5946":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:8186:2096":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:43445:5833":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"6:4457:7358":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:2571:5980":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:9917:3493":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:50299:5963":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"2:2499:132":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:9028:4173":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:2863:13781":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"6:4408:7331":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:2970:13544":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:2453:8401":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:11845:6153":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"16:2404:5043":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"17:10545:4075":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:11119:13565":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:11343:5991":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:4386:1653":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"6:6773:7940":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"16:3047:19526":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"16:2337:3529":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"16:2319:5039":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"6:1695:7194":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:12607:4633":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"7:0:1520":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:2787:5311":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:21748:5721":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:42516:2989":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:10690:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"17:9453:20464":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"16:2502:5047":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:6888:25823":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:39972:2190":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"6:7446:7965":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:20434:33645":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:30098:31223":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:11143:3286":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"17:11585:4433":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:1919:20491":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:9512:4194":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"6:561:7056":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:8397:5788":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:44563:5855":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:6850:2183":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:7565:33650":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"16:6943:20388":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:11446:4404":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:2756:2538":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"6:4559:7385":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:13791:5005":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:7659:8270":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:3132:27325":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"16:6717:5251":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:44360:5847":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:5018:6001":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:6575:20386":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:13612:4951":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"5:271:3181":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"17:11163:4355":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:2678:223":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:8256:20428":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"1:3244:5988":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"6:1509:7078":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:5244:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:40573:31267":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"17:12006:4522":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"6:6743:7925":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:4572:7847":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"1:354:2644":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"3:0:436":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"16:8256:5462":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:42754:3011":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:48568:8509":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"16:5693:3559":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"11:853:5549":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"5:5770:3397":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:3189:31147":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:9886:4221":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:10134:8459":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"16:3872:5080":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:3969:8390":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:43262:5832":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:39304:5656":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"5:3946:3181":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:2936:2380":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:20366:1903":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:242:4058":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:9431:3242":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:2215:8327":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"11:1120:5552":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"17:9523:4195":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"6:4369:7314":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"11:1518:19464":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:1002:1938":{"crate_id":2,"path":["core","hint","unreachable_unchecked"],"kind":"function"},"17:13879:5023":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:8548:20449":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"5:1348:1724":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:8113:8344":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"5:7132:5645":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:22306:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:10824:5610":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"1:10710:3407":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"16:2378:5042":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:0:489":{"crate_id":2,"path":["core"],"kind":"module"},"2:41438:2617":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:8134:2212":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:46511:5941":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:2834:5316":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"18:521:24300":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:40895:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:10200:3010":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:7698:6034":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:9018:3711":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"18:681:4044":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"16:5811:5124":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"6:5759:7641":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:41715:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"5:1419:5554":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:2918:2105":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:7528:2197":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"16:8129:5451":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:10670:4317":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"5:2903:34309":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:3246:5989":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"17:8283:20441":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"6:473:6238":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:42466:2997":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:12461:4607":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:21585:3673":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:11721:4455":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"5:3916:3203":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"12:0:1955":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:40734:1736":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:1770:601":{"crate_id":1,"path":["std","env"],"kind":"module"},"16:4540:5088":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:10039:4238":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:13053:4805":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:1736:2488":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"16:2594:5051":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:2226:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:11384:5992":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"16:5000:5102":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:3983:8392":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:2332:180":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:30602:1903":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:7478:6150":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:5317:6002":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:11136:4349":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:38979:5735":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"6:4962:7560":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:42914:5808":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"16:2764:5058":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"11:2190:35346":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:39541:2205":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:42650:2999":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:877:3648":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"16:3300:5074":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"17:8931:3489":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"6:1609:7135":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"10:44:3620":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"1:10845:24804":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"2:39310:13632":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"2:45113:5878":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:41135:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:11844:4498":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:43228:13577":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:3149:13782":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:20600:8481":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:2384:1966":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:44523:5853":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:3129:27324":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"16:7449:5375":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:46303:5937":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"11:1029:5551":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"17:13625:4957":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:8909:3488":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"16:7757:5394":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"6:7475:7972":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"6:4313:7286":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"16:8214:5354":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"16:7437:5374":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"5:7087:2146":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:38903:199":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:11879:4502":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:9188:35369":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:10047:6130":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:11340:5694":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"6:4662:7413":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:487:4063":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:2537:3260":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"18:574:4020":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:11319:4396":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"16:5630:5114":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"6:5698:7613":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:42437:2994":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:5690:2162":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"5:630:5626":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:12133:135":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"1:7590:2636":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"18:644:4020":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:9378:6035":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"1:11405:5993":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"5:5132:3181":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:2933:4072":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:11901:1350":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:9866:4219":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"14:221:5545":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:10840:4334":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"5:4078:3157":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"17:9443:4188":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"5:677:229":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:10649:4315":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"6:4476:7368":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"16:8047:5443":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"16:7837:5405":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:10923:3503":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:3063:4082":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"6:4520:7382":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:11070:8085":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"16:6236:3554":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:42668:3007":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:12318:4585":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"6:4361:7311":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:8181:8379":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"6:4248:7240":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:9148:35364":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"5:3155:5556":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:10334:3471":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"6:6698:7901":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:12799:4665":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:8443:20446":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:5944:5139":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"6:4571:7386":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"18:582:1903":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:10465:4295":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:12592:4629":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:9138:4175":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:12046:4528":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"1:961:5550":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:7616:1658":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"1:3877:8384":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"16:3749:5077":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"6:1604:7133":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:846:1724":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:4775:7465":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:3159:232":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:2248:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:10117:3008":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:919:5554":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"16:7411:3551":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:4820:7486":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:8773:33649":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:5526:2206":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"6:6643:7864":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:5683:2161":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:11193:4359":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"1:2359:8335":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"1:11913:1477":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:7702:5728":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"6:1550:7096":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"16:5616:5110":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"5:6631:242":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"18:531:4021":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:46671:5951":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:11924:4512":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:10615:4313":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:3907:8386":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:533:2631":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:8928:2630":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"6:4681:7421":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:42772:3009":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"5:5648:3203":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"11:810:5554":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:3445:25577":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:45271:5894":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"16:6293:5190":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"16:2448:5045":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"16:5104:5105":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:11459:4406":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:5071:5104":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"18:609:4031":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"6:1514:7080":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"18:624:35370":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"16:6506:5211":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"6:6764:7937":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"11:1085:3386":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"6:6053:7768":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:12219:5702":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:3207:5987":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:9997:3410":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:11573:4430":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:44891:5871":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:12019:4250":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:4451:7355":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"6:5000:7582":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:2939:1705":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:30010:2256":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"11:320:3167":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:2744:2535":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"6:6757:7934":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"16:4728:5093":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:2854:13779":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:6476:2169":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:44793:5868":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:39532:2204":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:8521:20448":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:1435:143":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:5176:188":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:932:5546":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:11908:736":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"17:13240:4842":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"5:6948:5643":{"crate_id":5,"path":["alloc","alloc","AllocErrorPanicPayload"],"kind":"struct"},"17:13564:4950":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"11:985:1669":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:4121:2103":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:4841:8437":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:7467:4064":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"17:9218:3471":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:8772:6118":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:7131:133":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"6:4981:7574":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:13763:4996":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:11299:4386":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:44392:5848":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:11037:20455":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"5:860:3189":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:6127:3702":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:13385:4876":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:3167:5985":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:11471:4407":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"16:535:3541":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:44839:5869":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:10589:4310":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"3:229:208":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"5:7217:5653":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:2474:5979":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"6:7386:7961":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:31807:2539":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"6:4611:7389":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:13689:4975":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:44338:5846":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:46225:5936":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:2506:235":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:4576:13625":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"5:1609:3181":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:12449:4605":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:8252:6095":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:2824:13775":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:1978:4071":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:43401:8075":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:12358:4589":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"13:226:3619":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:41055:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"5:5754:2159":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"16:6201:5177":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:938:8274":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:20639:8401":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"17:13506:4908":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:9796:4214":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:41667:67":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"17:13082:4813":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"16:2862:5062":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:8997:24789":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:40658:179":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:7796:6036":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"6:4890:7532":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"5:1055:3389":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:4366:2118":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:9062:192":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:45507:5898":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:45059:5876":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:7942:3706":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"17:10452:4294":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:2858:13780":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:2490:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:11229:6025":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"16:6876:3597":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:2572:5050":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"17:12331:4587":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:9748:3471":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:10685:3001":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"6:4743:7451":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"6:4921:7545":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"16:4904:5099":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"16:6336:5191":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"18:538:3455":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:40743:2094":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"16:6321:3589":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"17:11434:4401":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"5:6514:3215":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"16:5346:5107":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:9371:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"6:1731:7211":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:45090:5877":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"16:6520:5213":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"16:5571:5065":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:21636:5707":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:12146:13641":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"16:2668:5054":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:43381:8070":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:40507:5677":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:3379:6090":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"11:2184:3901":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:45583:5900":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:11372:3512":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:21354:8401":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:637:5965":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:11894:369":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"16:2830:5061":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"20:383:3453":{"crate_id":20,"path":["once_cell","race","OnceBool"],"kind":"struct"},"2:20432:33648":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"9:388:19387":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:9108:35365":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"9:234:5788":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:7196:1752":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"6:4328:7293":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:5331:6006":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"6:4501:7381":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:12646:4643":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:3454:8343":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"6:4687:7423":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:7487:7974":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"6:4952:7555":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"16:4702:5092":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"16:4845:5097":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:562:4064":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:42446:2998":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"18:719:4051":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:9924:2999":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"20:51:3157":{"crate_id":20,"path":["once_cell","imp","Guard"],"kind":"struct"},"2:3387:5655":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"1:11916:1476":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"6:4733:7448":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:8953:3468":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:6701:2180":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"6:4656:7410":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:10743:4327":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:6649:7865":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:4624:5091":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:13639:4963":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:21553:3672":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:924:3650":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:2496:148":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"14:0:1956":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"6:6512:7818":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:13265:4847":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:10718:3002":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:2988:8281":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:7791:6035":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"17:13121:4814":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"5:2905:7983":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:10044:3014":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:2795:8469":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:859:1731":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:41986:5788":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:13865:5020":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:9380:20462":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:6367:2166":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:43457:13866":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:8940:24758":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:1064:3385":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"6:1583:7119":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:39347:13633":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:10929:3283":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"6:4322:7291":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:6479:2170":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:3931:3157":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"6:4781:7467":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:5690:7611":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"5:3085:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:913:3171":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"5:3988:1731":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:11813:4491":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"6:1677:7187":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:11355:3510":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"6:4929:7547":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:2493:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"16:154:3162":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"20:84:2103":{"crate_id":20,"path":["once_cell","unsync","OnceCell"],"kind":"struct"},"20:377:3452":{"crate_id":20,"path":["once_cell","race","OnceNonZeroUsize"],"kind":"struct"},"6:4862:7516":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:2765:8468":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:4:1002":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:9056:2606":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"5:7272:3171":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"5:3513:161":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"5:3273:3171":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"16:6474:3594":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"16:6696:20387":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:43397:8074":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"5:6381:3181":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:7859:6040":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:2587:127":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"18:491:2106":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"5:3147:5558":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"17:8858:3487":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"6:6000:7757":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"5:7175:5651":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"6:62:14087":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"18:507:4020":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:13812:5011":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:9098:4174":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:9545:4164":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:11090:4345":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:3057:5982":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"6:0:807":{"crate_id":6,"path":["libc"],"kind":"module"},"17:13488:4905":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"6:5800:7662":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:1591:5558":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:9967:3013":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"9:352:19401":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"6:4673:7417":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"6:4841:7501":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"6:4697:7429":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:44545:5854":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:4023:13543":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:10186:3012":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:1823:5974":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"17:9696:3490":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:8420:6109":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:20394:33616":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"5:3181:5559":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"17:12033:4527":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"20:179:2103":{"crate_id":20,"path":["once_cell","sync","OnceCell"],"kind":"struct"},"6:525:7036":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:39688:2224":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:40845:1724":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"6:6634:7861":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:39663:2222":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:11410:4397":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:9596:4199":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"18:766:24299":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"11:1832:1724":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"10:0:1953":{"crate_id":10,"path":["adler"],"kind":"module"},"1:11089:6019":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"1:7578:8401":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:39560:2214":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"5:960:3181":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:11263:3288":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"13:0:1950":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:40853:1731":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:9275:144":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:11821:4493":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:6910:2108":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:42620:5688":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:42967:5746":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:1449:1655":{"crate_id":2,"path":["core","mem"],"kind":"module"},"16:6919:35354":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:11902:1380":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:38925:201":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:4767:786":{"crate_id":2,"path":["core","iter"],"kind":"module"},"16:5402:3467":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:7675:3696":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"17:12224:4568":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:46763:5955":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"6:493:7014":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:11896:412":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"1:11900:310":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"13:110:35348":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"16:3640:4086":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:8329:2090":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:9312:4178":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"16:2720:5056":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:928:3651":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"18:113:6219":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:557:2633":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:39702:2225":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:8185:2097":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"17:13426:4890":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"6:4539:7383":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:50278:5962":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"11:815:5546":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"16:7488:5386":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:12072:4531":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"16:2786:5059":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:6615:6016":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"2:22240:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"16:5643:5119":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:43369:8067":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"6:4334:7296":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:1618:2250":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"6:1520:7083":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:42456:2996":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"18:614:35372":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:39287:13631":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"11:1138:5553":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"5:1311:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:39257:5744":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"6:4274:7260":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:39227:31261":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:1585:5557":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:13316:4859":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:38881:200":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:42004:3687":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"16:6218:5180":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:3164:134":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:7826:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:1785:5972":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:10721:4322":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"16:2298:19498":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"6:5967:7748":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:678:3403":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"2:22339:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:2992:8282":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:3165:5984":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"11:98:6991":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"16:6164:5175":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:41773:2944":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"18:80:6215":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:9670:4208":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:42377:5793":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:12167:33397":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"7:79:19379":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:13857:5017":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"1:1570:3203":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:43627:5838":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"6:5823:7675":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:44248:5842":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"17:13292:4851":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"6:4489:7372":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:9088:6020":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"11:444:141":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:9059:216":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"5:1210:5551":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:4163:1902":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:8788:3485":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:42958:5656":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"5:3722:3171":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"1:7535:3279":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"17:9068:35363":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:11501:6026":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:9566:4177":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"6:4988:7577":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:11025:26329":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"17:10635:3498":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"11:300:1725":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:5560:3266":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:8360:20443":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"16:4969:5101":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:40776:2095":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:13249:4843":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:8170:6087":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:41974:144":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:22009:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"17:8389:20444":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:386:4060":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"16:7467:5383":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:7682:8301":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:45617:5901":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"6:6791:7943":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:10353:3282":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"16:2694:5055":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:9617:4201":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"6:1652:7168":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:9340:4179":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:40609:5994":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"17:11422:4400":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"16:6361:5195":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:43619:5836":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:11861:4501":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"14:202:13578":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:39672:2223":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:3266:4074":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"6:1747:7216":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:13257:4845":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:12138:4540":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"17:10270:4278":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:8996:2613":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"16:5367:19496":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"16:8156:3613":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:4302:2115":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:2675:2122":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"5:6543:3228":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"16:6819:5266":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:1984:183":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:3639:1736":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:10598:4337":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"5:7162:5648":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"1:8802:6121":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"6:6571:7852":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:9875:1724":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:8052:6079":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"1:645:8268":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:11199:6022":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"5:6700:3231":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:11628:4449":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:3676:5992":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:9275:35360":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:20626:8482":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"17:10080:4243":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"16:8142:5454":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:10863:6119":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"17:9973:4229":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:11512:8452":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:8310:20442":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:6532:2174":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"1:2829:3263":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"16:6981:5285":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"5:6183:3203":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:9054:2607":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:12236:4570":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:10885:3502":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"6:5752:7639":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:7173:7949":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:11060:3499":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:42558:3005":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"18:564:3457":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"6:546:7048":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:38986:5736":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:42872:5806":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:22075:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"6:6611:7854":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:4432:8413":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"20:339:3160":{"crate_id":20,"path":["once_cell","race","once_box","OnceBox"],"kind":"struct"},"11:1003:3385":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:890:3649":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:2677:224":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"16:7767:20392":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"6:6541:7830":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:5351:6007":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"1:4504:8430":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"11:1840:3203":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:2547:3246":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"16:7103:6126":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"5:5843:3157":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:39934:2184":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:39215:5740":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:9899:1731":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"16:7244:35358":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"18:515:4018":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"6:4649:7409":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"5:7034:1736":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"5:3653:3395":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"16:5779:3564":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"6:6667:7875":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"16:2742:5057":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"6:1723:7207":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"5:686:110":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:6363:2165":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"16:2426:5044":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"16:6793:5265":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:11946:4513":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"0:284:1724":{"crate_id":0,"path":["thread_local","Iter"],"kind":"struct"},"6:4237:7232":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:3375:13598":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"11:1555:5555":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:43669:5561":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"16:6400:5199":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"17:0:1959":{"crate_id":17,"path":["object"],"kind":"module"},"17:12770:4645":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:9267:140":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:46648:5950":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:5920:2230":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"16:7697:3610":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"0:293:1736":{"crate_id":0,"path":["thread_local","IntoIter"],"kind":"struct"},"16:2470:5046":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:31798:5729":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:43566:203":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:42904:5807":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:10402:4287":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"6:5917:7726":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"4:0:1951":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"5:6958:5644":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"17:11770:4480":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:4252:3902":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:42204:8066":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:9310:13643":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"17:11800:4489":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"2:21356:8475":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:21260:33620":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:4312:2116":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:4741:33455":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"5:4759:202":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:11052:6020":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"1:1082:5553":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"11:1681:143":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:8963:6125":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:2667:218":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:11891:4504":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:20651:8472":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:7937:6041":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:39326:5753":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:42529:3003":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:11902:4505":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:12466:2987":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:4324:5996":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"16:6390:5198":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:39279:5746":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:2781:13770":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"6:6496:7806":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:1846:3041":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"17:12345:4588":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:8880:8464":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"16:7529:3602":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:6580:215":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:420:4062":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:5436:6010":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:12894:4748":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:44268:5843":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:39712:2209":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"16:5305:5106":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:13211:4834":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"5:3126:34274":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"5:6675:3219":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:30040:31236":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"21:0:1786":{"crate_id":21,"path":["cfg_if"],"kind":"module"},"11:2205:2146":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:43389:8072":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:7094:2200":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:8495:6114":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:12343:106":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:13376:4875":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:1727:7989":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:43424:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"5:5582:230":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:42800:5803":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"16:5797:3568":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"15:180:6223":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:587:8265":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:8225:8076":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"5:777:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:13356:4868":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:8816:6011":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:46549:5942":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:48938:244":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:21698:31224":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"11:2178:6992":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:12178:4544":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"6:1589:7121":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:1648:1075":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"16:7557:3604":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"1:10833:6010":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"16:5386:3466":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"0:213:1731":{"crate_id":0,"path":["thread_local","IterMut"],"kind":"struct"},"1:869:1736":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:8786:6119":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:39570:2215":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:2502:236":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"15:0:1957":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:8848:8463":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:45347:5896":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:3611:8381":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"1:8489:1724":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:12385:203":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"1:8437:8451":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"16:2616:5052":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"18:652:4020":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"16:7626:5391":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"5:4262:243":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:20379:33616":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:41295:2160":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:2369:8340":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"6:1716:7204":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:9653:4205":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:11532:4420":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"1:3673:5991":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"16:4757:5094":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"5:2404:3390":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"5:1075:6241":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:11556:5682":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:39519:2212":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"5:1713:3171":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"17:10761:20452":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"6:5741:7631":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:13678:4974":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"15:198:6227":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:2866:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"14:40:4383":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:2933:1764":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"16:6351:20385":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:3225:5073":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"16:8072:5445":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"17:1034:4066":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"11:1845:3171":{"crate_id":11,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"2:9058:2616":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"17:11653:4453":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:3988:5658":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"5:1239:5553":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"19:0:1019":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:6442:5202":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"11:353:3169":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"9:481:19385":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:4850:8438":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:8651:3466":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:20680:8401":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"16:8109:5450":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"11:1852:5556":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"14:31:5538":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:12902:4751":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"6:1687:7193":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:504:2626":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:2770:5310":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"5:1440:3651":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:10820:6034":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"5:3665:3396":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"17:10303:4281":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:4757:7456":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:10989:4075":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"11:669:3650":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:38837:196":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"16:4400:5084":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:39631:2220":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:1527:3157":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:44292:5844":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:42428:2995":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:8983:6126":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:46473:5940":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:9874:5780":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"6:6594:7853":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:39653:2221":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"5:3114:1724":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:620:5964":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"16:6854:5270":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:7524:2196":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"5:5734:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"6:4637:7402":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:8683:3482":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:40596:5783":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:8274:7834":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:43239:5824":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:11615:4445":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"16:7572:35355":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"20:221:1901":{"crate_id":20,"path":["once_cell","sync","Lazy"],"kind":"struct"},"2:41175:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"6:6488:7801":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:9853:4218":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"17:13033:4799":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:9641:4203":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:39243:5743":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"16:7652:196":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:572:7061":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:45193:5879":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:5696:31656":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"17:247:4059":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"5:780:3184":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:9683:4209":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:9722:8401":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:12536:4622":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"6:5805:7663":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:41417:2606":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:6930:3275":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:3205:5986":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"9:502:5612":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"17:11069:20456":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:9409:20463":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:22207:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"17:10967:4337":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:11918:780":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"6:5813:7668":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:44915:5872":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:11832:4496":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:9048:165":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:2454:13637":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:30574:181":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"16:3446:5075":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"1:5716:2163":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:40802:208":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"6:4910:7539":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:9383:3281":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"}},"external_crates":{"20":{"name":"once_cell","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}