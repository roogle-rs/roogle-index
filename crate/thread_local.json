{"root":"0:0:1471","crate_version":"1.1.7","includes_private":false,"index":{"2:12242:32131":{"id":"2:12242:32131","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2700:228-0:213:1775":{"id":"a:2:2700:228-0:213:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5513:1799":{"id":"5:5513:1799","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8381:1703-0:286:1768":{"id":"a:2:8381:1703-0:286:1768","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8381:1703","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1768","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:182:1780":{"id":"0:182:1780","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[341,4],"end":[341,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IterMut","id":"0:213:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"0:238:1790":{"id":"0:238:1790","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[513,4],"end":[515,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2254:24988":{"id":"2:2254:24988","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12199:26931":{"id":"2:12199:26931","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13882"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11664:3073","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:129:1711":{"id":"b:2:3319-0:129:1711","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3321:1512"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2543-0:47:1696":{"id":"b:2:2543-0:47:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2545:700"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:166:1778":{"id":"0:166:1778","crate_id":0,"name":"clear","span":{"filename":"src/lib.rs","begin":[313,4],"end":[315,5]},"visibility":"public","docs":"Removes all thread-specific values from the `ThreadLocal`, effectively\nreseting it to its original state.\n\nSince this call borrows the `ThreadLocal` mutably, this operation can\nbe done safely---the mutable borrow statically guarantees no other\nthreads are currently accessing their associated values.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2249-0:11:1697":{"id":"b:2:2249-0:11:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1697","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2251:2104"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2539-0:60:1695":{"id":"b:2:2539-0:60:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1695","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2542:2623"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:155:1722":{"id":"0:155:1722","crate_id":0,"name":"get","span":{"filename":"src/lib.rs","begin":[192,4],"end":[194,5]},"visibility":"public","docs":"Returns the element for the current thread, if it exists.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:186:1784":{"id":"0:186:1784","crate_id":0,"name":"get_or_default","span":{"filename":"src/lib.rs","begin":[351,4],"end":[353,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates a default one if\nit doesn't exist.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:295:1780":{"id":"b:2:3319-0:295:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1780","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3321:1512"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2740:2423-0:295:1780":{"id":"a:2:2740:2423-0:295:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2423","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1780","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:7272-0:295:1780":{"id":"b:2:7272-0:295:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7414:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1780","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:7274:1779","2:7275:1780","2:7276:792"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"b:2:2252-0:60:1695":{"id":"b:2:2252-0:60:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1695","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2254:24988"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8382:2150-0:11:1697":{"id":"a:2:8382:2150-0:11:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8382:2150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1697","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[147,0],"end":[159,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["enumerate","is_sorted_by_key","product","unzip","try_reduce","eq","partition_in_place","fuse","gt","skip_while","lt","intersperse","next_chunk","max","ge","__iterator_get_unchecked","cmp_by","copied","find","position","is_partitioned","inspect","take_while","intersperse_with","last","max_by","take","partial_cmp_by","cloned","find_map","ne","try_fold","by_ref","map_while","partial_cmp","for_each","advance_by","max_by_key","eq_by","le","cycle","skip","try_find","map","try_for_each","try_collect","scan","filter","nth","zip","min","size_hint","is_sorted","array_chunks","cmp","rposition","fold","collect_into","all","flat_map","filter_map","step_by","collect","min_by","count","is_sorted_by","sum","any","rev","reduce","partition","flatten","peekable","chain","min_by_key"],"trait":{"name":"Iterator","id":"2:7414:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1695","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:65:1779","0:66:963","0:67:1790"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12147:821":{"id":"2:12147:821","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11991:420"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12214:26937":{"id":"2:12214:26937","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11991:420","str::splitn":"2:12211:26935","self::pattern":"2:11848:13882"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43750:3069","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2252-0:47:1696":{"id":"b:2:2252-0:47:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2254:24988"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:177:792":{"id":"0:177:792","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[334,4],"end":[336,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7268:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:227":{"id":"0:227","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[486,0],"end":[486,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7714:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12246:32133":{"id":"2:12246:32133","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13882"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12255:32134":{"id":"2:12255:32134","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13882"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5530:28142":{"id":"5:5530:28142","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12269:26813"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2249-0:286:1768":{"id":"b:2:2249-0:286:1768","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1768","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2251:2104"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12182:26940":{"id":"2:12182:26940","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13882"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5531:28143":{"id":"5:5531:28143","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12270:26814"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12223:2116":{"id":"2:12223:2116","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11848:13882","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11991:420","str::rmatches":"2:12226:32124"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43832:6047","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5527:32798":{"id":"5:5527:32798","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:44:674":{"id":"0:44:674","crate_id":0,"name":"fmt","span":{"filename":"src/cached.rs","begin":[112,4],"end":[114,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9250:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9239:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:42":{"id":"0:42","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[111,0],"end":[115,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9275:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9275:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1697","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:44:674"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2554-0:47:1696":{"id":"b:2:2554-0:47:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2557:128","2:2558:1498"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12268:26812":{"id":"2:12268:26812","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12202:26933":{"id":"2:12202:26933","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11848:13882","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11991:420","str::split":"2:12196:26929"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43646:3067","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:301:674":{"id":"0:301:674","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[497,9],"end":[497,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9250:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9239:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[128,0],"end":[128,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2554-0:286:1768":{"id":"b:2:2554-0:286:1768","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1768","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2557:128","2:2558:1498"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:211":{"id":"0:211","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[465,0],"end":[465,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7714:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1768","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[83,0],"end":[92,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1697","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:30:1779","0:31:1780","0:32:792"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12159:1722":{"id":"2:12159:1722","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41669:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9942:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9942:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8381:1703-0:213:1775":{"id":"a:2:8381:1703-0:213:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8381:1703","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"5:5511":{"id":"5:5511","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5512:32795","5:5513:1799","5:5516:32796","5:5519:32797","5:5527:32798","5:5528:32799","5:5529:2239","5:5530:28142","5:5531:28143"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12264:32137":{"id":"2:12264:32137","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11809:127","`FromStr`":"2:11808:8711"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41811:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11808:8711","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11808:8711","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5516:32796":{"id":"5:5516:32796","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112-0:11:1697":{"id":"0:112-0:11:1697","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[75,48],"end":[75,65]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"cached::CachedThreadLocal","name":"CachedThreadLocal","id":"0:11:1697","glob":false}}},"0:16:60":{"id":"0:16:60","crate_id":0,"name":"default","span":{"filename":"src/cached.rs","begin":[18,4],"end":[20,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1697","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2543-0:11:1697":{"id":"b:2:2543-0:11:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1697","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2545:700"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2740:2423-0:11:1697":{"id":"a:2:2740:2423-0:11:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2423","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1697","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:152:1731":{"id":"0:152:1731","crate_id":0,"name":"with_capacity","span":{"filename":"src/lib.rs","begin":[167,4],"end":[189,5]},"visibility":"public","docs":"Creates a new `ThreadLocal` with an initial capacity. If less than the capacity threads\naccess the thread local it will never reallocate. The capacity may be rounded up to the\nnearest power of two.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["capacity",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2554-0:60:1695":{"id":"b:2:2554-0:60:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1695","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2557:128","2:2558:1498"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:7272-0:286:1768":{"id":"b:2:7272-0:286:1768","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7414:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1768","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:7274:1779","2:7275:1780","2:7276:792"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"2:12208:32121":{"id":"2:12208:32121","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11848:13882","str::split":"2:12196:26929","prim@char":"1:11991:420","str::split_terminator":"2:12205:32120"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43696:6044","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:209:963":{"id":"0:209:963","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[458,4],"end":[460,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7414:159","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[23,0],"end":[81,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1697","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:19:949","0:20:1722","0:21:1746","0:23:1750","0:26:804","0:27:1778"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2683:220-0:11:1697":{"id":"a:2:2683:220-0:11:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1697","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[139,0],"end":[139,68]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7359:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8382:2150-0:213:1775":{"id":"a:2:8382:2150-0:213:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8382:2150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12235:32127":{"id":"2:12235:32127","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:7276:792":{"id":"2:7276:792","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:175:1779":{"id":"0:175:1779","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[331,4],"end":[331,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}},"2:7275:1780":{"id":"2:7275:1780","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"I"}}}},"2:12220:32123":{"id":"2:12220:32123","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2554-0:11:1697":{"id":"b:2:2554-0:11:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1697","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2557:128","2:2558:1498"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:27:1778":{"id":"0:27:1778","crate_id":0,"name":"clear","span":{"filename":"src/cached.rs","begin":[78,4],"end":[80,5]},"visibility":"public","docs":"Removes all thread-specific values from the `ThreadLocal`, effectively\nreseting it to its original state.\n\nSince this call borrows the `ThreadLocal` mutably, this operation can\nbe done safely---the mutable borrow statically guarantees no other\nthreads are currently accessing their associated values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:67:1790":{"id":"0:67:1790","crate_id":0,"name":"size_hint","span":{"filename":"src/cached.rs","begin":[156,4],"end":[158,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:159:1750":{"id":"0:159:1750","crate_id":0,"name":"get_or_try","span":{"filename":"src/lib.rs","begin":[211,4],"end":[221,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates it if it doesn't\nexist. If `create` fails, that error is returned and no element is\nadded.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["create",{"generic":"F"}]],"output":{"resolved_path":{"name":"Result","id":"2:41811:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}},{"type":{"generic":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2931:1749","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"2:41811:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:224:1790":{"id":"0:224:1790","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[480,4],"end":[482,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:47:1696":{"id":"b:2:3319-0:47:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3321:1512"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12148:2630":{"id":"2:12148:2630","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12267:26810":{"id":"2:12267:26810","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39698:26822","Self::is_ascii":"2:12266:26809"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39698:26822","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:156:1746":{"id":"0:156:1746","crate_id":0,"name":"get_or","span":{"filename":"src/lib.rs","begin":[198,4],"end":[206,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates it if it doesn't\nexist.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["create",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2931:1749","args":{"parenthesized":{"inputs":[],"output":{"generic":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:176:1780":{"id":"0:176:1780","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[332,4],"end":[332,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"0:286:1768","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"5:5528:32799":{"id":"5:5528:32799","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:1801","`String`":"5:7451:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:1801","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7184:3048","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:31:1780":{"id":"0:31:1780","crate_id":0,"name":"IntoIter","span":{"filename":"src/cached.rs","begin":[85,4],"end":[85,38]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1695","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"0:32:792":{"id":"0:32:792","crate_id":0,"name":"into_iter","span":{"filename":"src/cached.rs","begin":[87,4],"end":[91,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1695","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:1471":{"id":"0:0:1471","crate_id":0,"name":"thread_local","span":{"filename":"src/lib.rs","begin":[8,0],"end":[646,1]},"visibility":"public","docs":"Per-object thread-local storage\n\nThis library provides the `ThreadLocal` type which allows a separate copy of\nan object to be used for each thread. This allows for per-object\nthread-local storage, unlike the standard library's `thread_local!` macro\nwhich only allows static thread-local storage.\n\nPer-thread objects are not destroyed when a thread exits. Instead, objects\nare only destroyed when the `ThreadLocal` containing them is destroyed.\n\nYou can also iterate over the thread-local values of all thread in a\n`ThreadLocal` object using the `iter_mut` and `into_iter` methods. This can\nonly be done if you have mutable access to the `ThreadLocal` object, which\nguarantees that you are the only thread currently accessing it.\n\nNote that since thread IDs are recycled when a thread exits, it is possible\nfor one thread to retrieve the object of another thread. Since this can only\noccur after a thread has exited this does not lead to any race conditions.\n\n# Examples\n\nBasic usage of `ThreadLocal`:\n\n```rust\nuse thread_local::ThreadLocal;\nlet tls: ThreadLocal<u32> = ThreadLocal::new();\nassert_eq!(tls.get(), None);\nassert_eq!(tls.get_or(|| 5), &5);\nassert_eq!(tls.get(), Some(&5));\n```\n\nCombining thread-local values into a single result:\n\n```rust\nuse thread_local::ThreadLocal;\nuse std::sync::Arc;\nuse std::cell::Cell;\nuse std::thread;\n\nlet tls = Arc::new(ThreadLocal::new());\n\n// Create a bunch of threads to do stuff\nfor _ in 0..5 {\n    let tls2 = tls.clone();\n    thread::spawn(move || {\n        // Increment a counter to count some event...\n        let cell = tls2.get_or(|| Cell::new(0));\n        cell.set(cell.get() + 1);\n    }).join().unwrap();\n}\n\n// Once all threads are done, collect the counter values and return the\n// sum of all thread-local counter values.\nlet tls = Arc::try_unwrap(tls).unwrap();\nlet total = tls.into_iter().fold(0, |x, y| x + y.get());\nassert_eq!(total, 5);\n```","links":{},"attrs":["#![warn(missing_docs)]","#![allow(clippy :: mutex_atomic)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:110-0:60:1695","0:111-0:47:1696","0:112-0:11:1697","0:129:1711","0:286:1768","0:213:1775","0:295:1780"],"is_stripped":false}}},"2:12168:32118":{"id":"2:12168:32118","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11997:1418","crate::ops::IndexMut":"2:2984:8542","str::slice_unchecked":"2:12167:32117"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2549-0:286:1768":{"id":"b:2:2549-0:286:1768","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1768","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2552:128","2:2553:1499"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2549-0:129:1711":{"id":"b:2:2549-0:129:1711","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2552:128","2:2553:1499"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:172":{"id":"0:172","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[330,0],"end":[337,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}},"items":["0:175:1779","0:176:1780","0:177:792"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2740:2423-0:60:1695":{"id":"a:2:2740:2423-0:60:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2423","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1695","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:37:1780":{"id":"0:37:1780","crate_id":0,"name":"IntoIter","span":{"filename":"src/cached.rs","begin":[96,4],"end":[96,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"2:12175:30637":{"id":"2:12175:30637","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12174:30632"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43911:6052","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2252-0:129:1711":{"id":"b:2:2252-0:129:1711","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2254:24988"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8381:1703-0:295:1780":{"id":"a:2:8381:1703-0:295:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8381:1703","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8381:1703","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1780","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2249-0:295:1780":{"id":"b:2:2249-0:295:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1780","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2251:2104"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:129:1711":{"id":"0:129:1711","crate_id":0,"name":"ThreadLocal","span":{"filename":"src/lib.rs","begin":[102,0],"end":[110,1]},"visibility":"public","docs":"Thread-local variable wrapper\n\nSee the [module-level documentation](index.html) for more.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:149","0:184","a:2:2683:220-0:129:1711","a:2:2740:2423-0:129:1711","a:2:8382:2150-0:129:1711","b:2:2252-0:129:1711","b:2:2554-0:129:1711","b:2:3319-0:129:1711","b:2:2549-0:129:1711","b:2:2539-0:129:1711","b:2:2249-0:129:1711","b:2:2543-0:129:1711","0:141","0:167","0:187","0:172","0:190","0:178","0:143","0:146"]}}},"b:2:2252-0:295:1780":{"id":"b:2:2252-0:295:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1780","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2254:24988"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12179:26939":{"id":"2:12179:26939","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13882"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5529:2239":{"id":"5:5529:2239","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:54:1779":{"id":"0:54:1779","crate_id":0,"name":"Item","span":{"filename":"src/cached.rs","begin":[126,4],"end":[126,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"T"}}}}}},"2:12157:315":{"id":"2:12157:315","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12158:314","`u8`":"1:12008:1521"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3321:1512":{"id":"2:3321:1512","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39490:5856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:205":{"id":"0:205","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[456,0],"end":[464,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["enumerate","is_sorted_by_key","product","unzip","try_reduce","eq","partition_in_place","fuse","gt","skip_while","lt","intersperse","next_chunk","max","ge","__iterator_get_unchecked","cmp_by","copied","find","position","is_partitioned","inspect","take_while","intersperse_with","last","max_by","take","partial_cmp_by","cloned","find_map","ne","try_fold","by_ref","map_while","partial_cmp","for_each","advance_by","max_by_key","eq_by","le","cycle","skip","try_find","map","try_for_each","try_collect","scan","filter","nth","zip","min","size_hint","is_sorted","array_chunks","cmp","rposition","fold","collect_into","all","flat_map","filter_map","step_by","collect","min_by","count","is_sorted_by","sum","any","rev","reduce","partition","flatten","peekable","chain","min_by_key"],"trait":{"name":"Iterator","id":"2:7414:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1768","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:208:1779","0:209:963","0:210:1790"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12241:32130":{"id":"2:12241:32130","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:164:803":{"id":"0:164:803","crate_id":0,"name":"iter","span":{"filename":"src/lib.rs","begin":[284,4],"end":[292,5]},"visibility":"public","docs":"Returns an iterator over the local values of all threads in unspecified\norder.\n\nThis call can be done safely, as `T` is required to implement [`Sync`].","links":{"`Sync`":"2:2700:228"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Iter","id":"0:286:1768","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12266:26809":{"id":"2:12266:26809","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12269:26813":{"id":"2:12269:26813","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2683:220-0:129:1711":{"id":"a:2:2683:220-0:129:1711","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2543-0:60:1695":{"id":"b:2:2543-0:60:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1695","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2545:700"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:299":{"id":"0:299","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[497,9],"end":[497,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9275:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9275:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1780","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:301:674"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8381:1703-0:60:1695":{"id":"a:2:8381:1703-0:60:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8381:1703","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8381:1703","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1695","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12232:32126":{"id":"2:12232:32126","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11848:13882","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11991:420","str::match_indices":"2:12229:32125"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43796:6046","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[473,0],"end":[483,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["enumerate","is_sorted_by_key","product","unzip","try_reduce","eq","partition_in_place","fuse","gt","skip_while","lt","intersperse","next_chunk","max","ge","__iterator_get_unchecked","cmp_by","copied","find","position","is_partitioned","inspect","take_while","intersperse_with","last","max_by","take","partial_cmp_by","cloned","find_map","ne","try_fold","by_ref","map_while","partial_cmp","for_each","advance_by","max_by_key","eq_by","le","cycle","skip","try_find","map","try_for_each","try_collect","scan","filter","nth","zip","min","size_hint","is_sorted","array_chunks","cmp","rposition","fold","collect_into","all","flat_map","filter_map","step_by","collect","min_by","count","is_sorted_by","sum","any","rev","reduce","partition","flatten","peekable","chain","min_by_key"],"trait":{"name":"Iterator","id":"2:7414:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:221:1779","0:222:963","0:224:1790"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2700:228-0:60:1695":{"id":"a:2:2700:228-0:60:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1695","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:170:1780":{"id":"0:170:1780","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[320,4],"end":[320,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IntoIter","id":"0:295:1780","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"a:2:8381:1703-0:47:1696":{"id":"a:2:8381:1703-0:47:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8381:1703","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:2542:2623":{"id":"2:2542:2623","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2516:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2543-0:129:1711":{"id":"b:2:2543-0:129:1711","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2545:700"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:11:1697":{"id":"0:11:1697","crate_id":0,"name":"CachedThreadLocal","span":{"filename":"src/cached.rs","begin":[13,0],"end":[15,1]},"visibility":"public","docs":"Wrapper around [`ThreadLocal`].\n\nThis used to add a fast path for a single thread, however that has been\nobsoleted by performance improvements to [`ThreadLocal`] itself.","links":{"`ThreadLocal`":"0:129:1711"},"attrs":["#[deprecated(since = \"1.1.0\", note = \"Use `ThreadLocal` instead\")]"],"deprecation":{"since":"1.1.0","note":"Use `ThreadLocal` instead"},"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:17","0:39","a:2:2683:220-0:11:1697","a:2:2700:228-0:11:1697","a:2:2740:2423-0:11:1697","a:2:8382:2150-0:11:1697","b:2:2252-0:11:1697","b:2:2554-0:11:1697","b:2:3319-0:11:1697","b:2:2549-0:11:1697","b:2:2539-0:11:1697","b:2:2249-0:11:1697","b:2:2543-0:11:1697","0:42","0:45","0:28","0:14","0:33"]}}},"0:295:1780":{"id":"0:295:1780","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[498,0],"end":[501,1]},"visibility":"public","docs":"An iterator that moves out of a `ThreadLocal`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2683:220-0:295:1780","a:2:2700:228-0:295:1780","a:2:2740:2423-0:295:1780","a:2:8381:1703-0:295:1780","a:2:8382:2150-0:295:1780","b:2:2252-0:295:1780","b:2:2554-0:295:1780","b:2:3319-0:295:1780","b:2:2549-0:295:1780","b:2:2539-0:295:1780","b:2:2249-0:295:1780","b:2:7272-0:295:1780","b:2:2543-0:295:1780","0:233","0:239","0:241","0:299"]}}},"0:239":{"id":"0:239","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[518,0],"end":[518,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7359:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1780","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:213:1775":{"id":"0:213:1775","crate_id":0,"name":"IterMut","span":{"filename":"src/lib.rs","begin":[468,0],"end":[471,1]},"visibility":"public","docs":"Mutable iterator over the contents of a `ThreadLocal`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2683:220-0:213:1775","a:2:2700:228-0:213:1775","a:2:2740:2423-0:213:1775","a:2:8381:1703-0:213:1775","a:2:8382:2150-0:213:1775","b:2:2252-0:213:1775","b:2:2554-0:213:1775","b:2:3319-0:213:1775","b:2:2549-0:213:1775","b:2:2539-0:213:1775","b:2:2249-0:213:1775","b:2:7272-0:213:1775","b:2:2543-0:213:1775","0:229","0:227","0:218","0:225"]}}},"2:12178:30638":{"id":"2:12178:30638","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43920:5815","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12150:32114":{"id":"2:12150:32114","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:23:1750":{"id":"0:23:1750","crate_id":0,"name":"get_or_try","span":{"filename":"src/cached.rs","begin":[52,4],"end":[57,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates it if it doesn't\nexist. If `create` fails, that error is returned and no element is\nadded.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["create",{"generic":"F"}]],"output":{"resolved_path":{"name":"Result","id":"2:41811:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}},{"type":{"generic":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2931:1749","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"2:41811:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2252-0:286:1768":{"id":"b:2:2252-0:286:1768","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1768","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2254:24988"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12155:26880":{"id":"2:12155:26880","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11408:13883"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12211:26935":{"id":"2:12211:26935","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13882","str::rsplitn":"2:12214:26937"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43732:3071","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12217:32122":{"id":"2:12217:32122","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12161:1721":{"id":"2:12161:1721","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41669:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9942:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9942:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2554-0:213:1775":{"id":"b:2:2554-0:213:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2557:128","2:2558:1498"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:286:1768":{"id":"b:2:3319-0:286:1768","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1768","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3321:1512"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2539-0:286:1768":{"id":"b:2:2539-0:286:1768","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1768","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2542:2623"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12270:26814":{"id":"2:12270:26814","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12271:32138":{"id":"2:12271:32138","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4538:32138"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43927:5994","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12185:26941":{"id":"2:12185:26941","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13882"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12229:32125":{"id":"2:12229:32125","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11848:13882","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11991:420","str::rmatch_indices":"2:12232:32126"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43778:6045","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2554-0:295:1780":{"id":"b:2:2554-0:295:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1780","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2557:128","2:2558:1498"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[450,9],"end":[450,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9275:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9275:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1768","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:294:674"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12170:26922":{"id":"2:12170:26922","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12169:26921"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12273:8525":{"id":"2:12273:8525","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4539:8525"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43936:5777","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:210:1790":{"id":"0:210:1790","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[461,4],"end":[463,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:235:1779":{"id":"0:235:1779","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[504,4],"end":[504,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:149":{"id":"0:149","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[158,0],"end":[316,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:151:949","0:152:1731","0:155:1722","0:156:1746","0:159:1750","0:164:803","0:165:804","0:166:1778"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:286:1768":{"id":"0:286:1768","crate_id":0,"name":"Iter","span":{"filename":"src/lib.rs","begin":[451,0],"end":[454,1]},"visibility":"public","docs":"Iterator over the contents of a `ThreadLocal`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2683:220-0:286:1768","a:2:2700:228-0:286:1768","a:2:2740:2423-0:286:1768","a:2:8381:1703-0:286:1768","a:2:8382:2150-0:286:1768","b:2:2252-0:286:1768","b:2:2554-0:286:1768","b:2:3319-0:286:1768","b:2:2549-0:286:1768","b:2:2539-0:286:1768","b:2:2249-0:286:1768","b:2:7272-0:286:1768","b:2:2543-0:286:1768","0:211","0:205","0:291"]}}},"0:60:1695":{"id":"0:60:1695","crate_id":0,"name":"CachedIntoIter","span":{"filename":"src/cached.rs","begin":[143,0],"end":[145,1]},"visibility":"public","docs":"An iterator that moves out of a `CachedThreadLocal`.","links":{},"attrs":["#[deprecated(since = \"1.1.0\", note = \"Use `IntoIter` instead\")]"],"deprecation":{"since":"1.1.0","note":"Use `IntoIter` instead"},"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2683:220-0:60:1695","a:2:2700:228-0:60:1695","a:2:2740:2423-0:60:1695","a:2:8381:1703-0:60:1695","a:2:8382:2150-0:60:1695","b:2:2252-0:60:1695","b:2:2554-0:60:1695","b:2:3319-0:60:1695","b:2:2549-0:60:1695","b:2:2539-0:60:1695","b:2:2249-0:60:1695","b:2:7272-0:60:1695","b:2:2543-0:60:1695","0:63","0:68"]}}},"0:222:963":{"id":"0:222:963","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[475,4],"end":[479,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2740:2423-0:129:1711":{"id":"a:2:2740:2423-0:129:1711","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2423","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2549-0:295:1780":{"id":"b:2:2549-0:295:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1780","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2552:128","2:2553:1499"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12176:6470":{"id":"2:12176:6470","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43882:6049","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:213:1775":{"id":"b:2:3319-0:213:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3321:1512"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:184":{"id":"0:184","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[348,0],"end":[354,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"2:2590:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:186:1784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2700:228-0:286:1768":{"id":"a:2:2700:228-0:286:1768","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1768","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12165:1789":{"id":"2:12165:1789","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9942:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9942:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:47:1696":{"id":"0:47:1696","crate_id":0,"name":"CachedIterMut","span":{"filename":"src/cached.rs","begin":[121,0],"end":[123,1]},"visibility":"public","docs":"Mutable iterator over the contents of a `CachedThreadLocal`.","links":{},"attrs":["#[deprecated(since = \"1.1.0\", note = \"Use `IterMut` instead\")]"],"deprecation":{"since":"1.1.0","note":"Use `IterMut` instead"},"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2683:220-0:47:1696","a:2:2700:228-0:47:1696","a:2:2740:2423-0:47:1696","a:2:8381:1703-0:47:1696","a:2:8382:2150-0:47:1696","b:2:2252-0:47:1696","b:2:2554-0:47:1696","b:2:3319-0:47:1696","b:2:2549-0:47:1696","b:2:2539-0:47:1696","b:2:2249-0:47:1696","b:2:7272-0:47:1696","b:2:2543-0:47:1696","0:51","0:57"]}}},"2:12169:26921":{"id":"2:12169:26921","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12170:26922"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2539-0:295:1780":{"id":"b:2:2539-0:295:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1780","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2542:2623"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:233":{"id":"0:233","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[503,0],"end":[516,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["enumerate","is_sorted_by_key","product","unzip","try_reduce","eq","partition_in_place","fuse","gt","skip_while","lt","intersperse","next_chunk","max","ge","__iterator_get_unchecked","cmp_by","copied","find","position","is_partitioned","inspect","take_while","intersperse_with","last","max_by","take","partial_cmp_by","cloned","find_map","ne","try_fold","by_ref","map_while","partial_cmp","for_each","advance_by","max_by_key","eq_by","le","cycle","skip","try_find","map","try_for_each","try_collect","scan","filter","nth","zip","min","size_hint","is_sorted","array_chunks","cmp","rposition","fold","collect_into","all","flat_map","filter_map","step_by","collect","min_by","count","is_sorted_by","sum","any","rev","reduce","partition","flatten","peekable","chain","min_by_key"],"trait":{"name":"Iterator","id":"2:7414:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1780","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:235:1779","0:236:963","0:238:1790"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:181:1779":{"id":"0:181:1779","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[340,4],"end":[340,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"T"}}}}}},"b:2:2554-0:129:1711":{"id":"b:2:2554-0:129:1711","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2557:128","2:2558:1498"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2249-0:60:1695":{"id":"b:2:2249-0:60:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1695","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2251:2104"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:169:1779":{"id":"0:169:1779","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[319,4],"end":[319,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:14":{"id":"0:14","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[17,0],"end":[21,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2590:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1697","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:16:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:171:792":{"id":"0:171:792","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[322,4],"end":[327,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"IntoIter","id":"0:295:1780","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:38:792":{"id":"0:38:792","crate_id":0,"name":"into_iter","span":{"filename":"src/cached.rs","begin":[98,4],"end":[100,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:60:1695":{"id":"b:2:3319-0:60:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1695","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3321:1512"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2700:228-0:11:1697":{"id":"a:2:2700:228-0:11:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1697","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:151:949":{"id":"0:151:949","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[160,4],"end":[162,5]},"visibility":"public","docs":"Creates a new empty `ThreadLocal`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:146":{"id":"0:146","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[136,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2921:1720","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:148:590"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2249-0:213:1775":{"id":"b:2:2249-0:213:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2251:2104"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12188:2665":{"id":"2:12188:2665","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41669:179","prim@char":"1:11991:420","self::pattern":"2:11848:13882"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2249-0:129:1711":{"id":"b:2:2249-0:129:1711","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2251:2104"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:33":{"id":"0:33","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[94,0],"end":[101,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1697","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}},"items":["0:36:1779","0:37:1780","0:38:792"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2549-0:11:1697":{"id":"b:2:2549-0:11:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1697","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2552:128","2:2553:1499"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:183:792":{"id":"0:183:792","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[343,4],"end":[345,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"IterMut","id":"0:213:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:229":{"id":"0:229","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[490,0],"end":[494,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9275:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9275:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:232:674"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:56:1790":{"id":"0:56:1790","crate_id":0,"name":"size_hint","span":{"filename":"src/cached.rs","begin":[134,4],"end":[136,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2543-0:286:1768":{"id":"b:2:2543-0:286:1768","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1768","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2545:700"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[519,0],"end":[519,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7714:1700","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1780","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2700:228-0:47:1696":{"id":"a:2:2700:228-0:47:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2558:1498":{"id":"2:2558:1498","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41811:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2683:220-0:60:1695":{"id":"a:2:2683:220-0:60:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1695","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12172:6061":{"id":"2:12172:6061","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11991:420"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43604:6041","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12258:32135":{"id":"2:12258:32135","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13882"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:66:963":{"id":"0:66:963","crate_id":0,"name":"next","span":{"filename":"src/cached.rs","begin":[151,4],"end":[153,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8382:2150-0:129:1711":{"id":"a:2:8382:2150-0:129:1711","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8382:2150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:41:1784":{"id":"0:41:1784","crate_id":0,"name":"get_or_default","span":{"filename":"src/cached.rs","begin":[106,4],"end":[108,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates a default one if\nit doesn't exist.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2539-0:213:1775":{"id":"b:2:2539-0:213:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2542:2623"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2549-0:47:1696":{"id":"b:2:2549-0:47:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2552:128","2:2553:1499"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:232:674":{"id":"0:232:674","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[491,4],"end":[493,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9250:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9239:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12146":{"id":"2:12146","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12147:821","2:12148:2630","2:12149:32113","2:12150:32114","2:12152:32115","2:12155:26880","2:12156:32116","2:12157:315","2:12158:314","2:12159:1722","2:12161:1721","2:12163:1756","2:12165:1789","2:12167:32117","2:12168:32118","2:12169:26921","2:12170:26922","2:12171:5816","2:12172:6061","2:12173:5771","2:12174:30632","2:12175:30637","2:12176:6470","2:12177:32119","2:12178:30638","2:12179:26939","2:12182:26940","2:12185:26941","2:12188:2665","2:12192:2629","2:12196:26929","2:12199:26931","2:12202:26933","2:12205:32120","2:12208:32121","2:12211:26935","2:12214:26937","2:12217:32122","2:12220:32123","2:12223:2116","2:12226:32124","2:12229:32125","2:12232:32126","2:12235:32127","2:12237:32128","2:12239:32129","2:12241:32130","2:12242:32131","2:12243:32132","2:12246:32133","2:12249:25102","2:12252:26942","2:12255:32134","2:12258:32135","2:12261:32136","2:12264:32137","2:12266:26809","2:12267:26810","2:12268:26812","2:12269:26813","2:12270:26814","2:12271:32138","2:12273:8525","2:12274:32139"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:167":{"id":"0:167","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[318,0],"end":[328,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:169:1779","0:170:1780","0:171:792"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:7272-0:47:1696":{"id":"b:2:7272-0:47:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7414:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:7274:1779","2:7275:1780","2:7276:792"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"b:2:2539-0:11:1697":{"id":"b:2:2539-0:11:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1697","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2542:2623"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8382:2150-0:47:1696":{"id":"a:2:8382:2150-0:47:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8382:2150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:143":{"id":"0:143","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[130,0],"end":[134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2590:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:145:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:208:1779":{"id":"0:208:1779","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[457,4],"end":[457,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}},"a:2:2700:228-0:295:1780":{"id":"a:2:2700:228-0:295:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2700:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1780","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12158:314":{"id":"2:12158:314","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12008:1521"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:19:949":{"id":"0:19:949","crate_id":0,"name":"new","span":{"filename":"src/cached.rs","begin":[26,4],"end":[30,5]},"visibility":"public","docs":"Creates a new empty `CachedThreadLocal`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1697","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2543-0:295:1780":{"id":"b:2:2543-0:295:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1780","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2545:700"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12174:30632":{"id":"2:12174:30632","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12175:30637"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43902:6051","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2557:128":{"id":"2:2557:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32169:7248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:12149:32113":{"id":"2:12149:32113","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12167:32117":{"id":"2:12167:32117","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11997:1418","str::slice_mut_unchecked":"2:12168:32118","crate::ops::Index":"2:2980:8541"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:39":{"id":"0:39","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[103,0],"end":[109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"2:2590:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1697","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:41:1784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2683:220-0:47:1696":{"id":"a:2:2683:220-0:47:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2249-0:47:1696":{"id":"b:2:2249-0:47:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2243:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2251:2104"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2740:2423-0:47:1696":{"id":"a:2:2740:2423-0:47:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2423","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:55:963":{"id":"0:55:963","crate_id":0,"name":"next","span":{"filename":"src/cached.rs","begin":[129,4],"end":[131,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8382:2150-0:60:1695":{"id":"a:2:8382:2150-0:60:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8382:2150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1695","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:178":{"id":"0:178","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[339,0],"end":[346,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}},"items":["0:181:1779","0:182:1780","0:183:792"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12173:5771":{"id":"2:12173:5771","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43614:3581","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12196:26929":{"id":"2:12196:26929","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11848:13882","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11991:420","str::split_whitespace":"2:12174:30632","str::rsplit":"2:12202:26933"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43628:3059","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:189:674":{"id":"0:189:674","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[357,4],"end":[359,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9250:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9239:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12163:1756":{"id":"2:12163:1756","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9942:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9942:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12252:26942":{"id":"2:12252:26942","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13882"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2740:2423-0:213:1775":{"id":"a:2:2740:2423-0:213:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2423","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:51":{"id":"0:51","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[125,0],"end":[137,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["enumerate","is_sorted_by_key","product","unzip","try_reduce","eq","partition_in_place","fuse","gt","skip_while","lt","intersperse","next_chunk","max","ge","__iterator_get_unchecked","cmp_by","copied","find","position","is_partitioned","inspect","take_while","intersperse_with","last","max_by","take","partial_cmp_by","cloned","find_map","ne","try_fold","by_ref","map_while","partial_cmp","for_each","advance_by","max_by_key","eq_by","le","cycle","skip","try_find","map","try_for_each","try_collect","scan","filter","nth","zip","min","size_hint","is_sorted","array_chunks","cmp","rposition","fold","collect_into","all","flat_map","filter_map","step_by","collect","min_by","count","is_sorted_by","sum","any","rev","reduce","partition","flatten","peekable","chain","min_by_key"],"trait":{"name":"Iterator","id":"2:7414:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:54:1779","0:55:963","0:56:1790"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12226:32124":{"id":"2:12226:32124","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11848:13882","`DoubleEndedIterator`":"2:7306:121","prim@char":"1:11991:420","str::matches":"2:12223:2116"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43850:6048","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2539-0:129:1711":{"id":"b:2:2539-0:129:1711","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2542:2623"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:68":{"id":"0:68","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[161,0],"end":[161,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7359:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1695","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:187":{"id":"0:187","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[356,0],"end":[360,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9275:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9275:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:189:674"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:236:963":{"id":"0:236:963","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[505,4],"end":[512,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:294:674":{"id":"0:294:674","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[450,9],"end":[450,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9250:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9239:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2683:220-0:295:1780":{"id":"a:2:2683:220-0:295:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1780","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12156:32116":{"id":"2:12156:32116","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12205:32120":{"id":"2:12205:32120","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11848:13882","str::split":"2:12196:26929","prim@char":"1:11991:420","`DoubleEndedIterator`":"2:7306:121","str::rsplit_terminator":"2:12208:32121"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43678:6043","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:221:1779":{"id":"0:221:1779","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[474,4],"end":[474,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"T"}}}}}},"0:30:1779":{"id":"0:30:1779","crate_id":0,"name":"Item","span":{"filename":"src/cached.rs","begin":[84,4],"end":[84,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"2:12177:32119":{"id":"2:12177:32119","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43892:6050","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12249:25102":{"id":"2:12249:25102","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13882"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12261:32136":{"id":"2:12261:32136","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13882"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2549-0:60:1695":{"id":"b:2:2549-0:60:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1695","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2552:128","2:2553:1499"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:111-0:47:1696":{"id":"0:111-0:47:1696","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[75,33],"end":[75,46]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"cached::CachedIterMut","name":"CachedIterMut","id":"0:47:1696","glob":false}}},"b:2:2543-0:213:1775":{"id":"b:2:2543-0:213:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2545:700"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12243:32132":{"id":"2:12243:32132","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11991:420","self::pattern":"2:11848:13882"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11873:13879","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:7272-0:60:1695":{"id":"b:2:7272-0:60:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7414:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1695","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:7274:1779","2:7275:1780","2:7276:792"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"2:12237:32128":{"id":"2:12237:32128","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5519:32797":{"id":"5:5519:32797","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7451:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7451:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:7272-0:213:1775":{"id":"b:2:7272-0:213:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7414:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7268:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:7274:1779","2:7275:1780","2:7276:792"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"2:2545:700":{"id":"2:2545:700","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2683:220-0:213:1775":{"id":"a:2:2683:220-0:213:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5512:32795":{"id":"5:5512:32795","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:1801","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7184:3048","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:1801","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:7184:3048","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12152:32115":{"id":"2:12152:32115","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12150:32114"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2252-0:11:1697":{"id":"b:2:2252-0:11:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1697","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2254:24988"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2552:128":{"id":"2:2552:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"2:7274:1779":{"id":"2:7274:1779","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"Iterator","id":"2:7414:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"b:2:2539-0:47:1696":{"id":"b:2:2539-0:47:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2516:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2513:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1696","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2542:2623"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12192:2629":{"id":"2:12192:2629","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41669:179","prim@char":"1:11991:420","self::pattern":"2:11848:13882"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11853:5803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11868:13880","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:21:1746":{"id":"0:21:1746","crate_id":0,"name":"get_or","span":{"filename":"src/cached.rs","begin":[41,4],"end":[46,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates it if it doesn't\nexist.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["create",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2931:1749","args":{"parenthesized":{"inputs":[],"output":{"generic":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:20:1722":{"id":"0:20:1722","crate_id":0,"name":"get","span":{"filename":"src/cached.rs","begin":[34,4],"end":[36,5]},"visibility":"public","docs":"Returns the element for the current thread, if it exists.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41667:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8382:2150-0:286:1768":{"id":"a:2:8382:2150-0:286:1768","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8382:2150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1768","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8382:2150-0:295:1780":{"id":"a:2:8382:2150-0:295:1780","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8382:2150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1780","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:65:1779":{"id":"0:65:1779","crate_id":0,"name":"Item","span":{"filename":"src/cached.rs","begin":[148,4],"end":[148,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[362,0],"end":[362,59]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8381:1703","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8381:1703","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:165:804":{"id":"0:165:804","crate_id":0,"name":"iter_mut","span":{"filename":"src/lib.rs","begin":[300,4],"end":[305,5]},"visibility":"public","docs":"Returns a mutable iterator over the local values of all threads in\nunspecified order.\n\nSince this call borrows the `ThreadLocal` mutably, this operation can\nbe done safely---the mutable borrow statically guarantees no other\nthreads are currently accessing their associated values.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"IterMut","id":"0:213:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[117,0],"end":[117,65]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8381:1703","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8381:1703","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1697","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:145:60":{"id":"0:145:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[131,4],"end":[133,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1711","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2252-0:213:1775":{"id":"b:2:2252-0:213:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2246:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2254:24988"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12274:32139":{"id":"2:12274:32139","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4536:32139"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43945:5993","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:11:1697":{"id":"b:2:3319-0:11:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2690:2306","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1697","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3321:1512"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2251:2104":{"id":"2:2251:2104","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2683:220-0:286:1768":{"id":"a:2:2683:220-0:286:1768","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1768","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12239:32129":{"id":"2:12239:32129","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:36:1779":{"id":"0:36:1779","crate_id":0,"name":"Item","span":{"filename":"src/cached.rs","begin":[95,4],"end":[95,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"T"}}}}}},"2:12171:5816":{"id":"2:12171:5816","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11991:420"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43598:5808","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2740:2423-0:286:1768":{"id":"a:2:2740:2423-0:286:1768","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2740:2423","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1768","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2549-0:213:1775":{"id":"b:2:2549-0:213:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2519:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2552:128","2:2553:1499"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:148:590":{"id":"0:148:590","crate_id":0,"name":"drop","span":{"filename":"src/lib.rs","begin":[137,4],"end":[155,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:26:804":{"id":"0:26:804","crate_id":0,"name":"iter_mut","span":{"filename":"src/cached.rs","begin":[65,4],"end":[69,5]},"visibility":"public","docs":"Returns a mutable iterator over the local values of all threads.\n\nSince this call borrows the `ThreadLocal` mutably, this operation can\nbe done safely---the mutable borrow statically guarantees no other\nthreads are currently accessing their associated values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1696","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[485,0],"end":[485,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2683:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7359:1796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2553:1499":{"id":"2:2553:1499","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41811:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2523:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110-0:60:1695":{"id":"0:110-0:60:1695","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[75,17],"end":[75,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"cached::CachedIntoIter","name":"CachedIntoIter","id":"0:60:1695","glob":false}}}},"paths":{"6:573:7315":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"5:1492:3744":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:21:687":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"11:2174:3996":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"11:760:3289":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"2:11613:5813":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:3168:13930":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"16:7568:33612":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"18:564:3549":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"17:13043:4744":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:42257:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"6:4374:7537":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:40401:2264":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:11241:20968":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"2:44034:6054":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:9604:3563":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:48041:6194":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:8740:20838":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:46261:6114":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:13697:4939":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"6:4428:7564":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:40522:2259":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:44260:5819":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:4380:2169":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"6:494:7268":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:9840:4297":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:5008:7804":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:13749:4954":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:40432:2265":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"16:5673:20775":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:11600:20850":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"6:5074:7835":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:2203:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:1820:2177":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:8291:6333":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:10332:3068":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"16:2611:5172":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:2373:8595":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"1:8871:6252":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:7268:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"16:6915:33613":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"16:5843:5251":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:43646:3067":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"9:330:7252":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"5:3802:3289":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"2:40973:2242":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:43902:6051":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:10900:3061":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:11411:3362":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"5:3671:3254":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:13673:4937":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:44359:8330":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:7869:6276":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"6:6720:8120":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:1696:7457":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:8384:2143":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:12579:4652":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"18:636:4139":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:5067:5224":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"6:4872:7733":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:10555:1704":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"1:3735:6233":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"15:394:19881":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"6:4949:7779":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:2523:237":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:30451:30524":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"11:1517:3480":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:8219:6049":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:4258:2161":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:10845:4405":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:3513:8603":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"16:3441:5195":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"16:4536:5208":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:3382:2240":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:30421:2308":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:3257:6228":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"20:333:3237":{"crate_id":20,"path":["once_cell","race","once_box","OnceBox"],"kind":"struct"},"1:11994:1059":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:11726:4483":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:42296:2212":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:14329:5125":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:11467:3598":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:9296:3582":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:1975:184":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:4734:8661":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:20967:8744":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"2:49939:8748":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"2:32205:5848":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:3106:6223":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"2:11408:13883":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:1184:4169":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"17:14163:5077":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:44128:6064":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:8632:20835":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:20911:8739":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"2:11378:14140":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"5:7193:1780":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:10923:6273":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"6:1500:7334":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:40493:2271":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:10097:4317":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:43911:6052":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:6804:8729":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:46987:6144":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:2832:5436":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:2921:1720":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:40513:2272":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"5:276:1801":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"6:1663:7441":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:8771:20839":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:47485:6178":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:21529:8746":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"5:3570:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"5:0:286":{"crate_id":5,"path":["alloc"],"kind":"module"},"18:113:6461":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:8711:20837":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:9098:218":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"17:11955:4524":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"11:447:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:2762:5429":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:42714:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"17:13914:4995":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:5494:6251":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"6:4944:7777":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"16:7584:5509":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"9:486:19770":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"6:1649:7430":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"6:7278:8208":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"6:5920:7947":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:8452:6030":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:5471:3234":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"16:4785:5215":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"5:3583:1768":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"8:0:1830":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:22721:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"17:11943:4521":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:12002:648":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:2398:2020":{"crate_id":1,"path":["std","io"],"kind":"module"},"6:7250:8205":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:44355:8329":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:12952:4723":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"16:5626:5234":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"1:2878:3336":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"6:4973:7791":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:8808:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"18:574:4123":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"6:6565:8057":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"16:2567:5170":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:20722:30475":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:44435:14180":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:1757:613":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:21182:8735":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:4038:8652":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"11:644:1775":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:47919:6185":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"5:7339:2198":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"18:644:4123":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"17:10066:4312":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"5:895:1768":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:6983:2235":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:40196:5994":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:46093:6109":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:14380:5136":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:7721:2249":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:14197:5089":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:2551:3333":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"17:10786:4400":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:22113:30527":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:12741:3047":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:22754:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"17:10969:4416":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:11623:4469":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"5:2131:2478":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:11696:4479":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"6:4315:7493":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"16:6763:5383":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:40372:2254":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:41794:2541":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"6:500:7270":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:3520:8623":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:10091:3502":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"5:4196:3234":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"1:2212:8587":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:39518:2168":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"6:4463:7578":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:2925:1808":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"14:215:5664":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"11:1663:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:9294:2696":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"6:6834:8190":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:44647:5682":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"5:2170:3746":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:12493:192":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"1:551:2485":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:40295:6003":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:11853:5803":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:4186:1956":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:11328:6264":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"5:629:5748":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"16:530:3634":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:6243:3339":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"6:1631:7418":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:4010:5779":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:5618:3339":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:11919:13888":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:30509:30517":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"2:39525:5858":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:43494:3049":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"6:4389:7544":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:11178:4438":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"2:44049:6059":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:0:498":{"crate_id":2,"path":["core"],"kind":"module"},"1:3217:6226":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:4129:6487":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:8958:2216":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"11:2033:1715":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:9942:222":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:4383:6237":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:631:6206":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:10621:4367":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:21196:3764":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:41870:1780":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:22424:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"10:44:3714":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:45662:6087":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:10351:3585":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"6:5994:7982":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:11340:6493":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"17:13016:4742":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:42021:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:20873:8605":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"2:42668:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:5625:3340":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"17:11416:3595":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:43526:3064":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:2683:220":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:261:4162":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:4042:8653":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:4263:2162":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:1636:2302":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"16:5651:5186":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:1913:8572":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:21176:8733":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:11136:3763":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"2:47843:6183":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"6:595:7328":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"16:2373:5162":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:13368:4820":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"16:7289:5452":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"14:40:4507":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:2811:14088":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:5234:190":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"6:4341:7513":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:8872:20842":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:8841:20841":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:948:5671":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:44635:6083":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"18:491:2158":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"5:6888:244":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:39490:5856":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:1810:6215":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"16:2293:19890":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:2804:5431":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:10458:4345":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"17:11992:4530":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:2332:3622":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"6:4304:7485":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:8307:6334":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"1:10302:6250":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"5:5130:2211":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"5:4076:1775":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:42970:3781":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:8977:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"5:1411:1768":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:498:2478":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:39310:5851":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"6:488:7265":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"5:4848:204":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:6536:2222":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:942:5670":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"5:7292:1780":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"6:1545:7356":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:13566:4923":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:8990:25098":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"16:5028:5223":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"16:6939:20782":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:9033:6365":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"6:7523:8221":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"16:7679:3703":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:9185:29270":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"6:6136:8025":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"5:3178:5678":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:41854:1768":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"6:4704:7654":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"6:7529:8222":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"0:129:1711":{"crate_id":0,"path":["thread_local","ThreadLocal"],"kind":"struct"},"17:13435:4875":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"16:5363:20774":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"6:5044:7826":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"16:2637:5173":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:11767:4492":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:10520:4353":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"6:4483:7588":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"11:1838:5677":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:40248:6001":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:2799:14087":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:47595:6179":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:10417:4342":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:47343:6177":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"16:6456:3687":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"6:7546:8227":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:0:1410":{"crate_id":1,"path":["std"],"kind":"module"},"2:7714:1700":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:8285:8671":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:8329:8090":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"5:1374:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"11:723:3742":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"17:14259:5110":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:3176:25412":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"6:1673:7447":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"6:4678:7641":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:10814:29935":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"2:41618:6235":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"6:6618:8086":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:2910:2157":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"16:6850:5389":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:1422:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:2516:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:46115:6110":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:40442:2266":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"16:6197:5297":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:7264:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:10182:3073":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:46331:6117":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"16:5994:20777":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"11:1121:5674":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:11888:3603":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"16:3042:19918":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:8534:6239":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:10740:8345":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"1:5611:206":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"6:7295:8216":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:504:4166":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"7:79:19764":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"16:149:3239":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"16:5807:5244":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:3438:6329":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"19:0:1041":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"6:6077:8013":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:4563:8690":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"5:5368:3043":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"11:630:1768":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"7:0:1565":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:10141:6370":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"17:9899:3583":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:44012:13894":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"6:4456:7575":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:1572:5678":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"1:12013:797":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"5:4034:3254":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:21745:8734":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:13937:5003":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:2357:8590":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"16:4441:5205":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:20707:30297":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:47957:6188":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"6:6868:8199":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:21299:8605":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:40414:2256":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:43444:3057":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:10323:4331":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"2:41582:30508":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"6:4436:7566":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:13155:3592":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"5:1482:5675":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"6:7564:8230":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:3078:8543":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:13949:5006":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:42138:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:9280:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:2816:14089":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:2152:591":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"6:5775:7869":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:2791:14086":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"18:590:4127":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:9475:4283":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:43415:3054":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:9977:4286":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"5:7476:5774":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:11571:6265":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:12826:4706":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:7923:3487":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:7852:6275":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:12840:4708":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:44063:6062":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:2795:14085":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:4159:6489":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"6:5051:7829":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"1:7847:6274":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:22036:30514":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"6:4729:7665":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:13771:4960":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:5589:2258":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:906:5675":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:40991:2246":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:8899:20843":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:2962:13862":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:45708:6089":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:11553:5809":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"16:2689:5175":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:3181:30842":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:8231:6328":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:9409:33628":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:13140:4757":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:4022:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"1:10823:29942":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"6:1506:7337":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"16:6239:33617":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"5:3217:33508":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:9539:3762":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"16:8021:5561":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:41862:1775":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"6:6015:7995":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"6:5836:7897":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:9103:219":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:21097:8736":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"2:43927:5994":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:43406:3055":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"16:7592:20785":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:43455:3050":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:14301:5116":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"16:3580:5196":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"5:4166:3234":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"18:755:4160":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"17:2105:20899":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:21743:8605":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"5:4350:245":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:43696:6044":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:10812:4403":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"11:1538:5676":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:11272:4450":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:4833:7711":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:40535:2273":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"16:2519:5168":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:11276:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:5741:2213":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:43434:3056":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:12377:4622":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:39385:202":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"16:7313:33616":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:47881:6184":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"16:6250:3678":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"5:1464:3742":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:9282:2688":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"16:7693:3704":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:11664:3073":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"16:5940:5259":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:10090:1768":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:10249:4324":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:21308:3764":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"16:6986:5407":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:44605:6080":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"5:2035:3487":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"17:10654:4368":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"5:6771:3287":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:3215:6225":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:3647:1780":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"16:7707:5512":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:8849:1768":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"16:6470:3688":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"6:5890:7924":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:6603:2227":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:2850:14094":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"17:9744:33623":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:46953:6143":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:11220:20967":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:42099:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:11808:8711":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"6:1638:7422":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:7569:3351":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:10361:3586":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"6:6008:7993":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"11:798:5667":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:4151:6488":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:47797:6182":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"16:7855:20787":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"11:749:3273":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"16:7525:3696":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"5:1138:6485":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"6:6775:8157":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:9887:4302":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:2691:2174":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"9:393:19772":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"6:6850:8196":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"20:361:2155":{"crate_id":20,"path":["once_cell","imp","OnceCell"],"kind":"struct"},"2:3151:234":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"11:1068:3477":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"5:5925:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"11:657:1780":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:11007:4419":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:10293:4328":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:22149:5840":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:2265:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:2855:14095":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:40392:2255":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:11354:4248":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"6:4716:7661":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:10509:6225":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:10080:4314":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:11250:4445":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"6:6796:8171":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:3196:2175":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:11045:4422":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"16:6724:5371":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:12936:4722":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:9274:3581":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"16:7433:5493":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:41641:5799":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"16:7665:3701":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"9:177:3731":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:2838:14091":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:20925:2552":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"1:11128:29939":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:6834:2232":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:6351:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"6:6688:8110":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:8919:8721":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"5:7384:5766":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:13991:5017":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:4900:8697":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:925:8534":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:3395:4176":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:10609:4366":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:10444:4344":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"2:43882:6049":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"11:399:6476":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"5:7367:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:12001:646":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"5:6560:1780":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"11:365:3246":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"16:4476:5206":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:44375:8334":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:40949:2217":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:9571:33620":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:11578:6265":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"5:6639:3254":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"16:2663:5174":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"6:5967:7973":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:1495:7332":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:13427:4872":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:41516:5798":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:6787:6486":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"5:7398:30521":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:13591:4925":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:10339:4336":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:40752:2280":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:1772:6213":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:14150:5071":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:13957:5009":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:41653:5800":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:7656:2489":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"5:5614:3287":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:3456:3498":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"9:507:5734":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:45832:6094":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:40101:5777":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:40942:5790":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:21862:5824":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:11629:5814":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"6:6726:8121":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:2627:6222":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:2980:8541":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"16:4965:5221":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:13303:4769":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"11:736:3743":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"11:0:2008":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"16:2759:5178":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:41605:6025":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:12891:4713":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:8983:2482":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"5:2223:33539":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:12921:4718":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"6:1690:7454":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:32296:2620":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:20692:30297":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"17:12539:4646":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:45762:6091":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:5440:6250":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:11098:4428":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:11815:4507":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"6:4664:7640":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"5:5977:3490":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:40545:2274":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:12053:4541":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"18:538:3547":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"6:6589:8074":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:7331:33618":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:21114:8605":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"11:844:5671":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:9442:33625":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"6:4380:7539":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:30381:2307":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"16:4698:5212":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:10785:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"1:3294:6229":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:4629:8101":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"17:10013:4308":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:14015:5021":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"6:4908:7753":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"6:6625:8090":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:12444:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"16:0:2012":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:22622:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"16:6554:5333":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"6:568:7313":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:12618:4657":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:13854:4979":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"5:3142:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:9336:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"16:4841:5217":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:42931:3779":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"20:368:3544":{"crate_id":20,"path":["once_cell","race","OnceNonZeroUsize"],"kind":"struct"},"16:6692:20781":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:6156:3345":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:22097:30523":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:11962:8532":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"11:1831:3289":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"17:11753:4491":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"6:587:7323":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:40958:2238":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:4335:2168":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"6:6036:8001":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"18:727:3554":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:13574:4924":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:11144:4436":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"2:21275:8605":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"16:6372:3686":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"16:6142:194":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:9485:33621":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:9875:4300":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:30437:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:43920:5815":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:42960:6030":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:43850:6048":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:40309:8574":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"2:44618:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:9614:33627":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:42177:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:10231:8718":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"17:11109:4432":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"1:9013:6364":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"11:1826:3273":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:6140:3328":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"16:5301:5226":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:12011:1520":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:12605:4655":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:11642:4472":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:8795:6355":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"5:6308:8822":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:11265:3798":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:46209:6112":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"11:2186:33604":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"14:0:2010":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:45952:6099":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"6:4787:7695":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:9777:20856":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:41879:183":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"17:11852:4520":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:9188:3579":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"5:2243:3749":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:8145:3803":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:2842:14092":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:2783:8726":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:2383:8600":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"16:2926:19916":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"16:3777:5198":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:12792:4703":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:8199:2278":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:12649:3328":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:42658:8318":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"11:1611:3248":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:12711:4668":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"5:7465:5773":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"21:0:1830":{"crate_id":21,"path":["cfg_if"],"kind":"module"},"17:11371:4457":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"6:5015:7807":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:12727:4673":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:2826:5435":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:5554:8011":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"11:332:3244":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:11989:373":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"6:4800:7700":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"6:1513:7340":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:13803:4967":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"5:2049:3489":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:21280:8732":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"11:1818:1768":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:5774:2215":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:919:5667":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"17:10148:4320":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:12424:4628":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"5:4428:3279":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:1566:5677":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"5:1302:5674":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:1550:1768":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:22523:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"11:1048:33603":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"6:7586:8235":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"6:0:826":{"crate_id":6,"path":["libc"],"kind":"module"},"16:7025:5411":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:14236:5097":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:11199:4440":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"17:13109:4751":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:2313:188":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"16:4868:5218":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:7738:8561":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:4180:6490":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"6:4401:7549":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:6533:2221":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:12354:4617":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:8903:8722":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:9534:13956":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"11:1845:5678":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"6:7540:8226":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"5:4236:1768":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:9734:4288":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:48003:6192":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"6:5068:7833":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:45730:6090":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:10253:4325":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:8325:6336":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:13332:4789":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"6:5829:7895":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:9518:4284":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"11:97:7245":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:45915:6097":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"6:7505:8218":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"6:1681:7448":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:4811:803":{"crate_id":2,"path":["core","iter"],"kind":"module"},"6:6744:8131":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:3504:28740":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"17:12118:4557":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:8156:3499":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"6:4518:7607":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:9655:4286":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"16:3025:5192":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:11104:6356":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"16:6571:20780":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:7758:5848":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"16:5590:5187":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"16:2497:5167":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:11496:6234":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:3179:29399":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"16:6232:3647":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"16:2900:5184":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:9223:3580":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:39511:5857":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"2:20875:8737":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"2:2162:2552":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"6:4887:7738":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"17:13659:4934":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"16:6396:5318":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"17:11591:3592":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"16:2737:5177":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:14:1763":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:11590:5812":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"6:4862:7727":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"6:4638:7638":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"11:2201:2198":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:9665:33626":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:8561:6354":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:40229:13948":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"16:8125:5570":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"16:5704:3655":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"16:7833:5524":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"16:6438:5321":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:1972:185":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"16:5639:5239":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:9016:3558":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"1:6424:2218":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:12566:4651":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"5:4004:3273":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"6:4368:7536":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:12552:4373":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:8972:3793":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"1:7754:6273":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"6:5025:7812":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"17:13981:5014":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:12479:4637":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"6:4723:7662":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"6:4489:7591":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"16:7061:5416":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"5:7440:3285":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"5:1426:1775":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:43614:3581":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:10945:4414":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"2:3317:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:40423:2257":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:10401:3072":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"16:2352:5161":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:42418:2687":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:12005:750":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:4792:3337":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:10123:3583":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"16:3058:4185":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"16:6540:3689":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:44347:8327":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:46017:6101":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"6:6841:8193":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:43516:3066":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:7907:6278":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:12412:4626":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:46923:6142":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:12303:4604":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:11990:946":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:39341:198":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"6:4895:7743":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"17:11118:4433":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"16:6658:5357":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:9952:4268":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"5:2970:33089":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"5:7263:3750":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"14:187:19861":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:1833:3103":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"1:2915:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"17:10994:4418":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:13096:4750":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:2821:14090":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"6:482:7262":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:9806:20857":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:40935:2236":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"16:4396:5204":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:46877:6141":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:8273:6235":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:43796:6046":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:10486:4348":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"17:11234:4443":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:41803:193":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"6:6671:8109":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:10799:4401":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"15:327:3709":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:9850:20858":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"1:410:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:1732:2571":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"16:7622:5510":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:8976:3757":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"18:0:2014":{"crate_id":18,"path":["memchr"],"kind":"module"},"11:1501:19850":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:21011:8745":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:7677:1704":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"1:2488:6220":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:4909:8698":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:22142:8251":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:9528:33619":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:11084:4424":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"1:11992:1537":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:9968:6022":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:42060:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:14315:5118":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"10:0:2007":{"crate_id":10,"path":["adler"],"kind":"module"},"17:12592:4654":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"18:96:6458":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:8299:6326":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:582:8524":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"18:507:4123":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:12466:30694":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:39365:199":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"5:5364:3042":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"17:14395:5137":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"1:4050:8655":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:44217:6066":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:8803:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"16:6531:3241":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"2:2510:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"6:6044:8004":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:13707:4940":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:8168:8604":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:14177:5083":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:13923:4996":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"16:7038:5414":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:2355:2544":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"5:6790:3299":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:10221:3060":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"20:50:3234":{"crate_id":20,"path":["once_cell","imp","Guard"],"kind":"struct"},"17:8542:20824":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"16:6018:20778":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:2984:8542":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"18:624:33632":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:12014:1575":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:39325:200":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"16:7494:5506":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:7588:3353":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:7717:2248":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"16:7515:5507":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:7277:2250":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"16:5959:5266":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:5076:6242":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:2695:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:7915:6279":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:44660:6084":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1:4736:8663":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"6:1709:7461":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:5375:6243":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:1629:590":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:3141:14096":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:9146:6367":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:41718:1779":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"17:11924:3612":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:4738:8664":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"6:1590:7387":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:527:2483":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:1835:3497":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:2133:4171":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"16:2874:5183":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:42218:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:44544:205":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:9047:26806":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"5:261:3254":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"1:358:2498":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:12010:1519":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"5:3238:5680":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"16:2803:5180":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:30985:183":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:21524:8738":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"2:21621:3766":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"16:2443:5165":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:5531:2269":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:8924:20844":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:720:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"9:0:2006":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"16:2715:5176":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:11164:3591":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"16:4900:5219":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"16:6332:5311":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:2740:2423":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"6:579:7318":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:13456:4883":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:12864:4711":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"6:5737:7842":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"16:6713:5370":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"16:8138:5573":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"9:237:6030":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:7859:3802":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"5:7223:3265":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:7123:6491":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:43628:3059":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:5990:2282":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:4311:3997":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:6064:3341":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"1:8890:6361":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"18:80:6457":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:8381:1703":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"16:5916:3630":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:43778:6045":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"5:1118:3481":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:40570:2276":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:21968:3767":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"6:1911:15803":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:2565:3319":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"16:7474:5190":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:12148:4569":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"1:911:3744":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:43424:3058":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:3385:5776":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"1:7726:3792":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"17:10377:3572":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"6:5767:7867":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"11:986:3476":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:4491:8673":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:40584:2277":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"5:3212:5677":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"5:1442:1780":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"5:676:231":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:11248:3360":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:2164:2553":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"6:4420:7562":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:2931:1749":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"6:1603:7394":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:1075:4168":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"6:1717:7465":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"16:6789:5384":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:41943:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:48094:6197":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:12346:4615":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"6:6607:8081":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"6:6022:7996":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:10280:4327":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:4996:5222":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"6:4550:7622":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"5:878:3262":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:9288:2698":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:11210:4441":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"6:4754:7675":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:11298:6261":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:12646:4662":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"5:207:3252":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:10832:4404":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"16:6900:3693":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:40222:5997":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:40188:5777":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:5409:6248":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:8383:2149":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:10051:4311":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:8544:1768":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:10373:3071":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"6:562:7310":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"17:10568:4361":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:30415:1702":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:11155:6260":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:46483:6121":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"12:0:2009":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:45933:6098":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:44367:8332":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:6740:2263":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:43355:6035":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:1060:5672":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"18:719:4154":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:46799:6140":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"6:1569:7373":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"16:5100:5225":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"16:4753:5214":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:76:1575":{"crate_id":2,"path":["core","usize"],"kind":"module"},"17:12254:4579":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:4254:207":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"16:5882:5253":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:45893:6096":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"16:7099:6365":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"16:2962:19917":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:23234:3773":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:582:4167":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:22589:2490":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:46163:6111":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:10259:3074":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"17:13029:4743":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:22024:5826":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"5:7213:3273":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"5:3737:3489":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:5302:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"17:10313:4330":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"6:6573:8062":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:40554:2275":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:1917:2573":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"5:7201:5765":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"17:9344:33624":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"5:685:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:11475:6233":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:41533:8641":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:44155:5818":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:43163:6034":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"17:11979:4528":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:2243:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:7359:1796":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:42439:2698":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"6:4475:7583":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"5:7547:3293":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:44597:6078":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:2745:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:22457:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"18:671:4146":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:8189:2264":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:9240:2694":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"11:805:8534":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:42432:2697":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:40144:5990":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"20:374:3545":{"crate_id":20,"path":["once_cell","race","OnceBool"],"kind":"struct"},"4:0:2005":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:5819:2224":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:13787:4963":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:856:1780":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:10114:1775":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"16:8210:5473":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:42763:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"16:6484:5322":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:10294:3067":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"16:6057:19889":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"5:2960:33088":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:4231:6236":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:7575:8234":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"6:4413:7558":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"11:1822:1780":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"16:3894:5201":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:3988:8649":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:20739:30476":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:2602:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"1:12003:752":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"5:6800:3300":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"16:6323:3685":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:40168:5992":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:11394:5806":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:3373:13914":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"17:0:2013":{"crate_id":17,"path":["object"],"kind":"module"},"2:43892:6050":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:42686:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"14:165:19854":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:12007:747":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"1:11998:1502":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:22059:5828":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:9284:2687":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"1:3994:8650":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:10597:4365":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"5:6081:3234":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:44383:3763":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"16:7255:2147":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:40279:30521":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:42978:3782":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"11:2060:5672":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:5045:6242":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:12004:4531":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:11032:3357":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"5:4987:3234":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:4958:2139":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"18:690:4149":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:12089:4546":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:11454:3596":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:9292:2695":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"18:707:4150":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:9561:4285":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"11:1103:5673":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"5:7451:224":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:3156:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:3162:13931":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:40964:2240":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"18:582:1957":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:12008:1521":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:10974:2569":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"11:2194:7249":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:2507:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"6:4842:7717":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:4113:2178":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:9990:4307":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:12994:4731":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"5:5841:3273":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:11774:3366":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"6:119:14455":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"1:2587:6221":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:11957:3810":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:9318:3560":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:1543:3234":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"5:1257:1715":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:477:3330":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"17:13083:4749":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"16:6864:3648":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:44206:13895":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:40352:6004":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:41667:181":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"16:2465:5166":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:40128:30526":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:40738:2279":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:2355:189":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:2694:225":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:11388:20848":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:7631:8605":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"5:778:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:6291:206":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"6:4810:7703":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"16:4564:5209":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:9932:8605":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"11:1858:5680":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"1:3296:6230":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:9275:3103":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:900:3289":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"16:7799:5520":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:3233:2176":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"18:515:4121":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"5:6932:3301":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:10750:6275":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"5:4395:3234":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"16:6160:5295":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:10072:6215":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"6:4764:7681":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:40452:2267":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"16:6357:5314":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"5:3330:3289":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"16:4592:5210":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:12035:4540":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:3513:3273":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:4:1024":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"16:5567:5185":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:47735:6181":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:8659:20836":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:44363:8331":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:39224:2705":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:12065:4544":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"5:1514:198":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"17:14227:5095":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"6:1557:7365":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:20923:30716":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"17:12815:4704":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:12133:4563":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"11:1012:5672":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"11:695:3745":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"16:7739:3705":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"16:4032:5202":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:40267:6002":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"5:5956:2211":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:11973:28803":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"5:2962:8243":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:11862:4150":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:14102:5070":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:22655:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"16:7240:33615":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:43178:8326":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:22688:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:8225:6326":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:13055:4745":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"18:599:33631":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:8949:20845":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:10319:3503":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:46063:6108":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:3934:3234":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"6:6156:8039":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:48071:6196":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:13971:5011":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:10223:4323":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"17:10671:20941":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"16:8176:20788":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"16:6427:5320":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"9:450:19771":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:8212:3059":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"5:7351:2199":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:4325:2167":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"6:4685:7642":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:9020:3796":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:12518:5822":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:43507:3063":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:7993:6280":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:6067:8010":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:11155:4437":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"6:4524:7610":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"6:7463:8217":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"5:3722:3487":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:30190:8643":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"18:531:4124":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:1069:5674":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:915:3745":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:40342:3308":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:13778:4962":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:12012:1517":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"1:3980:8648":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:8108:6318":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"6:4446:7572":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:13683:4938":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:41727:1768":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"6:4740:7669":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:40502:2281":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:2246:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:47137:6145":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"16:3744:5197":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:42698:5539":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"18:481:4122":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:21130:8731":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:12431:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"6:5793:7882":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:41904:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:46307:6116":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:1666:1097":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:12016:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"17:14007:5020":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:12769:4694":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:13448:4882":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"3:234:210":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:44562:195":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:6460:2225":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"6:4535:7615":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:12966:4725":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:7414:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:46563:6122":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:41476:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"6:4770:7684":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"14:160:5659":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:21174:8605":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"17:10957:4415":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"11:1852:5679":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:3186:4175":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:40180:5993":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:11868:13880":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:9821:4295":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"5:7284:1780":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"6:4650:7639":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:5383:3234":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"17:11290:20846":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"5:4365:3279":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:45638:6086":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:8236:8640":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"18:660:4140":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"5:3204:5679":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"3:0:444":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"16:6516:5332":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"6:5987:7981":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"20:174:2155":{"crate_id":20,"path":["once_cell","sync","OnceCell"],"kind":"struct"},"6:4626:7637":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:43182:3051":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"16:7539:3697":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:9118:3577":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"16:6872:3691":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:12006:751":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:12004:749":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:40983:2244":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"17:14403:5140":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:44192:6065":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:40107:5986":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:4167:8670":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:8801:186":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"6:7511:8219":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:43936:5777":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"17:12318:4608":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:13830:4971":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:10948:28797":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"2:21044:8740":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"17:10883:4407":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"17:10581:4363":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"17:10529:4354":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"6:4496:7594":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:11264:4448":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:11020:4420":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:2513:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"14:221:5666":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:13513:4917":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:13999:5018":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:10721:6379":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"16:7463:5502":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:7882:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:12074:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"5:2461:3482":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:13847:4978":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:44371:8333":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"16:7362:20784":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:2318:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"16:6386:5317":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"11:667:3744":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"6:6711:8117":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:6651:2253":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"16:7753:5513":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:11074:4178":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:22163:5841":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:2787:8728":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:10633:3588":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:877:3743":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"16:8105:5569":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"5:3183:33505":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"14:202:13896":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:8997:20823":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:42948:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:10330:4334":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:10266:4326":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:10175:3563":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"6:1527:7345":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"15:306:6469":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:22556:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"6:6171:8050":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"6:4794:7697":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:2928:2424":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:10745:8347":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:4605:13941":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:9721:3318":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"13:226:3713":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"6:123:14456":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:8280:8336":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:11552:3809":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:9706:4287":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:13557:4922":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"6:474:6482":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"6:4854:7722":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"1:8841:6358":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"5:7255:198":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"17:13719:4943":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"5:2690:8246":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:11056:20966":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"16:7648:198":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:5799:7885":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"6:4395:7546":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:4694:8699":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"14:31:5659":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:43832:6047":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"6:541:7299":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"6:4606:7635":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:7367:29656":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:10863:3563":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:12017:4532":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:39407:201":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:7651:2488":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:4633:8105":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"17:13757:4957":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:4028:8651":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:39504:5473":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"2:4764:390":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"16:2399:5163":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:11995:312":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"16:2314:5159":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:3998:5778":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:21058:2552":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"5:1523:5751":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"6:6705:8115":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"20:216:1955":{"crate_id":20,"path":["once_cell","sync","Lazy"],"kind":"struct"},"5:2966:33087":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"17:12878:4712":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:41562:3776":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:11428:4459":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:8813:6356":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:639:8527":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:12631:4659":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"11:2168:7246":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"18:699:3552":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"6:6820:8181":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:43481:2254":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:10555:4358":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:7998:3801":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"6:4695:7649":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:21984:3751":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:13604:4930":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"5:1503:3745":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:22787:5845":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:7632:2499":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:4144:2155":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:3867:5200":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"16:5737:20776":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:8935:8723":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"18:681:4147":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:11520:4178":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:2164:4174":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:12009:1518":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:47966:6189":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:11346:6494":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"6:4568:7633":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:46382:6118":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:4409:1699":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:39429:203":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:40724:2278":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:11189:3592":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:9286:2697":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"17:10430:4343":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:44227:6070":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:3966:8647":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:1884:6216":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:31013:1957":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"6:6130:8024":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:40158:5991":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"6:1595:7389":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"16:6667:5358":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:47977:6190":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:8857:6360":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:12526:4643":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"17:10110:4318":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:22490:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:21915:5825":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"5:1273:5672":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:1013:1992":{"crate_id":2,"path":["core","hint","unreachable_unchecked"],"kind":"function"},"2:4785:30502":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:10499:4349":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"16:7484:5505":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:7231:2251":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:8865:1780":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"5:7184:3048":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"1:7842:4228":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"1:5425:6249":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:13862:4980":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"17:13069:4746":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"16:7407:3644":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:11034:4421":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:8794:20840":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:12502:4642":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:352:2497":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:2690:2306":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"1:6188:3797":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"5:6487:3254":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"6:6598:8080":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:22051:5827":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"6:7558:8229":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"17:11127:4460":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:2757:8727":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:1755:2570":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:40461:2268":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:13905:4992":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:9163:2500":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"2:40116:5987":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:864:3742":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"5:1102:6484":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:10927:5732":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:9499:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:2371:8594":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"6:5882:7919":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"6:4824:7708":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"5:5320:3254":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"16:8068:5564":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:2897:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:2349:182":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:10511:4352":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"16:6886:3692":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"0:0:1471":{"crate_id":0,"path":["thread_local"],"kind":"module"},"16:2589:5171":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:22000:3768":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"6:1733:7470":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:2208:1758":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:9655:3315":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"2:41743:1780":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"17:14205:5090":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"1:4815:8660":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"5:2141:5752":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"6:4879:1011":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:833:1768":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:7758:31935":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"6:4616:7636":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:14216:5094":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"11:403:6477":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:40203:13947":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"2:9290:194":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"13:110:33605":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"1:3255:6227":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"6:1536:7350":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:2705:2173":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"6:4929:7768":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"1:7899:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:32169:7248":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:5557:8716":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:11043:3358":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"5:1011:3254":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:2779:5430":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:42939:3780":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"18:614:33629":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:12691:4667":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:7306:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"15:0:2011":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:44402:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:1561:3289":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"1:5122:191":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"5:7427:5772":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"20:294:3468":{"crate_id":20,"path":["once_cell","race","OnceRef"],"kind":"struct"},"17:13639:3613":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:13125:4753":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"16:6931:5393":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"11:2049:3476":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"17:10981:4417":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:45863:6095":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:8206:3581":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:47937:6186":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:9966:3563":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:10515:6229":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"5:822:3260":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"17:13870:4981":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:11116:6357":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:41499:5796":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:8402:6345":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"5:7531:3289":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"1:9068:3806":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"1:7731:3791":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"11:2180:6474":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:12982:4729":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:6973:29408":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:10763:6384":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"9:426:19773":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"16:3295:5194":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"16:6815:5385":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:6637:217":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:42723:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"17:14350:5131":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:2693:226":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:1037:1715":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:12106:4554":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:10906:4408":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:3182:29396":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:48018:6193":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:12638:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:42425:2688":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"18:766:24800":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:40484:2270":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:634:6208":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:46460:6120":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:1466:1701":{"crate_id":2,"path":["core","mem"],"kind":"module"},"20:0:1831":{"crate_id":20,"path":["once_cell"],"kind":"module"},"1:2913:210":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"2:32209:5849":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:10139:3059":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"18:609:4134":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"6:526:7290":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:4631:8103":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"17:10303:4227":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:8252:5581":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:10390:4340":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"6:7609:8241":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:7043:2160":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:12457:4636":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:12365:4620":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"9:52:3716":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:12686:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:11997:1418":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:42741:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"6:4556:7624":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:9025:3804":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"16:2541:5169":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:7529:6392":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"5:5771:232":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"6:4506:7601":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:14026:5025":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"17:13894:4988":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"10:36:7251":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"16:6175:3663":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:1578:5679":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"16:8265:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"6:62:14401":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"16:4814:5216":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:20737:30471":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:5955:7968":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:11049:3359":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"5:1776:3289":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:9239:210":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"17:12659:4663":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:9477:3355":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"1:3670:8642":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"1:1557:3273":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:2519:238":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:46641:6137":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"6:7599:8239":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"16:4928:5220":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"16:7012:5408":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:9083:3576":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:3519:4177":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"6:4818:7707":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:12671:4664":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"6:1520:7342":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:6420:2217":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:1746:8249":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:400:4163":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:10403:4341":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"18:736:24799":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:47992:6191":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"5:3171:1768":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:9716:33622":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:40262:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"6:4992:7799":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:10544:4357":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:46239:6113":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:11564:29979":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:9472:6274":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"5:782:3257":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"6:4984:7797":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:39483:5855":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:12851:4709":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:11173:8349":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:7518:4167":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:43572:6037":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:2471:13952":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:39698:26822":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:14282:5111":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:43678:6043":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:43750:3069":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"11:285:3469":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:13167:4760":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:1774:6214":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"16:55:5552":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"2:22175:8644":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"6:7272:8206":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:7073:20783":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:2737:2616":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:7015:3349":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:2700:228":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:2773:14084":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:936:3472":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"11:311:1769":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:13179:4767":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"16:4620:5211":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:42923:3777":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"16:5972:3636":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"5:2959:2684":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:12161:4573":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"6:547:7302":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"6:5877:7918":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"11:836:5670":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:256:4161":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"17:11905:3605":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"1:1920:659":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"2:9753:3323":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:9127:6260":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:10805:3499":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"16:3810:5199":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"6:532:7293":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"17:12077:4545":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:14044:5028":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:846:1775":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:45814:6093":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:8827:6357":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:2590:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:9195:8341":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:12394:4625":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:43586:6040":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:11848:13882":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"6:5849:7906":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"16:4323:5203":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:9048:3575":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:11271:6389":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:10512:6227":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:46717:6139":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"6:4469:7580":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"6:4543:7620":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:9093:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:26044:3774":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"5:6957:3304":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:8003:8631":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"6:7517:8220":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:44379:8335":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:39263:13863":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"6:5863:7917":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:12757:4692":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"6:5058:7832":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:47946:6187":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:40470:6007":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"16:2781:5179":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"16:2857:5182":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:9032:3559":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:1051:3476":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"6:4938:7774":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"1:3410:3234":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:9866:4298":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:43536:3065":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:5965:3339":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"16:5689:3652":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:8136:2235":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"17:11872:3599":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"16:6303:3681":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:10471:4346":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"6:554:7305":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:2470:8605":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"6:1702:7458":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:5612:5230":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"16:5793:3662":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"16:6128:5292":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:7705:8530":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"17:11791:4506":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:3930:8646":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:40215:5996":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:8605:20822":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:12186:4577":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:41735:1775":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"16:5553:3651":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:39451:2192":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:13795:4965":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:12333:4613":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:5981:206":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"6:4781:7692":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:44554:211":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:46285:6115":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"5:7233:33510":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"16:7763:20786":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:10931:4410":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"18:652:4123":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"16:5382:3558":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:11940:6395":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"2:48133:6198":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:14189:5086":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"16:7631:5511":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:9926:4304":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"1:3936:8645":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"16:2825:5181":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:7720:8531":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:13548:4918":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"1:6889:3348":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"1:10407:6355":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:9153:3578":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:45792:6092":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"5:6441:3273":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"6:653:14812":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:43732:3071":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"16:6214:5300":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"16:8166:5574":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:3495:2694":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"11:793:5675":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"18:521:24801":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:9939:4305":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"16:8152:3707":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"6:4848:7719":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:9108:6259":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"11:119:3242":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"6:5805:7886":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:13882:4987":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"11:817:3472":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:22076:30520":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:43598:5808":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:48056:6195":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"0:295:1780":{"crate_id":0,"path":["thread_local","IntoIter"],"kind":"struct"},"2:41752:2147":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"5:4761:674":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"17:10161:4321":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:12435:4629":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"0:213:1775":{"crate_id":0,"path":["thread_local","IterMut"],"kind":"struct"},"1:11192:6259":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"16:8043:5562":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:11568:20849":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"16:7445:5494":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"5:7247:1780":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:10795:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:8475:6348":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:10775:3802":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:2752:8725":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:615:6205":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:5389:6247":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"16:3635:4189":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:44080:6063":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"14:7:5659":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"6:4328:7503":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:30615:30512":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"5:1473:3743":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:41785:2148":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"6:6028:7999":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:14054:5033":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"16:5775:3657":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"16:6289:5310":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:12015:1141":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:890:3273":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"16:8086:5566":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"17:11542:4462":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:20720:30473":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"17:14037:5026":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"13:0:2004":{"crate_id":13,"path":["std_detect"],"kind":"module"},"17:13492:4912":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"16:5414:5228":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"1:11991:420":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:10933:3062":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:11313:6262":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:7505:5191":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"5:7414:5769":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"0:286:1768":{"crate_id":0,"path":["thread_local","Iter"],"kind":"struct"},"17:13964:5010":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:8488:5803":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:40594:2261":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:2846:14093":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:45970:6100":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"6:506:7273":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"5:3596:1775":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:6648:8108":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:45618:6085":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"17:12905:4716":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:9491:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:8971:31934":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:5748:2214":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"16:6347:20779":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:12174:4574":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:8492:8710":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:4389:2170":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"17:9399:4282":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:43604:6041":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"7:32:19757":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:8550:6353":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:1554:1780":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:8351:6238":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:11967:4525":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:14359:5133":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"17:10199:4322":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:10450:3356":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"1:10966:6358":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:1583:5680":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"16:4506:5207":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:44423:6075":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:3339:8628":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"16:5398:3559":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"9:357:19786":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"5:35:3250":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:8382:2150":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:4724:5213":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:14341:5127":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"20:124:1955":{"crate_id":20,"path":["once_cell","unsync","Lazy"],"kind":"struct"},"2:9275:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:21306:8741":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:11832:4510":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:11996:1388":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:10936:6251":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"6:7552:8228":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:3837:6234":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"6:6805:8174":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:43945:5993":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"6:4748:7673":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"16:3220:5193":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"1:9465:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:4045:13861":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:41982:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"6:5080:7838":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"6:4963:7785":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"11:1027:19849":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:4469:8672":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"11:968:1715":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:46429:6119":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:2205:6219":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"6:5818:7887":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:1973:4170":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:13620:4933":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:9250:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:20679:1957":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:6589:2226":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"16:7553:3698":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"5:1672:3254":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:9738:3319":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"16:2421:5164":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"16:5342:5227":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"15:288:6465":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:434:4165":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:10387:3069":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:4619:8650":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"16:6502:5330":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:13732:4949":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"6:5900:7931":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:11498:4460":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:9913:4303":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:10415:3070":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"16:5720:5240":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:44351:8328":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"17:10038:4310":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:3732:6232":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"6:4917:7759":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:2743:2618":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:46687:6138":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:21633:30300":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:11669:4473":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:2767:5426":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"6:4955:7780":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"16:6977:5404":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"6:5979:7980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:2748:2568":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"6:4587:7634":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:47673:6180":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"6:4291:7476":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"5:1288:3476":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:41811:210":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"16:6317:3683":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"2:7227:2252":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"6:1575:7375":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:11873:13879":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:11434:6232":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:4436:2171":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:44240:6074":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:45684:6088":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:14417:5143":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"20:82:2155":{"crate_id":20,"path":["once_cell","unsync","OnceCell"],"kind":"struct"},"1:4697:8672":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:11329:20847":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"}},"external_crates":{"20":{"name":"once_cell","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}