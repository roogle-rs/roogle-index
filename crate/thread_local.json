{"root":"0:0:1583","crate_version":"1.1.7","includes_private":false,"index":{"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[485,0],"end":[485,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7805:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1893","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:36:170":{"id":"0:36:170","crate_id":0,"name":"Item","span":{"filename":"src/cached.rs","begin":[95,4],"end":[95,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"T"}}}}}},"a:2:8846:2271-0:286:1886":{"id":"a:2:8846:2271-0:286:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8846:2271","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8845:1822-0:60:1814":{"id":"a:2:8845:1822-0:60:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8845:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8845:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1814","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2799:243-0:129:1830":{"id":"a:2:2799:243-0:129:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:232:714":{"id":"0:232:714","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[491,4],"end":[493,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9770:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9751:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2600-0:295:1897":{"id":"b:2:2600-0:295:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2574:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2570:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1897","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2603:134","2:2604:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:37:1897":{"id":"0:37:1897","crate_id":0,"name":"IntoIter","span":{"filename":"src/cached.rs","begin":[96,4],"end":[96,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"b:2:2600-0:11:1816":{"id":"b:2:2600-0:11:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2574:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2570:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1816","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2603:134","2:2604:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2594-0:295:1897":{"id":"b:2:2594-0:295:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2567:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1897","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2596:741"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12666:33463":{"id":"2:12666:33463","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12684:33467":{"id":"2:12684:33467","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12038:1531","str::slice_mut_unchecked":"2:12685:33468","crate::ops::Index":"2:3095:8996"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:66:1046":{"id":"0:66:1046","crate_id":0,"name":"next","span":{"filename":"src/cached.rs","begin":[151,4],"end":[153,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41873:200","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12760:33480":{"id":"2:12760:33480","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12032:448","self::pattern":"2:12360:14343"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12385:14340","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:294:714":{"id":"0:294:714","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[450,9],"end":[450,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9770:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9751:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2605-0:295:1897":{"id":"b:2:2605-0:295:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2564:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2574:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1897","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2608:134","2:2609:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:236:1046":{"id":"0:236:1046","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[505,4],"end":[512,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41873:200","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12731:28612":{"id":"2:12731:28612","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12032:448","str::splitn":"2:12728:28610","self::pattern":"2:12360:14343"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43893:3219","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12380:14341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12686:28596":{"id":"2:12686:28596","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12687:28597"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:224:1907":{"id":"0:224:1907","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[480,4],"end":[482,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41873:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2600-0:213:1893":{"id":"b:2:2600-0:213:1893","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2574:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2570:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1893","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2603:134","2:2604:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:55:1046":{"id":"0:55:1046","crate_id":0,"name":"next","span":{"filename":"src/cached.rs","begin":[129,4],"end":[131,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41873:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[147,0],"end":[159,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["collect","min_by","cycle","eq_by","position","fold","collect_into","flatten","peekable","chain","any","gt","min_by_key","is_sorted","take","all","rposition","array_chunks","reduce","partition","partial_cmp","map_windows","skip_while","intersperse","next_chunk","cmp","max","is_sorted_by","sum","rev","ge","try_reduce","partition_in_place","fuse","le","take_while","intersperse_with","last","zip","lt","max_by","is_sorted_by_key","product","unzip","find","is_partitioned","inspect","map_while","for_each","skip","advance_by","max_by_key","__iterator_get_unchecked","cmp_by","copied","enumerate","find_map","try_fold","by_ref","scan","count","filter","nth","min","partial_cmp_by","cloned","ne","size_hint","try_find","try_for_each","try_collect","flat_map","filter_map","map","step_by","eq"],"trait":{"name":"Iterator","id":"2:7861:175","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1814","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:65:170","0:66:1046","0:67:1907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2605-0:129:1830":{"id":"b:2:2605-0:129:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2564:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2574:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2608:134","2:2609:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2590-0:47:1815":{"id":"b:2:2590-0:47:1815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2567:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2564:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2593:2758"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:227":{"id":"0:227","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[486,0],"end":[486,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:8168:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1893","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2594-0:129:1830":{"id":"b:2:2594-0:129:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2567:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2596:741"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8846:2271-0:60:1814":{"id":"a:2:8846:2271-0:60:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8846:2271","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1814","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:301:714":{"id":"0:301:714","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[497,9],"end":[497,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9770:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9751:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:1583":{"id":"0:0:1583","crate_id":0,"name":"thread_local","span":{"filename":"src/lib.rs","begin":[8,0],"end":[646,1]},"visibility":"public","docs":"Per-object thread-local storage\n\nThis library provides the `ThreadLocal` type which allows a separate copy of\nan object to be used for each thread. This allows for per-object\nthread-local storage, unlike the standard library's `thread_local!` macro\nwhich only allows static thread-local storage.\n\nPer-thread objects are not destroyed when a thread exits. Instead, objects\nare only destroyed when the `ThreadLocal` containing them is destroyed.\n\nYou can also iterate over the thread-local values of all thread in a\n`ThreadLocal` object using the `iter_mut` and `into_iter` methods. This can\nonly be done if you have mutable access to the `ThreadLocal` object, which\nguarantees that you are the only thread currently accessing it.\n\nNote that since thread IDs are recycled when a thread exits, it is possible\nfor one thread to retrieve the object of another thread. Since this can only\noccur after a thread has exited this does not lead to any race conditions.\n\n# Examples\n\nBasic usage of `ThreadLocal`:\n\n```rust\nuse thread_local::ThreadLocal;\nlet tls: ThreadLocal<u32> = ThreadLocal::new();\nassert_eq!(tls.get(), None);\nassert_eq!(tls.get_or(|| 5), &5);\nassert_eq!(tls.get(), Some(&5));\n```\n\nCombining thread-local values into a single result:\n\n```rust\nuse thread_local::ThreadLocal;\nuse std::sync::Arc;\nuse std::cell::Cell;\nuse std::thread;\n\nlet tls = Arc::new(ThreadLocal::new());\n\n// Create a bunch of threads to do stuff\nfor _ in 0..5 {\n    let tls2 = tls.clone();\n    thread::spawn(move || {\n        // Increment a counter to count some event...\n        let cell = tls2.get_or(|| Cell::new(0));\n        cell.set(cell.get() + 1);\n    }).join().unwrap();\n}\n\n// Once all threads are done, collect the counter values and return the\n// sum of all thread-local counter values.\nlet tls = Arc::try_unwrap(tls).unwrap();\nlet total = tls.into_iter().fold(0, |x, y| x + y.get());\nassert_eq!(total, 5);\n```","links":{},"attrs":["#![warn(missing_docs)]","#![allow(clippy::mutex_atomic)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:110-0:60:1814","0:111-0:47:1815","0:112-0:11:1816","0:129:1830","0:286:1886","0:213:1893","0:295:1897"],"is_stripped":false}}},"2:12676:1841":{"id":"2:12676:1841","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41875:197"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41873:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10449:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10449:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2590-0:213:1893":{"id":"b:2:2590-0:213:1893","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2567:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2564:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1893","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2593:2758"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:7718-0:286:1886":{"id":"b:2:7718-0:286:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7861:175","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7714:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:7720:170","2:7721:1897","2:7722:835"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"b:2:2290-0:213:1893":{"id":"b:2:2290-0:213:1893","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2806:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2284:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1893","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2292:25538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12725:33471":{"id":"2:12725:33471","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12360:14343","str::split":"2:12713:28604","prim@char":"1:12032:448","str::split_terminator":"2:12722:33470"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43839:6958","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12380:14341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12672:28489":{"id":"2:12672:28489","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11915:14344"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:42":{"id":"0:42","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[111,0],"end":[115,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9795:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9795:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1816","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:44:714"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12778:33484":{"id":"2:12778:33484","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12032:448","self::pattern":"2:12360:14343"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12380:14341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5550:28083":{"id":"5:5550:28083","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12787:28086"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:31:1897":{"id":"0:31:1897","crate_id":0,"name":"IntoIter","span":{"filename":"src/cached.rs","begin":[85,4],"end":[85,38]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1814","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"2:12694:33469":{"id":"2:12694:33469","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44035:6964","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12695:31179":{"id":"2:12695:31179","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44063:6855","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[128,0],"end":[128,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2816:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3433-0:11:1816":{"id":"b:2:3433-0:11:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2806:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3431:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1816","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3435:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12794:33487":{"id":"2:12794:33487","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4594:33487"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44088:6905","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2856:2551-0:60:1814":{"id":"a:2:2856:2551-0:60:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2856:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1814","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2600-0:286:1886":{"id":"b:2:2600-0:286:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2574:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2570:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2603:134","2:2604:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:211":{"id":"0:211","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[465,0],"end":[465,53]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2816:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:8168:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[83,0],"end":[92,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7714:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1816","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:30:170","0:31:1897","0:32:835"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:54:170":{"id":"0:54:170","crate_id":0,"name":"Item","span":{"filename":"src/cached.rs","begin":[126,4],"end":[126,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"T"}}}}}},"0:221:170":{"id":"0:221:170","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[474,4],"end":[474,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"T"}}}}}},"2:12728:28610":{"id":"2:12728:28610","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12032:448","self::pattern":"2:12360:14343","str::rsplitn":"2:12731:28612"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43875:3221","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:56:1907":{"id":"0:56:1907","crate_id":0,"name":"size_hint","span":{"filename":"src/cached.rs","begin":[134,4],"end":[136,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41873:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3433-0:295:1897":{"id":"b:2:3433-0:295:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2806:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3431:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1897","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3435:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:112-0:11:1816":{"id":"0:112-0:11:1816","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[75,48],"end":[75,65]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"cached::CachedThreadLocal","name":"CachedThreadLocal","id":"0:11:1816","glob":false}}},"0:16:60":{"id":"0:16:60","crate_id":0,"name":"default","span":{"filename":"src/cached.rs","begin":[18,4],"end":[20,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1816","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2856:2551-0:295:1897":{"id":"a:2:2856:2551-0:295:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2856:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1897","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:182:1897":{"id":"0:182:1897","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[341,4],"end":[341,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IterMut","id":"0:213:1893","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"0:21:1865":{"id":"0:21:1865","crate_id":0,"name":"get_or","span":{"filename":"src/cached.rs","begin":[41,4],"end":[46,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates it if it doesn't\nexist.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["create",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3066:139","args":{"parenthesized":{"inputs":[],"output":{"generic":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2289:2222":{"id":"2:2289:2222","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[23,0],"end":[81,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1816","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:19:1032","0:20:1841","0:21:1865","0:23:1868","0:26:851","0:27:1896"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[139,0],"end":[139,68]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7805:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12754:33476":{"id":"2:12754:33476","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12693:7380":{"id":"2:12693:7380","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44025:6963","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:7718-0:213:1893":{"id":"b:2:7718-0:213:1893","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7861:175","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7714:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1893","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:7720:170","2:7721:1897","2:7722:835"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"b:2:2594-0:60:1814":{"id":"b:2:2594-0:60:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2567:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1814","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2596:741"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12789:28523":{"id":"2:12789:28523","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:896:35194"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2856:2551-0:47:1815":{"id":"a:2:2856:2551-0:47:1815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2856:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2590-0:295:1897":{"id":"b:2:2590-0:295:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2567:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2564:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1897","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2593:2758"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12758:33478":{"id":"2:12758:33478","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12663":{"id":"2:12663","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12664:869","2:12665:2765","2:12666:33463","2:12667:33464","2:12669:33465","2:12672:28489","2:12673:33466","2:12674:339","2:12675:1842","2:12676:1841","2:12678:1840","2:12680:1874","2:12682:1906","2:12684:33467","2:12685:33468","2:12686:28596","2:12687:28597","2:12688:6856","2:12689:6975","2:12690:6683","2:12691:31182","2:12692:31178","2:12693:7380","2:12694:33469","2:12695:31179","2:12696:28616","2:12699:28617","2:12702:28618","2:12705:2801","2:12709:2764","2:12713:28604","2:12716:28606","2:12719:28608","2:12722:33470","2:12725:33471","2:12728:28610","2:12731:28612","2:12734:28614","2:12737:28615","2:12740:2234","2:12743:33472","2:12746:33473","2:12749:33474","2:12752:33475","2:12754:33476","2:12756:33477","2:12758:33478","2:12759:33479","2:12760:33480","2:12763:33481","2:12766:27062","2:12769:28619","2:12772:33482","2:12775:33483","2:12778:33484","2:12781:33485","2:12783:28080","2:12784:28519","2:12785:28084","2:12786:28085","2:12787:28086","2:12788:28522","2:12789:28523","2:12790:28524","2:12791:33486","2:12793:8979","2:12794:33487"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12682:1906":{"id":"2:12682:1906","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10449:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10449:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"5:5547:34163":{"id":"5:5547:34163","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:1918","`String`":"5:7529:249"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:1918","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2856:2551-0:286:1886":{"id":"a:2:2856:2551-0:286:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2856:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:3435:1627":{"id":"2:3435:1627","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39635:6896","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:172":{"id":"0:172","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[330,0],"end":[337,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2816:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7714:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}},"items":["0:175:170","0:176:1897","0:177:835"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2287-0:47:1815":{"id":"b:2:2287-0:47:1815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2806:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2281:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2289:2222"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:67:1907":{"id":"0:67:1907","crate_id":0,"name":"size_hint","span":{"filename":"src/cached.rs","begin":[156,4],"end":[158,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41873:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2816:253-0:286:1886":{"id":"a:2:2816:253-0:286:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2816:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12791:33486":{"id":"2:12791:33486","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4596:33486"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44070:6906","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:170:1897":{"id":"0:170:1897","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[320,4],"end":[320,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"IntoIter","id":"0:295:1897","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"2:12665:2765":{"id":"2:12665:2765","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:7718-0:295:1897":{"id":"b:2:7718-0:295:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7861:175","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7714:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1897","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:7720:170","2:7721:1897","2:7722:835"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"2:12781:33485":{"id":"2:12781:33485","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12321:133","`FromStr`":"2:12320:9171"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42018:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12320:9171","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12320:9171","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:205":{"id":"0:205","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[456,0],"end":[464,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2816:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["collect","min_by","cycle","eq_by","position","fold","collect_into","flatten","peekable","chain","any","gt","min_by_key","is_sorted","take","all","rposition","array_chunks","reduce","partition","partial_cmp","map_windows","skip_while","intersperse","next_chunk","cmp","max","is_sorted_by","sum","rev","ge","try_reduce","partition_in_place","fuse","le","take_while","intersperse_with","last","zip","lt","max_by","is_sorted_by_key","product","unzip","find","is_partitioned","inspect","map_while","for_each","skip","advance_by","max_by_key","__iterator_get_unchecked","cmp_by","copied","enumerate","find_map","try_fold","by_ref","scan","count","filter","nth","min","partial_cmp_by","cloned","ne","size_hint","try_find","try_for_each","try_collect","flat_map","filter_map","map","step_by","eq"],"trait":{"name":"Iterator","id":"2:7861:175","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:208:170","0:209:1046","0:210:1907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2594-0:213:1893":{"id":"b:2:2594-0:213:1893","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2567:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1893","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2596:741"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:175:170":{"id":"0:175:170","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[331,4],"end":[331,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}},"b:2:2287-0:286:1886":{"id":"b:2:2287-0:286:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2806:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2281:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2289:2222"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:166:1896":{"id":"0:166:1896","crate_id":0,"name":"clear","span":{"filename":"src/lib.rs","begin":[313,4],"end":[315,5]},"visibility":"public","docs":"Removes all thread-specific values from the `ThreadLocal`, effectively\nreseting it to its original state.\n\nSince this call borrows the `ThreadLocal` mutably, this operation can\nbe done safely---the mutable borrow statically guarantees no other\nthreads are currently accessing their associated values.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:222:1046":{"id":"0:222:1046","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[475,4],"end":[479,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41873:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3433-0:286:1886":{"id":"b:2:3433-0:286:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2806:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3431:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3435:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8846:2271-0:11:1816":{"id":"a:2:8846:2271-0:11:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8846:2271","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1816","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:299":{"id":"0:299","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[497,9],"end":[497,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9795:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9795:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1897","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:301:714"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12788:28522":{"id":"2:12788:28522","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:896:35194"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:164:850":{"id":"0:164:850","crate_id":0,"name":"iter","span":{"filename":"src/lib.rs","begin":[284,4],"end":[292,5]},"visibility":"public","docs":"Returns an iterator over the local values of all threads in unspecified\norder.\n\nThis call can be done safely, as `T` is required to implement [`Sync`].","links":{"`Sync`":"2:2816:253"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Iter","id":"0:286:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2816:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2590-0:129:1830":{"id":"b:2:2590-0:129:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2567:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2564:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2593:2758"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[473,0],"end":[483,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["collect","min_by","cycle","eq_by","position","fold","collect_into","flatten","peekable","chain","any","gt","min_by_key","is_sorted","take","all","rposition","array_chunks","reduce","partition","partial_cmp","map_windows","skip_while","intersperse","next_chunk","cmp","max","is_sorted_by","sum","rev","ge","try_reduce","partition_in_place","fuse","le","take_while","intersperse_with","last","zip","lt","max_by","is_sorted_by_key","product","unzip","find","is_partitioned","inspect","map_while","for_each","skip","advance_by","max_by_key","__iterator_get_unchecked","cmp_by","copied","enumerate","find_map","try_fold","by_ref","scan","count","filter","nth","min","partial_cmp_by","cloned","ne","size_hint","try_find","try_for_each","try_collect","flat_map","filter_map","map","step_by","eq"],"trait":{"name":"Iterator","id":"2:7861:175","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1893","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:221:170","0:222:1046","0:224:1907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:177:835":{"id":"0:177:835","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[334,4],"end":[336,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7714:162","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12737:28615":{"id":"2:12737:28615","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41873:200","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12380:14341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2287-0:11:1816":{"id":"b:2:2287-0:11:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2806:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2281:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1816","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2289:2222"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12709:2764":{"id":"2:12709:2764","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41875:197","prim@char":"1:12032:448","self::pattern":"2:12360:14343"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41873:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12380:14341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:27:1896":{"id":"0:27:1896","crate_id":0,"name":"clear","span":{"filename":"src/cached.rs","begin":[78,4],"end":[80,5]},"visibility":"public","docs":"Removes all thread-specific values from the `ThreadLocal`, effectively\nreseting it to its original state.\n\nSince this call borrows the `ThreadLocal` mutably, this operation can\nbe done safely---the mutable borrow statically guarantees no other\nthreads are currently accessing their associated values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:169:170":{"id":"0:169:170","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[319,4],"end":[319,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"2:12674:339":{"id":"2:12674:339","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12675:1842","`u8`":"1:12049:1636"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12713:28604":{"id":"2:12713:28604","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12360:14343","`DoubleEndedIterator`":"2:7752:127","prim@char":"1:12032:448","str::split_whitespace":"2:12691:31182","str::rsplit":"2:12719:28608"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43771:3209","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2287-0:129:1830":{"id":"b:2:2287-0:129:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2806:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2281:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2289:2222"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12692:31178":{"id":"2:12692:31178","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12691:31182"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44054:6966","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:239":{"id":"0:239","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[518,0],"end":[518,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7805:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1897","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12746:33473":{"id":"2:12746:33473","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12360:14343","`DoubleEndedIterator`":"2:7752:127","prim@char":"1:12032:448","str::rmatch_indices":"2:12749:33474"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43921:6959","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12772:33482":{"id":"2:12772:33482","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12032:448","self::pattern":"2:12360:14343"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12380:14341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12790:28524":{"id":"2:12790:28524","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:896:35194"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12719:28608":{"id":"2:12719:28608","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12360:14343","`DoubleEndedIterator`":"2:7752:127","prim@char":"1:12032:448","str::split":"2:12713:28604"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43789:3217","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12380:14341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2290-0:47:1815":{"id":"b:2:2290-0:47:1815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2806:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2284:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2292:25538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:213:1893":{"id":"0:213:1893","crate_id":0,"name":"IterMut","span":{"filename":"src/lib.rs","begin":[468,0],"end":[471,1]},"visibility":"public","docs":"Mutable iterator over the contents of a `ThreadLocal`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:8846:2271-0:213:1893","a:2:2799:243-0:213:1893","a:2:2816:253-0:213:1893","a:2:2856:2551-0:213:1893","a:2:8845:1822-0:213:1893","b:2:7718-0:213:1893","b:2:2290-0:213:1893","b:2:2605-0:213:1893","b:2:2600-0:213:1893","b:2:2590-0:213:1893","b:2:2594-0:213:1893","b:2:3433-0:213:1893","b:2:2287-0:213:1893","0:225","0:218","0:229","0:227"]}}},"2:12734:28614":{"id":"2:12734:28614","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41873:200","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2605-0:286:1886":{"id":"b:2:2605-0:286:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2564:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2574:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2608:134","2:2609:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:20:1841":{"id":"0:20:1841","crate_id":0,"name":"get","span":{"filename":"src/cached.rs","begin":[34,4],"end":[36,5]},"visibility":"public","docs":"Returns the element for the current thread, if it exists.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41873:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2608:134":{"id":"2:2608:134","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32295:7747","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2594-0:47:1815":{"id":"b:2:2594-0:47:1815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2567:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2596:741"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:111-0:47:1815":{"id":"0:111-0:47:1815","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[75,33],"end":[75,46]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"cached::CachedIterMut","name":"CachedIterMut","id":"0:47:1815","glob":false}}},"b:2:2287-0:213:1893":{"id":"b:2:2287-0:213:1893","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2806:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2281:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1893","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2289:2222"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12702:28618":{"id":"2:12702:28618","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12032:448","self::pattern":"2:12360:14343"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12380:14341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5532:1916":{"id":"5:5532:1916","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7529:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12690:6683":{"id":"2:12690:6683","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43757:4526","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:295:1897":{"id":"0:295:1897","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[498,0],"end":[501,1]},"visibility":"public","docs":"An iterator that moves out of a `ThreadLocal`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:8846:2271-0:295:1897","a:2:2799:243-0:295:1897","a:2:2816:253-0:295:1897","a:2:2856:2551-0:295:1897","a:2:8845:1822-0:295:1897","b:2:7718-0:295:1897","b:2:2290-0:295:1897","b:2:2605-0:295:1897","b:2:2600-0:295:1897","b:2:2590-0:295:1897","b:2:2594-0:295:1897","b:2:3433-0:295:1897","b:2:2287-0:295:1897","0:239","0:241","0:299","0:233"]}}},"a:2:2799:243-0:295:1897":{"id":"a:2:2799:243-0:295:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1897","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12716:28606":{"id":"2:12716:28606","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12032:448","self::pattern":"2:12360:14343"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12176:3223","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12759:33479":{"id":"2:12759:33479","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2799:243-0:60:1814":{"id":"a:2:2799:243-0:60:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1814","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:7721:1897":{"id":"2:7721:1897","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"I"}}}},"2:12675:1842":{"id":"2:12675:1842","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12049:1636"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8846:2271-0:295:1897":{"id":"a:2:8846:2271-0:295:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8846:2271","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1897","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[450,9],"end":[450,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9795:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2816:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9795:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:294:714"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12669:33465":{"id":"2:12669:33465","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12667:33464"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5538:34161":{"id":"5:5538:34161","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7529:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:129:1830":{"id":"0:129:1830","crate_id":0,"name":"ThreadLocal","span":{"filename":"src/lib.rs","begin":[102,0],"end":[110,1]},"visibility":"public","docs":"Thread-local variable wrapper\n\nSee the [module-level documentation](index.html) for more.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:149","0:184","a:2:8846:2271-0:129:1830","a:2:2799:243-0:129:1830","a:2:2856:2551-0:129:1830","b:2:2290-0:129:1830","b:2:2605-0:129:1830","b:2:2600-0:129:1830","b:2:2590-0:129:1830","b:2:2594-0:129:1830","b:2:3433-0:129:1830","b:2:2287-0:129:1830","0:167","0:146","0:172","0:143","0:141","0:190","0:187","0:178"]}}},"b:2:3433-0:213:1893":{"id":"b:2:3433-0:213:1893","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2806:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3431:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1893","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3435:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8845:1822-0:295:1897":{"id":"a:2:8845:1822-0:295:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8845:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8845:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1897","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:149":{"id":"0:149","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[158,0],"end":[316,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:151:1032","0:152:1851","0:155:1841","0:156:1865","0:159:1868","0:164:850","0:165:851","0:166:1896"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:210:1907":{"id":"0:210:1907","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[461,4],"end":[463,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41873:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:209:1046":{"id":"0:209:1046","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[458,4],"end":[460,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41873:200","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7861:175","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2856:2551-0:213:1893":{"id":"a:2:2856:2551-0:213:1893","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2856:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1893","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:235:170":{"id":"0:235:170","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[504,4],"end":[504,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"2:12689:6975":{"id":"2:12689:6975","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12032:448"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43747:6955","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:19:1032":{"id":"0:19:1032","crate_id":0,"name":"new","span":{"filename":"src/cached.rs","begin":[26,4],"end":[30,5]},"visibility":"public","docs":"Creates a new empty `CachedThreadLocal`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1816","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12699:28617":{"id":"2:12699:28617","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12032:448","self::pattern":"2:12360:14343"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:156:1865":{"id":"0:156:1865","crate_id":0,"name":"get_or","span":{"filename":"src/lib.rs","begin":[198,4],"end":[206,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates it if it doesn't\nexist.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["create",{"generic":"F"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3066:139","args":{"parenthesized":{"inputs":[],"output":{"generic":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12793:8979":{"id":"2:12793:8979","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4597:8979"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44079:6816","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5549:28082":{"id":"5:5549:28082","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12786:28085"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3433-0:47:1815":{"id":"b:2:3433-0:47:1815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2806:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3431:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3435:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12769:28619":{"id":"2:12769:28619","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12032:448","self::pattern":"2:12360:14343"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41873:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12380:14341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2816:253-0:11:1816":{"id":"a:2:2816:253-0:11:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2816:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1816","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2594-0:11:1816":{"id":"b:2:2594-0:11:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2567:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1816","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2596:741"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2287-0:295:1897":{"id":"b:2:2287-0:295:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2806:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2281:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1897","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2289:2222"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3433-0:129:1830":{"id":"b:2:3433-0:129:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2806:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3431:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3435:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2600-0:47:1815":{"id":"b:2:2600-0:47:1815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2574:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2570:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2603:134","2:2604:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12749:33474":{"id":"2:12749:33474","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12360:14343","`DoubleEndedIterator`":"2:7752:127","prim@char":"1:12032:448","str::match_indices":"2:12746:33473"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43939:6960","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12380:14341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:184":{"id":"0:184","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[348,0],"end":[354,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"2:2641:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:186:1901"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:152:1851":{"id":"0:152:1851","crate_id":0,"name":"with_capacity","span":{"filename":"src/lib.rs","begin":[167,4],"end":[189,5]},"visibility":"public","docs":"Creates a new `ThreadLocal` with an initial capacity. If less than the capacity threads\naccess the thread local it will never reallocate. The capacity may be rounded up to the\nnearest power of two.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["capacity",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5531:34159":{"id":"5:5531:34159","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:1918","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:1918","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:110-0:60:1814":{"id":"0:110-0:60:1814","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[75,17],"end":[75,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"import":{"source":"cached::CachedIntoIter","name":"CachedIntoIter","id":"0:60:1814","glob":false}}},"0:30:170":{"id":"0:30:170","crate_id":0,"name":"Item","span":{"filename":"src/cached.rs","begin":[84,4],"end":[84,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"2:2603:134":{"id":"2:2603:134","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2574:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:233":{"id":"0:233","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[503,0],"end":[516,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["collect","min_by","cycle","eq_by","position","fold","collect_into","flatten","peekable","chain","any","gt","min_by_key","is_sorted","take","all","rposition","array_chunks","reduce","partition","partial_cmp","map_windows","skip_while","intersperse","next_chunk","cmp","max","is_sorted_by","sum","rev","ge","try_reduce","partition_in_place","fuse","le","take_while","intersperse_with","last","zip","lt","max_by","is_sorted_by_key","product","unzip","find","is_partitioned","inspect","map_while","for_each","skip","advance_by","max_by_key","__iterator_get_unchecked","cmp_by","copied","enumerate","find_map","try_fold","by_ref","scan","count","filter","nth","min","partial_cmp_by","cloned","ne","size_hint","try_find","try_for_each","try_collect","flat_map","filter_map","map","step_by","eq"],"trait":{"name":"Iterator","id":"2:7861:175","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1897","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:235:170","0:236:1046","0:238:1907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:146":{"id":"0:146","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[136,0],"end":[156,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:3056:1839","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:148:631"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:14":{"id":"0:14","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[17,0],"end":[21,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2641:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1816","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:16:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:7720:170":{"id":"2:7720:170","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"Iterator","id":"2:7861:175","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:151:1032":{"id":"0:151:1032","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[160,4],"end":[162,5]},"visibility":"public","docs":"Creates a new empty `ThreadLocal`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:7718-0:60:1814":{"id":"b:2:7718-0:60:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7861:175","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7714:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1814","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:7720:170","2:7721:1897","2:7722:835"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"2:12783:28080":{"id":"2:12783:28080","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2290-0:129:1830":{"id":"b:2:2290-0:129:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2806:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2284:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2292:25538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:286:1886":{"id":"0:286:1886","crate_id":0,"name":"Iter","span":{"filename":"src/lib.rs","begin":[451,0],"end":[454,1]},"visibility":"public","docs":"Iterator over the contents of a `ThreadLocal`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2816:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:8846:2271-0:286:1886","a:2:2799:243-0:286:1886","a:2:2816:253-0:286:1886","a:2:2856:2551-0:286:1886","a:2:8845:1822-0:286:1886","b:2:7718-0:286:1886","b:2:2290-0:286:1886","b:2:2605-0:286:1886","b:2:2600-0:286:1886","b:2:2590-0:286:1886","b:2:2594-0:286:1886","b:2:3433-0:286:1886","b:2:2287-0:286:1886","0:211","0:291","0:205"]}}},"2:2604:1614":{"id":"2:2604:1614","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42018:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2574:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:33":{"id":"0:33","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[94,0],"end":[101,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7714:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1816","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}},"items":["0:36:170","0:37:1897","0:38:835"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8846:2271-0:213:1893":{"id":"a:2:8846:2271-0:213:1893","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8846:2271","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1893","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2816:253-0:47:1815":{"id":"a:2:2816:253-0:47:1815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2816:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2605-0:11:1816":{"id":"b:2:2605-0:11:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2564:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2574:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1816","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2608:134","2:2609:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2290-0:295:1897":{"id":"b:2:2290-0:295:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2806:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2284:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1897","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2292:25538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12673:33466":{"id":"2:12673:33466","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2600-0:129:1830":{"id":"b:2:2600-0:129:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2574:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2570:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2603:134","2:2604:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:229":{"id":"0:229","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[490,0],"end":[494,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9795:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9795:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1893","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:232:714"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2292:25538":{"id":"2:2292:25538","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8845:1822-0:213:1893":{"id":"a:2:8845:1822-0:213:1893","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8845:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1893","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[519,0],"end":[519,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:8168:1819","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1897","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12664:869":{"id":"2:12664:869","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12032:448"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2856:2551-0:11:1816":{"id":"a:2:2856:2551-0:11:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2856:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1816","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:176:1897":{"id":"0:176:1897","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[332,4],"end":[332,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"0:286:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"0:189:714":{"id":"0:189:714","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[357,4],"end":[359,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9770:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9751:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:238:1907":{"id":"0:238:1907","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[513,4],"end":[515,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41873:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12667:33464":{"id":"2:12667:33464","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2799:243-0:47:1815":{"id":"a:2:2799:243-0:47:1815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:171:835":{"id":"0:171:835","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[322,4],"end":[327,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"IntoIter","id":"0:295:1897","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2600-0:60:1814":{"id":"b:2:2600-0:60:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2574:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2570:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1814","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2603:134","2:2604:1614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:11:1816":{"id":"0:11:1816","crate_id":0,"name":"CachedThreadLocal","span":{"filename":"src/cached.rs","begin":[13,0],"end":[15,1]},"visibility":"public","docs":"Wrapper around [`ThreadLocal`].\n\nThis used to add a fast path for a single thread, however that has been\nobsoleted by performance improvements to [`ThreadLocal`] itself.","links":{"`ThreadLocal`":"0:129:1830"},"attrs":["#[deprecated(since = \"1.1.0\", note = \"Use `ThreadLocal` instead\")]"],"deprecation":{"since":"1.1.0","note":"Use `ThreadLocal` instead"},"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:17","0:39","a:2:8846:2271-0:11:1816","a:2:2799:243-0:11:1816","a:2:2816:253-0:11:1816","a:2:2856:2551-0:11:1816","b:2:2290-0:11:1816","b:2:2605-0:11:1816","b:2:2600-0:11:1816","b:2:2590-0:11:1816","b:2:2594-0:11:1816","b:2:3433-0:11:1816","b:2:2287-0:11:1816","0:28","0:42","0:45","0:14","0:33"]}}},"0:167":{"id":"0:167","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[318,0],"end":[328,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7714:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:169:170","0:170:1897","0:171:835"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12687:28597":{"id":"2:12687:28597","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12686:28596"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12740:2234":{"id":"2:12740:2234","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12360:14343","`DoubleEndedIterator`":"2:7752:127","prim@char":"1:12032:448","str::rmatches":"2:12743:33472"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43975:6961","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:143":{"id":"0:143","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[130,0],"end":[134,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2641:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:145:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:186:1901":{"id":"0:186:1901","crate_id":0,"name":"get_or_default","span":{"filename":"src/lib.rs","begin":[351,4],"end":[353,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates a default one if\nit doesn't exist.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3433-0:60:1814":{"id":"b:2:3433-0:60:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2806:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3431:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1814","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3435:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8845:1822-0:47:1815":{"id":"a:2:8845:1822-0:47:1815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8845:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:32:835":{"id":"0:32:835","crate_id":0,"name":"into_iter","span":{"filename":"src/cached.rs","begin":[87,4],"end":[91,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1814","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208:170":{"id":"0:208:170","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[457,4],"end":[457,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}}}}},"2:12722:33470":{"id":"2:12722:33470","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12360:14343","str::split":"2:12713:28604","prim@char":"1:12032:448","`DoubleEndedIterator`":"2:7752:127","str::rsplit_terminator":"2:12725:33471"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43821:6957","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12775:33483":{"id":"2:12775:33483","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12032:448","self::pattern":"2:12360:14343"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12784:28519":{"id":"2:12784:28519","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39822:28488","Self::is_ascii":"2:12783:28080"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41873:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39822:28488","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:39":{"id":"0:39","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[103,0],"end":[109,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"2:2641:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1816","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:41:1901"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:65:170":{"id":"0:65:170","crate_id":0,"name":"Item","span":{"filename":"src/cached.rs","begin":[148,4],"end":[148,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"b:2:2594-0:286:1886":{"id":"b:2:2594-0:286:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2567:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2596:741"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12766:27062":{"id":"2:12766:27062","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12032:448","self::pattern":"2:12360:14343"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41873:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:178":{"id":"0:178","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[339,0],"end":[346,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7714:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}},"items":["0:181:170","0:182:1897","0:183:835"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:155:1841":{"id":"0:155:1841","crate_id":0,"name":"get","span":{"filename":"src/lib.rs","begin":[192,4],"end":[194,5]},"visibility":"public","docs":"Returns the element for the current thread, if it exists.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41873:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2590-0:60:1814":{"id":"b:2:2590-0:60:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2567:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2564:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1814","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2593:2758"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:41:1901":{"id":"0:41:1901","crate_id":0,"name":"get_or_default","span":{"filename":"src/cached.rs","begin":[106,4],"end":[108,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates a default one if\nit doesn't exist.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5548:2365":{"id":"5:5548:2365","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7529:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12680:1874":{"id":"2:12680:1874","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10449:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10449:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:51":{"id":"0:51","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[125,0],"end":[137,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["collect","min_by","cycle","eq_by","position","fold","collect_into","flatten","peekable","chain","any","gt","min_by_key","is_sorted","take","all","rposition","array_chunks","reduce","partition","partial_cmp","map_windows","skip_while","intersperse","next_chunk","cmp","max","is_sorted_by","sum","rev","ge","try_reduce","partition_in_place","fuse","le","take_while","intersperse_with","last","zip","lt","max_by","is_sorted_by_key","product","unzip","find","is_partitioned","inspect","map_while","for_each","skip","advance_by","max_by_key","__iterator_get_unchecked","cmp_by","copied","enumerate","find_map","try_fold","by_ref","scan","count","filter","nth","min","partial_cmp_by","cloned","ne","size_hint","try_find","try_for_each","try_collect","flat_map","filter_map","map","step_by","eq"],"trait":{"name":"Iterator","id":"2:7861:175","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:54:170","0:55:1046","0:56:1907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12696:28616":{"id":"2:12696:28616","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12032:448","self::pattern":"2:12360:14343"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5546:34162":{"id":"5:5546:34162","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7529:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:23:1868":{"id":"0:23:1868","crate_id":0,"name":"get_or_try","span":{"filename":"src/cached.rs","begin":[52,4],"end":[57,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates it if it doesn't\nexist. If `create` fails, that error is returned and no element is\nadded.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["create",{"generic":"F"}]],"output":{"resolved_path":{"name":"Result","id":"2:42018:232","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}},{"type":{"generic":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3066:139","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"2:42018:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12787:28086":{"id":"2:12787:28086","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5535:34160":{"id":"5:5535:34160","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7529:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7529:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12685:33468":{"id":"2:12685:33468","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12038:1531","crate::ops::IndexMut":"2:3099:8997","str::slice_unchecked":"2:12684:33467"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:7722:835":{"id":"2:7722:835","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2593:2758":{"id":"2:2593:2758","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2567:141"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:38:835":{"id":"0:38:835","crate_id":0,"name":"into_iter","span":{"filename":"src/cached.rs","begin":[98,4],"end":[100,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:68":{"id":"0:68","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[161,0],"end":[161,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7805:1913","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1814","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:165:851":{"id":"0:165:851","crate_id":0,"name":"iter_mut","span":{"filename":"src/lib.rs","begin":[300,4],"end":[305,5]},"visibility":"public","docs":"Returns a mutable iterator over the local values of all threads in\nunspecified order.\n\nSince this call borrows the `ThreadLocal` mutably, this operation can\nbe done safely---the mutable borrow statically guarantees no other\nthreads are currently accessing their associated values.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"IterMut","id":"0:213:1893","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2605-0:47:1815":{"id":"b:2:2605-0:47:1815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2564:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2574:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2608:134","2:2609:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2287-0:60:1814":{"id":"b:2:2287-0:60:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2806:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2281:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1814","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2289:2222"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:187":{"id":"0:187","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[356,0],"end":[360,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9795:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9795:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:189:714"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2799:243-0:286:1886":{"id":"a:2:2799:243-0:286:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5530":{"id":"5:5530","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5531:34159","5:5532:1916","5:5535:34160","5:5538:34161","5:5546:34162","5:5547:34163","5:5548:2365","5:5549:28082","5:5550:28083"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8845:1822-0:286:1886":{"id":"a:2:8845:1822-0:286:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8845:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12756:33477":{"id":"2:12756:33477","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12752:33475":{"id":"2:12752:33475","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2816:253-0:213:1893":{"id":"a:2:2816:253-0:213:1893","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2816:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1893","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2605-0:60:1814":{"id":"b:2:2605-0:60:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2564:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2574:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1814","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2608:134","2:2609:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12678:1840":{"id":"2:12678:1840","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41875:197"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41873:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10449:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10449:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2609:1612":{"id":"2:2609:1612","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42018:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2574:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2590-0:11:1816":{"id":"b:2:2590-0:11:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2567:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2564:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1816","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2593:2758"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2596:741":{"id":"2:2596:741","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148:631":{"id":"0:148:631","crate_id":0,"name":"drop","span":{"filename":"src/lib.rs","begin":[137,4],"end":[155,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:26:851":{"id":"0:26:851","crate_id":0,"name":"iter_mut","span":{"filename":"src/cached.rs","begin":[65,4],"end":[69,5]},"visibility":"public","docs":"Returns a mutable iterator over the local values of all threads.\n\nSince this call borrows the `ThreadLocal` mutably, this operation can\nbe done safely---the mutable borrow statically guarantees no other\nthreads are currently accessing their associated values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1815","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8846:2271-0:47:1815":{"id":"a:2:8846:2271-0:47:1815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8846:2271","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[362,0],"end":[362,59]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8845:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8845:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[117,0],"end":[117,65]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8845:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8845:1822","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1816","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:145:60":{"id":"0:145:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[131,4],"end":[133,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:159:1868":{"id":"0:159:1868","crate_id":0,"name":"get_or_try","span":{"filename":"src/lib.rs","begin":[211,4],"end":[221,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates it if it doesn't\nexist. If `create` fails, that error is returned and no element is\nadded.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["create",{"generic":"F"}]],"output":{"resolved_path":{"name":"Result","id":"2:42018:232","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}}},{"type":{"generic":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3066:139","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"2:42018:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:7718-0:47:1815":{"id":"b:2:7718-0:47:1815","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7861:175","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7714:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIterMut","id":"0:47:1815","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:7720:170","2:7721:1897","2:7722:835"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"b:2:2290-0:60:1814":{"id":"b:2:2290-0:60:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2806:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2284:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1814","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2292:25538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12691:31182":{"id":"2:12691:31182","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12692:31178"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44045:6965","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2816:253-0:60:1814":{"id":"a:2:2816:253-0:60:1814","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2816:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedIntoIter","id":"0:60:1814","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:47:1815":{"id":"0:47:1815","crate_id":0,"name":"CachedIterMut","span":{"filename":"src/cached.rs","begin":[121,0],"end":[123,1]},"visibility":"public","docs":"Mutable iterator over the contents of a `CachedThreadLocal`.","links":{},"attrs":["#[deprecated(since = \"1.1.0\", note = \"Use `IterMut` instead\")]"],"deprecation":{"since":"1.1.0","note":"Use `IterMut` instead"},"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:8846:2271-0:47:1815","a:2:2799:243-0:47:1815","a:2:2816:253-0:47:1815","a:2:2856:2551-0:47:1815","a:2:8845:1822-0:47:1815","b:2:7718-0:47:1815","b:2:2290-0:47:1815","b:2:2605-0:47:1815","b:2:2600-0:47:1815","b:2:2590-0:47:1815","b:2:2594-0:47:1815","b:2:3433-0:47:1815","b:2:2287-0:47:1815","0:51","0:57"]}}},"2:12743:33472":{"id":"2:12743:33472","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12360:14343","`DoubleEndedIterator`":"2:7752:127","prim@char":"1:12032:448","str::matches":"2:12740:2234"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43993:6962","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12380:14341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12688:6856":{"id":"2:12688:6856","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12032:448"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43741:6848","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8846:2271-0:129:1830":{"id":"a:2:8846:2271-0:129:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8846:2271","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12763:33481":{"id":"2:12763:33481","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12032:448","self::pattern":"2:12360:14343"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2290-0:286:1886":{"id":"b:2:2290-0:286:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2806:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2284:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2292:25538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12786:28085":{"id":"2:12786:28085","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12705:2801":{"id":"2:12705:2801","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41875:197","prim@char":"1:12032:448","self::pattern":"2:12360:14343"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41873:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12365:6843","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:60:1814":{"id":"0:60:1814","crate_id":0,"name":"CachedIntoIter","span":{"filename":"src/cached.rs","begin":[143,0],"end":[145,1]},"visibility":"public","docs":"An iterator that moves out of a `CachedThreadLocal`.","links":{},"attrs":["#[deprecated(since = \"1.1.0\", note = \"Use `IntoIter` instead\")]"],"deprecation":{"since":"1.1.0","note":"Use `IntoIter` instead"},"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:8846:2271-0:60:1814","a:2:2799:243-0:60:1814","a:2:2816:253-0:60:1814","a:2:2856:2551-0:60:1814","a:2:8845:1822-0:60:1814","b:2:7718-0:60:1814","b:2:2290-0:60:1814","b:2:2605-0:60:1814","b:2:2600-0:60:1814","b:2:2590-0:60:1814","b:2:2594-0:60:1814","b:2:3433-0:60:1814","b:2:2287-0:60:1814","0:68","0:63"]}}},"b:2:2605-0:213:1893":{"id":"b:2:2605-0:213:1893","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2564:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2574:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1893","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2608:134","2:2609:1612"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:44:714":{"id":"0:44:714","crate_id":0,"name":"fmt","span":{"filename":"src/cached.rs","begin":[112,4],"end":[114,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9770:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9751:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12785:28084":{"id":"2:12785:28084","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2856:2551-0:129:1830":{"id":"a:2:2856:2551-0:129:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2856:2551","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ThreadLocal","id":"0:129:1830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2799:243-0:213:1893":{"id":"a:2:2799:243-0:213:1893","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IterMut","id":"0:213:1893","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:181:170":{"id":"0:181:170","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[340,4],"end":[340,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"T"}}}}}},"b:2:2590-0:286:1886":{"id":"b:2:2590-0:286:1886","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2567:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2564:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Iter","id":"0:286:1886","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2593:2758"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:183:835":{"id":"0:183:835","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[343,4],"end":[345,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"IterMut","id":"0:213:1893","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2816:253-0:295:1897":{"id":"a:2:2816:253-0:295:1897","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2816:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"IntoIter","id":"0:295:1897","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2290-0:11:1816":{"id":"b:2:2290-0:11:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2806:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2284:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1816","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2292:25538"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2799:243-0:11:1816":{"id":"a:2:2799:243-0:11:1816","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2799:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CachedThreadLocal","id":"0:11:1816","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}}},"paths":{"1:4469:9132":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:13724:5438":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"16:6960:6303":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:2864:2695":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"13:226:4656":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"5:1265:1834":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:42150:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:40238:6899":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:47130:7058":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:2558:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:43122:4720":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:11978:5207":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:2567:141":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:13334:5344":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"6:5004:8275":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"2:40674:2402":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:42077:1897":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:12029:5210":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:2652:134":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"6:4860:8198":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:14470:5570":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:2799:243":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"5:7023:4261":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"11:1676:4215":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"11:396:4213":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:12758:5272":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"16:6531:6240":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"6:1639:7920":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:922:6577":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:39635:6896":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:3968:4203":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"5:7311:32860":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:11170:28302":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:45975:7008":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:1534:1886":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"20:368:4485":{"crate_id":20,"path":["once_cell","race","OnceNonZeroUsize"],"kind":"struct"},"2:4824:417":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:3032:123":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:11617:5149":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"18:755:4953":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"16:6352:4628":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:903:4247":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"2:44502:8835":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:48135:7105":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:10944:6644":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"1:7732:8985":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:31111:202":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"5:7271:1897":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:4028:9111":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:40337:6908":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"16:7436:4587":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:14969:4556":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"6:4506:8070":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:4052:6818":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:9891:21376":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:9770:140":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:40370:6913":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:11307:4739":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"6:1558:7863":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:7026:4306":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:40699:2404":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"16:6753:6281":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"16:6569:4632":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:12057:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"17:12572:5260":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"6:5885:8386":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:11779:4531":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:4703:9132":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:9467:135":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"16:5866:6159":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"5:3186:6588":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:22:728":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"5:1434:1893":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"17:14896:5736":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"16:6041:21328":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:40310:6816":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:43747:6955":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:7580:4308":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"11:832:6585":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"17:13504:5387":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:12548:5258":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"6:4947:8236":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"16:7269:34371":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"16:6226:6207":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"5:3225:32859":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:39530:221":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:10767:7184":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"9:52:4659":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:2350:207":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:15868:5974":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"17:15200:5794":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:5240:209":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"6:7651:8732":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"5:3150:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:914:4687":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:1094:4961":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:44345:14356":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:41924:170":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"5:3748:4430":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:8385:2264":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:5431:7159":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:4231:7146":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:11576:5146":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:14399:5559":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"6:4800:8167":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:12032:448":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"16:5322:6134":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"6:4814:8173":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:7037:2380":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:1541:4231":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:13166:4287":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:30282:9103":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"16:6844:6295":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:8991:27080":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:43675:3216":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:15287:5822":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"5:5387:3193":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"16:2810:6089":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"16:6879:6299":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"16:2321:6068":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:40325:14400":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"16:4889:6126":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:22536:32216":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:8904:9182":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"17:12103:5218":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:10762:8851":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"11:2569:2324":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:2864:6091":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"6:6889:8674":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:12003:8986":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:11714:5164":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"5:4177:4203":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:2883:6336":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"11:328:1887":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:10315:4527":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:10449:245":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"11:1007:1834":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:15710:5949":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"16:7708:4646":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:10617:1893":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"6:4616:8122":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:2873:9187":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:14324:5544":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:14296:5538":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:14041:5481":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:41941:1893":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:2911:4294":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"11:2403:1893":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"20:174:2276":{"crate_id":20,"path":["once_cell","sync","OnceCell"],"kind":"struct"},"1:10155:7277":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:2932:14550":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:3930:9106":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:11215:8853":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"6:7668:8737":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"16:6456:6230":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"5:7333:216":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:1819:3253":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"5:1784:4247":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"1:8011:9091":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:15224:5801":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:40384:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"16:6332:4624":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:5415:7158":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"1:3988:9109":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"17:11690:5160":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:23048:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"17:10137:4522":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:2600:4278":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:11743:5168":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:15345:5834":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:8281:8840":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"5:4247:1886":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:21124:31220":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"8:0:1945":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:14426:5563":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"6:4628:8131":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"16:2284:20438":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"11:2443:4231":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"2:44399:6859":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"11:787:4686":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"1:5051:7152":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:621:7117":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"5:3179:1886":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:2693:6687":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"1:7895:125":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:46095:7013":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:40474:6916":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:47986:7097":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:12418:5251":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"2:2303:110":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:41661:9101":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"11:1883:1886":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"17:14509:5580":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:6357:182":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:3201:7136":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:44498:8834":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:15192:5793":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"18:113:7371":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"14:40:5320":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:2574:263":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"6:4893:8209":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"16:2907:6093":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:22955:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"21:0:1945":{"crate_id":21,"path":["cfg_if"],"kind":"module"},"16:0:2130":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:11453:4319":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:10164:4274":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"2:48109:7103":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:78:1691":{"crate_id":2,"path":["core","usize"],"kind":"module"},"6:1913:16272":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:30577:31527":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"17:13896:5464":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:951:6581":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:22248:9273":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"6:6658:8560":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:10925:21409":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"6:5146:8339":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:7663:2616":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:46006:7009":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"17:13676:5428":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"11:364:4211":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:10657:4504":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"5:7529:249":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"11:2231:3591":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"17:15133:5780":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"16:5816:4605":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:4159:7401":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"16:8050:6471":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:12035:1145":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"16:536:4577":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:15013:5751":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:40863:2407":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:3095:8996":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:8001:7189":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"1:10812:125":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"17:12077:5213":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"5:1522:216":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:2937:14551":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:8177:2376":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:12410:5249":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:7838:5023":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:40389:6914":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"16:7568:4640":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:3060:137":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"16:6901:4634":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:5939:4573":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"16:2766:6087":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:42881:6449":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:11027:5063":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"6:4676:8134":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:6297:226":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:43975:6961":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:44578:14648":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:3936:9105":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"16:5634:6138":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:21139:31224":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"16:2472:6075":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"6:7388:8719":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"6:5867:8373":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:21776:9197":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"17:15855:5319":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"17:11767:5170":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:2352:2673":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"1:3394:4203":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:44173:6968":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"5:3246:6590":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:2810:250":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"16:7768:4648":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"6:4989:8266":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"11:673:1886":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:14312:5542":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:2187:632":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"17:11604:5148":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"2:22468:4709":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:23265:6885":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"17:14266:5535":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:7489:2281":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:13648:5421":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"6:1507:7835":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"16:7782:6423":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:42010:2619":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:46076:7012":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:13516:5390":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"16:4949:6128":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:43939:6960":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:2662:7134":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:12166:5223":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"16:7360:34369":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:13869:5459":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:8866:1897":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:9094:183":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"6:5928:8401":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:11395:5128":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:504:2606":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"17:13121:5319":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:415:181":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:2169:21452":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:1406:152":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:4700:9159":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:6466:2351":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"6:6079:8485":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:10422:5079":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"16:4417:6112":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"6:6120:8502":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:32356:6889":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"17:2228:4967":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:46572:7033":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"12:0:2127":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:22282:9272":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"16:6243:6210":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:15253:5809":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"16:6600:21330":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:12301:5238":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"16:8072:6472":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"6:569:7812":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:12055:1691":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"20:294:4411":{"crate_id":20,"path":["once_cell","race","OnceRef"],"kind":"struct"},"20:124:2073":{"crate_id":20,"path":["once_cell","unsync","Lazy"],"kind":"struct"},"2:11885:14609":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"14:0:2128":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"6:5982:8428":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:8535:7149":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"18:491:2279":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:9810:212":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:42503:2338":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"5:276:1918":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:6426:2343":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"16:5673:6095":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"16:7621:21335":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"6:5140:8337":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"16:7722:4647":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"18:624:34384":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:12380:14341":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"5:2974:32863":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"6:6813:8623":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:6248:8542":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"16:6189:6205":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:21367:9191":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:14878:5731":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"11:123:4210":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"6:6718:8593":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:2521:9060":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"16:3461:6103":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"17:15961:5333":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"17:15329:5831":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:6596:2352":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"1:3280:7140":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"6:4496:8064":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"16:4835:6124":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:23079:196":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"6:1664:7939":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:44518:8839":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"6:542:7798":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:2561:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:3099:8997":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:12039:1617":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"5:5987:2337":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:4303:227":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:44790:6594":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"17:14208:5525":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"6:5111:8327":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"6:5068:8302":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:13182:5333":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"20:216:2073":{"crate_id":20,"path":["once_cell","sync","Lazy"],"kind":"struct"},"1:11382:7405":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"17:0:2131":{"crate_id":17,"path":["object"],"kind":"module"},"5:1511:4688":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:10642:3209":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"7:0:1681":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:2622:7133":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:11269:4516":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:22576:31523":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:10835:3218":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"6:4543:8086":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"18:636:4932":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:12038:1531":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"17:11476:3591":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"16:6929:4636":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:3670:9102":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"2:1769:2698":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"5:4361:270":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:4307:2282":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"20:361:2276":{"crate_id":20,"path":["once_cell","imp","OnceCell"],"kind":"struct"},"6:4738:8139":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:495:7767":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"6:555:7804":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:40431:9029":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"1:3491:27357":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"6:6100:8497":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:8157:4440":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"17:3584:4970":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"5:2978:32864":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"16:7318:6362":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"17:11563:5145":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:14156:5519":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:11816:4323":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:10840:28307":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"6:4401:8011":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"16:6721:21331":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:12872:5275":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"6:6071:8484":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"7:78:20312":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:12290:5237":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"17:13935:5468":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:5082:7152":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:15903:6004":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"2:10247:4278":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"1:8814:4732":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:11345:5126":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"5:687:116":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:6162:4301":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:12125:6853":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:41101:2368":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"11:1891:4231":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"17:14087:5505":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:39596:2318":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:12560:5259":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"1:8828:7264":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"17:12486:5255":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"2:48089:7101":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"18:521:25530":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"5:1110:7396":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"6:4902:8215":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:22675:9104":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:5568:8514":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"19:0:1125":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"6:548:7801":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:39649:6897":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"5:7518:4243":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"2:43361:8830":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:8326:7244":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:44740:6992":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"6:4480:8060":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"5:2178:4689":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"18:681:4940":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"6:7692:8742":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"16:5612:6096":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:40713:2405":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:21170:31233":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"10:44:4657":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"17:10881:21408":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:15337:5833":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"5:6525:4218":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"16:7694:4644":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:40401:32210":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:10102:4521":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"16:7534:6100":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:8978:113":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:32331:6887":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:7931:4428":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"11:856:4415":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:12056:1241":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"5:5956:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"5:4376:4237":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"18:531:4917":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:3500:9058":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:45761:6999":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:42069:1893":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"6:580:7817":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:40683:2403":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:511:4959":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:14497:5573":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:11340:7170":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:12591:117":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"6:4698:8136":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:2426:2138":{"crate_id":1,"path":["std","io"],"kind":"module"},"1:5639:7161":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:43771:3209":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"17:9759:21392":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:2564:159":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"18:671:4939":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:14194:5524":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"1:7843:7183":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"11:1051:6582":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"5:7492:6681":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"1:1966:204":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"16:7582:4641":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"11:299:4412":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:48184:7108":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:13145:5320":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:22597:31522":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"5:6599:1897":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:7717:8984":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:7805:1913":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"16:5363:6135":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:16049:6032":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"15:288:7375":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:8545:1886":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"20:333:4205":{"crate_id":20,"path":["once_cell","race","once_box","OnceBox"],"kind":"struct"},"5:6998:4258":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"5:1310:6584":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:12999:5286":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:11290:4317":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"6:4647:8132":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:3347:2300":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:3166:27707":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:44035:6964":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:12396:5246":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"1:7865:7185":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"6:475:7394":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:40318:6906":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:43583:3208":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:42622:2836":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"5:7370:1897":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:12898:21400":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"13:110:34357":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"1:8213:3209":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:2911:14546":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:8858:7266":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:45781:7000":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"18:766:25529":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:1648:2429":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:48062:7099":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:1018:2110":{"crate_id":2,"path":["core","hint","unreachable_unchecked"],"kind":"function"},"6:6934:8696":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"16:4862:6125":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:15645:5931":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:43685:3214":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:48120:7104":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:8984:2610":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:15184:5792":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"17:12230:5227":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"6:4884:8206":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"11:490:150":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:40464:4265":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:21314:9195":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:8137:2361":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"4:0:2123":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:40651:2386":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:41958:2268":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:40622:2399":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:15311:5827":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:15589:5923":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:22233:9060":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"2:44687:225":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"16:6968:21332":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:6983:27078":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:12045:792":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"16:6346:4626":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"6:1591:7885":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:10538:7139":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"11:742:4688":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"14:31:6569":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:22613:31533":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:2806:2550":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"1:1545:4247":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"6:5974:8423":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:11321:4504":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"16:8154:6480":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:7616:8724":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"5:6479:4231":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:12684:5043":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:14904:5737":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"6:6781:8613":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:6927:8693":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"5:2057:4430":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"17:15747:5956":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"16:6818:6294":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:14633:5582":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:5446:111":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:39574:222":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:47878:7095":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"16:7041:6318":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:40642:2400":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:7689:1823":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:46830:7052":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"15:327:4652":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:21923:9060":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:4460:1818":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:9814:2834":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:9454:32719":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:13218:4546":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:261:4955":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"11:1582:4421":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"5:7362:1897":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:5753:2340":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:47020:7055":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:3251:4968":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"6:5859:8371":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:44506:8836":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:256:4954":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:10095:4443":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:15842:5305":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"17:11932:5203":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:4744:9124":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"16:7391:21334":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:12921:4535":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"1:5987:226":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:41991:2269":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"16:2832:6090":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:22134:9280":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"17:14822:5725":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:4375:7991":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"11:1896:4247":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"2:46784:7051":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"17:12614:21398":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"16:5088:6132":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"5:1419:1886":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:3014:14323":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"2:44294:6858":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"5:3576:179":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"6:7622:8725":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:4569:9150":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"16:8239:6383":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"16:5712:4595":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:9790:21393":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:10780:7291":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"1:3323:9088":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"1:3239:7137":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:13633:5417":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"14:221:6576":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:1746:2699":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:44356:6980":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:44202:6976":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"6:489:7764":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"6:1546:7854":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:8330:8593":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:40229:6898":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"16:5121:6133":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:9034:7271":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"16:2339:4565":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:14181:5522":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"16:3655:4985":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:2386:201":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:8403:7253":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"16:2305:20464":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"18:548:149":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:11459:5134":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"16:5648:6142":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"5:7543:6685":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:12659:21377":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"6:588:7822":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"11:351:7386":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"6:5897:8390":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:9812:2833":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:1555:4203":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:0:530":{"crate_id":2,"path":["core"],"kind":"module"},"2:8847:2270":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:40302:6905":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:5613:4203":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"17:15943:5323":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"2:39822:28488":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"2:2853:2751":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:3270:143":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:23234:186":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"16:2881:6092":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:11399:5129":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"17:15003:5750":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:14385:5558":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:44088:6905":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:30509:2433":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"6:4745:8140":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:2586:4291":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:11593:4750":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"0:213:1893":{"crate_id":0,"path":["thread_local","IterMut"],"kind":"struct"},"6:7633:8729":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:7556:8720":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:13832:5455":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"6:7679:8738":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"1:4042:9113":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:16098:6047":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"2:40344:6909":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"5:7417:2324":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"16:6893:4591":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:7207:7398":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:1760:8752":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"6:7598:8721":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"16:5905:6161":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:39457:6891":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"14:215:6574":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:7673:2379":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"16:6792:6293":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:13961:5472":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:595:4960":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:44803:6998":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:16004:6023":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"2:32443:2755":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:22148:2681":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"5:1450:1897":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"6:5891:8389":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"5:1296:4417":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:2205:1876":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"16:5661:6147":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:46626:7035":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:8190:2392":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"16:7597:34365":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"6:6913:8684":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:15480:5884":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:40613:2398":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"6:7657:8733":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"6:6943:8699":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"5:3733:4428":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"17:12115:5219":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"6:7343:8708":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:41797:6938":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:4635:8604":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"5:3338:4247":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"2:2907:14547":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:22277:9274":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"2:48080:7100":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:3199:7135":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"6:4776:8159":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:10988:5099":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:15384:5846":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:12365:6843":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:10067:4520":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:16076:6041":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"17:13765:5442":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:15725:5950":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:7365:8709":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:5780:2341":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"17:12244:5231":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"16:7651:6420":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:3278:7139":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:21141:31229":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"16:7544:6417":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:11197:7169":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:41852:6840":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:7540:7300":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:40530:2392":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:30741:31531":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"2:40853:2406":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:14757:5685":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:40250:31521":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:12180:5224":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"6:5969:8422":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:41873:200":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:6225:2410":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"17:13056:5296":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"17:12255:5235":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:5689:2397":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:8308:7242":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:1481:1820":{"crate_id":2,"path":["core","mem"],"kind":"module"},"2:48146:7106":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"9:426:20321":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"6:4584:8108":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"16:7523:6416":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:8352:7148":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"11:1923:6590":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"1:5746:2339":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"6:1632:7916":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:10262:4282":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:8146:4744":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:7906:4730":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"13:0:2122":{"crate_id":13,"path":["std_detect"],"kind":"module"},"17:11817:21494":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"16:5049:6131":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"11:434:7390":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"16:4462:6113":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:7710:142":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:7529:4960":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:10011:149":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:46352:7026":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:14485:4535":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"16:8097:6474":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"6:563:7809":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"17:11126:5107":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:8796:7263":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:1063:6582":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:13695:5433":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:3282:14383":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"5:0:313":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:8845:1822":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"17:10667:34379":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:14698:5633":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"16:4613:6118":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"16:2548:6078":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"5:4406:4203":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"17:13365:5353":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"16:3600:6104":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"16:2969:20466":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"1:836:1886":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"18:0:2132":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:4235:2074":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:40501:2381":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:11981:7303":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"6:4932:8231":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:3066:139":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"5:4045:4218":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"5:2469:4423":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"5:5339:4218":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:48214:7110":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"18:690:4942":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"16:2696:6084":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:2915:14548":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"9:330:7751":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:48100:7102":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:46236:7023":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:10803:5085":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"16:5743:6148":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"17:10962:5098":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:15535:5903":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:13463:5376":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"6:5123:8333":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"1:4637:8606":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:10685:3223":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"17:12432:5253":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"5:781:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"6:4939:1095":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"6:4922:8225":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"16:6268:34370":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:4663:14394":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:14122:5516":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"5:2968:32885":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:1969:203":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:5104:8324":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"16:7503:6099":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:13436:5367":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"14:187:20409":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"17:15566:5910":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:15374:5841":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"6:5992:8435":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:40417:6915":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:1072:6584":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"6:5085:8310":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"16:8134:6479":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:2368:9049":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"18:481:4915":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:7644:2628":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:30543:1821":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:44761:177":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"16:6545:6242":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"6:1521:7840":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:7923:7188":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:11144:4732":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"16:7554:4639":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:15244:5808":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:22649:6880":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:14251:5531":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:22011:9277":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"5:4207:4203":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"1:1902:9025":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"5:3191:32858":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:16109:6048":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"17:10941:5095":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:7668:2617":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:44697:233":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:10172:4523":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"6:5955:8421":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:45935:7006":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"6:1718:7963":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:1873:7128":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"5:5802:257":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"5:7262:3198":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"16:7067:6324":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:42061:1886":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:13383:5354":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:1758:7125":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:16016:6025":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"2:42425:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"5:6837:4245":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:3063:138":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:41690:4716":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:9624:21373":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:42601:2826":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:12050:1633":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"1:8872:7162":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:14934:5743":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:9186:27743":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"1:10822:4440":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"17:12387:21520":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"5:3589:1886":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:13204:148":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:11469:5135":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"5:7613:4247":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"1:7599:4310":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"16:6386:6224":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"16:6261:4590":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:21493:9192":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:8237:9100":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:14373:5557":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:43346:6948":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:42111:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:22986:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:8802:205":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:12264:5236":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"17:12596:5262":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:21813:31231":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:47096:7057":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:10757:8849":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"2:40351:14401":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"17:9651:21390":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:15546:5907":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:12141:6854":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:13297:5338":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:11313:7297":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:12042:688":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:43131:153":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:21112:31220":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"2:7752:127":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"6:0:874":{"crate_id":6,"path":["libc"],"kind":"module"},"5:3212:6589":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"17:11014:5101":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:10904:3222":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:13407:5358":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:11645:5152":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"17:11666:5156":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"11:700:1897":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:9751:232":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"17:12784:4539":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:4050:9115":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"11:1160:6584":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:11370:7173":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:11403:3211":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:2284:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:6610:2353":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"6:6837:8634":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:2811:115":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"17:14221:5526":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"5:6866:4257":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"1:3837:7144":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:1956:2701":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:3980:9108":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"5:6681:4218":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"17:435:4958":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:12850:4971":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"16:7492:6412":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"18:736:25528":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:13013:211":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:4161:2301":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:43640:2381":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:11001:5100":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:46306:7025":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:9048:27125":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:23110:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:9800:126":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:11436:3212":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"11:875:6580":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"6:5033:8289":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:9099:240":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"17:13083:5304":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"16:5982:6174":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:46603:7034":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:3460:4969":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:46860:7053":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:14346:5555":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:10593:1886":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"6:4666:8133":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"5:3813:4247":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"9:486:20318":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:12310:4534":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"6:6169:8516":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"6:6819:8624":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:15356:5838":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:44331:6979":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:2281:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"6:7702:8744":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:4167:9130":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:11727:5166":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:1538:1897":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:6430:2344":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"11:2151:6582":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:2392:208":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:9104:241":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:9795:117":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"5:1281:6582":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:44541:128":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:40723:2389":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"5:2149:6664":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:45805:7001":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:2807:2298":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:42615:2835":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:2641:122":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"20:374:4486":{"crate_id":20,"path":["once_cell","race","OnceBool"],"kind":"struct"},"2:43603:3207":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"6:6222:8527":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:30549:2434":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:4040:6817":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"11:2352:6582":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"16:5830:6152":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:14413:5562":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"6:6711:8589":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:918:4688":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:7754:7182":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"17:11523:4513":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:9752:2832":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:32342:6888":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"1:9147:7273":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:10852:21407":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"16:7462:6403":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:10059:4705":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"17:14235:5529":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:9267:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:2809:251":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"6:5910:8391":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:44486:8831":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:41949:1897":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:48199:7109":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"16:5403:4499":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:46450:7030":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:10876:3221":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:3443:4439":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"16:7792:21336":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"16:7090:6326":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:9021:4737":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"5:207:4217":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:46706:7036":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:2948:6346":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:4773:4976":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"17:11755:5169":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:47628:7092":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"6:4783:8160":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:44366:6984":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"17:12345:5241":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"16:4585:6117":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:13162:5323":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:5971:4302":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"6:4523:8076":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:12536:5257":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"15:0:2129":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:21158:31230":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:11065:5103":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:42608:2827":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:16032:6030":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"6:6012:8451":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:44025:6963":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"6:5044:8295":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:12335:4535":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:12053:1632":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:12127:5220":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:23172:188":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:21365:9060":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"11:1107:4418":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"0:0:1583":{"crate_id":0,"path":["thread_local"],"kind":"module"},"5:881:4226":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:9808:2836":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"16:6687:6267":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:8562:7262":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:2861:112":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"17:12718:21399":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:10974:4516":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:42086:202":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"17:12953:5282":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:9128:7169":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:6070:4297":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"6:1703:7956":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"10:36:7750":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"18:96:7368":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:41810:7145":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"17:15101:5773":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"1:10578:1823":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"17:4928:4977":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"6:1496:7830":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"5:1481:4686":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"1:6249:4302":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"6:6798:8618":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:4311:3586":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:13707:5435":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:15519:5899":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:4376:2290":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:43741:6848":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:3540:4231":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:21925:9193":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:3431:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:12986:32684":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:12964:161":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"18:590:4920":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:9599:2824":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"17:15493:5890":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"16:5696:21325":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"6:4488:8062":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:7884:21337":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"5:1531:6663":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:6896:4305":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"1:8959:2342":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:43789:3217":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:11537:7144":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:5802:2385":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:39470:219":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:10355:135":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"2:22188:9281":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:9014:7270":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"16:2933:20465":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"5:6112:4203":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"17:11041:4504":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"15:394:20429":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"1:10968:27121":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"2:44151:14355":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"6:5052:8297":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:3255:14557":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"6:6682:8577":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"6:533:7792":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:12047:794":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"17:10207:4524":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:6644:239":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"16:4497:6114":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:41092:2366":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"5:35:4027":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:9026:4745":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"6:4556:8092":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:11901:6846":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:5381:7153":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"6:7371:8711":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"16:7284:2268":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:10076:7127":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"16:2406:6072":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"5:7301:4229":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:11256:5122":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:357:2626":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"18:507:4916":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"16:6415:6227":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:14145:5517":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:15049:5756":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:3295:32508":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:40521:2382":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:7915:7187":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"16:5017:6130":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:9272:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:11549:5144":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:859:1897":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"5:7629:4251":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:4180:7402":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"17:16087:6046":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"16:6156:6202":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:40543:2383":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:10337:4501":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:9479:4312":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"1:723:150":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"6:5117:8330":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"2:44490:8832":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:4625:9110":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"16:3232:6067":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:12951:146":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"5:7325:1897":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:22415:6865":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:12431:14349":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:5308:126":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:4915:9158":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:3056:1839":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:11141:5108":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:43143:6944":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"6:4473:8056":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"5:825:4224":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"6:6047:8472":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:40561:2393":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"16:5963:6167":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:39410:14324":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"1:10247:9178":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"11:2423:1897":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"17:11945:5204":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"6:4724:8138":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:46058:7011":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"6:4535:8081":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:6194:4738":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"5:3682:4218":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:46206:7022":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"18:707:4943":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:43921:6959":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:43893:3219":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"20:0:1946":{"crate_id":20,"path":["once_cell"],"kind":"module"},"17:11412:5130":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:22146:31662":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"0:129:1830":{"crate_id":0,"path":["thread_local","ThreadLocal"],"kind":"struct"},"1:12046:793":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:7848:7184":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:1556:6588":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:3276:14384":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:43715:6951":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:41627:6836":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:12009:4504":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"16:6915:4635":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:22056:9278":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"16:5760:21326":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:6420:4271":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"16:5419:4500":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:12320:9171":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:22551:6867":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:1760:7126":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"16:6083:20437":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"16:6583:6243":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:8232:7236":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:15079:5767":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"16:2526:6077":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:363:2627":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"6:4428:8034":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"5:261:4218":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"1:8220:6963":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:10293:4526":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:42189:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"11:1887:1897":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:8850:1886":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:15680:5944":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:48237:7111":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:2209:9042":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"18:727:4495":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"6:4388:8001":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:11516:7143":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"16:8167:6483":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"16:3049:20467":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"6:123:14923":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:45851:7003":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"18:515:4914":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:15177:5791":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"5:6346:9283":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:867:4685":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"11:2542:4807":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:10726:34372":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"11:710:4687":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:12052:5211":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"11:2554:34355":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:7855:4743":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"1:5128:210":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"5:7429:2325":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"17:12701:5270":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"6:4847:8193":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"5:2231:34330":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:4639:8608":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"5:5383:3192":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"17:12930:21401":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:42464:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:4845:32496":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:42018:232":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:13285:5337":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:2868:9185":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"16:6204:4606":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:12014:27126":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:2954:14552":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"16:8281:6491":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:9813:21394":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:43821:6957":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:7143:2391":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"16:4641:6119":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:11158:7264":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"6:1710:7959":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:30565:2696":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"17:11307:5125":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"6:1514:7838":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:12036:338":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:12033:1652":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"11:800:4231":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:4440:2293":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:2889:14545":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"11:2304:1834":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"17:11243:5121":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:14989:5747":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"5:898:1886":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:12366:21519":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"18:699:4493":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:47066:7056":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"6:6086:8486":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:8891:7267":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"16:7102:21333":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:12972:5285":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:8226:7234":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:2899:9186":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:30635:31537":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"2:9806:2835":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:7136:7403":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:15279:5819":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:12044:795":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"17:12584:5261":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"16:2428:6073":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"5:5149:2337":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:16160:6058":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"18:614:34383":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:928:8989":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"6:6961:8702":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:46428:7029":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:11234:158":{"crate_id":1,"path":["std","sys","unix","time","Instant"],"kind":"struct"},"1:12054:844":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:6146:4287":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"5:1382:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:5500:7160":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"1:8493:9170":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"5:7341:4693":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"16:6513:6232":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:32295:7747":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"17:10813:34378":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:10473:4313":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"2:1678:1182":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:11155:5110":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"17:14662:5602":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:10831:28304":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"16:7660:6421":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:12797:4541":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:1040:1834":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:3192:217":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:44219:6977":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:8958:6843":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:21156:31226":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:5009:8277":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:4764:8152":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:10716:5083":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"16:4719:6120":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"17:13097:5305":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:41086:2364":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:11088:5104":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:2895:6340":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:41070:2362":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:12049:1636":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"17:12459:4516":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"17:12202:21518":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"17:10432:34377":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"16:3888:6108":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"6:4440:8037":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:44379:6988":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"11:687:1893":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:42851:2696":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:2821:2297":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"11:430:7389":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:2962:14554":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"6:6128:8504":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:2354:9045":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:10535:7137":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:12065:6849":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:44079:6816":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:43574:3204":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:11657:5155":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"2:42267:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"6:574:7814":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:40571:2394":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:3732:7142":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:5625:226":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"16:3830:6107":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:10618:34376":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:10724:3210":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:10019:153":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:1567:6590":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:11355:7171":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:22119:9060":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"6:596:7826":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"17:11113:5106":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:3425:7237":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:21102:2075":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:3265:260":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"6:6691:8583":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"6:4914:8220":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"6:6741:8611":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:12746:4538":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:12356:5242":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"9:507:6646":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"17:15117:5776":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:10559:5081":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"16:7862:6434":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"11:1566:20398":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:4431:2292":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:2522:14405":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:15027:5752":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"6:119:14922":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:2927:14549":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"7:31:20305":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:45827:7002":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:22663:6881":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:43565:3205":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:43106:4717":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"18:652:4916":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:10802:136":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"1:8207:4526":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:9678:21380":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:2199:2682":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"1:12048:790":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"14:160:6569":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:11439:5132":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:13254:4555":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"11:2124:1834":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:43695:3215":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:46258:7024":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:2816:253":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:23710:242":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:7714:162":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:2518:7132":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"16:5798:4600":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:4740:9121":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:9804:2826":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"15:306:7379":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"18:644:4916":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"17:11675:5157":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:45957:7007":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:10915:5094":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:4686:8135":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:6540:2347":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:11388:7406":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:46036:7010":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:10950:5096":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"5:7505:6684":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"16:4921:6127":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:32335:6383":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"17:10242:4525":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:9918:21396":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"11:774:4685":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:12031:1028":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:12360:14343":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"16:5574:4594":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:3966:9107":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:4906:9157":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"17:15689:5946":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:43993:6962":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:43514:6949":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:15733:5953":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:4:1108":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:1641:631":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"16:2504:6076":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:22484:4694":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:44566:6989":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:21771:9060":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"17:14170:5521":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"17:13976:5475":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:46474:7031":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:4192:2276":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"6:4578:8105":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"16:3065:4980":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"11:1903:6587":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:9274:3253":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:10321:111":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:21312:9060":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"2:43593:3206":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:11507:4529":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"16:4986:6129":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"6:1604:7892":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:15160:5784":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"10:0:2125":{"crate_id":10,"path":["adler"],"kind":"module"},"11:1142:6583":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"14:7:6569":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"6:4998:8272":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"1:5825:2350":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:8274:7145":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:13309:5341":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"5:7476:32210":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:16134:6054":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"2:44510:8837":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:43653:3199":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"16:8294:134":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"16:4806:6123":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:21386:4707":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:43666:3213":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"11:2536:7745":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:13584:5392":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:11194:21427":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"17:14950:5746":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:23141:187":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:945:6580":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:939:4415":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:4821:9120":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:2202:7131":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:10054:9065":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:3045:2278":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"11:0:2126":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"2:7429:2361":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:637:7118":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:4386:2291":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"5:7445:2618":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:8920:9181":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"11:844:8989":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:22559:6868":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:10439:9060":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:11052:5083":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:15990:6019":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"1:8300:7234":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:15125:5778":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"16:6171:212":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"6:1501:7832":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:5571:9176":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"17:14786:5696":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:12600:134":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"16:2788:6088":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"6:1734:7968":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:11497:4528":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:44045:6965":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"6:5130:8336":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"6:1570:7871":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:14099:5507":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"16:7342:34368":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"11:1910:6588":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"6:6764:8612":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"16:7613:6419":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"6:4434:8035":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:2744:6086":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:4742:9123":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:21495:4707":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:9459:4700":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"17:14282:5536":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:13322:5343":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:13235:4548":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"1:11605:27515":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:8842:4733":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:40664:2401":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"16:7677:216":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"17:15659:5938":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"5:6008:4431":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"11:1917:6589":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:8200:2406":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"6:4351:7974":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:15432:5883":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:1909:701":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"2:10797:3217":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"6:6700:8584":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:401:4956":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:14439:5564":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:44522:4706":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"6:4977:8257":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"1:3735:7143":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:4064:107":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"17:13419:5359":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:11619:7174":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"6:4455:8044":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:39510:218":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"6:4789:8163":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"18:660:4933":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"5:1019:4218":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:2971:14556":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"9:177:4674":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"16:7054:6321":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:13922:5467":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"5:4087:1893":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:39486:216":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:7738:9015":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"18:564:4490":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:6415:8754":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"1:10338:4444":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"17:11369:5127":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"5:5872:4231":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:44070:6906":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"16:6485:4630":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:8846:2271":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:12374:4943":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:15507:5896":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"6:5023:8283":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:10430:7263":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"6:4854:8195":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:14001:5477":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:11045:4315":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"5:6856:4256":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:7259:2358":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:13038:6862":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"17:9559:21375":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"11:1728:152":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:16123:6052":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"2:41774:32211":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:42384:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:9860:21395":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:40290:6904":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"6:501:7769":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"16:6425:6228":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:42001:2670":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:23017:194":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"17:12474:4504":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"16:8115:6476":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"5:2043:4428":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"20:82:2276":{"crate_id":20,"path":["once_cell","unsync","OnceCell"],"kind":"struct"},"16:6318:6220":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"5:7554:6686":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:10510:5080":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"5:1500:4687":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"17:15235:5805":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:42345:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:46160:7015":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:8169:9059":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:48024:7098":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"16:4745:6121":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:40552:2384":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"5:2139:2606":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:9968:21397":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:12380:5244":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"6:4870:8201":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:2946:134":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:10940:7182":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"17:15321:5830":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"16:5995:4579":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:8215:32717":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"17:13882:5176":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:12385:14340":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:12037:1498":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"11:2326:4417":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"2:4487:2294":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:13395:5357":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"6:4549:8089":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:23203:189":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:2944:232":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"1:9109:158":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"20:50:4203":{"crate_id":20,"path":["once_cell","imp","Guard"],"kind":"struct"},"2:4312:2283":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:8936:9183":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:12052:1635":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"1:557:2613":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:40599:6920":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"6:483:7761":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"6:6114:8499":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:3764:6105":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:11178:4706":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"17:15087:5770":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:7861:175":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:44778:6997":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"17:9730:21391":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"16:4053:6110":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"16:6696:6268":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:40581:2395":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:31139:2075":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:3994:9110":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"16:2380:6071":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:47816:7094":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:10051:4500":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"17:13856:5456":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"5:1680:4218":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:10608:5082":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:9069:4747":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"17:15212:5800":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"6:4841:8190":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"16:2574:6079":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:10230:4277":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:4491:9133":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:7677:2378":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"16:2722:6085":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"16:3915:6109":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"5:2698:8749":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"6:527:7789":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:10918:3220":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:4151:7400":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"6:1697:7955":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:2859:2753":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"6:4878:8205":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:4924:850":{"crate_id":2,"path":["core","iter"],"kind":"module"},"16:3797:6106":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:533:2611":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:2878:6339":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:14843:5730":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:13347:5345":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"6:6159:8513":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:14359:5556":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"5:4015:4231":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:42897:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:22524:6866":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:9943:21379":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"5:7462:6678":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"5:678:256":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:8286:9131":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:15037:5753":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"5:3602:1893":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:12510:5256":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"2:11915:14344":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"16:8195:6484":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"5:4772:714":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:41077:2343":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"11:2469:4247":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"2:43161:4722":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"5:629:6660":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:8453:6944":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"18:719:4947":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:10097:7276":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"1:8292:7241":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"6:6228:8528":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"16:2450:6074":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:40266:6902":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"6:5941:8410":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"16:2618:6081":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:2570:264":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:5395:7157":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"16:6279:4621":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:22202:2681":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"6:5152:8342":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:9164:2629":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"2:43114:4719":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:13448:5370":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:41604:167":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"11:2383:1886":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"1:3163:27708":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:640:7120":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:12220:4971":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:40280:6903":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:10738:7286":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"6:4710:8137":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:4908:8217":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:12051:1634":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:2920:6341":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:5518:4203":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"9:237:6944":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"6:1528:7843":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"9:0:2124":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"6:1596:7887":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"18:574:4916":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"16:4527:6115":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"6:7610:8723":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"14:202:14357":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:12176:3223":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"16:6499:4631":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"17:12191:5225":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"17:13754:5441":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"16:8181:4650":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:13742:5439":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:7878:136":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:40590:2396":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:46404:7028":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:41833:6839":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"16:5727:4598":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:2856:2551":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:9802:2827":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"16:8205:21338":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:11426:5131":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:4038:9112":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:11215:5116":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"17:11958:5206":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"17:12140:5221":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"6:7604:8722":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:12091:5217":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:1054:4417":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:21484:9060":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:44063:6855":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"6:4603:8118":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"16:7828:6430":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:11294:5124":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:9474:7183":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:3674:1897":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:10785:34374":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"5:2251:4692":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"16:6376:21329":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:1203:4962":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"5:4860:223":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:42841:8822":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"5:1472:4685":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:47940:7096":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:6409:2387":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"17:16146:6057":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"9:450:20319":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:10953:7160":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:13155:113":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:46525:7032":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:13202:4542":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"9:393:20320":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"3:234:232":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"17:15527:5902":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"6:4955:8241":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:26112:272":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:42946:2825":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"1:7901:4731":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"1:6811:9189":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:46942:7054":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"16:149:4207":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:41111:2370":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"11:2548:7384":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:11476:7142":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:4964:2260":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"17:15294:5823":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:11991:5208":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:13478:5382":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:6263:8553":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:10896:5092":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"9:357:20334":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:3510:9080":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:11701:5161":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"11:1066:20397":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"16:6944:34366":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"6:4364:7983":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"5:2967:2821":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:12153:5222":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:15062:5762":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"16:7006:6314":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:41933:1886":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"18:538:4488":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"6:4830:8182":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"18:80:7367":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:13684:5430":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:40631:2409":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:6543:2348":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"16:6361:6221":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:44748:6994":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:45873:7004":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:880:4686":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"17:12324:5239":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"2:42924:134":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"5:1126:4422":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"5:1146:7397":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"6:5921:8399":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:15108:5775":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:13989:5476":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:15267:5816":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:10520:34375":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:21373:9194":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"6:4566:8099":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:2380:9055":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"1:3482:2832":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"17:10035:4499":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:11800:5171":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"16:4557:6116":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"11:1087:34356":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:3241:7138":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"6:1537:7848":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:654:15280":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:44514:8838":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:2966:14555":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:4461:8047":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"6:4824:8179":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:4383:7147":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:47486:7091":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:39552:220":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"6:7645:8731":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:3310:2299":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"5:7291:4231":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"5:5645:4245":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:44267:6978":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:1562:6589":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"6:5829:8346":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:2200:135":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"5:2970:8746":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:10569:34373":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:15980:6018":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"17:14887:5735":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"6:7639:8730":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:645:8981":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:41644:6838":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:9971:6935":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:44705:213":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:10532:7135":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"2:40877:2408":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:42869:31528":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:39628:6895":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:45905:7005":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:48276:7112":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:43839:6958":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:12445:5254":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"6:6666:8565":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:41063:6831":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"1:4798:4295":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"5:3220:6587":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"6:1691:7952":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:10792:4743":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:42228:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"6:6898:8677":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:13909:5465":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:22642:8755":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:11485:5139":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:44188:6973":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:10986:4733":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"6:6059:8477":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:14057:5486":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:14765:5688":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:11168:21426":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"17:15671:5940":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"16:7128:7271":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"11:2562:7748":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:13026:5292":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"16:3032:6101":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:2370:9050":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:15301:5824":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"3:0:475":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:47738:7093":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:14778:5695":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"18:609:4927":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:11034:4314":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:44054:6966":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:8551:7261":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:12273:5273":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:482:4289":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"5:4999:4203":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:7723:2377":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:8973:4734":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"1:8476:7256":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"16:3315:6102":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"2:43875:3221":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:16180:5343":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"2:8171:2375":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"18:599:34382":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:13809:5450":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:893:4231":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"6:1674:7945":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"6:1576:7873":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"11:102:7744":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"6:5015:8278":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:47280:7059":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:16170:5338":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"2:15:1881":{"crate_id":2,"path":["core","write"],"kind":"macro"},"1:588:8978":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:11226:5118":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:41119:2372":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:22362:6864":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"16:5588:6094":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:42906:2696":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"6:507:7772":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"6:1650:7928":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:2197:4964":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:15612:5924":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:5632:4302":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:4968:8251":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"0:295:1897":{"crate_id":0,"path":["thread_local","IntoIter"],"kind":"struct"},"2:4883:6821":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"1:11998:4751":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:2942:6345":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"17:11632:5151":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"16:7015:6317":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:11536:5143":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:14921:5738":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"16:6742:6280":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"6:6868:8660":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:7643:9060":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:32349:2291":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"2:43365:3201":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:13787:5449":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:9196:8845":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"16:2359:6070":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"6:4808:8171":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"16:6560:4209":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"17:11449:5022":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"6:6804:8620":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:2031:4963":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:12828:5273":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"11:811:4247":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"17:13663:5426":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"16:2670:6083":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:10775:5084":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"16:4774:6122":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:1836:185":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:10016:21374":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:11590:5147":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"17:13273:5334":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:1821:4438":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"16:4344:6111":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"6:4529:8078":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:10762:3224":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"5:4439:4237":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"5:6954:269":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:3366:2366":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:22924:195":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:48161:7107":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"11:883:6581":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"5:1490:6585":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:13948:5470":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"18:582:2075":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"0:286:1886":{"crate_id":0,"path":["thread_local","Iter"],"kind":"struct"},"16:5435:6136":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:39371:2843":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:2903:9188":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:849:1893":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"11:2140:4417":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:40494:6917":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"2:4087:14322":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:10471:34380":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:11477:2697":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"17:15557:5908":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:13491:5386":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:12102:6852":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:1743:655":{"crate_id":1,"path":["std","env"],"kind":"module"},"5:7279:6677":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"17:14455:5566":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:12043:690":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"16:7474:6404":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:15367:5839":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"16:7736:6422":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"6:1682:7946":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"16:2596:6080":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"6:6136:8507":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:8006:4742":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"6:4516:8073":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"11:1025:4417":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"6:6107:8498":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:40223:6816":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"17:14021:5480":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:1796:7127":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:22095:9279":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"1:12030:399":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"6:5075:8305":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"16:5384:21324":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:46382:7027":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:43614:3200":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:15631:5929":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"6:4595:8113":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:2197:2681":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"5:785:4221":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:909:6585":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"16:2644:6082":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"16:7513:6415":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:43729:6954":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"14:165:20402":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"16:6401:4629":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"6:4610:8120":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"6:4449:8042":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:46113:7014":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:42306:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:44494:8833":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:3160:30834":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:43153:4721":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:8168:1819":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:21801:4708":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:0:1523":{"crate_id":1,"path":["std"],"kind":"module"},"2:13259:3197":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"16:6017:21327":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:7380:27241":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:2958:14553":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:10890:3219":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"6:62:14868":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"11:837:6577":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:1550:6587":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"11:1603:6586":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:2355:131":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:22500:4710":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:16062:6038":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"2:43757:4526":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:4129:7399":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"6:4755:8147":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"11:2369:6592":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"1:11051:4316":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"16:6467:6231":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:11612:7174":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"}},"external_crates":{"20":{"name":"once_cell","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":27}