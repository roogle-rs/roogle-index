{"root":"0:0:1409","crate_version":"1.1.4","includes_private":false,"index":{"0:276:1710":{"id":"0:276:1710","crate_id":0,"name":"Iter","span":{"filename":"src/lib.rs","begin":[447,0],"end":[450,1]},"visibility":"public","docs":"Iterator over the contents of a `ThreadLocal`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2677:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:7747:1636-0:276:1710","a:2:7748:2072-0:276:1710","a:2:2663:217-0:276:1710","a:2:2677:225-0:276:1710","a:2:2727:2398-0:276:1710","b:2:2241-0:276:1710","b:2:2524-0:276:1710","b:2:2238-0:276:1710","b:2:2518-0:276:1710","b:2:7053-0:276:1710","b:2:3316-0:276:1710","b:2:2514-0:276:1710","b:2:2529-0:276:1710","0:281","0:215","0:221"]}},"0:179:1721":{"id":"0:179:1721","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[315,4],"end":[315,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"b:2:2241-0:60:1628":{"id":"b:2:2241-0:60:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2670:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:24621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:191:1721":{"id":"0:191:1721","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[336,4],"end":[336,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}},"b:2:2514-0:60:1628":{"id":"b:2:2514-0:60:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2491:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2488:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2517:2506"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2518-0:11:1630":{"id":"b:2:2518-0:11:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2491:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2520:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:162:1672":{"id":"0:162:1672","crate_id":0,"name":"with_capacity","span":{"filename":"src/lib.rs","begin":[172,4],"end":[195,5]},"visibility":"public","docs":"Creates a new `ThreadLocal` with an initial capacity. If less than the capacity threads\naccess the thread local it will never reallocate. The capacity may be rounded up to the\nnearest power of two.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["capacity",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:36:1721":{"id":"0:36:1721","crate_id":0,"name":"Item","span":{"filename":"src/cached.rs","begin":[95,4],"end":[95,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}},"0:159":{"id":"0:159","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[163,0],"end":[312,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:161:923","0:162:1672","0:165:1659","0:166:1687","0:169:1691","0:174:780","0:175:1663","0:176:1720"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11487:34460":{"id":"2:11487:34460","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11130:8664","prim@char":"1:12298:409","str::split":"2:11478:28841","`DoubleEndedIterator`":"2:7086:120","str::rsplit_terminator":"2:11490:34461"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:50136:8704","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11434:34455":{"id":"2:11434:34455","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°üíõ\");\n```","links":{"str::floor_char_boundary":"2:11432:34454"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3316-0:138:1644":{"id":"b:2:3316-0:138:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2670:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3314:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3318:1448"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11451:28833":{"id":"2:11451:28833","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-L√∂f\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-L√∂f\", last);\n```","links":{"str::split_at_mut":"2:11452:28834"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3316-0:60:1628":{"id":"b:2:3316-0:60:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2670:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3314:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3318:1448"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11543:34476":{"id":"2:11543:34476","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12298:409","self::pattern":"2:11130:8664"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11150:8661","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:234:1732":{"id":"0:234:1732","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[476,4],"end":[478,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2663:217-0:60:1628":{"id":"a:2:2663:217-0:60:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7748:2072-0:11:1630":{"id":"a:2:7748:2072-0:11:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7748:2072","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:161:923":{"id":"0:161:923","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[165,4],"end":[167,5]},"visibility":"public","docs":"Creates a new empty `ThreadLocal`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5114:25078":{"id":"5:5114:25078","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"gr√º√üe, j√ºrgen ‚ù§\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:11551:25081"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6969:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11493:28847":{"id":"2:11493:28847","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"2:11130:8664","str::rsplitn":"2:11496:28849","prim@char":"1:12298:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:50190:2820","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2240:2026":{"id":"2:2240:2026","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:7055:1721":{"id":"2:7055:1721","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:7163:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:7053-0:223:1717":{"id":"b:2:7053-0:223:1717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7163:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7049:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1717","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:7055:1721","2:7056:1722","2:7057:769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:2518-0:223:1717":{"id":"b:2:2518-0:223:1717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2491:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1717","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2520:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:185:1721":{"id":"0:185:1721","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[327,4],"end":[327,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}},"a:2:2727:2398-0:47:1629":{"id":"a:2:2727:2398-0:47:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2727:2398","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1629","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:41:1726":{"id":"0:41:1726","crate_id":0,"name":"get_or_default","span":{"filename":"src/cached.rs","begin":[106,4],"end":[108,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates a default one if\nit doesn't exist.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:175:1663":{"id":"0:175:1663","crate_id":0,"name":"iter_mut","span":{"filename":"src/lib.rs","begin":[296,4],"end":[301,5]},"visibility":"public","docs":"Returns a mutable iterator over the local values of all threads in\nunspecified order.\n\nSince this call borrows the `ThreadLocal` mutably, this operation can\nbe done safely---the mutable borrow statically guarantees no other\nthreads are currently accessing their associated values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1717","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7747:1636-0:60:1628":{"id":"a:2:7747:1636-0:60:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7747:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7747:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:193:769":{"id":"0:193:769","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[339,4],"end":[341,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1717","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:232:936":{"id":"0:232:936","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[471,4],"end":[475,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:47:1629":{"id":"b:2:2238-0:47:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2670:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1629","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2026"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:192:1722":{"id":"0:192:1722","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[337,4],"end":[337,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1717","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[344,0],"end":[350,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"2:2565:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:196:1726"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:174:780":{"id":"0:174:780","crate_id":0,"name":"iter","span":{"filename":"src/lib.rs","begin":[280,4],"end":[288,5]},"visibility":"public","docs":"Returns an iterator over the local values of all threads in unspecified\norder.\n\nThis call can be done safely, as `T` is required to implement [`Sync`].","links":{"`Sync`":"2:2677:225"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2677:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:63":{"id":"0:63","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[147,0],"end":[159,1]},"visibility":{"restricted":{"parent":"0:3:1626","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["enumerate","cmp_by","copied","lt","find","skip","is_partitioned","max_by","inspect","take_while","intersperse_with","last","collect","size_hint","partial_cmp_by","cloned","find_map","max_by_key","try_fold","any","by_ref","map_while","for_each","all","advance_by","ne","eq_by","cycle","try_find","try_for_each","min","try_collect","scan","filter","zip","nth","le","map","is_sorted","array_chunks","rposition","fold","min_by","collect_into","flat_map","filter_map","step_by","eq","gt","position","is_sorted_by","sum","rev","reduce","min_by_key","partition","flatten","peekable","chain","take","is_sorted_by_key","product","unzip","ge","try_reduce","max","count","partition_in_place","fuse","cmp","skip_while","partial_cmp","intersperse","next_chunk","__iterator_get_unchecked"],"trait":{"name":"Iterator","id":"2:7163:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:65:1721","0:66:936","0:67:1732"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2527:127":{"id":"2:2527:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2498:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:291:656":{"id":"0:291:656","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[493,9],"end":[493,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8570:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8559:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:151":{"id":"0:151","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[133,0],"end":[133,47]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2677:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11452:28834":{"id":"2:11452:28834","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-L√∂f\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-L√∂f\", last);\n}\nassert_eq!(\"PER Martin-L√∂f\", s);\n```","links":{"str::split_at":"2:11451:28833"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:182":{"id":"0:182","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[326,0],"end":[333,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2677:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7049:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"items":["0:185:1721","0:186:1722","0:187:769"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:231:1721":{"id":"0:231:1721","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[470,4],"end":[470,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}},"b:2:2238-0:223:1717":{"id":"b:2:2238-0:223:1717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2670:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1717","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2026"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:20:1659":{"id":"0:20:1659","crate_id":0,"name":"get","span":{"filename":"src/cached.rs","begin":[34,4],"end":[36,5]},"visibility":"public","docs":"Returns the element for the current thread, if it exists.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2524-0:223:1717":{"id":"b:2:2524-0:223:1717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2498:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2494:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1717","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2527:127","2:2528:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11440:1660":{"id":"2:11440:1660","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12315:1456"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:243":{"id":"0:243","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[499,0],"end":[512,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["enumerate","cmp_by","copied","lt","find","skip","is_partitioned","max_by","inspect","take_while","intersperse_with","last","collect","size_hint","partial_cmp_by","cloned","find_map","max_by_key","try_fold","any","by_ref","map_while","for_each","all","advance_by","ne","eq_by","cycle","try_find","try_for_each","min","try_collect","scan","filter","zip","nth","le","map","is_sorted","array_chunks","rposition","fold","min_by","collect_into","flat_map","filter_map","step_by","eq","gt","position","is_sorted_by","sum","rev","reduce","min_by_key","partition","flatten","peekable","chain","take","is_sorted_by_key","product","unzip","ge","try_reduce","max","count","partition_in_place","fuse","cmp","skip_while","partial_cmp","intersperse","next_chunk","__iterator_get_unchecked"],"trait":{"name":"Iterator","id":"2:7163:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:245:1721","0:246:936","0:248:1732"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:23:1691":{"id":"0:23:1691","crate_id":0,"name":"get_or_try","span":{"filename":"src/cached.rs","begin":[52,4],"end":[57,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates it if it doesn't\nexist. If `create` fails, that error is returned and no element is\nadded.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["create",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48254:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2933:1690","args":{"parenthesized":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48254:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2677:225-0:223:1717":{"id":"a:2:2677:225-0:223:1717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2677:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1717","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:155:59":{"id":"0:155:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[136,4],"end":[138,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[83,0],"end":[92,1]},"visibility":{"restricted":{"parent":"0:3:1626","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7049:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:30:1721","0:31:1722","0:32:769"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11478:28841":{"id":"2:11478:28841","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::rsplit":"2:11484:28845","str::split_whitespace":"2:11456:31414","self::pattern":"2:11130:8664","prim@char":"1:12298:409","`DoubleEndedIterator`":"2:7086:120"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:50086:2808","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:38:769":{"id":"0:38:769","crate_id":0,"name":"into_iter","span":{"filename":"src/cached.rs","begin":[98,4],"end":[100,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1629","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5110:35130":{"id":"5:5110:35130","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tsch√º√ü\";\n\nassert_eq!(\"TSCH√úSS\", s.to_uppercase());\n```","links":{"`String`":"5:6969:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6969:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[139,0],"end":[139,68]},"visibility":{"restricted":{"parent":"0:3:1626","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7109:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1629","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2727:2398-0:60:1628":{"id":"a:2:2727:2398-0:60:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2727:2398","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:16:59":{"id":"0:16:59","crate_id":0,"name":"default","span":{"filename":"src/cached.rs","begin":[18,4],"end":[20,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2727:2398-0:138:1644":{"id":"a:2:2727:2398-0:138:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2727:2398","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11540:34475":{"id":"2:11540:34475","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:11130:8664","prim@char":"1:12298:409"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:32:769":{"id":"0:32:769","crate_id":0,"name":"into_iter","span":{"filename":"src/cached.rs","begin":[87,4],"end":[91,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11528:34473":{"id":"2:11528:34473","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12298:409","self::pattern":"2:11130:8664"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:7053-0:47:1629":{"id":"b:2:7053-0:47:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7163:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7049:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1629","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:7055:1721","2:7056:1722","2:7057:769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:120":{"id":"0:120","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[74,48],"end":[74,65]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"cached::CachedThreadLocal","name":"CachedThreadLocal","id":"0:11:1630","glob":false}},"2:11461:28851":{"id":"2:11461:28851","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:11130:8664","prim@char":"1:12298:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11445:1698":{"id":"2:11445:1698","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"üóª‚ààüåè\";\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9312:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9312:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"5:5096:1741":{"id":"5:5096:1741","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:6969:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6969:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11511:34465":{"id":"2:11511:34465","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"prim@char":"1:12298:409","`DoubleEndedIterator`":"2:7086:120","str::rmatch_indices":"2:11514:34466","self::pattern":"2:11130:8664"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:50236:8699","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11505:2038":{"id":"2:11505:2038","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11130:8664","`DoubleEndedIterator`":"2:7086:120","str::matches":"2:11505:2038","prim@char":"1:12298:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:50290:8701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:65:1721":{"id":"0:65:1721","crate_id":0,"name":"Item","span":{"filename":"src/cached.rs","begin":[148,4],"end":[148,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"b:2:2529-0:276:1710":{"id":"b:2:2529-0:276:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2488:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2498:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2532:127","2:2533:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7748:2072-0:47:1629":{"id":"a:2:7748:2072-0:47:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7748:2072","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1629","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2241-0:11:1630":{"id":"b:2:2241-0:11:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2670:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:24621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11474:2512":{"id":"2:11474:2512","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('√©'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:48112:176","self::pattern":"2:11130:8664","prim@char":"1:12298:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11150:8661","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2524-0:11:1630":{"id":"b:2:2524-0:11:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2498:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2494:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2527:127","2:2528:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11549:25079":{"id":"2:11549:25079","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√∂S\"));\nassert!(!\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√ñS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:221":{"id":"0:221","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[461,0],"end":[461,53]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2677:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7433:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2518-0:276:1710":{"id":"b:2:2518-0:276:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2491:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2520:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:14":{"id":"0:14","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[17,0],"end":[21,1]},"visibility":{"restricted":{"parent":"0:3:1626","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2565:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:16:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2243:24621":{"id":"2:2243:24621","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2663:217-0:11:1630":{"id":"a:2:2663:217-0:11:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11490:34461":{"id":"2:11490:34461","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split":"2:11478:28841","self::pattern":"2:11130:8664","str::split_terminator":"2:11487:34460","prim@char":"1:12298:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:50154:8703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11150:8661","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5112:2189":{"id":"5:5112:2189","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:6969:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6969:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:237":{"id":"0:237","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[482,0],"end":[482,49]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7433:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1717","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11523:34470":{"id":"2:11523:34470","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™\";\nassert!(Some('◊¢') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:187:769":{"id":"0:187:769","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[330,4],"end":[332,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:7049:149","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2677:225-0:285:1722":{"id":"a:2:2677:225-0:285:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2677:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:249":{"id":"0:249","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[514,0],"end":[514,50]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7109:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2677:225-0:11:1630":{"id":"a:2:2677:225-0:11:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2677:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7748:2072-0:285:1722":{"id":"a:2:7748:2072-0:285:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7748:2072","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7747:1636-0:276:1710":{"id":"a:2:7747:1636-0:276:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7747:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11481:28843":{"id":"2:11481:28843","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:11130:8664","prim@char":"1:12298:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:10954:2822","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11467:28853":{"id":"2:11467:28853","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:11130:8664","prim@char":"1:12298:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11150:8661","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3316-0:47:1629":{"id":"b:2:3316-0:47:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2670:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3314:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1629","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3318:1448"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:289":{"id":"0:289","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[493,9],"end":[493,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:8610:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8610:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:291:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:218:1721":{"id":"0:218:1721","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[453,4],"end":[453,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}}}},"0:68":{"id":"0:68","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[161,0],"end":[161,56]},"visibility":{"restricted":{"parent":"0:3:1626","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7109:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:186:1722":{"id":"0:186:1722","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[328,4],"end":[328,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"b:2:7053-0:276:1710":{"id":"b:2:7053-0:276:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7163:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7049:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:7055:1721","2:7056:1722","2:7057:769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:188":{"id":"0:188","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[335,0],"end":[342,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7049:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"items":["0:191:1721","0:192:1722","0:193:769"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:55:936":{"id":"0:55:936","crate_id":0,"name":"next","span":{"filename":"src/cached.rs","begin":[129,4],"end":[131,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:169:1691":{"id":"0:169:1691","crate_id":0,"name":"get_or_try","span":{"filename":"src/lib.rs","begin":[218,4],"end":[227,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates it if it doesn't\nexist. If `create` fails, that error is returned and no element is\nadded.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["create",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48254:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2933:1690","args":{"parenthesized":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48254:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7748:2072-0:223:1717":{"id":"a:2:7748:2072-0:223:1717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7748:2072","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1717","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2727:2398-0:276:1710":{"id":"a:2:2727:2398-0:276:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2727:2398","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11496:28849":{"id":"2:11496:28849","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"str::splitn":"2:11493:28847","prim@char":"1:12298:409","self::pattern":"2:11130:8664"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:50208:2818","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11150:8661","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:1409":{"id":"0:0:1409","crate_id":0,"name":"thread_local","span":{"filename":"src/lib.rs","begin":[8,0],"end":[638,1]},"visibility":"public","docs":"Per-object thread-local storage\n\nThis library provides the `ThreadLocal` type which allows a separate copy of\nan object to be used for each thread. This allows for per-object\nthread-local storage, unlike the standard library's `thread_local!` macro\nwhich only allows static thread-local storage.\n\nPer-thread objects are not destroyed when a thread exits. Instead, objects\nare only destroyed when the `ThreadLocal` containing them is destroyed.\n\nYou can also iterate over the thread-local values of all thread in a\n`ThreadLocal` object using the `iter_mut` and `into_iter` methods. This can\nonly be done if you have mutable access to the `ThreadLocal` object, which\nguarantees that you are the only thread currently accessing it.\n\nNote that since thread IDs are recycled when a thread exits, it is possible\nfor one thread to retrieve the object of another thread. Since this can only\noccur after a thread has exited this does not lead to any race conditions.\n\n# Examples\n\nBasic usage of `ThreadLocal`:\n\n```rust\nuse thread_local::ThreadLocal;\nlet tls: ThreadLocal<u32> = ThreadLocal::new();\nassert_eq!(tls.get(), None);\nassert_eq!(tls.get_or(|| 5), &5);\nassert_eq!(tls.get(), Some(&5));\n```\n\nCombining thread-local values into a single result:\n\n```rust\nuse thread_local::ThreadLocal;\nuse std::sync::Arc;\nuse std::cell::Cell;\nuse std::thread;\n\nlet tls = Arc::new(ThreadLocal::new());\n\n// Create a bunch of threads to do stuff\nfor _ in 0..5 {\n    let tls2 = tls.clone();\n    thread::spawn(move || {\n        // Increment a counter to count some event...\n        let cell = tls2.get_or(|| Cell::new(0));\n        cell.set(cell.get() + 1);\n    }).join().unwrap();\n}\n\n// Once all threads are done, collect the counter values and return the\n// sum of all thread-local counter values.\nlet tls = Arc::try_unwrap(tls).unwrap();\nlet total = tls.into_iter().fold(0, |x, y| x + y.get());\nassert_eq!(total, 5);\n```","links":{},"attrs":["#![warn(missing_docs)]","#![allow(clippy :: mutex_atomic)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:118","0:119","0:120","0:138:1644","0:276:1710","0:223:1717","0:285:1722"],"is_stripped":false}},"2:11460:31428":{"id":"2:11460:31428","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Za≈º√≥≈Çƒá gƒô≈õlƒÖ ja≈∫≈Ñ\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50378:8685","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2514-0:138:1644":{"id":"b:2:2514-0:138:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2491:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2488:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2517:2506"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5095:35127":{"id":"5:5095:35127","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:1668","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6720:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:1668","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6720:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11454:20215":{"id":"2:11454:20215","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"yÃÜes\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'yÃÜ')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12298:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:50062:8690","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:47:1629":{"id":"0:47:1629","crate_id":0,"name":"CachedIterMut","span":{"filename":"src/cached.rs","begin":[121,0],"end":[123,1]},"visibility":"public","docs":"Mutable iterator over the contents of a `CachedThreadLocal`.","links":{},"attrs":["#[deprecated(since = \"1.1.0\", note = \"Use `IterMut` instead\")]"],"deprecation":{"since":"1.1.0","note":"Use `IterMut` instead"},"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:7747:1636-0:47:1629","a:2:7748:2072-0:47:1629","a:2:2663:217-0:47:1629","a:2:2677:225-0:47:1629","a:2:2727:2398-0:47:1629","b:2:2241-0:47:1629","b:2:2524-0:47:1629","b:2:2238-0:47:1629","b:2:2518-0:47:1629","b:2:7053-0:47:1629","b:2:3316-0:47:1629","b:2:2514-0:47:1629","b:2:2529-0:47:1629","0:51","0:57"]}},"2:11439:310":{"id":"2:11439:310","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:12315:1456","str::as_mut_ptr":"2:11440:1660"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[358,0],"end":[358,59]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7747:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7747:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2524-0:60:1628":{"id":"b:2:2524-0:60:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2498:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2494:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2527:127","2:2528:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2518-0:60:1628":{"id":"b:2:2518-0:60:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2491:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2520:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:17":{"id":"0:17","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[23,0],"end":[81,1]},"visibility":{"restricted":{"parent":"0:3:1626","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:19:923","0:20:1659","0:21:1687","0:23:1691","0:26:1663","0:27:1720"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11441:1659":{"id":"2:11441:1659","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"üóª‚ààüåè\");\n\nassert_eq!(Some(\"üóª\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:48112:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9312:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9312:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[352,0],"end":[356,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:8610:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8610:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:199:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2663:217-0:276:1710":{"id":"a:2:2663:217-0:276:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11519:34468":{"id":"2:11519:34468","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊¢') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:176:1720":{"id":"0:176:1720","crate_id":0,"name":"clear","span":{"filename":"src/lib.rs","begin":[309,4],"end":[311,5]},"visibility":"public","docs":"Removes all thread-specific values from the `ThreadLocal`, effectively\nreseting it to its original state.\n\nSince this call borrows the `ThreadLocal` mutably, this operation can\nbe done safely---the mutable borrow statically guarantees no other\nthreads are currently accessing their associated values.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:19:923":{"id":"0:19:923","crate_id":0,"name":"new","span":{"filename":"src/cached.rs","begin":[26,4],"end":[30,5]},"visibility":"public","docs":"Creates a new empty `CachedThreadLocal`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:156":{"id":"0:156","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[141,0],"end":[161,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:2923:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:158:577"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11456:31414":{"id":"2:11456:31414","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11457:31429"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:50360:8687","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2518-0:138:1644":{"id":"b:2:2518-0:138:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2491:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2520:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:51":{"id":"0:51","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[125,0],"end":[137,1]},"visibility":{"restricted":{"parent":"0:3:1626","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["enumerate","cmp_by","copied","lt","find","skip","is_partitioned","max_by","inspect","take_while","intersperse_with","last","collect","size_hint","partial_cmp_by","cloned","find_map","max_by_key","try_fold","any","by_ref","map_while","for_each","all","advance_by","ne","eq_by","cycle","try_find","try_for_each","min","try_collect","scan","filter","zip","nth","le","map","is_sorted","array_chunks","rposition","fold","min_by","collect_into","flat_map","filter_map","step_by","eq","gt","position","is_sorted_by","sum","rev","reduce","min_by_key","partition","flatten","peekable","chain","take","is_sorted_by_key","product","unzip","ge","try_reduce","max","count","partition_in_place","fuse","cmp","skip_while","partial_cmp","intersperse","next_chunk","__iterator_get_unchecked"],"trait":{"name":"Iterator","id":"2:7163:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1629","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:54:1721","0:55:936","0:56:1732"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7748:2072-0:276:1710":{"id":"a:2:7748:2072-0:276:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7748:2072","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5113:25077":{"id":"5:5113:25077","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:11550:25080"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6969:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:42":{"id":"0:42","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[111,0],"end":[115,1]},"visibility":{"restricted":{"parent":"0:3:1626","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:8610:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8610:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:44:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:39":{"id":"0:39","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[103,0],"end":[109,1]},"visibility":{"restricted":{"parent":"0:3:1626","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"2:2565:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:41:1726"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2529-0:223:1717":{"id":"b:2:2529-0:223:1717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2488:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2498:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1717","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2532:127","2:2533:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2677:225-0:276:1710":{"id":"a:2:2677:225-0:276:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2677:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2514-0:47:1629":{"id":"b:2:2514-0:47:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2491:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2488:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1629","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2517:2506"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2727:2398-0:11:1630":{"id":"a:2:2727:2398-0:11:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2727:2398","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:158:577":{"id":"0:158:577","crate_id":0,"name":"drop","span":{"filename":"src/lib.rs","begin":[142,4],"end":[160,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11552:34477":{"id":"2:11552:34477","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"‚ù§\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_debug().to_string(), \"‚ù§\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4474:34477"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50385:8695","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:11:1630":{"id":"0:11:1630","crate_id":0,"name":"CachedThreadLocal","span":{"filename":"src/cached.rs","begin":[13,0],"end":[15,1]},"visibility":"public","docs":"Wrapper around [`ThreadLocal`].\n\nThis used to add a fast path for a single thread, however that has been\nobsoleted by performance improvements to [`ThreadLocal`] itself.","links":{"`ThreadLocal`":"0:138:1644"},"attrs":["#[deprecated(since = \"1.1.0\", note = \"Use `ThreadLocal` instead\")]"],"deprecation":{"since":"1.1.0","note":"Use `ThreadLocal` instead"},"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:17","0:39","a:2:7748:2072-0:11:1630","a:2:2663:217-0:11:1630","a:2:2677:225-0:11:1630","a:2:2727:2398-0:11:1630","b:2:2241-0:11:1630","b:2:2524-0:11:1630","b:2:2238-0:11:1630","b:2:2518-0:11:1630","b:2:3316-0:11:1630","b:2:2514-0:11:1630","b:2:2529-0:11:1630","0:14","0:28","0:33","0:42","0:45"]}},"2:11429:796":{"id":"2:11429:796","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"∆íoo\".len(), 4); // fancy f!\nassert_eq!(\"∆íoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12298:409"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:196:1726":{"id":"0:196:1726","crate_id":0,"name":"get_or_default","span":{"filename":"src/lib.rs","begin":[347,4],"end":[349,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates a default one if\nit doesn't exist.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11524:34471":{"id":"2:11524:34471","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2524-0:47:1629":{"id":"b:2:2524-0:47:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2498:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2494:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1629","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2527:127","2:2528:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7747:1636-0:223:1717":{"id":"a:2:7747:1636-0:223:1717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7747:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1717","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:3316-0:276:1710":{"id":"b:2:3316-0:276:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2670:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3314:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3318:1448"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11550:25080":{"id":"2:11550:25080","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Gr√º√üe, J√ºrgen ‚ù§\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2677:225-0:47:1629":{"id":"a:2:2677:225-0:47:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2677:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1629","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5099:35128":{"id":"5:5099:35128","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:6969:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6969:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2677:225-0:60:1628":{"id":"a:2:2677:225-0:60:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2677:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2238-0:11:1630":{"id":"b:2:2238-0:11:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2670:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2026"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2663:217-0:223:1717":{"id":"a:2:2663:217-0:223:1717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1717","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11464:28852":{"id":"2:11464:28852","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:11130:8664","prim@char":"1:12298:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11508:34464":{"id":"2:11508:34464","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11130:8664","prim@char":"1:12298:409","`DoubleEndedIterator`":"2:7086:120","str::matches":"2:11505:2038"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50308:8702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11150:8661","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:54:1721":{"id":"0:54:1721","crate_id":0,"name":"Item","span":{"filename":"src/cached.rs","begin":[126,4],"end":[126,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"generic","inner":"T"}}}}},"2:11450:34458":{"id":"2:11450:34458","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12304:1360","crate::ops::IndexMut":"2:2986:3194","str::slice_unchecked":"2:11449:34457"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:11517:34467":{"id":"2:11517:34467","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2524-0:138:1644":{"id":"b:2:2524-0:138:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2498:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2494:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2527:127","2:2528:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2529-0:11:1630":{"id":"b:2:2529-0:11:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2488:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2498:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2532:127","2:2533:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11437:28078":{"id":"2:11437:28078","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:10698:8688"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:37:1722":{"id":"0:37:1722","crate_id":0,"name":"IntoIter","span":{"filename":"src/cached.rs","begin":[96,4],"end":[96,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1629","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"0:31:1722":{"id":"0:31:1722","crate_id":0,"name":"IntoIter","span":{"filename":"src/cached.rs","begin":[85,4],"end":[85,38]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"2:11432:34454":{"id":"2:11432:34454","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji üßë‚Äçüî¨ (scientist) could be split so that the string only\nincludes üßë (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11551:25081":{"id":"2:11551:25081","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GR√ú√üE, J√úRGEN ‚ù§\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"gr√ú√üe, j√úrgen ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:285:1722":{"id":"b:2:2238-0:285:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2670:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2026"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:7057:769":{"id":"2:7057:769","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11455:20362":{"id":"2:11455:20362","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:50072:3302","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:235":{"id":"0:235","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[481,0],"end":[481,53]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7109:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1717","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2663:217-0:47:1629":{"id":"a:2:2663:217-0:47:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1629","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:27:1720":{"id":"0:27:1720","crate_id":0,"name":"clear","span":{"filename":"src/cached.rs","begin":[78,4],"end":[80,5]},"visibility":"public","docs":"Removes all thread-specific values from the `ThreadLocal`, effectively\nreseting it to its original state.\n\nSince this call borrows the `ThreadLocal` mutably, this operation can\nbe done safely---the mutable borrow statically guarantees no other\nthreads are currently accessing their associated values.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:7053-0:60:1628":{"id":"b:2:7053-0:60:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7163:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7049:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:7055:1721","2:7056:1722","2:7057:769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:3316-0:223:1717":{"id":"b:2:3316-0:223:1717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2670:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3314:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1717","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3318:1448"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:119":{"id":"0:119","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[74,33],"end":[74,46]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"cached::CachedIterMut","name":"CachedIterMut","id":"0:47:1629","glob":false}},"b:2:2241-0:285:1722":{"id":"b:2:2241-0:285:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2670:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:24621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11537:34474":{"id":"2:11537:34474","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12298:409","self::pattern":"2:11130:8664"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11150:8661","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2529-0:138:1644":{"id":"b:2:2529-0:138:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2488:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2498:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2532:127","2:2533:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11430:2513":{"id":"2:11430:2513","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:181:769":{"id":"0:181:769","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[318,4],"end":[323,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:220:1732":{"id":"0:220:1732","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[457,4],"end":[459,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:180:1722":{"id":"0:180:1722","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[316,4],"end":[316,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"b:2:2241-0:276:1710":{"id":"b:2:2241-0:276:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2670:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:24621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[117,0],"end":[117,65]},"visibility":{"restricted":{"parent":"0:3:1626","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7747:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7747:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11554:3144":{"id":"2:11554:3144","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4475:3144"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50394:3145","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:44:656":{"id":"0:44:656","crate_id":0,"name":"fmt","span":{"filename":"src/cached.rs","begin":[112,4],"end":[114,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8570:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8559:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:56:1732":{"id":"0:56:1732","crate_id":0,"name":"size_hint","span":{"filename":"src/cached.rs","begin":[134,4],"end":[136,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11458:20483":{"id":"2:11458:20483","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50340:3304","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11438:34456":{"id":"2:11438:34456","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"üóª‚ààüåè\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"üçî‚ààüåè\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:199:656":{"id":"0:199:656","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[353,4],"end":[355,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8570:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8559:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:285:1722":{"id":"0:285:1722","crate_id":0,"name":"IntoIter","span":{"filename":"src/lib.rs","begin":[494,0],"end":[497,1]},"visibility":"public","docs":"An iterator that moves out of a `ThreadLocal`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:7747:1636-0:285:1722","a:2:7748:2072-0:285:1722","a:2:2663:217-0:285:1722","a:2:2677:225-0:285:1722","a:2:2727:2398-0:285:1722","b:2:2241-0:285:1722","b:2:2524-0:285:1722","b:2:2238-0:285:1722","b:2:2518-0:285:1722","b:2:7053-0:285:1722","b:2:3316-0:285:1722","b:2:2514-0:285:1722","b:2:2529-0:285:1722","0:289","0:243","0:249","0:251"]}},"a:2:2663:217-0:138:1644":{"id":"a:2:2663:217-0:138:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3316-0:285:1722":{"id":"b:2:3316-0:285:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2670:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3314:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3318:1448"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7748:2072-0:138:1644":{"id":"a:2:7748:2072-0:138:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7748:2072","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2528:1435":{"id":"2:2528:1435","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48254:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2498:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11457:31429":{"id":"2:11457:31429","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11456:31414"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:50369:8686","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11499:34462":{"id":"2:11499:34462","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3316-0:11:1630":{"id":"b:2:3316-0:11:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2670:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3314:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3318:1448"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7747:1636-0:285:1722":{"id":"a:2:7747:1636-0:285:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7747:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7747:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11531:25193":{"id":"2:11531:25193","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:11130:8664","prim@char":"1:12298:409"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11470:2548":{"id":"2:11470:2548","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('√©'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:48112:176","prim@char":"1:12298:409","self::pattern":"2:11130:8664"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11546:20233":{"id":"2:11546:20233","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11092:126","`FromStr`":"2:11091:3457"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48254:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:11091:3457","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11091:3457","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:60:1628":{"id":"b:2:2238-0:60:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2670:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2026"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:284:656":{"id":"0:284:656","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[446,9],"end":[446,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8570:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8559:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11502:34463":{"id":"2:11502:34463","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11150:8661","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11428":{"id":"2:11428","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:10693:1360","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11429:796","2:11430:2513","2:11431:34453","2:11432:34454","2:11434:34455","2:11437:28078","2:11438:34456","2:11439:310","2:11440:1660","2:11441:1659","2:11443:1658","2:11445:1698","2:11447:1731","2:11449:34457","2:11450:34458","2:11451:28833","2:11452:28834","2:11453:20304","2:11454:20215","2:11455:20362","2:11456:31414","2:11457:31429","2:11458:20483","2:11459:34459","2:11460:31428","2:11461:28851","2:11464:28852","2:11467:28853","2:11470:2548","2:11474:2512","2:11478:28841","2:11481:28843","2:11484:28845","2:11487:34460","2:11490:34461","2:11493:28847","2:11496:28849","2:11499:34462","2:11502:34463","2:11505:2038","2:11508:34464","2:11511:34465","2:11514:34466","2:11517:34467","2:11519:34468","2:11521:34469","2:11523:34470","2:11524:34471","2:11525:34472","2:11528:34473","2:11531:25193","2:11534:28854","2:11537:34474","2:11540:34475","2:11543:34476","2:11546:20233","2:11548:20346","2:11549:25079","2:11550:25080","2:11551:25081","2:11552:34477","2:11554:3144","2:11555:34478"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:138:1644":{"id":"b:2:2238-0:138:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2670:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2026"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11548:20346":{"id":"2:11548:20346","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2518-0:47:1629":{"id":"b:2:2518-0:47:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2491:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1629","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2520:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:177":{"id":"0:177","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[314,0],"end":[324,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7049:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:179:1721","0:180:1722","0:181:769"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2241-0:47:1629":{"id":"b:2:2241-0:47:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2670:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1629","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:24621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[452,0],"end":[460,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2677:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["enumerate","cmp_by","copied","lt","find","skip","is_partitioned","max_by","inspect","take_while","intersperse_with","last","collect","size_hint","partial_cmp_by","cloned","find_map","max_by_key","try_fold","any","by_ref","map_while","for_each","all","advance_by","ne","eq_by","cycle","try_find","try_for_each","min","try_collect","scan","filter","zip","nth","le","map","is_sorted","array_chunks","rposition","fold","min_by","collect_into","flat_map","filter_map","step_by","eq","gt","position","is_sorted_by","sum","rev","reduce","min_by_key","partition","flatten","peekable","chain","take","is_sorted_by_key","product","unzip","ge","try_reduce","max","count","partition_in_place","fuse","cmp","skip_while","partial_cmp","intersperse","next_chunk","__iterator_get_unchecked"],"trait":{"name":"Iterator","id":"2:7163:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:218:1721","0:219:936","0:220:1732"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3318:1448":{"id":"2:3318:1448","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46593:8738","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2524-0:285:1722":{"id":"b:2:2524-0:285:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2498:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2494:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2527:127","2:2528:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[469,0],"end":[479,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["enumerate","cmp_by","copied","lt","find","skip","is_partitioned","max_by","inspect","take_while","intersperse_with","last","collect","size_hint","partial_cmp_by","cloned","find_map","max_by_key","try_fold","any","by_ref","map_while","for_each","all","advance_by","ne","eq_by","cycle","try_find","try_for_each","min","try_collect","scan","filter","zip","nth","le","map","is_sorted","array_chunks","rposition","fold","min_by","collect_into","flat_map","filter_map","step_by","eq","gt","position","is_sorted_by","sum","rev","reduce","min_by_key","partition","flatten","peekable","chain","take","is_sorted_by_key","product","unzip","ge","try_reduce","max","count","partition_in_place","fuse","cmp","skip_while","partial_cmp","intersperse","next_chunk","__iterator_get_unchecked"],"trait":{"name":"Iterator","id":"2:7163:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1717","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:231:1721","0:232:936","0:234:1732"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:242:656":{"id":"0:242:656","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[487,4],"end":[489,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8570:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8559:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11431:34453":{"id":"2:11431:34453","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nassert!(s.is_char_boundary(0));\n// start of `ËÄÅ`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `√∂`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `ËÄÅ`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11453:20304":{"id":"2:11453:20304","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"yÃÜ\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'yÃÜ'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12298:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:50056:8691","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2241-0:138:1644":{"id":"b:2:2241-0:138:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2670:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:24621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7748:2072-0:60:1628":{"id":"a:2:7748:2072-0:60:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7748:2072","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11443:1658":{"id":"2:11443:1658","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:48112:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9312:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9312:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11484:28845":{"id":"2:11484:28845","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11130:8664","`DoubleEndedIterator`":"2:7086:120","str::split":"2:11478:28841","prim@char":"1:12298:409"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:50104:2816","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11150:8661","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11449:34457":{"id":"2:11449:34457","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nunsafe {\n    assert_eq!(\"L√∂we ËÄÅËôé L√©opard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"2:2982:3193","str::slice_mut_unchecked":"2:11450:34458","`str`":"1:12304:1360"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2524-0:276:1710":{"id":"b:2:2524-0:276:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2498:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2494:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2527:127","2:2528:1435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2529-0:285:1722":{"id":"b:2:2529-0:285:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2488:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2498:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2532:127","2:2533:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:138:1644":{"id":"0:138:1644","crate_id":0,"name":"ThreadLocal","span":{"filename":"src/lib.rs","begin":[102,0],"end":[115,1]},"visibility":"public","docs":"Thread-local variable wrapper\n\nSee the [module-level documentation](index.html) for more.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:159","0:194","a:2:7748:2072-0:138:1644","a:2:2663:217-0:138:1644","a:2:2727:2398-0:138:1644","b:2:2241-0:138:1644","b:2:2524-0:138:1644","b:2:2238-0:138:1644","b:2:2518-0:138:1644","b:2:3316-0:138:1644","b:2:2514-0:138:1644","b:2:2529-0:138:1644","0:151","0:153","0:156","0:177","0:182","0:188","0:197","0:200"]}},"b:2:2514-0:223:1717":{"id":"b:2:2514-0:223:1717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2491:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2488:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1717","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2517:2506"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2241-0:223:1717":{"id":"b:2:2241-0:223:1717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2670:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1717","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:24621"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:118":{"id":"0:118","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[74,17],"end":[74,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"import","inner":{"source":"cached::CachedIntoIter","name":"CachedIntoIter","id":"0:60:1628","glob":false}},"2:2517:2506":{"id":"2:2517:2506","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2491:132"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:21:1687":{"id":"0:21:1687","crate_id":0,"name":"get_or","span":{"filename":"src/cached.rs","begin":[41,4],"end":[46,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates it if it doesn't\nexist.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["create",{"kind":"generic","inner":"F"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2933:1690","args":{"parenthesized":{"inputs":[],"output":{"kind":"generic","inner":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:60:1628":{"id":"0:60:1628","crate_id":0,"name":"CachedIntoIter","span":{"filename":"src/cached.rs","begin":[143,0],"end":[145,1]},"visibility":"public","docs":"An iterator that moves out of a `CachedThreadLocal`.","links":{},"attrs":["#[deprecated(since = \"1.1.0\", note = \"Use `IntoIter` instead\")]"],"deprecation":{"since":"1.1.0","note":"Use `IntoIter` instead"},"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:7747:1636-0:60:1628","a:2:7748:2072-0:60:1628","a:2:2663:217-0:60:1628","a:2:2677:225-0:60:1628","a:2:2727:2398-0:60:1628","b:2:2241-0:60:1628","b:2:2524-0:60:1628","b:2:2238-0:60:1628","b:2:2518-0:60:1628","b:2:7053-0:60:1628","b:2:3316-0:60:1628","b:2:2514-0:60:1628","b:2:2529-0:60:1628","0:63","0:68"]}},"2:11555:34478":{"id":"2:11555:34478","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4472:34478"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50403:8696","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2533:1434":{"id":"2:2533:1434","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48254:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2498:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:26:1663":{"id":"0:26:1663","crate_id":0,"name":"iter_mut","span":{"filename":"src/cached.rs","begin":[65,4],"end":[69,5]},"visibility":"public","docs":"Returns a mutable iterator over the local values of all threads.\n\nSince this call borrows the `ThreadLocal` mutably, this operation can\nbe done safely---the mutable borrow statically guarantees no other\nthreads are currently accessing their associated values.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1629","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2529-0:47:1629":{"id":"b:2:2529-0:47:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2488:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2498:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1629","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2532:127","2:2533:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2532:127":{"id":"2:2532:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39354:3474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:11525:34472":{"id":"2:11525:34472","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12298:409","self::pattern":"2:11130:8664"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11155:8659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:33":{"id":"0:33","crate_id":0,"name":null,"span":{"filename":"src/cached.rs","begin":[94,0],"end":[101,1]},"visibility":{"restricted":{"parent":"0:3:1626","path":"::cached"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7049:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}},"items":["0:36:1721","0:37:1722","0:38:769"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11447:1731":{"id":"2:11447:1731","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"üóª‚ààüåè\");\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9312:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9312:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:281":{"id":"0:281","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,9],"end":[446,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:8610:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2677:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8610:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:284:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:223:1717":{"id":"0:223:1717","crate_id":0,"name":"IterMut","span":{"filename":"src/lib.rs","begin":[464,0],"end":[467,1]},"visibility":"public","docs":"Mutable iterator over the contents of a `ThreadLocal`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:7747:1636-0:223:1717","a:2:7748:2072-0:223:1717","a:2:2663:217-0:223:1717","a:2:2677:225-0:223:1717","a:2:2727:2398-0:223:1717","b:2:2241-0:223:1717","b:2:2524-0:223:1717","b:2:2238-0:223:1717","b:2:2518-0:223:1717","b:2:7053-0:223:1717","b:2:3316-0:223:1717","b:2:2514-0:223:1717","b:2:2529-0:223:1717","0:228","0:235","0:237","0:239"]}},"5:5102:35129":{"id":"5:5102:35129","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Œ£\";\n\nassert_eq!(\"œÉ\", sigma.to_lowercase());\n\n// but at the end of a word, it's œÇ, not œÉ:\nlet odysseus = \"·ΩàŒîŒ•Œ£Œ£ŒïŒéŒ£\";\n\nassert_eq!(\"·ΩÄŒ¥œÖœÉœÉŒµœçœÇ\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:6969:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6969:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:219:936":{"id":"0:219:936","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[454,4],"end":[456,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:7163:156","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2663:217-0:285:1722":{"id":"a:2:2663:217-0:285:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:166:1687":{"id":"0:166:1687","crate_id":0,"name":"get_or","span":{"filename":"src/lib.rs","begin":[205,4],"end":[213,5]},"visibility":"public","docs":"Returns the element for the current thread, or creates it if it doesn't\nexist.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["create",{"kind":"generic","inner":"F"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:2933:1690","args":{"parenthesized":{"inputs":[],"output":{"kind":"generic","inner":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11514:34466":{"id":"2:11514:34466","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"str::match_indices":"2:11511:34465","`DoubleEndedIterator`":"2:7086:120","prim@char":"1:12298:409","self::pattern":"2:11130:8664"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:50254:8700","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11150:8661","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2529-0:60:1628":{"id":"b:2:2529-0:60:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2488:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2498:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIntoIter","id":"0:60:1628","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2532:127","2:2533:1434"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11534:28854":{"id":"2:11534:28854","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12298:409","self::pattern":"2:11130:8664"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11135:8660","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11150:8661","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:246:936":{"id":"0:246:936","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[501,4],"end":[508,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:7053-0:285:1722":{"id":"b:2:7053-0:285:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7163:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7049:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:7055:1721","2:7056:1722","2:7057:769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:7056:1722":{"id":"2:7056:1722","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"I"}}},"2:11521:34469":{"id":"2:11521:34469","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7747:1636-0:47:1629":{"id":"a:2:7747:1636-0:47:1629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7747:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedIterMut","id":"0:47:1629","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:239":{"id":"0:239","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[486,0],"end":[490,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:8610:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8610:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1717","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:242:656"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5111:35131":{"id":"5:5111:35131","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:286:1668","`String`":"5:6969:221"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:1668","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6720:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6969:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11459:34459":{"id":"2:11459:34459","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50350:8698","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:66:936":{"id":"0:66:936","crate_id":0,"name":"next","span":{"filename":"src/cached.rs","begin":[151,4],"end":[153,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2520:680":{"id":"2:2520:680","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:276:1710":{"id":"b:2:2238-0:276:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2670:2272","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2026"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2514-0:276:1710":{"id":"b:2:2514-0:276:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2491:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2488:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Iter","id":"0:276:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2517:2506"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:165:1659":{"id":"0:165:1659","crate_id":0,"name":"get","span":{"filename":"src/lib.rs","begin":[198,4],"end":[201,5]},"visibility":"public","docs":"Returns the element for the current thread, if it exists.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2518-0:285:1722":{"id":"b:2:2518-0:285:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2491:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2520:680"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2727:2398-0:285:1722":{"id":"a:2:2727:2398-0:285:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2727:2398","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:248:1732":{"id":"0:248:1732","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[509,4],"end":[511,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:153":{"id":"0:153","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[135,0],"end":[139,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2565:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ThreadLocal","id":"0:138:1644","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:155:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5094":{"id":"5:5094","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5005:1360","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5095:35127","5:5096:1741","5:5099:35128","5:5102:35129","5:5110:35130","5:5111:35131","5:5112:2189","5:5113:25077","5:5114:25078"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2514-0:11:1630":{"id":"b:2:2514-0:11:1630","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2491:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2488:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CachedThreadLocal","id":"0:11:1630","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2517:2506"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2727:2398-0:223:1717":{"id":"a:2:2727:2398-0:223:1717","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2727:2398","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IterMut","id":"0:223:1717","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:67:1732":{"id":"0:67:1732","crate_id":0,"name":"size_hint","span":{"filename":"src/cached.rs","begin":[156,4],"end":[158,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:48110:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:30:1721":{"id":"0:30:1721","crate_id":0,"name":"Item","span":{"filename":"src/cached.rs","begin":[84,4],"end":[84,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"b:2:2514-0:285:1722":{"id":"b:2:2514-0:285:1722","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2491:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2488:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2517:2506"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:251":{"id":"0:251","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[515,0],"end":[515,46]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2663:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7433:1633","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"IntoIter","id":"0:285:1722","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:245:1721":{"id":"0:245:1721","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[500,4],"end":[500,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}}},"paths":{"17:10394:16188":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"16:6330:15893":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:1123:3171":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:12073:19043":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:2446:8784":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:6523:2213":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"9:896:14724":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:13580:19987":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:11070:16424":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:6617:2181":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"12:320:20465":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:2579:127":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"17:10973:16249":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:5672:13607":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:7848:2615":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"6:4534:12958":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:46938:3145":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"12:60:22780":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:50403:8696":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:1021:16019":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:46661:8750":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:47376:2229":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:6509:14032":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:1615:3160":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"16:7890:15824":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"5:6014:20857":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:4433:3395":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:7748:2072":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"6:7243:13117":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:10476:16193":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"1:3404:3279":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"17:10283:16155":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"11:44:14827":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"12:810:3161":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:50681:8679":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:5574:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:51787:22541":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:49386:8793":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"16:6496:15897":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"5:6952:3236":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"5:5536:2133":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:1620:3174":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:12269:3154":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"6:1541:10567":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:4540:12959":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:13478:19952":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:4196:2159":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:7109:1738":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"6:575:9682":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"5:4903:20857":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"16:4574:15485":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:10625:16201":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"6:6554:14036":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:47154:2214":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"16:2411:15933":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"6:4804:12988":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"5:0:283":{"crate_id":5,"path":["alloc"],"kind":"module"},"16:6109:15833":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"5:6864:2114":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:12298:409":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"16:5596:15872":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:47246:2221":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:20074:32746":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:48186:1722":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:21823:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:8470:3338":{"crate_id":1,"path":["std","net","ip_addr","Ipv4Addr"],"kind":"struct"},"8:0:1926":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:10121:16097":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"16:5447:15864":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"5:3350:1710":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:8882:8790":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"6:6545:14035":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:13404:19939":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:8887:8791":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:4210:3362":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:10903:9040":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:47625:2194":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:11389:20912":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"16:5839:15881":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:10332:16185":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"12:1832:1710":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:8945:3450":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:990:3166":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:6766:2184":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"6:1505:10562":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:12319:1452":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:9765:2821":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:9446:16022":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:6017:2136":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:11288:16645":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:2740:2501":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"1:7961:3207":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"5:3430:20857":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:8629:2579":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:11773:189":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:2868:15952":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"5:5968:3159":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:2248:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"16:4635:15498":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"16:2300:15929":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"16:4849:15541":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:47205:2217":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:21856:2607":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:49626:9013":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:12302:308":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"5:1312:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:10608:16200":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:7938:3150":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:53744:3566":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:5631:33647":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"2:48727:2134":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:58363:22606":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"0:0:1409":{"crate_id":0,"path":["thread_local"],"kind":"module"},"20:369:2085":{"crate_id":20,"path":["once_cell","imp","OnceCell"],"kind":"struct"},"1:7923:3147":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:6851:2149":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"17:9831:16137":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:5695:3465":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"6:6975:14405":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:10297:2811":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"17:10221:16181":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"16:0:1933":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:7163:156":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"6:4286:12935":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:3594:20088":{"crate_id":1,"path":["std","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:2852:8938":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:12323:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:5348:22615":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:12797:19364":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:11532:3488":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"1:4403:20202":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:46543:2108":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"16:6034:15886":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:11559:18846":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:5387:2219":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:10546:16198":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:54086:8610":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:11853:19028":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"5:4027:242":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:4124:2087":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:47145:2205":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:10403:16189":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:3963:22485":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:10108:16096":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:51981:22542":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:48689:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"6:6302:14022":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:49967:2812":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:8881:35226":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"16:7970:15822":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:29604:2274":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:46840:8758":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"12:762:3160":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"6:4379:12946":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:9525:215":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"18:707:8662":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"12:777:14837":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"17:9751:16058":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:52012:3555":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:12310:730":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:50582:8674":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"6:501:9673":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"5:6923:20333":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:1114:3170":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"6:1643:10576":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:25263:3352":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:969:3163":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:52578:22552":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:9553:16017":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"16:6842:22257":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:50236:8699":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:8172:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:50821:9034":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:10444:21008":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"13:0:1924":{"crate_id":13,"path":["std_detect"],"kind":"module"},"17:13176:19885":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:29804:20331":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:11163:27893":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:46944:8772":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:7869:2591":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"18:507:21517":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"6:6500:14031":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:11828:19026":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:53992:3553":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:3163:3108":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:681:3151":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:8570:131":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"6:1887:10721":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:4441:3396":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"5:217:8643":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:50809:9031":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:9627:16043":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"5:1196:1648":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:9312:219":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:50856:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"17:8055:16214":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"5:1405:3161":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:9623:2823":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"17:9820:16136":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"17:11436:18838":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:10845:16191":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:2670:2272":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"1:686:3152":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:29698:20330":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"17:562:16231":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:2933:1690":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:50829:9036":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"17:10490:16194":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"16:6270:15810":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:9263:15995":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:4267:12932":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"5:2738:33855":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"6:4665:12975":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:20072:32741":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"17:9691:16057":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:3231:2174":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"5:3473:3186":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"6:4231:12928":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:2588:20882":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:10721:16207":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"6:4449:12951":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:21691:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"6:5835:13644":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"6:4653:12973":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"16:4217:15324":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"9:382:14744":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:8329:3276":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"1:11133:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"17:10139:16017":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:12198:19112":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:11186:16472":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"16:2341:15930":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:8122:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:8666:15978":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"5:2050:20379":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:1632:3176":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"12:1044:14839":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"16:5203:15924":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:2769:8922":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:51064:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:4082:2085":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"6:5660:13606":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"16:6161:15888":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"6:6538:14034":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:9554:3285":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"5:1396:3158":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:4:991":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:20224:3509":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"16:7659:15806":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:52242:3568":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:1771:16037":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:2930:2399":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"6:513:9675":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:12980:19840":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:8105:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:52836:3569":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:11681:22790":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"17:9250:15994":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"18:574:21517":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:2411:3273":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"6:4274:12933":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:10310:16184":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:12087:2100":{"crate_id":2,"path":["core","const_closure","ConstFnMutClosure"],"kind":"struct"},"16:6186:15809":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"16:6704:15829":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:50044:8694":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:47223:22531":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:9276:1722":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:10949:16248":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:11125:16433":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:1604:1710":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:2515:3311":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:8847:144":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"5:6876:2115":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"15:175:14867":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:2781:8924":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:3194:2173":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"6:6277:10502":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:8774:16235":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:49815:20295":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"20:221:1881":{"crate_id":20,"path":["once_cell","sync","Lazy"],"kind":"struct"},"6:539:9677":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:11639:18951":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"6:4335:12941":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:8972:3453":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"5:5814:3583":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:8763:22492":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"6:567:9681":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:9369:2138":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"1:3271:3320":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"17:9458:16049":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"5:4951:2792":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"16:3566:14882":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"6:4810:12989":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:10434:16190":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"6:1678:10579":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"16:5793:15879":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"16:7543:15811":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:12748:19318":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"5:2737:2567":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:12103:19045":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"6:1511:10563":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:3125:16103":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:48613:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:7049:149":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:10875:16211":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"6:487:9671":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:8596:15976":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"6:4690:981":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"5:3911:1710":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:11746:32908":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"17:12514:19253":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:13148:19861":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:4972:3405":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"9:709:3447":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"12:119:20466":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"6:5720:13612":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:47031:20333":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:21430:3355":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:2485:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:48423:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:12046:19041":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"6:5749:23973":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"16:2771:15948":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"1:11584:20913":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:49423:3447":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"6:646:9716":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:46974:8774":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:49174:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"9:111:14674":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"2:21409:24165":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:11734:19019":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:4527:12957":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:1931:16031":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:11945:14876":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"1:7736:16231":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"16:4441:15425":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:29626:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"16:7452:195":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:5692:13609":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:3377:3293":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"14:31:14850":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:54282:8622":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:242:21533":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:2677:225":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:12134:19047":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:52312:3556":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:2253:1700":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"1:4505:3398":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:7226:13115":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:49210:3049":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"5:6295:8734":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"16:5981:20530":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:54152:8616":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"5:4439:656":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"17:12730:19316":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"6:4126:12919":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:8339:16233":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:910:1722":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:6543:203":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:11150:8661":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:50671:8678":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"16:7980:15854":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"9:19:14706":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"17:9857:16117":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:9252:3471":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:1826:3200":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:47308:2225":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"12:1681:143":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:1825:2175":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:2844:8936":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"12:1029:3170":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"12:669:3162":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"16:5510:15868":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:10894:16212":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:2285:185":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"16:2793:15949":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"14:187:14860":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"17:11161:16470":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:12850:19409":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:8621:2580":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"16:4749:15517":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:7859:27700":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"5:6456:20867":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"6:4515:12956":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:12314:725":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:10822:16209":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"15:193:14868":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"16:2894:15953":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:8903:3449":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"17:9350:16009":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:7058:2200":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:4425:3394":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"14:202:8710":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:52082:22543":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:9844:16094":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:11536:16142":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:20287:3511":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:12264:21117":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"5:782:3178":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"5:779:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:48499:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:8487:3339":{"crate_id":1,"path":["std","net","ip_addr","Ipv6Addr"],"kind":"struct"},"17:9193:35229":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:9212:183":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:11500:18840":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"16:6316:15837":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:11974:19036":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"5:6729:1722":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"18:521:20043":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:8718:3402":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:49089:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:12318:1455":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:54095:8611":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:7981:20386":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"17:11873:19029":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:7785:20904":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:8560:2577":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"16:2993:15954":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:49915:2799":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:21889:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"18:681:20035":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:9454:1710":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:11576:18849":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:11476:9049":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"17:11661:18957":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:8814:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"1:10650:3466":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:8701:15979":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:9314:3483":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"17:9031:35230":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"5:1349:1710":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"9:649:14660":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"16:7469:15818":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:50308:8702":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:10088:16100":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"1:1828:3201":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"5:5202:8734":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:9778:16059":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:11654:22622":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:10667:21009":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"6:5554:13566":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:46960:8695":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:49140:109":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"5:6909:3237":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:359:2614":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:46861:20265":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:48461:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"16:6070:15799":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:2494:235":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"17:13184:19886":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:8871:16238":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"5:6817:1722":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"6:4683:12977":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:8795:2062":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:7895:1637":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:39354:3474":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:21955:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:4117:3350":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:9118:35227":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:10684:9021":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"5:6481:20872":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:2029:181":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"17:11939:19034":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:48254:207":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:7853:8660":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:12674:19311":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:52264:3571":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:12695:19312":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:12322:1099":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"5:3805:1717":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:1864:3212":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"6:131:9353":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"17:8441:16227":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:9503:2808":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:47606:2190":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"5:630:22472":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:5880:203":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:4316:3369":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:774:141":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"1:9394:2601":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:9488:16034":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:12860:19410":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:12896:19476":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:46609:22520":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"17:12739:19317":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:50694:8705":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:4537:8712":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:52064:3547":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:1476:143":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"5:6162:20857":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"18:636:21527":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"6:4280:12934":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:11247:16526":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:52609:22553":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:52480:3537":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:47000:8776":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"5:4072:3293":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2:50072:3302":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:11356:111":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"5:1078:20378":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:20095:32745":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"16:6376:15895":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:13031:19844":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"18:590:21518":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:12251:19116":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"5:6324:8736":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"17:9930:16116":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:5680:3464":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"5:6774:1722":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"5:6980:8707":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"18:548:140":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:5464:2208":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"17:10532:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:4273:2166":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"17:11909:19031":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"6:4644:12972":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:8752:3302":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:6392:3581":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"2:2290:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"6:6953:9630":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"16:7357:15830":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:8991:35225":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"1:9436:21107":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:50833:9037":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:47633:2196":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:10360:16151":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"17:13340:19899":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:9383:21104":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:52388:3548":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:50136:8704":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:8070:3255":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"17:11485:18839":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:6210:15890":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"18:766:20042":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:46616:2166":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"2:53026:3545":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"5:2747:33778":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"16:4689:15506":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"6:4698:12978":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"16:7166:15907":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:8822:35232":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:21235:20239":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"17:13100:19853":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"9:622:14659":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"6:4329:12940":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:6570:22787":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:7435:15850":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:53136:3534":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"5:5427:3159":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:20493:3378":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"16:2320:15794":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"1:7538:28101":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:11798:8788":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"5:5361:229":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"16:2657:15943":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:50360:8687":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"16:4662:15503":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:6680:2140":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:49113:130":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"17:1962:16055":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:6495:3479":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"13:220:21082":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:1737:2736":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:13134:19859":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:50889:9051":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:9514:164":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:10880:9043":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:6137:20894":{"crate_id":1,"path":["std","sync","mpmc","array","Channel"],"kind":"struct"},"1:10856:3321":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"2:21724:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:9873:16138":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"6:5782:13617":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:11135:8660":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:38198:1882":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:48246:190":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"16:5525:15869":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:4838:3421":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:49226:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"6:62:9287":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"17:11315:16649":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"6:4427:12949":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"18:515:20046":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:8698:3401":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:10580:3476":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"16:4413:15421":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:4327:2168":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:11687:22791":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:11725:8787":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:9601:16036":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:22453:3351":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:3461:2577":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:52166:3499":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"18:80:20060":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"16:5122:15573":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:3998:3102":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"20:383:20069":{"crate_id":20,"path":["once_cell","race","OnceBool"],"kind":"struct"},"2:29640:20329":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"17:11356:16664":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:2491:132":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:11468:27897":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"17:10583:16199":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:47167:2206":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"16:6123:15807":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"16:5184:15926":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"5:6744:3159":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"16:7557:15812":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:53492:3577":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:12337:16191":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"17:8368:16217":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"16:6654:15901":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"16:4721:15509":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"17:12768:19362":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:3160:20171":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"17:9362:16017":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:11761:19021":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"1:1887:3219":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"5:3107:3160":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"5:2477:20382":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:46877:8777":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"6:1574:10570":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:46521:200":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:8130:20165":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"16:3599:14890":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"16:6567:15827":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"12:1845:3160":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"2:47325:2226":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:3169:8757":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"17:12638:19310":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"6:1654:10577":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:8393:16226":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:48110:178":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:46921:8771":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:5013:3382":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:54190:8618":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:9449:15905":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"6:5625:13605":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"6:4559:12961":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:12361:19192":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:11343:16651":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:12265:19117":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"18:736:20040":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:9302:3378":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"18:652:21517":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:11263:3214":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"16:3026:15956":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:20921:32520":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:54220:8620":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:21161:22495":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"16:5614:20524":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"17:1903:16071":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:9094:20881":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:9573:3489":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:3377:8744":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"1:11383:20911":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:11069:3433":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"17:9328:16011":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"6:1738:10585":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"16:7942:15921":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"20:298:20070":{"crate_id":20,"path":["once_cell","race","OnceRef"],"kind":"struct"},"2:46355:8640":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"12:853:3167":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"16:5433:15863":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"16:7211:15800":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:4726:12981":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"16:7117:20507":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:1474:1634":{"crate_id":2,"path":["core","mem"],"kind":"module"},"2:11990:139":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:11922:106":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"5:6892:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"6:4598:12966":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:52712:3576":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"5:1954:20359":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:13158:19883":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"9:586:14648":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"2:1033:1912":{"crate_id":2,"path":["core","hint","unreachable_unchecked"],"kind":"function"},"2:49954:2798":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"6:4367:12945":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:2321:179":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:48195:2069":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"16:3010:15955":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"16:5949:15883":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:954:3160":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"16:7237:15908":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"20:84:2085":{"crate_id":20,"path":["once_cell","unsync","OnceCell"],"kind":"struct"},"5:4531:201":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"17:8911:35228":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:10159:16104":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:7249:13118":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:9478:1717":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:8162:16225":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:9530:216":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"17:9108:16021":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"6:135:9354":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"16:2727:15946":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:13594:20021":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:9346:3485":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:8610:111":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"12:1852:3174":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:944:3159":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"16:6690:15816":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"6:4629:12970":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:5605:13604":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:12225:19114":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"5:2739:24160":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"16:5664:15874":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:46316:2629":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:51081:8634":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"17:13231:19896":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"16:4888:15549":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:54205:8619":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"15:214:14872":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:10207:16170":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:46602:15853":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"1:3192:3321":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"6:7289:14595":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:12909:19477":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:10755:3467":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:49875:2803":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:8362:2184":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"16:4519:15429":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:21291:3354":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"12:393:22782":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"3:0:433":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"9:977:14726":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"16:4606:15490":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:1611:3159":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"16:2749:15947":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:12296:367":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:9330:3484":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:12316:1453":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:11964:202":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"1:1608:1722":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"6:7166:14566":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"6:4737:12982":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"6:5772:13616":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:10520:16196":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:46499:198":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"5:5552:9259":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:52948:3557":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:46913:8696":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:6079:2146":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:48297:1710":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:4726:780":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:247:21534":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:10245:16183":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:47275:2209":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"16:6781:15828":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:49394:21096":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"6:5861:13645":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:10682:16205":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:2727:2398":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:10997:16250":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:1105:3169":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"6:1707:3389":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:8065:3254":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:2793:8927":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:2964:8639":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"17:11174:16471":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"5:2948:1710":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:9751:2818":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"5:7063:8731":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"17:11617:18950":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:6241:15891":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"18:671:20034":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:12630:19308":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:8146:3186":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:51911:3575":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:10385:16187":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:54030:3573":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:2232:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"6:5582:13601":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:10182:16102":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:9155:16242":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:9339:16010":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"5:3485:3187":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:9282:3481":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:11933:3581":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"7:32:14611":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:4302:3367":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:47255:2231":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:50030:8697":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"6:6448:14029":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"6:6572:14037":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:8216:20150":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:76:1509":{"crate_id":2,"path":["core","usize"],"kind":"module"},"1:931:3158":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"17:11515:18841":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:7149:25202":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"16:5703:15875":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:8378:3277":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"1:11703:20915":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"1:628:3142":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:3079:3195":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:9681:16084":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:48385:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:21757:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"6:4621:12969":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"12:274:21000":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"16:6472:14865":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:10854:16210":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:3086:3327":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"1:9206:3467":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"6:4317:12939":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:1811:598":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:2652:3314":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:1751:24163":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:21416:3356":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:10374:16153":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:8092:3259":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:12617:19256":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"6:4768:12985":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:8411:2214":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:11669:22624":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"5:4747:2133":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"12:632:1710":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"5:3542:3160":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"17:13382:19937":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"6:5523:13598":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:52101:3532":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:11893:19030":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:57036:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:57088:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:1552:3293":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:53946:3535":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:2682:2171":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"1:1002:3168":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:12320:774":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:12781:19363":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:47214:2218":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:47185:2215":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"17:9071:35224":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:8686:3342":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:11300:16646":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"16:5219:15922":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:979:3165":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"5:5900:20867":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"18:699:20037":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"6:4257:12931":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:8082:3258":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"1:996:3167":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:10921:16247":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"17:9061:16017":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:11951:19035":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:5394:188":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:2801:8928":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"16:7483:15819":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"16:7396:15917":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"16:7929:15920":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:52042:3543":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:50609:8675":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:8421:2228":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:11684:18958":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:8625:191":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:0:1352":{"crate_id":1,"path":["std"],"kind":"module"},"6:4206:12770":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:11606:3477":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"17:8418:16224":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:4017:3348":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"16:5737:15876":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:11708:19017":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:8369:3326":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:5660:3463":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"6:4212:12926":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:3347:2190":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:20469:3378":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"9:920:14725":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"6:5480:13594":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"14:221:14859":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:9422:16008":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:11106:16432":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:8390:3281":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"5:2255:20383":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:47600:2188":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:5064:3383":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:8813:3437":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"1:7944:3172":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"1:8863:3447":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:57023:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:4262:3365":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:14:1705":{"crate_id":2,"path":["core","write"],"kind":"macro"},"16:5628:15873":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"16:5761:15877":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:7747:1636":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"6:495:9672":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:13366:19935":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:967:16014":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"18:644:21517":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"16:2605:15941":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:49894:2805":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"9:956:14717":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:10420:16179":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"2:2785:3492":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:12884:19474":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:7749:2071":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:13047:19848":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:6826:2129":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"5:6752:3181":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:12948:19480":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"1:900:1717":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:9791:16087":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:6408:20901":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"17:10506:16158":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"1:8638:3347":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:10497:16195":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:6233:203":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"1:12280:27303":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:4894:3366":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:5763:3468":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:8561:15975":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:12609:19255":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"16:7044:20504":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:2257:3260":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"16:3632:14899":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"12:1872:3177":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"2:51767:22540":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:51857:3554":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:6708:2147":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"16:7319:15915":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:11920:24247":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:8941:16239":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"12:1866:3176":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:2612:3305":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"5:1595:20857":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:10670:16204":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:7433:1633":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:4744:3405":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"6:5595:13603":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:9897:16140":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"6:4506:12955":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:11785:3349":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:7847:3378":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:6437:2203":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"16:7956:15821":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:8504:3340":{"crate_id":1,"path":["std","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"17:10075:16099":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"12:353:20464":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"5:1982:20380":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:20312:3500":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"16:2825:15950":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"16:6200:15889":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"16:2579:15940":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"5:36:3196":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"5:2743:33779":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"5:1241:3171":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:965:3162":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:21303:20235":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"17:12278:19118":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"6:4611:12968":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:8955:1710":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"1:4014:3349":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"12:1836:1722":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:48161:1721":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:661:3146":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"5:6720:2797":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"6:7214:13113":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:3611:1722":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:3179:20254":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:11495:3285":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:48178:1717":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"16:7249:15909":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:47019:3238":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:1636:577":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"12:1138:3171":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:11952:14876":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"16:7426:15834":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:2026:182":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"16:6816:20673":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:12321:1509":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:58384:22607":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"12:1003:3169":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:50254:8700":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:2927:1747":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"14:0:1931":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:50534:8673":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"14:165:14851":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"16:6345:15813":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:51000:208":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:8138:3313":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:9260:1710":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:48170:1710":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:46433:195":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:46849:8778":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"16:4817:15534":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:2673:223":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:12313:729":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"12:738:3158":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"2:9585:2809":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:12008:19038":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:6639:22618":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"6:4239:12929":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:13114:19855":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:3154:20169":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:20349:3504":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"16:2367:15931":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:5894:3480":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:21380:31736":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:49986:2813":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"17:9644:16029":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:420:15793":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:10466:16192":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"2:4192:204":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:53286:3558":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:20040:32522":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"6:4361:12944":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:46457:196":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:2663:217":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"16:4262:15373":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:11721:19018":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:12237:19115":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"5:3734:3159":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:10350:16186":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"17:12874:19412":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"6:6409:14025":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:5169:3429":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:12304:1360":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"20:179:2085":{"crate_id":20,"path":["once_cell","sync","OnceCell"],"kind":"struct"},"1:8075:3257":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"5:6939:3235":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:9371:16021":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"16:5163:15750":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:50714:8706":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:9388:106":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"20:339:20072":{"crate_id":20,"path":["once_cell","race","once_box","OnceBox"],"kind":"struct"},"17:8137:16215":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:49411:144":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:29564:2273":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:8510:15922":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:7012:2201":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:12311:727":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"6:4417:12948":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:6676:2139":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:47615:2192":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"6:4716:12980":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:8434:2808":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"16:6059:20658":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:3230:3323":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:5087:3376":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:2327:186":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:49884:2807":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:47299:2224":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:4318:2167":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:887:1710":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"5:6782:195":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"16:6829:20674":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:29598:1635":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"17:13354:19900":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"12:2178:23411":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:5727:13613":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:12349:19189":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:50837:9049":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:2857:8939":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:13024:19843":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"12:1840:3159":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"17:12148:19048":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"16:3188:15957":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:48347:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:2828:8933":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:9112:20882":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"17:10257:16157":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:21:667":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:2834:8934":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"16:6790:15903":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:11444:3469":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"17:12322:19126":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:47094:3253":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"6:5733:13614":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"6:1686:10580":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:6269:9592":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"3:223:207":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:1550:10568":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:9658:16083":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"6:4797:12987":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"14:7:14850":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:2818:8930":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"18:719:20038":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:49645:2800":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:9764:16086":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:11130:8664":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"17:10528:16232":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:12087:19044":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:3314:3308":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:54115:8613":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"6:6998:14407":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:51093:8632":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:5506:187":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"6:4096:12916":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"9:33:14707":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"17:11997:19037":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:4766:3406":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:2674:222":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:11199:16473":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:11639:22621":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:6217:3479":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"2:10919:9042":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:54167:8617":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"5:1370:1722":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"16:4921:15564":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"16:7847:15919":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:5227:2061":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"18:0:1935":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:13374:19936":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"16:7288:15912":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:5852:2232":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"6:1500:10561":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:2671:2172":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:49122:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"9:188:14682":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"1:4312:3368":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:9539:16032":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:12176:19063":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:5826:3473":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"5:6087:1722":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:46834:3145":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:39394:8964":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"6:7266:13120":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:6010:2135":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:49996:2814":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:12022:19039":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:8644:3346":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:50154:8703":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:49866:2804":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:973:3164":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:8589:3342":{"crate_id":1,"path":["std","net","socket_addr","SocketAddr"],"kind":"enum"},"6:4673:12976":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:13221:19895":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"16:7278:15911":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"9:827:14783":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:11528:16144":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"6:1532:10566":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"5:6760:33786":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:2714:2499":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:2578:3312":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"16:7637:15823":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:22021:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"16:6284:15820":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"20:126:1881":{"crate_id":20,"path":["once_cell","unsync","Lazy"],"kind":"struct"},"17:0:1934":{"crate_id":17,"path":["object"],"kind":"module"},"17:13492:19970":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"6:6524:14033":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:50813:9032":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:39390:20386":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"17:10708:16206":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:57010:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:5887:3479":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"13:108:35217":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"6:4575:12963":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:13436:19943":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:6415:14026":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:9835:20908":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:20055:32522":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:21015:3378":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:12060:19042":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:4454:3397":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"17:10270:16156":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:2445:3378":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:46593:8738":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:2806:8932":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:54141:8615":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:2905:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:52790:3565":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:48537:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:12299:1472":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:3479:3280":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:1760:2735":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:386:16106":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:12297:920":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"12:1859:3175":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"6:5713:13611":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"12:2205:2114":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:6528:15898":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"16:5460:15865":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:10954:2822":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:51963:3567":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:12307:19125":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"18:614:35235":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"16:4327:15405":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"17:10455:16180":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"1:12305:1438":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:7086:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"11:0:1929":{"crate_id":11,"path":["adler"],"kind":"module"},"12:822:3165":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:49976:2815":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"18:538:20048":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:2154:578":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:12309:631":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:4216:3361":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:8272:16229":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"6:6479:14030":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"5:4626:3293":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"18:624:35233":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:1637:3177":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:12312:728":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"6:6392:10506":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:11846:3350":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"6:5510:13597":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:20341:3378":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"16:3854:14944":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"6:1608:10574":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:9165:35231":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"16:2683:15944":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:12836:19407":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:719:3153":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"6:5741:13615":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:3194:3322":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:8736:3431":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:13203:19888":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"16:6619:15900":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:12550:19254":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:53102:3552":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:11800:19024":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"16:5963:191":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:20093:32743":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"5:1060:20377":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:4139:12920":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:12211:19113":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"12:1518:14842":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:10296:16154":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"10:0:1928":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:9722:16082":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:11149:16469":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:11098:3257":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:2498:234":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:8336:20282":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:1091:1648":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:54126:8614":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"6:5504:13596":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"18:582:1882":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"16:8069:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:8612:3343":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV4"],"kind":"struct"},"6:5841:12830":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"16:2557:15939":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"1:11088:24242":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"17:9274:15996":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"6:5541:13600":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"16:6137:15805":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:12926:19478":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:49402:8792":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:48575:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"6:554:9679":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"5:1446:3184":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:10668:9019":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"14:160:14850":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"12:0:1930":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"17:9947:16141":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:51051:3580":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:2775:8925":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"12:387:22781":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:2986:3194":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"17:11547:16143":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:51941:3563":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:8241:16228":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:9429:22697":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"6:5568:13567":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"6:586:9684":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:47176:2207":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:53822:3550":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"6:6430:14028":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:4398:12947":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:4200:12925":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"16:3689:14908":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"12:1555:14844":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:7056:3496":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"5:870:1710":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:12291:19124":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:6885:214":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:11267:20132":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:49904:2806":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:2789:3494":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:1643:2268":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:21922:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:11513:24246":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:7874:2600":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:49152:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"9:0:1927":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"6:5498:13595":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"6:600:9686":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"16:5235:22189":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"16:6743:15902":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:38181:180":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:7440:2199":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:11372:20910":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"6:4224:12927":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:13572:19985":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:49641:20344":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:13506:19976":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"5:6314:8735":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"5:6969:221":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"16:3402:15959":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:2488:147":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"6:4816:12990":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"14:215:14853":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:9546:2822":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"12:659:1722":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:960:3161":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:9738:16060":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:47340:2227":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"6:4191:12924":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"12:2053:1648":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"6:519:9676":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:48863:2580":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"6:6375:10503":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:11217:16474":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"16:2535:15938":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:0:486":{"crate_id":2,"path":["core"],"kind":"module"},"2:22054:3357":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:2764:8923":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"16:8014:15853":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"6:4706:12979":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"5:5625:3293":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"16:3716:14941":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:3157:134":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"5:5516:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:9475:16035":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:12164:19049":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:9909:16095":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"5:853:3179":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"17:13279:19897":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:46477:199":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:5709:3466":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:9805:16135":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:10321:16150":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"6:4461:12952":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:13039:19845":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"6:4346:12942":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:11825:3348":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"6:1695:10581":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:48651:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:51043:3579":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:2383:2707":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:3142:8941":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"15:0:1932":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:10062:16101":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:57075:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:5388:15861":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:7309:15914":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:5823:3472":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"16:5472:15866":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"12:2080:3170":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:2255:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"5:1227:3169":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:11330:16650":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:1701:10582":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:50062:8690":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:51811:3574":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"16:5815:15880":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"0:276:1710":{"crate_id":0,"path":["thread_local","Iter"],"kind":"struct"},"9:800:14763":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:2912:2088":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:5317:22615":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:9577:16038":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"16:6903:15905":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:10774:16186":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"6:6424:14027":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:50990:202":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:8295:16234":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:21318:22498":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:2250:3256":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:11201:8668":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"16:6463:15896":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:9535:3488":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:50660:8677":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"6:545:9678":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"5:677:228":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:54243:8621":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:2401:3268":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"12:2190:35216":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"6:1714:10583":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"16:7567:15838":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"7:79:14618":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:12303:1330":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"5:2955:3175":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"12:751:3159":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:8631:15977":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:9224:3469":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:2399:3267":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:6920:22618":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"16:2705:15945":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"17:11813:19025":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"6:4489:3422":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:52456:3536":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:3903:3293":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"6:5587:13602":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"18:609:21522":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"6:4307:12938":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:4657:3393":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"16:7093:15906":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:48313:1722":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:11091:3457":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"19:0:1007":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"5:6735:3180":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"6:4354:12943":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:47124:2204":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"12:815:3164":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:9671:16050":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:11137:16434":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:8762:3380":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"18:531:20047":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"20:377:20068":{"crate_id":20,"path":["once_cell","race","OnceNonZeroUsize"],"kind":"struct"},"1:918:3157":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"16:5878:15882":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:12964:19812":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"16:4385:15417":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"18:690:20036":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:13327:19898":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"12:2069:3169":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:46891:8779":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:10901:1637":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"12:2198:23413":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:9433:16007":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:8428:3302":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"12:2184:21398":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:10425:3212":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:8796:16236":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:2235:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:13141:19860":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:13126:19858":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:11787:19023":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:4475:12953":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:6603:163":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:52212:3564":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:13214:19894":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"16:2930:15795":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"1:484:20915":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"2:9080:20880":{"crate_id":2,"path":["core","slice","sort","insert_head","InsertionHole"],"kind":"struct"},"16:2509:15937":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:46402:8940":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:8981:16240":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:11087:16431":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"6:4659:12974":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:5684:13608":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:20027:1882":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:12756:19360":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"6:4761:12984":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:9700:16056":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:13071:19850":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:2899:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:10445:16191":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:8341:20283":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:11093:24244":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:9004:8996":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"6:1636:10575":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"6:6352:10529":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:10752:16189":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:9021:16241":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"5:1387:3157":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:48237:2633":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:9484:21114":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:50801:9028":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:11712:135":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"1:8447:152":{"crate_id":1,"path":["std","net","ip_addr","IpAddr"],"kind":"enum"},"5:1415:3162":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:2754:3491":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:2916:16098":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:50877:3495":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:52358:3544":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:47584:22491":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:678:3149":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:9283:16020":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:46417:197":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:11259:16635":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:13082:19851":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:7008:2202":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"6:7220:13114":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:52434:3533":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"18:564:20049":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:54106:8612":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"12:444:141":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:4246:3363":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"12:1628:20855":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:1672:1063":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"6:4496:12954":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"5:1212:3170":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:48228:2070":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:9183:16243":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"6:581:9683":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"6:608:9687":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"6:4551:12960":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:4254:3364":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:47361:2228":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"6:4565:12962":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:11841:19027":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:50290:8701":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:3422:3278":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:8704:3392":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"16:2261:15927":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"18:491:2089":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:11014:16362":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"9:592:14658":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"2:54068:3538":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:9238:3470":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"11:36:23415":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"1:6440:21108":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:2813:8929":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"6:4179:12922":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:4904:24056":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:51879:3542":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"18:113:20062":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:20909:3497":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"18:755:20041":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:3953:3345":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"16:4357:15411":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:52531:22551":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"6:1518:10564":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"16:7497:15814":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:8617:2571":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"16:5411:15862":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:7436:2198":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:11123:3258":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"17:9223:15993":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"16:6735:15831":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"18:96:20061":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:10233:16182":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"16:6668:20671":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:11155:8659":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:3269:3319":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"6:4152:12921":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:11762:20121":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:4268:3366":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:4201:2160":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:50369:8686":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"12:646:1717":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:51008:192":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"5:2981:3176":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"16:5374:15808":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"6:1668:10578":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:8559:207":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"6:4605:12967":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"6:5443:13537":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:2823:8931":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"16:7135:20508":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"16:4545:15483":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"6:7208:13112":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"9:505:14823":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"16:2465:15935":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"5:950:20857":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:10798:20909":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"6:507:9674":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:8627:2578":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"12:697:3163":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:11235:16525":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:20500:3507":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:9401:16013":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:2923:1657":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"14:40:16250":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:4585:3399":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:3152:231":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"18:660:20033":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:8441:3304":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:46967:8773":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"6:7255:13119":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:8649:3336":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"16:5996:15884":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"7:0:1499":{"crate_id":7,"path":["unwind"],"kind":"module"},"12:1065:20462":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:7747:22716":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:49941:2204":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"5:3363:1717":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"16:7388:15832":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"6:4592:12965":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"16:7872:15825":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"17:8494:15924":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"6:560:9680":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:13393:19938":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:3951:22484":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"16:534:20526":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:9830:3255":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"1:2385:3263":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:353:2613":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:13091:19852":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:9463:26771":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"6:4437:12950":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:10796:16208":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"5:3764:20857":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:50350:8698":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:411:162":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:48870:2581":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"16:3263:15958":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"16:6517:14864":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"6:6293:9551":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:8886:3448":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"5:1359:1717":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:8533:21111":{"crate_id":1,"path":["std","net","ip_addr","fmt","Span"],"kind":"struct"},"1:1626:3175":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:13518:19977":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"1:11288:26793":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"2:50805:9030":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:2869:20153":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:1967:3233":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:50517:8672":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"5:2989:3174":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:12033:19040":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:47195:2216":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"6:0:801":{"crate_id":6,"path":["libc"],"kind":"module"},"2:3975:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:46575:8942":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:11600:21109":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"12:300:1711":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:13459:19946":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"5:271:20857":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"5:286:1668":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"16:4786:15521":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:47266:2222":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:21442:3358":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:48305:1717":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:8212:16216":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"5:4947:2791":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"6:1580:10571":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:8615:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"1:598:2604":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:21326:22499":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"6:4185:12923":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"12:861:3168":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:53072:3549":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"16:6877:15904":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:8624:3344":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:9658:2816":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"17:13527:19978":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:47237:2220":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:487:16230":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:2982:3193":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"17:9317:16012":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:9501:16016":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"20:51:3293":{"crate_id":20,"path":["once_cell","imp","Guard"],"kind":"struct"},"2:52119:22544":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:10862:3319":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"16:6146:15857":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:3314:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:47014:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:10859:3323":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:50646:8676":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"6:5699:13610":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:12140:20916":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:4700:31858":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"16:6298:15836":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"6:5534:13599":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:2487:15936":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:5646:3462":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:13192:19887":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:50825:9035":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:21364:31741":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:9823:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:4055:2176":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:8712:3347":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:8576:3341":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"1:8226:3315":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"6:4102:12917":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"6:4778:12986":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"17:12485:19252":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"5:6412:241":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"17:8475:15966":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:21017:3503":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:11143:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:4679:3155":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:6837:2148":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:50378:8685":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:3157:20170":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"6:4745:12983":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"16:6676:15815":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:21790:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"2:9127:20886":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"6:1600:10573":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:47350:2211":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:53634:3546":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:11902:8623":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:20300:3378":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"2:48322:180":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"16:4144:15058":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:50086:2808":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"17:8110:16237":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:9779:2819":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"6:4247:12930":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:13536:19979":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"17:13557:19980":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"16:2842:15951":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:52410:3551":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:13168:19884":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:11306:3471":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:9636:3219":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"16:7511:15790":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:7191:20903":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"6:1562:10569":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"16:7603:15835":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"12:985:1648":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:20757:3529":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"6:4294:12936":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:29379:3353":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"12:98:20463":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:524:20891":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"16:3457:15960":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:11606:18949":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:21214:22496":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"6:592:9685":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"18:727:20039":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:20752:3506":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:3470:28248":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:20261:3510":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"2:7045:133":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:46901:8780":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:3232:3324":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"12:1085:14840":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:11774:19022":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"5:3561:20857":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:48856:2571":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"6:4300:12937":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:9382:16015":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:6316:20894":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"5:1044:22786":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"5:2994:20357":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"12:725:3157":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"6:6311:14023":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:8740:3434":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:2759:3493":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:50394:3145":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:49441:21098":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:6784:2144":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"0:223:1717":{"crate_id":0,"path":["thread_local","IterMut"],"kind":"struct"},"2:9696:2817":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:11111:22711":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"16:6865:20676":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"5:1691:3160":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"9:863:14723":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:12317:1454":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:2675:108":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:47047:8986":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"18:481:20044":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:11153:3277":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"2:10264:2810":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:6781:2143":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:2848:8937":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"16:2389:15932":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"6:4115:12918":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:8951:35223":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:8177:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:5011:3381":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"16:6052:15887":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:7977:3214":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:8693:3400":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"5:2919:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:48849:2570":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"5:6991:8708":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:4324:3371":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:56653:3578":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"2:10698:8688":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:12955:19492":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"4:0:1925":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:49107:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"16:4297:15394":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:20474:3501":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:51833:3562":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:13059:19849":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"1:2903:207":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"17:13413:19942":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"16:2282:15928":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:3365:8740":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"17:10642:16202":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:4906:24058":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"1:9406:25206":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:9441:21112":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"18:599:35236":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:50056:8691":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"16:8056:15791":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"6:5876:13646":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:47577:2186":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"12:1120:14841":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"16:2433:15934":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:50385:8695":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"0:138:1644":{"crate_id":0,"path":["thread_local","ThreadLocal"],"kind":"struct"},"17:12816:19366":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"16:5494:15867":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:21988:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:2840:8935":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"16:6719:20669":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"5:1426:3163":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:7954:3173":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"2:8833:140":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"16:7909:15826":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:11276:3468":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"16:6252:15892":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:53884:3570":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"16:6593:15899":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:3249:16122":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:12308:630":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:4969:3432":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:50208:2818":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:10494:20144":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:4373:2169":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:9293:16018":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"16:5780:15878":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:9885:16139":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:2797:8926":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"12:834:3166":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"5:2960:20356":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:7804:20906":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"16:7059:2069":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"16:7329:15916":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:10321:20180":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:20502:3505":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"5:4042:20861":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"5:1944:2596":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:12315:1456":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"12:1534:14843":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:13007:19842":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"16:6171:15858":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"6:7279:14594":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"5:6811:1722":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:9631:16030":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"5:4105:20861":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"6:5472:13593":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:10843:9041":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"6:4635:12971":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"16:7343:15817":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:11271:16638":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:8221:20151":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:50817:9033":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:12045:2796":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"6:1525:10565":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"5:7046:3160":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"6:1722:10584":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:47391:2230":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"6:1595:10572":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:52866:3572":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:21267:21090":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"5:2030:33817":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:4347:1632":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"9:676:14704":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"5:1437:195":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"20:0:1768":{"crate_id":20,"path":["once_cell"],"kind":"module"},"1:8553:20200":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"16:7372:20680":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:9268:3478":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:50340:3304":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:21343:31743":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:46981:8775":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"6:4581:12964":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:57049:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:9526:16033":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:8961:3452":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:47591:2139":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"16:5558:15871":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"16:5541:15870":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:7299:22788":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:11034:16363":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:9303:16016":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:8526:15974":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:11144:8662":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"6:6322:14024":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:5178:3430":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:11594:18893":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:47289:2223":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"5:3339:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"16:153:15797":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:50190:2820":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"16:2631:15942":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:12118:19046":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:57062:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:9737:2820":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:545:2596":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"17:12934:19479":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"16:6017:15885":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:50503:8669":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:3486:3288":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"5:6790:20360":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"16:7267:15910":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:8623:2581":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:9712:16085":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:574:2602":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:50488:8666":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:11748:19020":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:11054:16423":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:20343:3502":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:8619:2570":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:6981:14406":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:20390:3505":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:1938:3232":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"1:6043:2137":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:50466:8665":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:9301:3482":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:1919:2738":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:12972:19813":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:47104:3252":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:11368:16665":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:4263:2165":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"16:6359:15894":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:49433:21097":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:2565:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:52632:22554":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:2482:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:21251:21084":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:4908:24060":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"6:7237:13116":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"16:7298:15913":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"0:285:1722":{"crate_id":0,"path":["thread_local","IntoIter"],"kind":"struct"},"1:11456:3470":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"1:5009:3377":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"6:6329:3434":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"5:3015:3177":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"16:7825:15918":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:39403:2500":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"5:686:110":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:1889:3220":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"1:12301:1025":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:21108:22494":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:50104:2816":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"}},"external_crates":{"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"once_cell","html_root_url":null},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}