{"root":"0:0:1716","crate_version":"0.4.4","includes_private":false,"index":{"a:2:3240:200-0:811:1623":{"id":"a:2:3240:200-0:811:1623","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13384:56023":{"id":"2:13384:56023","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:15862:3078"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3402:3229":{"id":"2:3402:3229","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3404:346"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:750:669":{"id":"0:750:669","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[219,4],"end":[221,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"resolved_path","inner":{"name":"c_int","id":"20:63:1606","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3308:3210":{"id":"2:3308:3210","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3310:171","2:3311:254"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:846":{"id":"0:846","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[237,26],"end":[237,35]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3248:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:1079:9673":{"id":"1:1079:9673","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1080:9288","1:1081:10492","1:1082:53827","1:1083:53828","1:1084:53829","1:1085:53830","1:1086:53831"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:810:648":{"id":"0:810:648","crate_id":0,"name":"fmt","span":{"filename":"src/sys/unix.rs","begin":[369,0],"end":[375,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"std::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"std::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13016:10016":{"id":"2:13016:10016","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13018:10036","2:13019:909","2:13020:59238","2:13021:59239"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13710:138":{"id":"2:13710:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13711:171","2:13712:1000"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3701:137":{"id":"2:3701:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3703:675"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3696:213","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:822:593":{"id":"0:822:593","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[153,26],"end":[153,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13372:1884":{"id":"2:13372:1884","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15873:3087"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2846-0:837:1654":{"id":"b:2:2846-0:837:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:9401","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:53737"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3281:3327":{"id":"2:3281:3327","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3173-0:824:1636":{"id":"b:2:3173-0:824:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3179-0:850:1670":{"id":"b:2:3179-0:850:1670","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:7891:10076":{"id":"2:7891:10076","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7892:59290","2:7893:59291","2:7894:59288","2:7895:59286","2:7896:59292","2:7897:59289","2:7898:59287"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2938:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5650:9647":{"id":"1:5650:9647","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5651:58159","1:5652:10574"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10562:9636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5738:9655":{"id":"1:5738:9655","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5739:8982","1:5740:13103"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:829:397":{"id":"0:829:397","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[193,15],"end":[193,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3149:217":{"id":"2:3149:217","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3151:127","2:3152:1395"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:762":{"id":"0:762","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[275,0],"end":[286,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(not(target_os = \"redox\"))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:763:1676"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13449:59803":{"id":"2:13449:59803","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13434:59799":{"id":"2:13434:59799","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:10017","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3240:200-0:850:1670":{"id":"a:2:3240:200-0:850:1670","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3281:3327-0:824:1636":{"id":"a:2:3281:3327-0:824:1636","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:783:1703":{"id":"0:783:1703","crate_id":0,"name":"with_time","span":{"filename":"src/lib.rs","begin":[360,4],"end":[365,5]},"visibility":"public","docs":"Set the amount of time after which TCP keepalive probes will be sent on\nidle connections.\n\nThis will set `TCP_KEEPALIVE` on macOS and iOS, and\n`TCP_KEEPIDLE` on all other Unix operating systems, except\nOpenBSD and Haiku which don't support any way to set this\noption. On Windows, this sets the value of the `tcp_keepalive`\nstruct's `keepalivetime` field.\n\nSome platforms specify this value in seconds, so sub-second\nspecifications may be omitted.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["time",{"kind":"resolved_path","inner":{"name":"Duration","id":"2:50064:121","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3969-0:837:1654":{"id":"b:2:3969-0:837:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:862:894":{"id":"0:862:894","crate_id":0,"name":"ne","span":{"filename":"src/lib.rs","begin":[271,26],"end":[271,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13399:56041":{"id":"2:13399:56041","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:12997:10014","prim@char":"1:15856:3073"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:10017","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:818":{"id":"0:818","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[153,22],"end":[153,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2897:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3388:3226":{"id":"2:3388:3226","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3390:171","2:3391:1215"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3313:3215":{"id":"2:3313:3215","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3315:171","2:3316:1334"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13416:56033":{"id":"2:13416:56033","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"str::split":"1:15862:3078","prim@char":"1:15856:3073","self::pattern":"2:12997:10014","`DoubleEndedIterator`":"2:8411:120"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49338:9426","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:10017","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13383:56022":{"id":"2:13383:56022","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:15862:3078"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:759:669":{"id":"0:759:669","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[255,4],"end":[257,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["p",{"kind":"resolved_path","inner":{"name":"c_int","id":"20:63:1606","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:740:1628":{"id":"0:740:1628","crate_id":0,"name":"IPV6","span":{"filename":"src/lib.rs","begin":[161,4],"end":[161,51]},"visibility":"public","docs":"Domain for IPv6 communication, corresponding to `AF_INET6`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"b:5:787-0:850:1670":{"id":"b:5:787-0:850:1670","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:9288","5:790:9289","5:791:9290"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3252:209-0:764:1680":{"id":"a:2:3252:209-0:764:1680","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"MaybeUninitSlice","id":"0:764:1680","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3406:3230":{"id":"2:3406:3230","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3408:1213"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3281:3327-0:850:1670":{"id":"a:2:3281:3327-0:850:1670","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:102:1595":{"id":"0:102:1595","crate_id":0,"name":"socket","span":{"filename":"src/socket.rs","begin":[9,0],"end":[1781,30]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:188:1608","0:784:1615"],"is_stripped":true}},"0:0:1716":{"id":"0:0:1716","crate_id":0,"name":"socket2","span":{"filename":"src/lib.rs","begin":[9,0],"end":[442,1]},"visibility":"public","docs":"Utilities for creating and using sockets.\n\nThe goal of this crate is to create and use a socket using advanced\nconfiguration options (those that are not available in the types in the\nstandard library) without using any unsafe code.\n\nThis crate provides as direct as possible access to the system's\nfunctionality for sockets, this means little effort to provide\ncross-platform utilities. It is up to the user to know how to use sockets\nwhen using this crate. *If you don't know how to create a socket using\nlibc/system calls then this crate is not for you*. Most, if not all,\nfunctions directly relate to the equivalent system call with no error\nhandling applied, so no handling errors such as [`EINTR`]. As a result using\nthis crate can be a little wordy, but it should give you maximal flexibility\nover configuration of sockets.\n\n[`EINTR`]: std::io::ErrorKind::Interrupted\n\n# Examples\n\n```no_run\n# fn main() -> std::io::Result<()> {\nuse std::net::{SocketAddr, TcpListener};\nuse socket2::{Socket, Domain, Type};\n\n// Create a TCP listener bound to two addresses.\nlet socket = Socket::new(Domain::IPV6, Type::STREAM, None)?;\n\nsocket.set_only_v6(false)?;\nlet address: SocketAddr = \"[::1]:12345\".parse().unwrap();\nsocket.bind(&address.into())?;\nsocket.listen(128)?;\n\nlet listener: TcpListener = socket.into();\n// ...\n# drop(listener);\n# Ok(()) }\n```\n\n## Features\n\nThis crate has a single feature `all`, which enables all functions even ones\nthat are not available on all OSs.","links":{"std::io::ErrorKind::Interrupted":"1:10941:2049"},"attrs":["#![doc(html_root_url = \"https://docs.rs/socket2/0.3\")]","#![deny(missing_docs, missing_debug_implementations, rust_2018_idioms)]","#![doc(test(attr(deny(warnings))))]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:726","0:729","0:732","0:735","0:811:1623","0:824:1636","0:837:1654","0:850:1670","0:764:1680","0:863:1690"],"is_stripped":false}},"0:760":{"id":"0:760","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[260,0],"end":[264,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"c_int","id":"20:63:1606","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:761:669"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6083:60450":{"id":"5:6083:60450","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8354:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5722:9654":{"id":"1:5722:9654","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5723:57871","1:5724:57873","1:5725:57872","1:5726:57874"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13475:59812":{"id":"2:13475:59812","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15856:3073","self::pattern":"2:12997:10014"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:10017","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3184-0:850:1670":{"id":"b:2:3184-0:850:1670","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2862:104":{"id":"2:2862:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2863:397","2:2864:399"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3183:1395":{"id":"2:3183:1395","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4989:3197":{"id":"1:4989:3197","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4990:9420","1:4991:54440"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2840:9401":{"id":"2:2840:9401","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2842:53737"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3252:209-0:824:1636":{"id":"a:2:3252:209-0:824:1636","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13390:10832":{"id":"2:13390:10832","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49574:3280","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2843-0:850:1670":{"id":"b:2:2843-0:850:1670","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:3143"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:742":{"id":"0:742","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,0],"end":[176,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:743:669"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13480:10492":{"id":"2:13480:10492","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:843":{"id":"0:843","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[237,22],"end":[237,24]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3249:206","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:809":{"id":"0:809","crate_id":0,"name":null,"span":{"filename":"src/sys/unix.rs","begin":[369,0],"end":[375,1]},"visibility":{"restricted":{"parent":"0:368:1604","path":"::sys"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:810:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9223:9078-0:764:1680":{"id":"a:2:9223:9078-0:764:1680","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:9078","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"MaybeUninitSlice","id":"0:764:1680","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:770:648":{"id":"0:770:648","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[295,4],"end":[297,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9223:9078":{"id":"2:9223:9078","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3249:206":{"id":"2:3249:206","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:861:593":{"id":"0:861:593","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[271,26],"end":[271,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:820":{"id":"0:820","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[153,26],"end":[153,35]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3248:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3173-0:850:1670":{"id":"b:2:3173-0:850:1670","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3240:200":{"id":"2:3240:200","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2843-0:863:1690":{"id":"b:2:2843-0:863:1690","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"TcpKeepalive","id":"0:863:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:3143"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3969-0:863:1690":{"id":"b:2:3969-0:863:1690","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"TcpKeepalive","id":"0:863:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2892:173":{"id":"2:2892:173","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2894:593","2:2895:894"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:9222:9079-0:764:1680":{"id":"a:2:9222:9079-0:764:1680","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:9079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"MaybeUninitSlice","id":"0:764:1680","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"5:6080:3184":{"id":"5:6080:3184","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8354:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:787:1518":{"id":"0:787:1518","crate_id":0,"name":"0","span":{"filename":"src/socket.rs","begin":[730,10],"end":[730,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u32"}},"5:6100:3300":{"id":"5:6100:3300","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8354:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:840":{"id":"0:840","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[237,9],"end":[237,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3250:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:788:2230":{"id":"0:788:2230","crate_id":0,"name":"Address","span":{"filename":"src/socket.rs","begin":[732,4],"end":[732,21]},"visibility":"default","docs":"An address assigned to an interface.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"resolved_path","inner":{"name":"Ipv4Addr","id":"1:11189:1936","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]}},"2:10274:9314":{"id":"2:10274:9314","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10275:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3218:115":{"id":"2:3218:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3219:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:848:593":{"id":"0:848:593","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[237,26],"end":[237,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:778":{"id":"0:778","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[319,0],"end":[323,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"DerefMut","id":"2:3472:1582","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"MaybeUninitSlice","id":"0:764:1680","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:780:534"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13389:37505":{"id":"2:13389:37505","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15862:3078"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49603:10340","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6864:1950":{"id":"1:6864:1950","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6865:1596"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:806:648":{"id":"0:806:648","crate_id":0,"name":"fmt","span":{"filename":"src/sys/unix.rs","begin":[234,0],"end":[249,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"std::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"std::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:22812:9666":{"id":"2:22812:9666","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22802:9636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:828":{"id":"0:828","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[193,15],"end":[193,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:829:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:833":{"id":"0:833","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[193,26],"end":[193,35]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3248:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3382:3225":{"id":"2:3382:3225","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3384:171","2:3385:1212"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:626:2702":{"id":"0:626:2702","crate_id":0,"name":"is_end_of_record","span":{"filename":"src/sys/unix.rs","begin":[387,4],"end":[389,5]},"visibility":"public","docs":"Check if the message terminates a record.\n\nNot all socket types support the notion of records.\nFor socket types that do support it (such as [`SEQPACKET`][Type::SEQPACKET]),\na record is terminated by sending a message with the end-of-record flag set.\n\nOn Unix this corresponds to the MSG_EOR flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3169-0:764:1680":{"id":"b:2:3169-0:764:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"MaybeUninitSlice","id":"0:764:1680","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3172:1916"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:870:397":{"id":"0:870:397","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[328,16],"end":[328,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TcpKeepalive","id":"0:863:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:776:210":{"id":"0:776:210","crate_id":0,"name":"Target","span":{"filename":"src/lib.rs","begin":[312,4],"end":[312,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"MaybeUninit","id":"2:32212:1579","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}},"2:10262:119":{"id":"2:10262:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10263:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3339:3216":{"id":"2:3339:3216","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3341:255"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6862:2583":{"id":"1:6862:2583","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6863:2641"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3173-0:764:1680":{"id":"b:2:3173-0:764:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"MaybeUninitSlice","id":"0:764:1680","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:854":{"id":"0:854","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[271,15],"end":[271,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:855:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13393:56039":{"id":"2:13393:56039","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:15856:3073","self::pattern":"2:12997:10014"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2938:174":{"id":"2:2938:174","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2940:984","2:2941:813","2:2942:779","2:2943:701","2:2944:684"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2892:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:817":{"id":"0:817","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[153,22],"end":[153,24]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3249:206","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13487:59814":{"id":"2:13487:59814","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15856:3073"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49637:10343","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2837:97":{"id":"2:2837:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2839:3143"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:847":{"id":"0:847","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[237,26],"end":[237,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2892:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:848:593","0:849:894"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:749":{"id":"0:749","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[218,0],"end":[222,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:750:669"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3169-0:850:1670":{"id":"b:2:3169-0:850:1670","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:1916"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:755:1659":{"id":"0:755:1659","crate_id":0,"name":"ICMPV6","span":{"filename":"src/lib.rs","begin":[245,4],"end":[245,63]},"visibility":"public","docs":"Protocol corresponding to `ICMPv6`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"b:2:3169-0:811:1623":{"id":"b:2:3169-0:811:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:1916"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3179-0:824:1636":{"id":"b:2:3179-0:824:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:24:1600":{"id":"0:24:1600","crate_id":0,"name":"sockaddr","span":{"filename":"src/sockaddr.rs","begin":[1,0],"end":[348,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:77:1607"],"is_stripped":true}},"2:13382:59794":{"id":"2:13382:59794","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"crate::ops::IndexMut":"2:3548:3233","`str`":"1:15862:3078","str::slice_unchecked":"1:15862:3078"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:3252:209":{"id":"2:3252:209","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3169-0:863:1690":{"id":"b:2:3169-0:863:1690","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"TcpKeepalive","id":"0:863:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:1916"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:625":{"id":"0:625","crate_id":0,"name":null,"span":{"filename":"src/sys/unix.rs","begin":[379,0],"end":[400,1]},"visibility":{"restricted":{"parent":"0:368:1604","path":"::sys"}},"docs":"Unix-only API.","links":{},"attrs":["#[cfg(not(target_os = \"redox\"))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:626:2702","0:627:2708"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3248:207":{"id":"2:3248:207","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13425:56035":{"id":"2:13425:56035","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"str::rsplitn":"1:15862:3078","self::pattern":"2:12997:10014","prim@char":"1:15856:3073"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49424:9430","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13451:59804":{"id":"2:13451:59804","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:841":{"id":"0:841","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[237,15],"end":[237,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:842:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:789:9288":{"id":"5:789:9288","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"2:3351:3217":{"id":"2:3351:3217","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3353:548"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13363:59790":{"id":"2:13363:59790","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:774":{"id":"0:774","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[311,0],"end":[317,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"2:3459:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"MaybeUninitSlice","id":"0:764:1680","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:776:210","0:777:532"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3355:3219":{"id":"2:3355:3219","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3357:1090"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3281:3327-0:863:1690":{"id":"a:2:3281:3327-0:863:1690","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"TcpKeepalive","id":"0:863:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13463:20134":{"id":"2:13463:20134","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:12997:10014","prim@char":"1:15856:3073"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10503:146":{"id":"2:10503:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10504:640","2:10505:1592","2:10506:54204","2:10507:54205","2:10508:54206","2:10509:54207","2:10510:54208","2:10511:54209","2:10512:54210","2:10513:54211","2:10514:54212","2:10515:54213","2:10516:54214","2:10517:54215","2:10518:54216","2:10519:1509"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3347:3218":{"id":"2:3347:3218","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3349:880"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3548:3233":{"id":"2:3548:3233","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3550:741"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3544:2228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:5:787-0:837:1654":{"id":"b:5:787-0:837:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:9288","5:790:9289","5:791:9290"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2846-0:811:1623":{"id":"b:2:2846-0:811:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:9401","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:53737"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13360":{"id":"2:13360","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12457:1319","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13361:780","2:13362:9232","2:13363:59790","2:13364:59791","2:13366:59792","2:13369:2722","2:13370:59793","2:13371:293","2:13372:1884","2:13373:2928","2:13375:56001","2:13377:56002","2:13379:56003","2:13381:9698","2:13382:59794","2:13383:56022","2:13384:56023","2:13385:10360","2:13386:10043","2:13387:2720","2:13388:37515","2:13389:37505","2:13390:10832","2:13391:59795","2:13392:37500","2:13393:56039","2:13396:56040","2:13399:56041","2:13402:9271","2:13406:9231","2:13410:56030","2:13413:37372","2:13416:56033","2:13419:59796","2:13422:59797","2:13425:56035","2:13428:56037","2:13431:59798","2:13434:59799","2:13437:3153","2:13440:59800","2:13443:59801","2:13446:59802","2:13449:59803","2:13451:59804","2:13453:59805","2:13455:59806","2:13456:59807","2:13457:59808","2:13460:59809","2:13463:20134","2:13466:56042","2:13469:59810","2:13472:59811","2:13475:59812","2:13478:10242","2:13480:10492","2:13481:53829","2:13482:53830","2:13483:53831","2:13484:59813","2:13486:9675","2:13487:59814"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3544:2228":{"id":"2:3544:2228","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3546:171","2:3547:740"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:3252:209-0:863:1690":{"id":"a:2:3252:209-0:863:1690","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"TcpKeepalive","id":"0:863:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6102:53828":{"id":"5:6102:53828","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15862:3078"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6079:60449":{"id":"5:6079:60449","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:9094","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8092:9403","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:9094","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8092:9403","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:863:1690":{"id":"b:5:787-0:863:1690","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"TcpKeepalive","id":"0:863:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:9288","5:790:9289","5:791:9290"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3179-0:764:1680":{"id":"b:2:3179-0:764:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"MaybeUninitSlice","id":"0:764:1680","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:781":{"id":"0:781","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[337,0],"end":[442,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"TcpKeepalive","id":"0:863:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:782:907","0:783:1703"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3398:3228":{"id":"2:3398:3228","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3400:343"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10270:9317":{"id":"2:10270:9317","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10271:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13392:37500":{"id":"2:13392:37500","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49612:10341","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2846-0:863:1690":{"id":"b:2:2846-0:863:1690","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:9401","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"TcpKeepalive","id":"0:863:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:53737"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3075:10081":{"id":"2:3075:10081","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:3074:9636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3323:3211":{"id":"2:3323:3211","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3325:171","2:3326:547"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:9340:9663":{"id":"1:9340:9663","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9341:54177","1:9342:54178","1:9343:54179","1:9344:54180","1:9345:10370","1:9346:44573","1:9347:54176"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10562:9636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3707:3238":{"id":"2:3707:3238","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3709:55317"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3742:3243":{"id":"2:3742:3243","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:830":{"id":"0:830","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[193,22],"end":[193,24]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3249:206","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13385:10360":{"id":"2:13385:10360","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15856:3073"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49290:10324","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13484:59813":{"id":"2:13484:59813","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15856:3073"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49619:10342","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13364:59791":{"id":"2:13364:59791","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3969-0:824:1636":{"id":"b:2:3969-0:824:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3182:127":{"id":"2:3182:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}},"1:6790:9633":{"id":"1:6790:9633","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6791:54165","1:6792:58171"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10562:9636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10255:109":{"id":"2:10255:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10256:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8846:9577":{"id":"2:8846:9577","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9223:9078-0:811:1623":{"id":"a:2:9223:9078-0:811:1623","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:9078","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:790:9289":{"id":"5:790:9289","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:77:1607":{"id":"0:77:1607","crate_id":0,"name":"SockAddr","span":{"filename":"src/sockaddr.rs","begin":[16,0],"end":[19,1]},"visibility":"public","docs":"The address of a socket.\n\n`SockAddr`s may be constructed directly to and from the standard library\n[`SocketAddr`], [`SocketAddrV4`], and [`SocketAddrV6`] types.","links":{"`SocketAddrV6`":"1:11162:1815","`SocketAddr`":"1:11135:1581","`SocketAddrV4`":"1:11159:1814"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:13388:37515":{"id":"2:13388:37515","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15862:3078"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49594:10339","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3377:3223":{"id":"2:3377:3223","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3379:171","2:3380:345"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3969-0:811:1623":{"id":"b:2:3969-0:811:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2843-0:764:1680":{"id":"b:2:2843-0:764:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"MaybeUninitSlice","id":"0:764:1680","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2845:3143"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5730:9653":{"id":"1:5730:9653","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5731:8982","1:5732:53919","1:5733:53920"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5744:9656":{"id":"1:5744:9656","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5745:8617","1:5746:54324","1:5747:8982","1:5748:54325","1:5749:8594","1:5750:8595","1:5751:54326","1:5752:1283","1:5753:54327","1:5754:54328","1:5755:54329","1:5756:54330","1:5757:54331","1:5758:54332","1:5759:54333","1:5760:54334"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3526:3241":{"id":"2:3526:3241","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3528:226","2:3529:196","2:3530:58835"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5792:9659":{"id":"1:5792:9659","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5793:54075"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10562:9636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9223:9078-0:863:1690":{"id":"a:2:9223:9078-0:863:1690","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:9078","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"TcpKeepalive","id":"0:863:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:821":{"id":"0:821","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[153,26],"end":[153,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2892:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:822:593","0:823:894"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:780:534":{"id":"0:780:534","crate_id":0,"name":"deref_mut","span":{"filename":"src/lib.rs","begin":[320,4],"end":[322,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"MaybeUninit","id":"2:32212:1579","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9222:9079-0:837:1654":{"id":"a:2:9222:9079-0:837:1654","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:9079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8565:157":{"id":"2:8565:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8566:9236","2:8567:909","2:8568:9238","2:8571:9239","2:8572:484","2:8574:9240","2:8577:9241","2:8578:9242","2:8579:9243","2:8580:9244","2:8582:9245","2:8584:9246","2:8585:9247","2:8587:828","2:8590:9248","2:8597:3035","2:8599:9249","2:8602:9250","2:8603:9251","2:8604:9252","2:8606:9253","2:8608:9254","2:8611:1287","2:8612:3183","2:8613:9255","2:8617:9256","2:8620:9257","2:8621:9258","2:8622:9259","2:8624:9260","2:8625:9098","2:8627:9261","2:8630:9262","2:8632:9263","2:8642:9264","2:8657:9265","2:8659:9266","2:8663:9267","2:8672:9268","2:8675:9269","2:8677:9270","2:8680:265","2:8687:283","2:8694:9271","2:8701:9272","2:8710:9273","2:8720:1001","2:8727:9274","2:8734:2762","2:8735:2648","2:8736:3336","2:8748:3335","2:8755:3334","2:8767:3333","2:8774:9275","2:8775:9276","2:8780:9277","2:8783:9278","2:8786:9279","2:8787:9280","2:8789:8503","2:8791:404","2:8794:9281","2:8797:984","2:8800:9282","2:8803:593","2:8806:9283","2:8809:894","2:8811:813","2:8813:779","2:8815:701","2:8817:684","2:8819:9284","2:8820:9285","2:8828:9286"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3252:209-0:811:1623":{"id":"a:2:3252:209-0:811:1623","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13437:3153":{"id":"2:13437:3153","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12997:10014","`DoubleEndedIterator`":"2:8411:120","str::matches":"1:15862:3078","prim@char":"1:15856:3073"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49524:10336","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3492:132":{"id":"2:3492:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3494:171","2:3495:367"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:732":{"id":"0:732","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[133,0],"end":[133,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"sockref::SockRef","name":"SockRef","id":"0:354:1609","glob":false}},"2:13443:59801":{"id":"2:13443:59801","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"str::rmatch_indices":"1:15862:3078","prim@char":"1:15856:3073","`DoubleEndedIterator`":"2:8411:120","self::pattern":"2:12997:10014"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49470:10333","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6560:9670":{"id":"1:6560:9670","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6561:54157","1:6562:54158"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13402:9271":{"id":"2:13402:9271","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:47356:166","prim@char":"1:15856:3073","self::pattern":"2:12997:10014"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13370:59793":{"id":"2:13370:59793","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:3684:3236":{"id":"2:3684:3236","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"2:3615:3235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:868:648":{"id":"0:868:648","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[328,9],"end":[328,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23006:10100":{"id":"2:23006:10100","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"2:23655:10095","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22997:9636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3281:3327-0:764:1680":{"id":"a:2:3281:3327-0:764:1680","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"MaybeUninitSlice","id":"0:764:1680","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:805":{"id":"0:805","crate_id":0,"name":null,"span":{"filename":"src/sys/unix.rs","begin":[234,0],"end":[249,1]},"visibility":{"restricted":{"parent":"0:368:1604","path":"::sys"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:806:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3245:3189":{"id":"2:3245:3189","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13456:59807":{"id":"2:13456:59807","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:827":{"id":"0:827","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[193,9],"end":[193,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3250:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10264:9310":{"id":"2:10264:9310","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10265:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:12444:10488":{"id":"2:12444:10488","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12445:9236","2:12446:1682"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10272:179":{"id":"2:10272:179","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10273:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8411:120":{"id":"2:8411:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8412:9226","2:8413:9227","2:8414:9228","2:8415:9229","2:8419:9230","2:8422:9231"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10268:9316":{"id":"2:10268:9316","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10269:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13386:10043":{"id":"2:13386:10043","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15856:3073"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49296:10325","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:863:1690":{"id":"0:863:1690","crate_id":0,"name":"TcpKeepalive","span":{"filename":"src/lib.rs","begin":[329,0],"end":[335,1]},"visibility":"public","docs":"Configures a socket's TCP keepalive parameters.\n\nSee [`Socket::set_tcp_keepalive`].","links":{"`Socket::set_tcp_keepalive`":"0:188:1608"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:781","a:2:9222:9079-0:863:1690","a:2:9223:9078-0:863:1690","a:2:3240:200-0:863:1690","a:2:3252:209-0:863:1690","a:2:3281:3327-0:863:1690","b:2:3169-0:863:1690","b:2:3969-0:863:1690","b:2:2846-0:863:1690","b:2:2843-0:863:1690","b:2:3184-0:863:1690","b:2:3179-0:863:1690","b:2:3173-0:863:1690","b:5:787-0:863:1690","0:867","0:869"]}},"2:13413:37372":{"id":"2:13413:37372","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:12997:10014","prim@char":"1:15856:3073"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12789:9432","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3335:3213":{"id":"2:3335:3213","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3336:171","2:3337:900"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13422:59797":{"id":"2:13422:59797","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split":"1:15862:3078","prim@char":"1:15856:3073","self::pattern":"2:12997:10014","str::split_terminator":"1:15862:3078"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49388:10330","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:10017","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13366:59792":{"id":"2:13366:59792","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:15862:3078"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13466:56042":{"id":"2:13466:56042","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:12997:10014","prim@char":"1:15856:3073"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:10017","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13446:59802":{"id":"2:13446:59802","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"prim@char":"1:15856:3073","self::pattern":"2:12997:10014","`DoubleEndedIterator`":"2:8411:120","str::match_indices":"1:15862:3078"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49488:10334","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:10017","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13373:2928":{"id":"2:13373:2928","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47356:166"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:771":{"id":"0:771","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[300,0],"end":[309,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"MaybeUninitSlice","id":"0:764:1680","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:773:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:331:1601":{"id":"0:331:1601","crate_id":0,"name":"sockref","span":{"filename":"src/sockref.rs","begin":[1,0],"end":[147,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:354:1609"],"is_stripped":true}},"b:2:3184-0:811:1623":{"id":"b:2:3184-0:811:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:834":{"id":"0:834","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[193,26],"end":[193,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2892:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:835:593","0:836:894"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6406:212":{"id":"5:6406:212","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6407:1376"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2846-0:850:1670":{"id":"b:2:2846-0:850:1670","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:9401","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:53737"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13478:10242":{"id":"2:13478:10242","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:12936:9787","FromStr::Err":"2:12936:9787"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12936:9787","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12936:9787","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:836:894":{"id":"0:836:894","crate_id":0,"name":"ne","span":{"filename":"src/lib.rs","begin":[193,26],"end":[193,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:627:2708":{"id":"0:627:2708","crate_id":0,"name":"is_out_of_band","span":{"filename":"src/sys/unix.rs","begin":[397,4],"end":[399,5]},"visibility":"public","docs":"Check if the message contains out-of-band data.\n\nThis is useful for protocols where you receive out-of-band data\nmixed in with the normal data stream.\n\nOn Unix this corresponds to the MSG_OOB flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13371:293":{"id":"2:13371:293","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:15873:3087","str::as_mut_ptr":"1:15862:3078"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:739:1625":{"id":"0:739:1625","crate_id":0,"name":"IPV4","span":{"filename":"src/lib.rs","begin":[158,4],"end":[158,50]},"visibility":"public","docs":"Domain for IPv4 communication, corresponding to `AF_INET`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"2:8436:9092":{"id":"2:8436:9092","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8437:780","2:8438:9232"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:743:669":{"id":"0:743:669","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[173,4],"end":[175,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["d",{"kind":"resolved_path","inner":{"name":"c_int","id":"20:63:1606","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3615:3235":{"id":"2:3615:3235","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3617:58209","2:3618:58210","2:3619:56039"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13431:59798":{"id":"2:13431:59798","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:756:1662":{"id":"0:756:1662","crate_id":0,"name":"TCP","span":{"filename":"src/lib.rs","begin":[248,4],"end":[248,57]},"visibility":"public","docs":"Protocol corresponding to `TCP`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:855:397":{"id":"0:855:397","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[271,15],"end":[271,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13361:780":{"id":"2:13361:780","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15856:3073"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4629:1944":{"id":"1:4629:1944","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4630:2574","1:4631:2575","1:4633:9324","1:4634:9325","1:4635:3270","1:4636:9326","1:4637:9327","1:4639:9328","1:4640:9260","1:4641:2720","1:4642:9244","1:4644:3183"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:354:1609":{"id":"0:354:1609","crate_id":0,"name":"SockRef","span":{"filename":"src/sockref.rs","begin":[85,0],"end":[93,1]},"visibility":"public","docs":"A reference to a [`Socket`] that can be used to configure socket types other\nthan the `Socket` type itself.\n\nThis allows for example a [`TcpStream`], found in the standard library, to\nbe configured using all the additional methods found in the [`Socket`] API.\n\n`SockRef` can be created from any socket type that implements [`AsRawFd`]\n(Unix) or [`AsRawSocket`] (Windows) using the [`From`] implementation, but\nthe caller must ensure the file descriptor/socket is a valid.\n\n[`TcpStream`]: std::net::TcpStream\n[`AsRawFd`]: https://doc.rust-lang.org/stable/std/os/unix/io/trait.AsRawFd.html\n[`AsRawSocket`]: https://doc.rust-lang.org/stable/std/os/windows/io/trait.AsRawSocket.html\n\n# Examples\n\nBelow is an example of converting a [`TcpStream`] into a [`SockRef`].\n\n```\nuse std::net::{TcpStream, SocketAddr};\n\nuse socket2::SockRef;\n\n# fn main() -> Result<(), Box<dyn std::error::Error>> {\n// Create `TcpStream` from the standard library.\nlet address: SocketAddr = \"127.0.0.1:1234\".parse()?;\n# let b1 = std::sync::Arc::new(std::sync::Barrier::new(2));\n# let b2 = b1.clone();\n# let handle = std::thread::spawn(move || {\n#    let listener = std::net::TcpListener::bind(address).unwrap();\n#    b2.wait();\n#    let (stream, _) = listener.accept().unwrap();\n#    std::thread::sleep(std::time::Duration::from_millis(10));\n#    drop(stream);\n# });\n# b1.wait();\nlet stream = TcpStream::connect(address)?;\n\n// Create a `SockRef`erence to the stream.\nlet socket_ref = SockRef::from(&stream);\n// Use `Socket::set_nodelay` on the stream.\nsocket_ref.set_nodelay(true)?;\ndrop(socket_ref);\n\nassert_eq!(stream.nodelay()?, true);\n# handle.join().unwrap();\n# Ok(())\n# }\n```\n\nBelow is an example of **incorrect usage** of `SockRef::from`, which is\ncurrently possible (but not intended and will be fixed in future versions).\n\n```compile_fail\nuse socket2::SockRef;\n\n# fn main() -> Result<(), Box<dyn std::error::Error>> {\n/// THIS USAGE IS NOT VALID!\nlet socket_ref = SockRef::from(&123);\n// The above line is overseen possibility when using `SockRef::from`, it\n// uses the `RawFd` (on Unix), which is a type alias for `c_int`/`i32`,\n// which implements `AsRawFd`. However it may be clear that this usage is\n// invalid as it doesn't guarantee that `123` is a valid file descriptor.\n\n// Using `Socket::set_nodelay` now will call it on a file descriptor we\n// don't own! We don't even not if the file descriptor is valid or a socket.\nsocket_ref.set_nodelay(true)?;\ndrop(socket_ref);\n# Ok(())\n# }\n# DO_NOT_COMPILE\n```","links":{"`Socket`":"0:188:1608","`From`":"2:3146:135","std::net::TcpStream":"1:5374:1982","`SockRef`":"0:354:1609"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'s","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"1:4686:1945":{"id":"1:4686:1945","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4687:1592","1:4688:2576","1:4690:9329","1:4691:2577","1:4692:9330","1:4693:9331","1:4694:9161","1:4703:9260"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:757:1665":{"id":"0:757:1665","crate_id":0,"name":"UDP","span":{"filename":"src/lib.rs","begin":[251,4],"end":[251,57]},"visibility":"public","docs":"Protocol corresponding to `UDP`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"1:6688:9656":{"id":"1:6688:9656","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6689:54108","1:6690:8902","1:6691:8903","1:6692:8905","1:6693:8904","1:6694:8906","1:6695:8907","1:6696:8909","1:6697:8571","1:6698:8912","1:6699:8913","1:6700:8914","1:6701:8915","1:6702:8916","1:6703:8917","1:6704:8910","1:6705:8911"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8376:9093":{"id":"2:8376:9093","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8378:9233","2:8380:9234","2:8381:9235"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9222:9079-0:811:1623":{"id":"a:2:9222:9079-0:811:1623","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:9079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3169-0:837:1654":{"id":"b:2:3169-0:837:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:1916"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9222:9079-0:850:1670":{"id":"a:2:9222:9079-0:850:1670","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:9079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2843-0:824:1636":{"id":"b:2:2843-0:824:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:3143"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:811:1623":{"id":"0:811:1623","crate_id":0,"name":"Domain","span":{"filename":"src/lib.rs","begin":[154,0],"end":[154,25]},"visibility":"public","docs":"Specification of the communication domain for a socket.\n\nThis is a newtype wrapper around an integer which provides a nicer API in\naddition to an injection point for documentation. Convenience constants such\nas [`Domain::IPV4`], [`Domain::IPV6`], etc, are provided to avoid reaching\ninto libc for various constants.\n\nThis type is freely interconvertible with C's `int` type, however, if a raw\nvalue needs to be provided.","links":{"`Domain::IPV4`":"0:811:1623","`Domain::IPV6`":"0:811:1623"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:621","0:738","a:2:9222:9079-0:811:1623","a:2:9223:9078-0:811:1623","a:2:3240:200-0:811:1623","a:2:3252:209-0:811:1623","a:2:3281:3327-0:811:1623","b:2:3169-0:811:1623","b:2:3969-0:811:1623","b:2:2846-0:811:1623","b:2:2843-0:811:1623","b:2:3184-0:811:1623","b:2:3179-0:811:1623","b:2:3173-0:811:1623","b:5:787-0:811:1623","0:805","0:814","0:815","0:817","0:818","0:820","0:821","0:742","0:744"]}},"2:3459:116":{"id":"2:3459:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3460:210","2:3461:532"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:735":{"id":"0:735","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[142,0],"end":[142,40]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(any(target_os = \"haiku\", target_os = \"illumos\", target_os =\n\"netbsd\", target_os = \"redox\", target_os = \"solaris\",)))]"],"deprecation":null,"kind":"import","inner":{"source":"socket::InterfaceIndexOrAddress","name":"InterfaceIndexOrAddress","id":"0:784:1615","glob":false}},"0:835:593":{"id":"0:835:593","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[193,26],"end":[193,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3360:3224":{"id":"2:3360:3224","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3361:171","2:3362:939"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6078":{"id":"5:6078","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5898:1319","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6079:60449","5:6080:3184","5:6083:60450","5:6086:60451","5:6098:60452","5:6099:60453","5:6100:3300","5:6101:53827","5:6102:53828"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3172:1916":{"id":"2:3172:1916","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3146:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:754:1656":{"id":"0:754:1656","crate_id":0,"name":"ICMPV4","span":{"filename":"src/lib.rs","begin":[242,4],"end":[242,61]},"visibility":"public","docs":"Protocol corresponding to `ICMPv4`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:850:1670":{"id":"0:850:1670","crate_id":0,"name":"RecvFlags","span":{"filename":"src/lib.rs","begin":[272,0],"end":[272,28]},"visibility":"public","docs":"Flags for incoming messages.\n\nFlags provide additional information about incoming messages.","links":{},"attrs":["#[cfg(not(target_os = \"redox\"))]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:625","0:762","a:2:9222:9079-0:850:1670","a:2:9223:9078-0:850:1670","a:2:3240:200-0:850:1670","a:2:3252:209-0:850:1670","a:2:3281:3327-0:850:1670","b:2:3169-0:850:1670","b:2:3969-0:850:1670","b:2:2846-0:850:1670","b:2:2843-0:850:1670","b:2:3184-0:850:1670","b:2:3179-0:850:1670","b:2:3173-0:850:1670","b:5:787-0:850:1670","0:628","0:853","0:854","0:856","0:857","0:859","0:860"]}},"2:3318:3212":{"id":"2:3318:3212","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3320:171","2:3321:879"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2848:53737":{"id":"2:2848:53737","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:758":{"id":"0:758","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[254,0],"end":[258,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"i32"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:759:669"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10538:9714":{"id":"2:10538:9714","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10539:146","2:10540:38808","2:10541:53739"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:785:2228":{"id":"0:785:2228","crate_id":0,"name":"Index","span":{"filename":"src/socket.rs","begin":[730,4],"end":[730,14]},"visibility":"default","docs":"An interface index.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"primitive","inner":"u32"}]}},"2:13440:59800":{"id":"2:13440:59800","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"`DoubleEndedIterator`":"2:8411:120","prim@char":"1:15856:3073","str::matches":"1:15862:3078","self::pattern":"2:12997:10014"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49542:10337","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:10017","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13369:2722":{"id":"2:13369:2722","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12468:10452"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3153:216":{"id":"2:3153:216","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3155:127","2:3156:1394"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6099:60453":{"id":"5:6099:60453","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:432:9094","`String`":"5:8354:205"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:9094","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8092:9403","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13483:53831":{"id":"2:13483:53831","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13453:59805":{"id":"2:13453:59805","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:623":{"id":"0:623","crate_id":0,"name":null,"span":{"filename":"src/sys/unix.rs","begin":[252,0],"end":[334,1]},"visibility":{"restricted":{"parent":"0:368:1604","path":"::sys"}},"docs":"Unix only API.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:823:894":{"id":"0:823:894","crate_id":0,"name":"ne","span":{"filename":"src/lib.rs","begin":[153,26],"end":[153,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:768":{"id":"0:768","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[294,0],"end":[298,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"MaybeUninitSlice","id":"0:764:1680","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:770:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13027:10018":{"id":"2:13027:10018","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:10017","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:741:1631":{"id":"0:741:1631","crate_id":0,"name":"for_address","span":{"filename":"src/lib.rs","begin":[164,4],"end":[169,5]},"visibility":"public","docs":"Returns the correct domain for `address`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["address",{"kind":"resolved_path","inner":{"name":"SocketAddr","id":"1:11135:1581","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10493:142":{"id":"2:10493:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10494:703","2:10496:54085"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2843-0:837:1654":{"id":"b:2:2843-0:837:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:3143"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3372:3222":{"id":"2:3372:3222","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3374:171","2:3375:342"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3146:135":{"id":"2:3146:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3148:669"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:745:669":{"id":"0:745:669","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[179,4],"end":[181,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["d",{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"c_int","id":"20:63:1606","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13419:59796":{"id":"2:13419:59796","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"str::split":"1:15862:3078","self::pattern":"2:12997:10014","prim@char":"1:15856:3073","`DoubleEndedIterator`":"2:8411:120","str::rsplit_terminator":"1:15862:3078"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49370:10329","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3173-0:837:1654":{"id":"b:2:3173-0:837:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:2576:127":{"id":"1:2576:127","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2577:55853","1:2579:3061","1:2580:55854","1:2581:55855","1:2582:55856"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10262:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13460:59809":{"id":"2:13460:59809","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:12997:10014","prim@char":"1:15856:3073"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13428:56037":{"id":"2:13428:56037","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"2:12997:10014","str::splitn":"1:15862:3078","prim@char":"1:15856:3073"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49442:9428","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:10017","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13396:56040":{"id":"2:13396:56040","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:12997:10014","prim@char":"1:15856:3073"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:811:1623":{"id":"b:5:787-0:811:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:9288","5:790:9289","5:791:9290"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9222:9079-0:863:1690":{"id":"a:2:9222:9079-0:863:1690","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:9079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"TcpKeepalive","id":"0:863:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2845:3143":{"id":"2:2845:3143","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10276:9315":{"id":"2:10276:9315","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10277:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4711:3274":{"id":"1:4711:3274","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4712:57969","1:4713:57970","1:4714:57971","1:4716:3273","1:4717:57972","1:4719:56030","1:4720:10832"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"1:4629:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2846-0:824:1636":{"id":"b:2:2846-0:824:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:9401","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:53737"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:747:1639":{"id":"0:747:1639","crate_id":0,"name":"STREAM","span":{"filename":"src/lib.rs","begin":[200,4],"end":[200,52]},"visibility":"public","docs":"Type corresponding to `SOCK_STREAM`.\n\nUsed for protocols such as TCP.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"5:6086:60451":{"id":"5:6086:60451","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8354:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:3327-0:811:1623":{"id":"a:2:3281:3327-0:811:1623","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:815":{"id":"0:815","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[153,15],"end":[153,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:816:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8326:10170":{"id":"2:8326:10170","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8328:9280"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:784:1615":{"id":"0:784:1615","crate_id":0,"name":"InterfaceIndexOrAddress","span":{"filename":"src/socket.rs","begin":[728,0],"end":[733,1]},"visibility":"public","docs":"A local interface specified by its index or an address assigned to it.\n\n`Index(0)` and `Address(Ipv4Addr::UNSPECIFIED)` are equivalent and indicate\nthat an appropriate interface should be selected by the system.","links":{},"attrs":["#[cfg(not(any(target_os = \"haiku\", target_os = \"illumos\", target_os =\n\"netbsd\", target_os = \"redox\", target_os = \"solaris\",)))]"],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:785:2228","0:788:2230"],"impls":[]}},"2:4750:9981":{"id":"2:4750:9981","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4751:9236","2:4752:59210","2:4753:9239"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13472:59811":{"id":"2:13472:59811","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:12997:10014","prim@char":"1:15856:3073"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:837:1654":{"id":"b:2:3179-0:837:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13486:9675":{"id":"2:13486:9675","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15856:3073"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49628:9676","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:824:1636":{"id":"0:824:1636","crate_id":0,"name":"Type","span":{"filename":"src/lib.rs","begin":[194,0],"end":[194,23]},"visibility":"public","docs":"Specification of communication semantics on a socket.\n\nThis is a newtype wrapper around an integer which provides a nicer API in\naddition to an injection point for documentation. Convenience constants such\nas [`Type::STREAM`], [`Type::DGRAM`], etc, are provided to avoid reaching\ninto libc for various constants.\n\nThis type is freely interconvertible with C's `int` type, however, if a raw\nvalue needs to be provided.","links":{"`Type::DGRAM`":"0:824:1636","`Type::STREAM`":"0:824:1636"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:623","0:746","a:2:9222:9079-0:824:1636","a:2:9223:9078-0:824:1636","a:2:3240:200-0:824:1636","a:2:3252:209-0:824:1636","a:2:3281:3327-0:824:1636","b:2:3169-0:824:1636","b:2:3969-0:824:1636","b:2:2846-0:824:1636","b:2:2843-0:824:1636","b:2:3184-0:824:1636","b:2:3179-0:824:1636","b:2:3173-0:824:1636","b:5:787-0:824:1636","0:807","0:827","0:828","0:830","0:831","0:833","0:834","0:749","0:751"]}},"0:837:1654":{"id":"0:837:1654","crate_id":0,"name":"Protocol","span":{"filename":"src/lib.rs","begin":[238,0],"end":[238,27]},"visibility":"public","docs":"Protocol specification used for creating sockets via `Socket::new`.\n\nThis is a newtype wrapper around an integer which provides a nicer API in\naddition to an injection point for documentation.\n\nThis type is freely interconvertible with C's `int` type, however, if a raw\nvalue needs to be provided.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:753","a:2:9222:9079-0:837:1654","a:2:9223:9078-0:837:1654","a:2:3240:200-0:837:1654","a:2:3252:209-0:837:1654","a:2:3281:3327-0:837:1654","b:2:3169-0:837:1654","b:2:3969-0:837:1654","b:2:2846-0:837:1654","b:2:2843-0:837:1654","b:2:3184-0:837:1654","b:2:3179-0:837:1654","b:2:3173-0:837:1654","b:5:787-0:837:1654","0:809","0:840","0:841","0:843","0:844","0:846","0:847","0:758","0:760"]}},"2:8363:136":{"id":"2:8363:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8365:672"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:814":{"id":"0:814","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[153,9],"end":[153,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3250:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3252:209-0:837:1654":{"id":"a:2:3252:209-0:837:1654","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:14183:9402":{"id":"2:14183:9402","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14184:55921","2:14185:55922","2:14186:55923","2:14187:55924","2:14188:55925","2:14189:55926","2:14190:9260"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:824:1636":{"id":"b:5:787-0:824:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:9288","5:790:9289","5:791:9290"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23655:10095":{"id":"2:23655:10095","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23656:10099"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23651:9636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3250:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:746":{"id":"0:746","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[196,0],"end":[216,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:747:1639","0:748:1643"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9223:9078-0:824:1636":{"id":"a:2:9223:9078-0:824:1636","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:9078","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:12936:9787":{"id":"2:12936:9787","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12937:126","2:12938:54668"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3184-0:863:1690":{"id":"b:2:3184-0:863:1690","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"TcpKeepalive","id":"0:863:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5832:9397":{"id":"5:5832:9397","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5834:171","5:5835:38562"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3173-0:811:1623":{"id":"b:2:3173-0:811:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6462:9649":{"id":"1:6462:9649","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6463:1987","1:6464:3623","1:6465:54004","1:6466:54005","1:6467:54006","1:6468:1992"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10562:9636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:857":{"id":"0:857","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[271,22],"end":[271,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2897:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:628":{"id":"0:628","crate_id":0,"name":null,"span":{"filename":"src/sys/unix.rs","begin":[403,0],"end":[411,1]},"visibility":{"restricted":{"parent":"0:368:1604","path":"::sys"}},"docs":null,"links":{},"attrs":["#[cfg(not(target_os = \"redox\"))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:629:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8330:10169":{"id":"2:8330:10169","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8332:8503"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:22961:21615":{"id":"2:22961:21615","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:22962:12652","2:22963:58198","2:22964:58199"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22954:9636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:783:211":{"id":"5:783:211","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:9288","5:785:9289","5:786:9290"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3969-0:764:1680":{"id":"b:2:3969-0:764:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"MaybeUninitSlice","id":"0:764:1680","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3240:200-0:837:1654":{"id":"a:2:3240:200-0:837:1654","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3969-0:850:1670":{"id":"b:2:3969-0:850:1670","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6101:53827":{"id":"5:6101:53827","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15862:3078"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13379:56003":{"id":"2:13379:56003","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13362:9232":{"id":"2:13362:9232","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13377:56002":{"id":"2:13377:56002","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:5778:9657":{"id":"1:5778:9657","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5779:58141","1:5780:58142","1:5781:58143","1:5782:58144"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3971:1408":{"id":"2:3971:1408","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:45892:9685","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5788:9658":{"id":"1:5788:9658","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5789:54324"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:831":{"id":"0:831","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[193,22],"end":[193,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2897:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:738":{"id":"0:738","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[156,0],"end":[170,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:739:1625","0:740:1628","0:741:1631"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3140:74":{"id":"2:3140:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3142:9225"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:8367:151":{"id":"2:8367:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8368:9236","2:8369:9237","2:8370:755"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3967:68":{"id":"2:3967:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3968:1408"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"a:2:3281:3327-0:837:1654":{"id":"a:2:3281:3327-0:837:1654","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:3327","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9223:9078-0:850:1670":{"id":"a:2:9223:9078-0:850:1670","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:9078","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:748:1643":{"id":"0:748:1643","crate_id":0,"name":"DGRAM","span":{"filename":"src/lib.rs","begin":[205,4],"end":[205,50]},"visibility":"public","docs":"Type corresponding to `SOCK_DGRAM`.\n\nUsed for protocols such as UDP.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"0:621":{"id":"0:621","crate_id":0,"name":null,"span":{"filename":"src/sys/unix.rs","begin":[206,0],"end":[232,1]},"visibility":{"restricted":{"parent":"0:368:1604","path":"::sys"}},"docs":"Unix only API.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:622:2682"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:726":{"id":"0:726","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[131,0],"end":[131,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"sockaddr::SockAddr","name":"SockAddr","id":"0:77:1607","glob":false}},"b:2:3179-0:863:1690":{"id":"b:2:3179-0:863:1690","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"TcpKeepalive","id":"0:863:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:773:907":{"id":"0:773:907","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[306,4],"end":[308,5]},"visibility":"public","docs":"Creates a new `MaybeUninitSlice` wrapping a byte slice.\n\n# Panics\n\nPanics on Windows if the slice is larger than 4GB.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"MaybeUninit","id":"2:32212:1579","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"MaybeUninitSlice","id":"0:764:1680","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6866:1951":{"id":"1:6866:1951","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6867:1597"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:752:669":{"id":"0:752:669","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[225,4],"end":[227,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"c_int","id":"20:63:1606","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8850:10075":{"id":"2:8850:10075","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"2:7891:10076","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2843-0:811:1623":{"id":"b:2:2843-0:811:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:3143"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2928:167":{"id":"2:2928:167","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2929:404","2:2930:2762","2:2931:2648","2:2932:2755"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2897:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2938:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10205:1945":{"id":"2:10205:1945","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10206:1509","2:10207:59122","2:10209:9161"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:753":{"id":"0:753","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[240,0],"end":[252,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:754:1656","0:755:1659","0:756:1662","0:757:1665"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3343:3220":{"id":"2:3343:3220","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3345:1335"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10897:203":{"id":"2:10897:203","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:10899:171","2:10900:2928","2:10901:56001","2:10902:56002","2:10903:56003","2:10904:740","2:10905:741"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:10888:9636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3250:106":{"id":"2:3250:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13457:59808":{"id":"2:13457:59808","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:12997:10014","prim@char":"1:15856:3073"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"2:13027:10018","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13410:56030":{"id":"2:13410:56030","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::split_whitespace":"1:15862:3078","prim@char":"1:15856:3073","str::rsplit":"1:15862:3078","self::pattern":"2:12997:10014","`DoubleEndedIterator`":"2:8411:120"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49320:3279","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3137:75":{"id":"2:3137:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3139:294"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:764:1680":{"id":"0:764:1680","crate_id":0,"name":"MaybeUninitSlice","span":{"filename":"src/lib.rs","begin":[292,0],"end":[292,59]},"visibility":"public","docs":"A version of [`IoSliceMut`] that allows the buffer to be uninitialised.\n\n[`IoSliceMut`]: std::io::IoSliceMut","links":{"std::io::IoSliceMut":"1:4647:1947"},"attrs":["#[repr(transparent)]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:771","a:2:9222:9079-0:764:1680","a:2:9223:9078-0:764:1680","a:2:3240:200-0:764:1680","a:2:3252:209-0:764:1680","a:2:3281:3327-0:764:1680","b:2:3169-0:764:1680","b:2:3969-0:764:1680","b:2:2846-0:764:1680","b:2:2843-0:764:1680","b:2:3184-0:764:1680","b:2:3179-0:764:1680","b:2:3173-0:764:1680","0:768","0:774","0:778"]}},"0:782:907":{"id":"0:782:907","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[339,4],"end":[347,5]},"visibility":"public","docs":"Returns a new, empty set of TCP keepalive parameters.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"TcpKeepalive","id":"0:863:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13381:9698":{"id":"2:13381:9698","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"str::slice_mut_unchecked":"1:15862:3078","crate::ops::Index":"2:3544:2228","`str`":"1:15862:3078"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13022:10017":{"id":"2:13022:10017","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13024:9226","2:13025:58808","2:13026:58809"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"2:13016:10016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:761:669":{"id":"0:761:669","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[261,4],"end":[263,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["p",{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"c_int","id":"20:63:1606","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:869":{"id":"0:869","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[328,16],"end":[328,21]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"TcpKeepalive","id":"0:863:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:870:397"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9222:9079-0:824:1636":{"id":"a:2:9222:9079-0:824:1636","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:9079","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:816:397":{"id":"0:816:397","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[153,15],"end":[153,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:856":{"id":"0:856","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[271,22],"end":[271,24]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3249:206","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3240:200-0:863:1690":{"id":"a:2:3240:200-0:863:1690","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"TcpKeepalive","id":"0:863:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:9222:9079":{"id":"2:9222:9079","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10266:9309":{"id":"2:10266:9309","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10267:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3779:3244":{"id":"2:3779:3244","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3367:3221":{"id":"2:3367:3221","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3369:171","2:3370:340"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6440:9635":{"id":"1:6440:9635","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6441:8594","1:6442:8595","1:6443:13594","1:6444:54579","1:6446:54583","1:6448:54580","1:6449:54581","1:6451:54582"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10562:9636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:808:648":{"id":"0:808:648","crate_id":0,"name":"fmt","span":{"filename":"src/sys/unix.rs","begin":[336,0],"end":[367,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"std::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"std::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3187:127":{"id":"2:3187:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38669:9680","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"0:729":{"id":"0:729","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[132,0],"end":[132,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"socket::Socket","name":"Socket","id":"0:188:1608","glob":false}},"0:842:397":{"id":"0:842:397","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[237,15],"end":[237,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:777:532":{"id":"0:777:532","crate_id":0,"name":"deref","span":{"filename":"src/lib.rs","begin":[314,4],"end":[316,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"MaybeUninit","id":"2:32212:1579","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3188:1394":{"id":"2:3188:1394","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5656:2652":{"id":"1:5656:2652","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5657:11299","1:5658:2722"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10562:9636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:763:1676":{"id":"0:763:1676","crate_id":0,"name":"is_truncated","span":{"filename":"src/lib.rs","begin":[283,4],"end":[285,5]},"visibility":"public","docs":"Check if the message contains a truncated datagram.\n\nThis flag is only used for datagram-based sockets,\nnot for stream sockets.\n\nOn Unix this corresponds to the `MSG_TRUNC` flag.\nOn Windows this corresponds to the `WSAEMSGSIZE` error code.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3483:3232":{"id":"2:3483:3232","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3484:567"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6098:60452":{"id":"5:6098:60452","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8354:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:791:9290":{"id":"5:791:9290","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13007:10013":{"id":"2:13007:10013","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13009:10016","2:13010:59001","2:13011:59002","2:13012:59003","2:13013:59005","2:13014:59004","2:13015:59006"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3184-0:837:1654":{"id":"b:2:3184-0:837:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13455:59806":{"id":"2:13455:59806","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:751":{"id":"0:751","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[224,0],"end":[228,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"c_int","id":"20:63:1606","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:752:669"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3240:200-0:764:1680":{"id":"a:2:3240:200-0:764:1680","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"MaybeUninitSlice","id":"0:764:1680","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:744":{"id":"0:744","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[178,0],"end":[182,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"c_int","id":"20:63:1606","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:745:669"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13387:2720":{"id":"2:13387:2720","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49306:3277","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13725:150":{"id":"2:13725:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13726:171","2:13727:150","2:13728:754"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2846-0:764:1680":{"id":"b:2:2846-0:764:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:9401","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"MaybeUninitSlice","id":"0:764:1680","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2848:53737"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3696:213":{"id":"2:3696:213","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3697:171","2:3698:3238","2:3699:674","2:3700:358"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"2:3701:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3696:213","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:188:1608":{"id":"0:188:1608","crate_id":0,"name":"Socket","span":{"filename":"src/socket.rs","begin":[72,0],"end":[74,1]},"visibility":"public","docs":"Owned wrapper around a system socket.\n\nThis type simply wraps an instance of a file descriptor (`c_int`) on Unix\nand an instance of `SOCKET` on Windows. This is the main type exported by\nthis crate and is intended to mirror the raw semantics of sockets on\nplatforms as closely as possible. Almost all methods correspond to\nprecisely one libc or OS API call which is essentially just a \"Rustic\ntranslation\" of what's below.\n\n## Converting to and from other types\n\nThis type can be freely converted into the network primitives provided by\nthe standard library, such as [`TcpStream`] or [`UdpSocket`], using the\n[`From`] trait, see the example below.\n\n[`TcpStream`]: std::net::TcpStream\n[`UdpSocket`]: std::net::UdpSocket\n\n# Notes\n\nSome methods that set options on `Socket` require two system calls to set\nthere options without overwriting previously set options. We do this by\nfirst getting the current settings, applying the desired changes and than\nupdating the settings. This means that the operation is **not** atomic. This\ncan lead to a data race when two threads are changing options in parallel.\n\n# Examples\n```no_run\n# fn main() -> std::io::Result<()> {\nuse std::net::{SocketAddr, TcpListener};\nuse socket2::{Socket, Domain, Type};\n\n// create a TCP listener bound to two addresses\nlet socket = Socket::new(Domain::IPV4, Type::STREAM, None)?;\n\nlet address: SocketAddr = \"[::1]:12345\".parse().unwrap();\nlet address = address.into();\nsocket.bind(&address)?;\nsocket.bind(&address)?;\nsocket.listen(128)?;\n\nlet listener: TcpListener = socket.into();\n// ...\n# drop(listener);\n# Ok(()) }\n```","links":{"std::net::TcpStream":"1:5374:1982","`From`":"2:3146:135","std::net::UdpSocket":"1:5501:2580"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:8843:9576":{"id":"2:8843:9576","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:7798:9778":{"id":"1:7798:9778","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7799:54200"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4018:9684":{"id":"2:4018:9684","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4019:55856"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6793:9635":{"id":"1:6793:9635","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6794:13595"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10562:9636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3143:149":{"id":"2:3143:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3145:1916"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3486:130":{"id":"2:3486:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3488:365"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3489:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3179-0:811:1623":{"id":"b:2:3179-0:811:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3184-0:764:1680":{"id":"b:2:3184-0:764:1680","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"MaybeUninitSlice","id":"0:764:1680","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5828:9396":{"id":"5:5828:9396","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5830:171","5:5831:421"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:3189","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:807":{"id":"0:807","crate_id":0,"name":null,"span":{"filename":"src/sys/unix.rs","begin":[336,0],"end":[367,1]},"visibility":{"restricted":{"parent":"0:368:1604","path":"::sys"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:808:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:849:894":{"id":"0:849:894","crate_id":0,"name":"ne","span":{"filename":"src/lib.rs","begin":[237,26],"end":[237,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13406:9231":{"id":"2:13406:9231","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"self::pattern":"2:12997:10014","`None`":"2:47356:166","prim@char":"1:15856:3073"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:10017","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3184-0:824:1636":{"id":"b:2:3184-0:824:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13482:53830":{"id":"2:13482:53830","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13469:59810":{"id":"2:13469:59810","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15856:3073","self::pattern":"2:12997:10014"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:10013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:10017","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:859":{"id":"0:859","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[271,26],"end":[271,35]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3248:207","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:867":{"id":"0:867","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[328,9],"end":[328,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"TcpKeepalive","id":"0:863:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:868:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:860":{"id":"0:860","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[271,26],"end":[271,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2892:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:861:593","0:862:894"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:790:1518":{"id":"0:790:1518","crate_id":0,"name":"0","span":{"filename":"src/socket.rs","begin":[732,12],"end":[732,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Ipv4Addr","id":"1:11189:1936","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"1:4704:3271":{"id":"1:4704:3271","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4705:57785","1:4706:3468","1:4707:57786","1:4708:57787"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3173-0:863:1690":{"id":"b:2:3173-0:863:1690","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"TcpKeepalive","id":"0:863:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3329:3214":{"id":"2:3329:3214","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3331:171","2:3332:1089"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3169-0:824:1636":{"id":"b:2:3169-0:824:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:1916"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3489:131":{"id":"2:3489:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3491:366"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3492:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:853":{"id":"0:853","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[271,9],"end":[271,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3250:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3411:3231":{"id":"2:3411:3231","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3413:1216"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3240:200-0:824:1636":{"id":"a:2:3240:200-0:824:1636","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Type","id":"0:824:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:629:648":{"id":"0:629:648","crate_id":0,"name":"fmt","span":{"filename":"src/sys/unix.rs","begin":[404,4],"end":[410,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"std::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"std::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:622:2682":{"id":"0:622:2682","crate_id":0,"name":"UNIX","span":{"filename":"src/sys/unix.rs","begin":[209,4],"end":[209,51]},"visibility":"public","docs":"Domain for Unix socket communication, corresponding to `AF_UNIX`.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"Domain","id":"0:811:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"default":"_"}},"2:14109:141":{"id":"2:14109:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14110:266","2:14111:507","2:14112:269","2:14113:1066"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13481:53829":{"id":"2:13481:53829","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3472:1582":{"id":"2:3472:1582","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3473:534"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"2:3459:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9223:9078-0:837:1654":{"id":"a:2:9223:9078-0:837:1654","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:9078","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:6962:3320":{"id":"1:6962:3320","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6963:54062"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5800:9660":{"id":"1:5800:9660","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5801:8982"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13391:59795":{"id":"2:13391:59795","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49584:10338","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13375:56001":{"id":"2:13375:56001","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47356:166"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3394:3227":{"id":"2:3394:3227","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3396:341"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3252:209-0:850:1670":{"id":"a:2:3252:209-0:850:1670","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"RecvFlags","id":"0:850:1670","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3175:669":{"id":"2:3175:669","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:844":{"id":"0:844","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[237,22],"end":[237,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2897:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Protocol","id":"0:837:1654","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2897:124":{"id":"2:2897:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2892:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"paths":{"1:14516:1946":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"6:3997:6676":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"20:5412:7332":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"6:5292:7322":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:4436:3298":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"16:6949:11182":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"20:3854:6664":{"crate_id":20,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"20:4075:6687":{"crate_id":20,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"5:4301:9421":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"20:655:1817":{"crate_id":20,"path":["libc","unix","linux_like","sa_family_t"],"kind":"typedef"},"12:0:3053":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"1:11224:12939":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"16:5580:10867":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"16:7467:10968":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:4695:10149":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"20:3873:6666":{"crate_id":20,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"6:670:3784":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:50309:9681":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"16:3392:11154":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:2031:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"6:4478:6725":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"15:230:10804":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"6:4183:6696":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"6:1690:4584":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"20:5363:7326":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:5547:2659":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"16:7843:11045":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"20:934:2126":{"crate_id":20,"path":["libc","unix","linux_like","MSG_OOB"],"kind":"constant"},"1:9177:13588":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"1:1463:9721":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:51174:10112":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:50888:12849":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"20:5451:7334":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"20:1609:4578":{"crate_id":20,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"20:137:1666":{"crate_id":20,"path":["libc","unix","IPPROTO_UDP"],"kind":"constant"},"20:1728:1820":{"crate_id":20,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:10095:11309":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:12456:11924":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"17:10656:11693":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:3149:217":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"16:6208:11014":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:24411:10384":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"2:1942:1578":{"crate_id":2,"path":["core","mem"],"kind":"module"},"17:9849:60901":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"6:1602:4577":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"16:4922:12411":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:10262:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"16:3218:11145":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"6:5407:7330":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"16:6101:10962":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:12059:9237":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"20:1047:2480":{"crate_id":20,"path":["libc","unix","linux_like","IPV6_MULTICAST_HOPS"],"kind":"constant"},"20:6092:7734":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:10650:16475":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:47703:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"20:4339:6711":{"crate_id":20,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:23655:10095":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:1450:9720":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:11378:11233":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:11931:9773":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:12179:9824":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:3252:209":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:15335:55990":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:12795:11984":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"20:4393:6716":{"crate_id":20,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:0:1310":{"crate_id":1,"path":["std"],"kind":"module"},"2:49211:9422":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:11847:11810":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"9:1056:10713":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:11767:11787":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"20:1564:4574":{"crate_id":20,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"12:2309:12652":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"5:3336:10505":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"16:7884:10974":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:13574:12243":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"5:3295:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:9344:10013":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:3146:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"20:5945:4514":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:9943:60896":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"16:5790:10879":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:11932:11818":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:6691:11027":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:10801:13530":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:13835:9772":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"17:11915:11812":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:51005:10111":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"12:2331:9703":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"6:0:785":{"crate_id":6,"path":["libc"],"kind":"module"},"6:6812:8246":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"20:81:3367":{"crate_id":20,"path":["libc","unix","DIR"],"kind":"enum"},"2:10538:9714":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:2576:127":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"20:4379:3032":{"crate_id":20,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:9768:11480":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"16:7856:11046":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"6:6614:3704":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"16:3488:11150":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"20:1614:4579":{"crate_id":20,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"5:8299:10415":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"20:3964:6520":{"crate_id":20,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"5:3043:13916":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"6:5528:6580":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:1665:4582":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:6790:9633":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"17:13780:12315":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:5933:9957":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:9659:60902":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:4431:6720":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:13906:59158":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"20:598:3754":{"crate_id":20,"path":["libc","unix","sigval"],"kind":"struct"},"6:4272:6703":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"16:7146:11032":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:13282:12167":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:4707:10150":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"20:1555:1819":{"crate_id":20,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"5:1195:59646":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:4637:3262":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"2:49061:10323":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:15042:9692":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"6:6091:7733":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:46288:10475":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:48496:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:49881:10029":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:12154:9925":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:47356:166":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:56055:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:9729:60895":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:2181:9710":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"1:8842:13588":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"2:57312:12927":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:14233:9300":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:48444:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"5:6667:10515":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"5:69:10550":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"20:5284:7322":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:46663:10171":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:49388:10330":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:11434:11749":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:11388:9431":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"20:6168:7738":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:13760:12309":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:1156:13576":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"16:3018:11141":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:11355:3202":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:12982:12037":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:3402:3229":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"16:7971:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:7335:176":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"20:5220:7318":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:49149:9415":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:9636:13982":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"17:13172:12138":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"20:4119:6692":{"crate_id":20,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:3506:11149":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"20:1709:4587":{"crate_id":20,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:6700:8914":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"0:850:1670":{"crate_id":0,"path":["socket2","RecvFlags"],"kind":"struct"},"17:10117:11311":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"5:7628:10556":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"16:5421:10856":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:3725:9984":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:9440:11681":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:6940:3321":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:14109:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"16:7295:10984":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:2773:11163":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:4475:3294":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:14686:9777":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"6:6085:7732":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"9:927:45039":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"6:569:3752":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:23008:10099":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"20:6083:7733":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"12:1144:9732":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"17:510:13497":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:4345:9237":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:13746:12303":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"6:4127:6692":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"5:8284:10571":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:50040:10352":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:8976:9744":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:13873:9774":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:49488:10334":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:46364:10416":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:13698:9781":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"5:4694:11436":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:12208:11867":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:12003:53910":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"1:15871:3085":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"12:2045:9712":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"1:11189:1936":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"2:46834:13079":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:46235:10472":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"16:3287:11148":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:3459:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:11794:11796":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"12:747:9420":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:22582:59089":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"20:3897:6668":{"crate_id":20,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:11678:11772":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"18:774:11593":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"16:5029:12414":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:15861:3077":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:8330:10169":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:3742:3243":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:49320:3279":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"9:963:10718":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:11122:3279":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:24717:10389":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:6864:1950":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:10558:13520":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:56029:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:38732:3328":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:2314:11276":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:13963:12362":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"5:1648:9722":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"16:6569:11171":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:47535:9421":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"6:4347:6711":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"20:5122:7270":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:11402:9429":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"20:625:3758":{"crate_id":20,"path":["libc","unix","protoent"],"kind":"struct"},"17:13054:12095":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"20:603:3755":{"crate_id":20,"path":["libc","unix","itimerval"],"kind":"struct"},"6:1527:2663":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:12195:11865":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"12:2039:9711":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:13154:12133":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"5:6252:10555":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:2175:9709":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"11:0:3052":{"crate_id":11,"path":["adler"],"kind":"module"},"2:51864:10146":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"16:3522:11605":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"12:354:13044":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:48903:10490":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:46879:13082":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"6:4073:6686":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:46643:3276":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:4686:1945":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:3351:3217":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:11374:9428":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"20:956:2441":{"crate_id":20,"path":["libc","unix","linux_like","IP_TTL"],"kind":"constant"},"17:13119:12132":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:5955:9959":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:49723:10019":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"6:6124:7736":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:3318:3212":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:10071:11315":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:48907:9407":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"16:4762:12406":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:3281:3327":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"20:4298:6707":{"crate_id":20,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:0:3057":{"crate_id":17,"path":["object"],"kind":"module"},"2:47787:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:10574:55985":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"12:840:9720":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"17:10516:11248":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:5221:7317":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"20:1576:4575":{"crate_id":20,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:8391:9799":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"6:6176:7738":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:2937:169":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:48693:9799":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:12182:11864":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:49424:9430":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"12:2303:12651":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:46612:10178":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"17:9088:46970":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"6:6887:6857":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"6:4164:6695":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:11129:3280":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"6:1736:1820":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:3313:3215":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:15361:10813":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:7978:11463":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"20:6628:8105":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:5855:10881":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:46543:10172":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"5:5783:11431":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:8846:9577":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:9731:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"18:667:11341":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"16:2866:11138":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"20:6649:2282":{"crate_id":20,"path":["libc","unix","linux_like","linux","arch","generic","SO_OOBINLINE"],"kind":"constant"},"17:12307:11883":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:23930:13056":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"9:722:10655":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"2:51554:10120":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"18:885:11334":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"20:6077:7732":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:49112:9413":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:49906:10031":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"6:157:3427":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"13:0:3047":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:46204:10477":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"6:4262:6702":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"6:4215:6699":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:4629:1944":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:48656:9738":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:12065:9758":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:299:13496":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:15191:9643":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:3308:3210":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:5722:9654":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:10403:11245":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"18:739:13493":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"16:0:3056":{"crate_id":16,"path":["gimli"],"kind":"module"},"6:3957:6672":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"20:5392:7329":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:10819:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"6:4046:6682":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:4473:3293":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:14987:9783":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:27932:10194":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:4852:10268":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:10420:11272":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"14:189:13558":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:11319:9427":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:607:13498":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:2437:13583":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"16:4641:12402":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:3701:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:49130:9416":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:13912:12351":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:5800:9660":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"20:3884:6667":{"crate_id":20,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"5:1689:10611":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:50028:10348":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"17:294:13495":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"20:4387:3034":{"crate_id":20,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"20:980:2413":{"crate_id":20,"path":["libc","unix","linux_like","IP_MULTICAST_IF"],"kind":"constant"},"2:47577:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:1161:16476":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:9332:11232":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"16:5927:10884":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"20:0:785":{"crate_id":20,"path":["libc"],"kind":"module"},"2:12444:10488":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:10936:9819":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"16:4350:12394":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:12174:9931":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:46464:10158":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"6:5548:7365":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"6:5459:7334":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"6:1676:4583":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:52230:10118":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:47661:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:14000:12369":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"16:4734:12405":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"12:1200:10784":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:10864:11725":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:47543:9237":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"20:3910:6669":{"crate_id":20,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"20:4104:6690":{"crate_id":20,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:51453:10125":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:11287:3201":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:12685:11962":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:12189:2657":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:56016:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:9063:9926":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"20:4207:6699":{"crate_id":20,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:3143:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:45972:10259":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"6:4013:6678":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"20:1682:4584":{"crate_id":20,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:12247:11872":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:10317:11231":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:11616:11764":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:22603:59091":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:4401:6716":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:2166:9707":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:2274:9534":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"16:7360:184":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"17:13978:12363":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:13637:12259":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"1:8030:9859":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"17:12946:12006":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:11612:9805":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:9715:9904":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"6:6200:7740":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:4357:9895":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:3411:3231":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"20:1864:1821":{"crate_id":20,"path":["libc","unix","linux_like","linux","socklen_t"],"kind":"typedef"},"1:897:9840":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:2462:13585":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"3:300:195":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"20:1594:4577":{"crate_id":20,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"20:1055:2515":{"crate_id":20,"path":["libc","unix","linux_like","IPV6_V6ONLY"],"kind":"constant"},"2:4932:9381":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"20:4044:6683":{"crate_id":20,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"20:4369:6715":{"crate_id":20,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"6:1547:1600":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"20:6643:2249":{"crate_id":20,"path":["libc","unix","linux_like","linux","arch","generic","SO_ERROR"],"kind":"constant"},"5:2548:10619":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"5:4594:11434":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"1:15251:2579":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"20:4015:6679":{"crate_id":20,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"12:2032:9710":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:2793:9679":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:24025:44297":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:11937:171":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"20:5514:7364":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:9065:46969":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"6:5185:7314":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:51679:12858":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"16:4417:12396":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:11077:9420":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"9:749:10656":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"17:4157:11296":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:45920:10079":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:3315:9509":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"20:6043:4515":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"20:4233:6701":{"crate_id":20,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"17:2484:47057":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:53338:12914":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:3137:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"6:3978:6674":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"5:3324:9420":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:48392:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"20:5183:7315":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:50909:12850":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"20:1532:4573":{"crate_id":20,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:15606:11491":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"5:3965:11431":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"5:8107:10605":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:11336:9958":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:11738:11778":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"20:1525:2821":{"crate_id":20,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:10805:9662":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"16:3241:11146":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:4647:1947":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"18:801:11327":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"16:5960:10886":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"5:3370:10506":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"6:1540:4573":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"6:5414:7331":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:10258:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"17:12408:11919":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"12:937:9726":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"17:12040:11838":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:50044:10356":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:10266:9309":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:5347:7324":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:8477:192":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:9223:9078":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:6252:11016":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"6:5522:7364":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:10607:9300":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:50036:10353":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"5:8092:9403":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"1:12671:11486":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:10264:9310":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"12:2005:9420":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:9066:9827":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:10200:13513":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"20:4125:6693":{"crate_id":20,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:3377:3223":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:49296:10325":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"6:4425:6719":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:11604:11761":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"9:157:10670":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"16:7264:10982":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:13453:12207":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:22997:9636":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"6:5978:7729":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"6:6858:6853":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:13609:12251":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"5:1235:10614":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"12:2315:60881":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"6:5371:7326":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:11162:1815":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"2:48672:9980":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:10635:11691":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:46412:11453":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:12114:9761":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:7930:1980":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"20:4323:2738":{"crate_id":20,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"20:5970:7729":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:12521:11933":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"6:4112:6690":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"6:6881:6856":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:13933:12357":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:12168:11697":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:37488:168":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:3323:3211":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:11595:9420":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"16:6605:10981":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"6:4023:6679":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"16:7279:11187":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:2265:10083":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:13334:1608":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"20:518:2795":{"crate_id":20,"path":["libc","unix","timeval"],"kind":"struct"},"16:7453:10967":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"6:1572:4574":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"6:1533:2821":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:13620:12252":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"16:7406:10970":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:2159:9420":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:8143:9745":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:13836:13572":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"5:5870:11440":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"2:7633:9245":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"6:5987:7730":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:12669:9868":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:46534:10164":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:46274:10342":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"5:994:10604":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:12209:3247":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:6866:1951":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:5152:3331":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:3074:9636":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"6:543:3751":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"9:776:10700":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"2:2753:568":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:3548:3233":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:3343:3220":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:6793:9635":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:4523:6730":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"6:4095:6688":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"14:244:13042":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:46622:10179":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"16:4704:12404":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:10635:16473":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"20:5990:7731":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:12494:11929":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:4711:3274":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:13377:12190":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:51531:10117":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:13520:12229":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:13540:12235":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:5006:10271":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"16:6072:10985":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"20:6804:8246":{"crate_id":20,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"6:4040:6681":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:10950:13537":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"16:5595:10868":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:49470:10333":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:11135:1581":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"17:12155:11860":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:542:10901":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"12:968:9728":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"16:5561:10866":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"20:3970:6674":{"crate_id":20,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:46482:10160":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:53453:12919":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:3615:3235":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"16:7738:11043":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:13898:12344":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:49185:9404":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"20:4441:6722":{"crate_id":20,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"6:4005:6677":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"15:248:10805":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"16:6620:11169":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:13222:13571":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"5:432:9094":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:14152:3295":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:9264:11675":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:2892:173":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:48703:13085":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:53113:10104":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:10272:179":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"20:4273:6704":{"crate_id":20,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"5:5088:648":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"17:9961:13507":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"6:6106:7735":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:13590:12246":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"1:8484:9756":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:11304:46975":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:5078:9382":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"16:6176:11013":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"20:4285:6705":{"crate_id":20,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"16:4995:12413":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:5984:9963":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"17:9034:46968":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:52021:10141":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:8367:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:1045:9672":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:1021:9859":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:46151:13066":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:51759:12860":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"20:935:2158":{"crate_id":20,"path":["libc","unix","linux_like","MSG_PEEK"],"kind":"constant"},"6:4281:6704":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:38669:9680":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:47457:9076":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:2366:589":{"crate_id":1,"path":["std","env"],"kind":"module"},"6:4060:6684":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:11118:46974":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"7:85:44942":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:12085:9759":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"5:3946:9708":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"20:5671:1640":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","SOCK_STREAM"],"kind":"constant"},"20:4509:6729":{"crate_id":20,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:13554:12237":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:13318:12172":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:5123:10277":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"20:982:2421":{"crate_id":20,"path":["libc","unix","linux_like","IP_MULTICAST_LOOP"],"kind":"constant"},"2:49229:9423":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:24615:10387":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"6:88:3367":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"16:6366:10802":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:11993:11832":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"20:5540:7365":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"6:4133:6693":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:46227:10343":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"20:6850:6853":{"crate_id":20,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"20:5304:7323":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:5656:2652":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:8928:9939":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"6:4325:6709":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:51727:12859":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"5:7368:9237":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:12598:11945":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:2399:13581":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"16:6087:10964":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"20:4423:6720":{"crate_id":20,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:51092:10136":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"16:6554:11023":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"18:712:3332":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"5:1838:11431":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:15880:3094":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:2512:11274":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:11360:9430":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:3153:216":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:11165:3198":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"16:6032:10897":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:14012:9982":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:51579:10102":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:6962:3320":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:10673:47157":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:7444:175":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:52261:10121":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:14019:11487":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"16:3172:11143":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:15326:12959":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:3190:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"20:1050:2475":{"crate_id":20,"path":["libc","unix","linux_like","IPV6_DROP_MEMBERSHIP"],"kind":"constant"},"2:12678:10328":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"12:2025:9709":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"20:6856:6854":{"crate_id":20,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"0:764:1680":{"crate_id":0,"path":["socket2","MaybeUninitSlice"],"kind":"struct"},"2:51143:10124":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:3483:3232":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:11030:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"18:782:11593":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:3329:3214":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"14:250:12605":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:9591:11477":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"6:599:2264":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"6:4066:6685":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:15822:54049":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:9839:11246":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:24128:10403":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"20:5461:7335":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:2187:9711":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"5:3877:3289":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:699:9836":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:10061:13511":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:12442:11922":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:12004:11459":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"1:3522:3285":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"5:3767:9421":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:2381:9537":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:11980:9777":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"16:6021:11136":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"20:6891:6859":{"crate_id":20,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"12:160:10786":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"6:5386:7328":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"6:1700:4585":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"5:8146:9237":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"12:877:9708":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"2:8436:9092":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:4018:9684":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"17:13205:12149":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"5:1669:9724":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:15350:10813":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:45673:3242":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"20:5233:7298":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"14:11:13558":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:8642:9917":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"18:820:11329":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:2751:9678":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"20:6647:2294":{"crate_id":20,"path":["libc","unix","linux_like","linux","arch","generic","SO_RCVBUF"],"kind":"constant"},"17:11726:11777":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:48664:13084":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:11056:3304":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"5:1215:10613":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:11539:11757":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:51255:12853":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:14526:54083":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:24093:13060":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"6:6239:7743":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"16:6591:11025":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:12327:11884":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:10041:13509":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:4397:3296":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:49524:10336":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"20:536:3751":{"crate_id":20,"path":["libc","unix","rusage"],"kind":"struct"},"1:4794:1580":{"crate_id":1,"path":["std","net"],"kind":"module"},"1:6462:9649":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"5:8432:9708":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"18:169:53261":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:24581:10386":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"17:10887:11726":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"9:603:45114":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:45783:188":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"6:1622:4579":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"12:1180:10783":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"5:1630:9720":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:12712:11966":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"9:469:45045":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"12:2018:9708":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"1:2170:9708":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"1:1486:9708":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"12:181:10790":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"5:7439:11431":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:47406:9421":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"17:12275:11876":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"16:6768:11178":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:1153:13574":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:32378:59116":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"12:463:60882":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:11159:11739":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"20:6862:6855":{"crate_id":20,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"20:4254:6702":{"crate_id":20,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:51404:10140":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"16:7342:11000":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"5:4438:9420":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:45645:3245":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"20:4185:6697":{"crate_id":20,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:47527:9420":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:11406:3322":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:11665:11771":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"20:5339:7324":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"5:3331:9710":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"20:6606:3704":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"12:812:9724":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"5:8354:205":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"12:1688:10797":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:48377:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"2:51069:10132":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:47745:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:6085:2654":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:10374:13597":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"6:4293:6705":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"16:5707:10871":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"2:52104:10126":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:22954:9636":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"17:12431:11920":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:5953:4514":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"20:4032:6681":{"crate_id":20,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:14801:11488":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:10699:3275":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"1:8292:9859":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"5:7766:223":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:10276:9315":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:51602:10105":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"5:1934:9708":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"2:53238:10107":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:3249:206":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:10106:11310":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"1:9624:13981":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"1:3358:1816":{"crate_id":1,"path":["std","io"],"kind":"module"},"17:11835:11807":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"16:7236:11040":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:11653:11770":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:48133:9316":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"20:154:3428":{"crate_id":20,"path":["libc","unix","fpos_t"],"kind":"enum"},"6:6636:8105":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:3699:3288":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:49844:10028":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:4888:10269":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"20:134:1657":{"crate_id":20,"path":["libc","unix","IPPROTO_ICMP"],"kind":"constant"},"1:9464:57946":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:53312:12912":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"9:234:10678":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"11:46:12656":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"20:6147:7737":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:15859:3075":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:22550:58997":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"17:10407:11273":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"16:6964:9075":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"16:6636:10983":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"6:632:3758":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:46653:10181":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"20:4025:6680":{"crate_id":20,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:48711:13086":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"5:6683:10527":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:7510:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"17:11640:11768":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:1476:9707":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:2139:1284":{"crate_id":2,"path":["core","mem","size_of"],"kind":"function"},"17:10926:13535":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"20:592:2264":{"crate_id":20,"path":["libc","unix","linger"],"kind":"struct"},"16:7477:10989":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"6:4439:6721":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"20:1588:4576":{"crate_id":20,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"20:5997:3535":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"5:2772:10618":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:12568:11940":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"6:4410:6717":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:3967:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:49594:10339":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:10204:195":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"6:1630:4580":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:4506:12399":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:9600:60897":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"17:12771:11974":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:53323:12913":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:6698:8912":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"16:7226:11039":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"20:4486:6726":{"crate_id":20,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:46473:10159":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"16:6152:10966":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:14817:11489":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:13733:12297":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:8127:58348":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"20:6646:2326":{"crate_id":20,"path":["libc","unix","linux_like","linux","arch","generic","SO_SNDBUF"],"kind":"constant"},"1:11049:3302":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"16:5505:10863":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"16:3195:11144":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"17:8929:46966":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:10279:11225":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:4719:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:46859:3303":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"16:7158:11033":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"20:504:3747":{"crate_id":20,"path":["libc","unix","group"],"kind":"struct"},"17:13041:12089":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"5:6759:3262":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"16:3064:11199":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:3492:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"16:3320:11201":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:45913:10078":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"1:15877:3091":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"1:10563:9837":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:13240:12153":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:11045:46973":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:13258:12161":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:13348:12183":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:53257:12907":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"9:1075:10721":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:2460:13584":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:3779:3244":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"20:512:3748":{"crate_id":20,"path":["libc","unix","utimbuf"],"kind":"struct"},"16:2816:11156":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:8902:46965":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"20:6641:2315":{"crate_id":20,"path":["libc","unix","linux_like","linux","arch","generic","SO_REUSEADDR"],"kind":"constant"},"5:8330:10573":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:14509:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"16:7303:11042":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"6:4120:6691":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:3918:6669":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:5001:10270":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"15:269:10809":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:9809:60898":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:13027:10018":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:11267:3200":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"17:12645:11959":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"5:1486:9733":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:15854:3071":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"20:6915:8272":{"crate_id":20,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"5:5832:9397":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"16:7024:11185":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"6:4341:6710":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"12:784:9723":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:5175:9385":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"5:7252:11431":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"20:955:2454":{"crate_id":20,"path":["libc","unix","linux_like","IP_TOS"],"kind":"constant"},"1:14949:2657":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"6:3945:6670":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"16:6110:11005":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:11779:11790":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"12:976:9729":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"5:5828:9396":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:56003:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:8070:3302":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"6:5241:7298":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"20:136:1663":{"crate_id":20,"path":["libc","unix","IPPROTO_TCP"],"kind":"constant"},"20:6060:4518":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:13429:12199":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:10268:9316":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"5:2325:10615":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:5963:9960":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"16:3091:11200":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"8:0:3049":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:3372:3222":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:10468:11244":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"18:811:11328":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:1236:13499":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"6:1729:2719":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:11099:3275":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:49637:10343":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:13022:10017":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:11337:11235":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"16:5384:10854":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:8326:10170":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"20:6213:7742":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"20:6098:7735":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:5469:7335":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:1505:9725":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"9:41:10703":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"1:11601:9804":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:6401:10165":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"20:1715:4588":{"crate_id":20,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:3713:3240":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"20:6116:7736":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"16:2968:11140":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"20:1736:4589":{"crate_id":20,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:23556:9665":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"16:5295:45390":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:15827:16477":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:14479:13104":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"16:5672:10870":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:10837:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:10224:13515":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"6:5191:7315":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"6:1717:4587":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:4263:3305":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"16:6219:11015":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"6:6893:6858":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"11:54:10772":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"2:32278:59117":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"2:46314:10233":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:2938:174":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"5:0:266":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:52447:10127":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:1522:9727":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"18:650:11336":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:11101:9421":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:11192:1941":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"14:194:45313":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:46252:9676":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:13446:12206":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:12662:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"1:11329:1581":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:3075:10081":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"5:1472:9731":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:10888:9636":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:13851:13924":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"6:616:3756":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:24683:10388":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:6856:10168":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:10493:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"6:531:3749":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"5:923:10603":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:11384:3535":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"6:3892:6667":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"20:5266:7320":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"20:4503:6728":{"crate_id":20,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:23999:12750":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:22802:9636":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"18:866:11333":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"20:866:1629":{"crate_id":20,"path":["libc","unix","linux_like","AF_INET6"],"kind":"constant"},"2:2251:9535":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:8491:9757":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"20:63:1606":{"crate_id":20,"path":["libc","unix","c_int"],"kind":"typedef"},"20:4137:6694":{"crate_id":20,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:14492:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"6:5379:7327":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"12:866:9707":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:53361:12915":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:46492:10161":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:6597:59209":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"2:5594:766":{"crate_id":2,"path":["core","iter"],"kind":"module"},"16:7185:11035":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:7258:13587":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:9404:11680":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:6202:2655":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:3367:3221":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:10673:17483":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:7618:9768":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:10912:13531":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"16:7195:11036":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:11347:9913":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:12537:11935":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:12229:3248":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"14:56:11751":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"5:3035:12740":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:3398:3228":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:50934:10143":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:49619:10342":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:6322:2656":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:15872:3086":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:9726:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:13884:12342":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:49220:9425":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:4360:9896":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:13924:12353":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"6:624:3757":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"5:1592:9420":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:10477:11243":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"20:5247:7299":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:7719:10157":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"12:761:9421":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:10458:11641":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:11962:11826":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"16:2733:10891":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:13685:12296":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:49338:9426":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:5568:10086":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:9769:60900":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"16:5941:179":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:48383:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"6:6910:6860":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:3355:3219":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:22806:9664":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"20:562:3752":{"crate_id":20,"path":["libc","unix","hostent"],"kind":"struct"},"2:50220:180":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"16:4386:12395":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:3645:3281":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:12184:9825":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:5374:1982":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"16:7216:11038":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:11199:11740":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:24100:10445":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"16:6014:11010":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:46572:10174":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:48140:9317":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"5:1457:9732":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"16:7073:11031":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"16:5996:11009":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"6:5312:7323":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"6:4470:6724":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"5:3034:59608":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:10845:9888":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"20:4333:6710":{"crate_id":20,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:47389:9236":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"5:6406:212":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"16:3041:11142":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"17:13356:12186":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:13819:12323":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"16:5488:10862":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:7821:10197":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:6166:11012":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:13394:12193":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"6:6899:6859":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:9649:13501":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"20:1700:4586":{"crate_id":20,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:13801:177":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:4448:12397":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"6:6923:8272":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:3544:2228":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"17:12480:11927":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"16:6491:11021":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"20:5406:7331":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:12632:11958":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:5132:9384":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"17:3743:11289":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"20:5420:7333":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:10844:11246":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"20:4264:6703":{"crate_id":20,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"16:6269:11017":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"20:662:3784":{"crate_id":20,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:46600:10177":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"20:4356:6713":{"crate_id":20,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"5:5884:11443":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"2:8411:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:10503:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"16:3338:10888":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"20:1622:4580":{"crate_id":20,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:6718:11174":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"16:6731:11175":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:3258:2581":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"5:6949:10503":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"20:5520:6580":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"16:5766:10878":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:11065:1946":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"6:5969:3626":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"6:4203:6698":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:10611:13526":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"20:6659:2304":{"crate_id":20,"path":["libc","unix","linux_like","linux","arch","generic","SO_RCVTIMEO"],"kind":"constant"},"17:11277:11741":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"5:5604:1288":{"crate_id":5,"path":["alloc","slice"],"kind":"module"},"1:4570:3303":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"16:5407:10855":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:9689:60894":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"6:4033:6680":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"5:3365:9709":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:3246:3325":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"0:811:1623":{"crate_id":0,"path":["socket2","Domain"],"kind":"struct"},"20:1650:4581":{"crate_id":20,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:52183:10114":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:11950:9775":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:11947:11822":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:7652:9770":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"1:11380:9634":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:24377:10383":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:24007:12751":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:13306:12169":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:11116:3277":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:48119:9309":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:3486:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:8565:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"6:4419:6718":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"16:7392:10972":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:11451:9789":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:23006:10100":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:13710:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"20:4038:6682":{"crate_id":20,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:13547:12236":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:11246:9433":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:823:11481":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"2:24513:10385":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"12:1235:10785":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"5:3483:9708":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:50297:9682":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:50060:10350":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:12715:10331":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"6:6935:2660":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"20:609:3756":{"crate_id":20,"path":["libc","unix","tms"],"kind":"struct"},"17:10975:13539":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:49198:9405":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:11169:9432":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:14183:9402":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"9:900:12707":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"16:2991:11151":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:45852:3234":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:13192:12144":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:47829:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:49159:9406":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:6028:4542":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:48480:9372":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"5:6470:9707":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"20:4058:6685":{"crate_id":20,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:10938:13536":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"16:3772:12389":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:10449:11484":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"6:4501:6727":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"20:617:3757":{"crate_id":20,"path":["libc","unix","servent"],"kind":"struct"},"6:3881:6666":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"20:3937:6670":{"crate_id":20,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:9942:10310":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"14:47:13558":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"6:5359:7325":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:3382:3225":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:48359:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"20:4402:6717":{"crate_id":20,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"5:1011:9420":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"20:75:2658":{"crate_id":20,"path":["libc","unix","ssize_t"],"kind":"typedef"},"1:1194:13979":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"5:1639:9721":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:46329:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:0:477":{"crate_id":2,"path":["core"],"kind":"module"},"18:620:12993":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:11001:13541":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"6:4255:3319":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"16:3429:10893":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"1:9142:9071":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"6:1563:1819":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:49817:10027":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"5:3754:9420":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:57291:12926":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"16:2754:10890":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:15867:3081":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"9:996:10719":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:46552:10167":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:4704:3271":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:13480:13583":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:10028:13508":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:46214:10478":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:22865:10099":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"16:5330:11676":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:2060:3262":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"17:13497:12221":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:15873:3087":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:55977:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"12:853:9721":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"17:13627:12254":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"6:4517:6729":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:15860:3076":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:13499:13923":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:8383:9859":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"20:5555:7366":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"16:7761:11044":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"16:6644:11026":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:15058:9693":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:5632:10869":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:53277:12909":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:10529:12999":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"5:8348:12741":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"1:1497:9723":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:46520:13075":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:49738:10022":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:51381:10137":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"20:1546:1818":{"crate_id":20,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:47913:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:46258:10473":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:3195:2574":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:37512:3332":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"20:584:3753":{"crate_id":20,"path":["libc","unix","winsize"],"kind":"struct"},"1:12051:9755":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"16:2794:10892":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"6:5282:7321":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"20:5159:7313":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:11328:11974":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"1:11361:9915":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"6:610:3755":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:13370:12188":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"1:7795:3483":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"6:5210:2784":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:2201:1037":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:10543:9979":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:50212:12848":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"20:1721:2719":{"crate_id":20,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"18:720:11595":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:47423:9075":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"16:4852:12409":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"20:1097:2566":{"crate_id":20,"path":["libc","unix","linux_like","TCP_NODELAY"],"kind":"constant"},"1:15272:2580":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:10853:3287":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"5:1441:9730":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:2837:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:10562:9636":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"1:15874:3088":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:10827:11293":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:10988:13540":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"6:6852:6852":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:47871:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:13772:12312":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:1432:9421":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"6:5197:7316":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:49612:10341":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:53376:12916":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:5738:9655":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:23913:10249":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:15870:3084":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:11254:11264":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:13986:12366":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"20:6020:4542":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:46511:10163":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:7891:10076":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:32226:59115":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"17:13810:12321":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:15856:3073":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"5:8365:10497":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"20:4065:6686":{"crate_id":20,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"6:5130:7270":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:12789:9432":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"20:6648:2257":{"crate_id":20,"path":["libc","unix","linux_like","linux","arch","generic","SO_KEEPALIVE"],"kind":"constant"},"17:12385:11910":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"6:591:3753":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:10941:2049":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"16:5717:10873":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:10448:11217":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"5:2257:10616":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:11822:11806":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"16:6780:11028":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:23891:12744":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"20:1539:1600":{"crate_id":20,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"20:3989:6676":{"crate_id":20,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"5:3834:11431":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:6807:11029":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"20:1668:4583":{"crate_id":20,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"20:4219:6700":{"crate_id":20,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:605:3754":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:9296:11677":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:9340:9663":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:11015:13542":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:11433:9067":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"12:1253:9733":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:11186:13001":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:7894:11003":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"20:4470:6725":{"crate_id":20,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"20:4350:6712":{"crate_id":20,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:12467:11925":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:3526:3241":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:48410:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"2:10270:9317":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:32037:10440":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:12221:11868":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:1760:4590":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:3347:3218":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:10236:11215":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"20:4493:6727":{"crate_id":20,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:14823:11490":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:9886:13505":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:10489:11247":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"20:5177:7314":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"6:5228:7318":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:10599:13525":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"16:2843:11137":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"20:556:2664":{"crate_id":20,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:5159:7312":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:46442:10156":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:9937:10309":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:11992:54027":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"17:13564:12240":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:8413:10577":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"17:12095:11849":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"16:3365:10889":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"16:7119:10898":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:10363:11744":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:15881:3095":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"16:5456:10858":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"6:5436:11583":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"6:4511:6728":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:1534:9729":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:53391:12917":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"16:6357:11018":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"6:5998:7731":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"6:3905:6668":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:5975:11008":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:51350:10133":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"9:692:10654":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"2:10410:13570":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"20:4175:6696":{"crate_id":20,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"6:3966:6673":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:53297:12911":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:12936:9787":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"16:6238:10969":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:14022:10364":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:13402:12195":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"9:27:10702":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"2:13227:44537":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"5:8183:9237":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"5:1091:11431":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:11358:11234":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:49584:10338":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:22605:59087":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:46563:10173":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:2598:13586":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"2:49542:10337":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:3198:3270":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:47483:195":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:52987:10119":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"5:8449:10551":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:903:9841":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:46502:10162":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"20:5937:3667":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:12610:11947":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:12783:11977":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"6:4193:6697":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:10140:11246":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"20:6642:2084":{"crate_id":20,"path":["libc","unix","linux_like","linux","arch","generic","SO_TYPE"],"kind":"constant"},"12:1118:9731":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:21:660":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"20:1049:2469":{"crate_id":20,"path":["libc","unix","linux_like","IPV6_ADD_MEMBERSHIP"],"kind":"constant"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"19:0:981":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:5377:2579":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"12:1762:11429":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:46160:10228":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:51783:12861":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:3245:3189":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"16:5433:10857":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"6:1723:4588":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:10179:11690":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:8649:9919":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"16:7378:10971":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"20:5261:7319":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"6:4331:2738":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"5:374:10570":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:12741:11969":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:3335:3213":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:6688:9656":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"20:4005:6678":{"crate_id":20,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:45737:184":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:11542:9801":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"16:6424:11020":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:13582:12244":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:46295:10476":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:5375:10469":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:3331:9875":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"6:1596:4576":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:46451:3275":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"12:429:10787":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:11871:9418":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"16:5273:10895":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:10656:9716":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"17:13221:12152":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:51990:10138":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:12671:11961":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:4695:54450":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"16:7205:11037":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:9719:13502":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:8196:11463":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"2:47619:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"20:5399:7330":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:49306:3277":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:49574:3280":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:51303:10145":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:7120:9066":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:4041:195":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"1:5792:9659":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:11585:9802":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"16:3549:12387":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:56042:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:9858:11481":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"1:8693:9920":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"20:3958:6673":{"crate_id":20,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"16:5736:10874":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"6:6214:7741":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"16:7823:10978":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:3333:9876":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"6:3868:6665":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:13506:12222":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:49700:10015":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:12287:11877":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:4043:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"20:6844:6852":{"crate_id":20,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"18:704:11593":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"20:6927:2660":{"crate_id":20,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:13098:12127":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:6155:7737":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"20:6640:2083":{"crate_id":20,"path":["libc","unix","linux_like","linux","arch","generic","SOL_SOCKET"],"kind":"constant"},"17:11519:11756":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:24047:44289":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"6:4300:6706":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"5:8236:9703":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:11965:9776":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"5:8316:10572":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:47466:9215":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:50265:10363":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"5:5410:3262":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"18:136:53259":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:24445:2650":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:1655:9733":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:23946:12746":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:49628:9676":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"17:11696:11773":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"5:783:211":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:47997:10418":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"16:6518:11022":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:5068:10276":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:8843:9576":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"12:1651:10795":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:12043:9420":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"18:694:11342":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"17:13598:12247":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"20:5274:7321":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"20:4431:6721":{"crate_id":20,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:10798:9661":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"5:8154:184":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:49263:10419":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:2176:3186":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"16:4823:12408":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:46189:10231":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"19:117:11589":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"18:896:11335":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"16:5753:10877":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:4033:9683":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"2:14:1592":{"crate_id":2,"path":["core","write"],"kind":"macro"},"16:2889:11157":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"20:135:1660":{"crate_id":20,"path":["libc","unix","IPPROTO_ICMPV6"],"kind":"constant"},"17:12028:11836":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:45721:186":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"20:983:2394":{"crate_id":20,"path":["libc","unix","linux_like","IP_ADD_MEMBERSHIP"],"kind":"constant"},"20:4363:6714":{"crate_id":20,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"6:3972:6520":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:15855:3072":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"6:4371:6714":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:10584:9845":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:50982:10123":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:10205:1945":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"17:10160:11688":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:786:11481":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"17:11809:11802":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"5:5531:10515":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"5:4210:9707":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:13788:12316":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"18:152:53260":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:10253:11206":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"5:1658:9723":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:4997:9383":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"18:610:11337":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:3611:3286":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"20:6192:7740":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:11147:13000":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"15:0:3055":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:3218:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"20:530:3750":{"crate_id":20,"path":["libc","unix","rlimit"],"kind":"struct"},"6:1658:4581":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"20:5351:7325":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:12169:9832":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"20:577:2747":{"crate_id":20,"path":["libc","unix","pollfd"],"kind":"struct"},"1:14155:3297":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"12:377:10789":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:12142:11857":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:2192:9712":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:15073:9694":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:10589:9858":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:55897:10091":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"6:6644:8106":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"12:2013:9707":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"17:9759:13503":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"5:3391:9712":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"5:8162:10496":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"14:216:45319":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"16:7786:10977":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:49442:9428":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"12:930:9725":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"20:5371:7327":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:5788:9658":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:9245:11210":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:5730:9653":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:10128:11312":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:46281:10474":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"18:790:11326":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:11628:11765":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:9162:11265":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:15875:3089":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"18:660:11340":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:14466:9661":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"20:5961:3626":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:51038:10144":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:10666:9734":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"20:6873:6856":{"crate_id":20,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:10149:13505":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:7680:9772":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"6:4052:6683":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:2897:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:51627:10106":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"20:6885:6858":{"crate_id":20,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:46145:9676":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"16:3145:11152":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:8363:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:681:11744":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"16:7928:10078":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:14673:9648":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"1:5501:2580":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"16:5314:11675":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"18:636:11593":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"6:1554:1818":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:10814:11292":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:13386:12191":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"6:3990:6675":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"5:8124:10606":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:46632:10180":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:8741:9929":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:12010:11835":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:13016:10016":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:1311:11316":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"17:10584:11295":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:11281:9426":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"17:12659:11960":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"5:8189:9237":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:1646:9732":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"6:5255:7299":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"9:0:3050":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"6:4377:6715":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:9186:11237":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:51943:10134":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"17:13799:12320":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"5:8377:10498":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:12373:11908":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"20:3943:6671":{"crate_id":20,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:46347:10415":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"5:7106:11445":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"1:10931:9818":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:13272:12166":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"18:766:11603":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"5:8132:59481":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"14:231:10500":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:4008:13500":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"20:5189:7316":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:49370:10329":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:2840:9401":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"20:571:2709":{"crate_id":20,"path":["libc","unix","iovec"],"kind":"struct"},"17:9574:11240":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"20:3949:6672":{"crate_id":20,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:12468:10452":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"5:1613:9237":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"5:8101:9237":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"16:4671:12403":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:47552:168":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"5:3743:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:24547:2651":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:49769:10026":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"16:3714:12388":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:9222:9079":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:1511:9726":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:51236:10101":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"16:4535:12400":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"20:1752:4590":{"crate_id":20,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:53199:10142":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:11714:11774":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"20:4309:6708":{"crate_id":20,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"20:4052:6684":{"crate_id":20,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:4395:3295":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"12:112:60886":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"20:4451:6723":{"crate_id":20,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:9971:60893":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"9:686:10652":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"20:984:2399":{"crate_id":20,"path":["libc","unix","linux_like","IP_DROP_MEMBERSHIP"],"kind":"constant"},"5:4510:10590":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"12:774:9237":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:14884:9775":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"16:6999:11030":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:5778:9657":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:22961:21615":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:14669:13590":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"20:5672:1644":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","SOCK_DGRAM"],"kind":"constant"},"12:949:9727":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:3248:207":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"17:9592:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"1:4602:3262":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:15863:3079":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"12:925:9722":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:15878:3092":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"0:863:1690":{"crate_id":0,"path":["socket2","TcpKeepalive"],"kind":"struct"},"13:120:45285":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"5:1602:9421":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:3406:3230":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:52296:10103":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"5:7606:10555":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:45892:9685":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:48126:9310":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:9528:3277":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:9368:11679":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"20:4515:6730":{"crate_id":20,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"6:6221:7742":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"16:4890:12410":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"16:3264:11147":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"20:6206:7741":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:3388:3226":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"12:2323:12654":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:10377:11275":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"20:1692:4585":{"crate_id":20,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"6:4459:6723":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:53286:12910":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:6560:9670":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:3360:3224":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"16:6391:11019":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:9763:11479":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"2:12754:10335":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"20:524:3749":{"crate_id":20,"path":["libc","unix","timespec"],"kind":"struct"},"17:9210:46972":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:12725:11967":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:13946:9773":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"20:5378:7328":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:14441:9637":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:23820:10380":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"6:525:2795":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"6:5400:7329":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:5744:9656":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:2946:2648":{"crate_id":2,"path":["core","cmp","min"],"kind":"function"},"20:4112:6691":{"crate_id":20,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"16:7514:10987":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:13532:12232":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"20:138:2349":{"crate_id":20,"path":["libc","unix","IPPROTO_IP"],"kind":"constant"},"1:11109:3276":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"16:2945:11162":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:12332:13584":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"20:4247:3319":{"crate_id":20,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"13:232:12650":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"16:4230:12392":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"5:3039:13915":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"5:7810:11445":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:10274:9314":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:50279:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:15086:9700":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"6:4241:6701":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"0:0:1716":{"crate_id":0,"path":["socket2"],"kind":"module"},"1:1492:9722":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"16:7870:10973":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"6:584:2747":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:2169:567":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"20:1045:2508":{"crate_id":20,"path":["libc","unix","linux_like","IPV6_UNICAST_HOPS"],"kind":"constant"},"2:55990:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:5945:3667":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"6:5274:7320":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:11988:13096":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"17:12343:11889":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:11970:11828":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"20:139:2468":{"crate_id":20,"path":["libc","unix","IPPROTO_IPV6"],"kind":"constant"},"2:23971:10244":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"4:0:3048":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:3472:1582":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:10962:13538":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:7666:9771":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:53050:10139":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:3621:11461":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:32177:2582":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:11750:11779":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"6:3951:6671":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:13062:12097":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:11281:3202":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:1442:9237":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:11126:3279":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"17:8849:11262":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"5:3033:9288":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:13163:12137":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:8954:11239":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"16:7420:10988":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"16:3604:11609":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:14461:13099":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:50064:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:48681:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"12:892:10774":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"18:849:11331":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:15876:3090":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"1:3995:9821":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:9631:11478":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"17:9896:60899":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:9133:46971":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"20:981:2431":{"crate_id":20,"path":["libc","unix","linux_like","IP_MULTICAST_TTL"],"kind":"constant"},"2:12738:10332":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:11981:11831":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:13865:12337":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:4304:12393":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"0:837:1654":{"crate_id":0,"path":["socket2","Protocol"],"kind":"struct"},"6:5420:7332":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:10435:13516":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:10690:13590":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"6:4494:6726":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:47414:9237":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"20:6652:2265":{"crate_id":20,"path":["libc","unix","linux_like","linux","arch","generic","SO_LINGER"],"kind":"constant"},"2:11208:9417":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:15862:3078":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:3140:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:49603:10340":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:9476:11682":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:22537:3332":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:7632:9769":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"17:10788:13528":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:6474:10166":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"10:0:3051":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:12051:11839":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"14:0:3054":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"16:3800:12390":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:1136:9686":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"20:4411:6718":{"crate_id":20,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:11588:11760":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"17:11572:11759":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"16:7174:11034":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:4989:3197":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"18:0:3058":{"crate_id":18,"path":["memchr"],"kind":"module"},"20:4195:6698":{"crate_id":20,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:2401:13582":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"5:2305:10633":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"6:519:3748":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"6:6005:3535":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:13488:12218":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"20:6879:6857":{"crate_id":20,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:51111:12851":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"16:6136:11006":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:4363:9897":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"17:10052:13510":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:3684:3236":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"9:1020:10720":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:49929:13142":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"20:6636:8106":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:8135:9859":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"12:469:60883":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"17:10571:13523":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"5:1680:184":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"16:6413:10801":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"12:1667:10796":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"5:2213:10508":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"5:2195:11433":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"16:4790:12407":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"6:6068:4518":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:14979:13105":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:12582:11942":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"20:5979:7730":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:5650:9647":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:3240:200":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:10793:9868":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"20:938:1677":{"crate_id":20,"path":["libc","unix","linux_like","MSG_TRUNC"],"kind":"constant"},"2:32218:3190":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"2:11904:9419":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"17:12073:11848":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:14910:3247":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"18:754:60906":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:45762:185":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:49895:10030":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:3707:3238":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"16:3118:11153":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"16:3939:12391":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:2928:167":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:12917:11986":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:12756:11973":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:1637:9731":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:23984:10245":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:1306:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"6:1908:4727":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:12507:11930":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"12:1159:10782":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:15868:3082":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:50032:10351":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"16:5522:10864":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"18:677:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:13073:10021":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:50048:10354":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:24063:44298":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"17:13942:12359":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"16:4477:12398":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"5:6647:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:3343:9881":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"1:6702:8916":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"16:6744:11176":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:11292:1948":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"5:4623:224":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:10623:13527":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:3696:213":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"6:1584:4575":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"20:4093:6689":{"crate_id":20,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:10001:47019":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"20:6645:2239":{"crate_id":20,"path":["libc","unix","linux_like","linux","arch","generic","SO_BROADCAST"],"kind":"constant"},"12:1855:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:50256:10362":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:11499:11755":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:15866:3080":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"20:1048:2499":{"crate_id":20,"path":["libc","unix","linux_like","IPV6_MULTICAST_LOOP"],"kind":"constant"},"5:7835:11451":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:11482:11751":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"5:3889:10578":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:8850:10075":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"18:837:10016":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:10331:11246":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"6:4364:6713":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:4101:6689":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:7798:9778":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:49278:10200":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"16:6682:10980":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"20:1046:2489":{"crate_id":20,"path":["libc","unix","linux_like","IPV6_MULTICAST_IF"],"kind":"constant"},"5:3357:9711":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"16:5231:12415":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"20:1100:2669":{"crate_id":20,"path":["libc","unix","linux_like","TCP_KEEPIDLE"],"kind":"constant"},"2:46173:10229":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:10304:11228":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:10788:9668":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:46334:10414":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:46422:13573":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"1:1419:9420":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"16:4614:12401":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:2934:170":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:5971:9962":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"16:6126:11011":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:547:10875":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:12997:10014":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"5:7207:9707":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"18:744:60905":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:45885:3237":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:8376:9093":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:50086:3251":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"17:13296:12168":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:49121:9412":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"12:1100:9730":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:15879:3093":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:48422:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:25121:10218":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"20:1900:4727":{"crate_id":20,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:13007:10013":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:49916:10032":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:6862:2583":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:3317:9872":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"6:5269:7319":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"6:1617:4578":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:9224:9077":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:13571:9788":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"1:2163:9237":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"20:1519:2663":{"crate_id":20,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:15213:1982":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:2862:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"16:7250:11041":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"20:4087:6688":{"crate_id":20,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:49239:9424":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:7289:13587":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:5472:10861":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:11159:1814":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"1:15869:3083":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:14158:3293":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"17:2543:11242":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:3192:9869":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:13760:59207":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"9:809:9799":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"6:4358:6712":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:32212:1579":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"20:858:1626":{"crate_id":20,"path":["libc","unix","linux_like","AF_INET"],"kind":"constant"},"2:52654:10147":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:3489:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:1528:9728":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:7735:9774":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"5:5310:190":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"20:4417:6719":{"crate_id":20,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"20:4462:6724":{"crate_id":20,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:50099:10428":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"1:11525:9800":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:50202:191":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:12118:11855":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:49752:10025":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"16:5360:10853":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:11077:3272":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:23749:10378":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:12098:9760":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"7:0:1459":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:51500:10113":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"6:511:3747":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:12234:11870":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:52797:10115":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:10694:10622":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"17:9799:13504":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:7935:13918":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"17:11458:11750":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:5167:7313":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:11244:53906":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"16:6464:10979":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"20:5428:11583":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"20:3997:6677":{"crate_id":20,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:22565:58997":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"16:7571:10963":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:5861:9954":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"20:5151:7312":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:46850:13080":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"20:4317:6709":{"crate_id":20,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:2492:9538":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"6:578:2709":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:49139:9414":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"20:6902:6860":{"crate_id":20,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"6:4306:6707":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:11231:11266":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:22812:9666":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:3268:3326":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"6:6051:4515":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:11406:11746":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"17:10543:11729":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:45829:189":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:4750:9981":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"20:4292:6706":{"crate_id":20,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"18:729:60904":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"20:4156:6695":{"crate_id":20,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:10211:13514":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:12010:12954":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"6:161:3428":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"6:4317:6708":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:15838:54026":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:3394:3227":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:46581:10175":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"6:6870:6855":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:11195:3199":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"17:11555:11758":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:12699:11965":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"16:6577:11024":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:11341:9961":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"3:0:419":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:22584:59092":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"6:4227:6700":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:47398:9420":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:52908:10135":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:10353:11277":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:9933:13506":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:1501:9724":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"5:4237:11431":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"17:13465:12213":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"20:1657:4582":{"crate_id":20,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:9730:9905":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"6:4387:3032":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:53414:12918":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"6:5563:7366":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:10897:203":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"20:5213:7317":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:24115:10404":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:11502:9799":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"6:1744:4589":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:12262:11875":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:46868:12836":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:47955:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"16:7804:10976":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"6:4083:6687":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:10215:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"5:8266:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:14456:13097":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"2:24751:10390":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"20:6231:7743":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"6:4395:3034":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:5428:7333":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:50056:10349":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"18:829:11330":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:8911:9298":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"20:5202:2784":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:1623:9730":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"6:4449:6722":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:51216:12852":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:3339:3216":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"5:8249:9737":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"17:11082:11238":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"12:556:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:46591:10176":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"16:7549:10975":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:14897:9776":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:49290:10324":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"20:3982:6675":{"crate_id":20,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:9280:11676":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:4:966":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:53266:12908":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:1708:4586":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:50957:10131":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:13725:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:10255:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"6:537:3750":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:8806:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:10424:11482":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:6440:9635":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:46841:9298":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:45927:9382":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"16:5815:10880":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"17:11100:11268":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"6:4145:6694":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:53160:10122":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"6:3862:6664":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:13842:12336":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"20:3860:6665":{"crate_id":20,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:13180:12139":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"5:4638:11436":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"17:13331:12178":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:4434:3297":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:14929:12958":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"16:4955:12412":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:3250:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:14073:191":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"20:6660:2334":{"crate_id":20,"path":["libc","unix","linux_like","linux","arch","generic","SO_SNDTIMEO"],"kind":"constant"},"17:9551:11263":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:10081:11225":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:24649:9779":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:13477:12214":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:24479:9862":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"12:2009:9237":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"18:644:11339":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:12130:9762":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"17:10266:11209":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:10861:3289":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"5:8116:9707":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"16:7042:11186":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"20:1514:2661":{"crate_id":20,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"0:824:1636":{"crate_id":0,"path":["socket2","Type"],"kind":"struct"},"17:10502:12998":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"20:150:3427":{"crate_id":20,"path":["libc","unix","FILE"],"kind":"enum"},"6:6100:7734":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:6185:7739":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:1079:9673":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"6:563:2664":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"7:38:44935":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"18:857:11332":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"12:396:10788":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"16:5346:10965":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:15857:3074":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:15092:9701":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"20:6177:7739":{"crate_id":20,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:9005:46967":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:47475:178":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"16:2912:11139":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"16:7333:10986":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"6:1522:2661":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:12552:11939":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:51197:10116":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:45806:187":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:23651:9636":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:50052:10355":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:11026:13543":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:6864:6854":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"}},"external_crates":{"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"libc","html_root_url":null},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":16}