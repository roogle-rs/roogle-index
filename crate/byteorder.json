{"root":"0:0:3111","crate_version":"1.5.0","includes_private":false,"index":{"0:163":{"id":"0:163","crate_id":0,"name":null,"span":{"filename":"src/io.rs","begin":[1579,0],"end":[1579,50]},"visibility":"default","docs":"All types that implement `Write` get methods defined in `WriteBytesExt`\nfor free.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3788:3405","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["write_i32","write_i24","write_u48","write_f64","write_f32","write_i48","write_i8","write_u64","write_uint","write_u16","write_i128","write_i64","write_u128","write_int","write_u32","write_u8","write_u24","write_i16","write_int128","write_uint128"],"trait":{"name":"WriteBytesExt","id":"0:106:2442","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"generic":"W"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:92:2683":{"id":"0:92:2683","crate_id":0,"name":"read_i64_into","span":{"filename":"src/io.rs","begin":[820,4],"end":[827,5]},"visibility":"default","docs":"Reads a sequence of signed 64 bit integers from the underlying\nreader.\n\nThe given buffer is either filled completely or an error is returned.\nIf an error is returned, the contents of `dst` are unspecified.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead a sequence of signed 64 bit big-endian integers from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![\n    0, 0, 0, 0, 0, 0, 2, 5,\n    0, 0, 0, 0, 0, 0, 3, 0,\n]);\nlet mut dst = [0; 2];\nrdr.read_i64_into::<BigEndian>(&mut dst).unwrap();\nassert_eq!([517, 768], dst);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"i64"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:249:2793":{"id":"0:249:2793","crate_id":0,"name":"from_slice_f64","span":{"filename":"src/lib.rs","begin":[1793,4],"end":[1793,43]},"visibility":"default","docs":"Converts the given slice of IEEE754 double-precision (8 bytes) floating\npoint numbers to a particular endianness.\n\nIf the endianness matches the endianness of the host platform, then\nthis is a no-op.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["numbers",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"f64"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:3191-0:340:2473":{"id":"b:2:3191-0:340:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3193:868"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:28:2571":{"id":"0:28:2571","crate_id":0,"name":"read_i16","span":{"filename":"src/io.rs","begin":[139,4],"end":[143,5]},"visibility":"default","docs":"Reads a signed 16 bit integer from the underlying reader.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead signed 16 bit big-endian integers from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![0x00, 0xc1, 0xff, 0x7c]);\nassert_eq!(193, rdr.read_i16::<BigEndian>().unwrap());\nassert_eq!(-132, rdr.read_i16::<BigEndian>().unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i16"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261:2502":{"id":"0:261:2502","crate_id":0,"name":"read_u16","span":{"filename":"src/lib.rs","begin":[1940,4],"end":[1942,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:335":{"id":"0:335","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1812,44],"end":[1812,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:36222:259","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:252:2802":{"id":"0:252:2802","crate_id":0,"name":"BE","span":{"filename":"src/lib.rs","begin":[1824,0],"end":[1824,24]},"visibility":"public","docs":"A type alias for [`BigEndian`].\n\n[`BigEndian`]: enum.BigEndian.html","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"0:182:2521":{"id":"0:182:2521","crate_id":0,"name":"read_u48","span":{"filename":"src/lib.rs","begin":[288,4],"end":[290,5]},"visibility":"default","docs":"Reads an unsigned 48 bit integer from `buf`, stored in u64.\n\n# Panics\n\nPanics when `buf.len() < 6`.\n\n# Examples\n\nWrite and read 48 bit `u64` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 6];\nLittleEndian::write_u48(&mut buf, 1_000_000_000_000);\nassert_eq!(1_000_000_000_000, LittleEndian::read_u48(&buf));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3193:868":{"id":"2:3193:868","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:357:1342":{"id":"0:357:1342","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[1842,55],"end":[1842,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:46010:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:34980:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:285:2758":{"id":"0:285:2758","crate_id":0,"name":"from_slice_u16","span":{"filename":"src/lib.rs","begin":[2066,4],"end":[2072,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["numbers",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u16"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:196:2576":{"id":"0:196:2576","crate_id":0,"name":"read_i24","span":{"filename":"src/lib.rs","begin":[568,4],"end":[570,5]},"visibility":"default","docs":"Reads a signed 24 bit integer from `buf`, stored in i32.\n\n# Panics\n\nPanics when `buf.len() < 3`.\n\n# Examples\n\nWrite and read 24 bit `i32` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 3];\nLittleEndian::write_i24(&mut buf, -1_000_000);\nassert_eq!(-1_000_000, LittleEndian::read_i24(&buf));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:254:60":{"id":"0:254:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[1846,4],"end":[1848,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:348":{"id":"0:348","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1842,33],"end":[1842,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:11347:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:349:911"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:337:732":{"id":"0:337:732","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[1812,44],"end":[1812,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:36279:3835-0:340:2473":{"id":"a:2:36279:3835-0:340:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:36279:3835","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:325":{"id":"0:325","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1812,16],"end":[1812,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3415:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:316:2758":{"id":"0:316:2758","crate_id":0,"name":"from_slice_u16","span":{"filename":"src/lib.rs","begin":[2244,4],"end":[2250,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["numbers",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u16"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:214:2638":{"id":"0:214:2638","crate_id":0,"name":"write_f64","span":{"filename":"src/lib.rs","begin":[972,4],"end":[974,5]},"visibility":"default","docs":"Writes a IEEE754 double-precision (8 bytes) floating point number.\n\n# Panics\n\nPanics when `buf.len() < 8`.\n\n# Examples\n\nWrite and read `f64` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet phi = 1.6180339887;\nlet mut buf = [0; 8];\nLittleEndian::write_f64(&mut buf, phi);\nassert_eq!(phi, LittleEndian::read_f64(&buf));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"f64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:96:2694":{"id":"0:96:2694","crate_id":0,"name":"read_f32_into","span":{"filename":"src/io.rs","begin":[902,4],"end":[909,5]},"visibility":"default","docs":"Reads a sequence of IEEE754 single-precision (4 bytes) floating\npoint numbers from the underlying reader.\n\nThe given buffer is either filled completely or an error is returned.\nIf an error is returned, the contents of `dst` are unspecified.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead a sequence of big-endian single-precision floating point number\nfrom a `Read`:\n\n```rust\nuse std::f32;\nuse std::io::Cursor;\n\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![\n    0x40, 0x49, 0x0f, 0xdb,\n    0x3f, 0x80, 0x00, 0x00,\n]);\nlet mut dst = [0.0; 2];\nrdr.read_f32_into::<BigEndian>(&mut dst).unwrap();\nassert_eq!([f32::consts::PI, 1.0], dst);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"f32"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:240:2758":{"id":"0:240:2758","crate_id":0,"name":"from_slice_u16","span":{"filename":"src/lib.rs","begin":[1622,4],"end":[1622,43]},"visibility":"default","docs":"Converts the given slice of unsigned 16 bit integers to a particular\nendianness.\n\nIf the endianness matches the endianness of the host platform, then\nthis is a no-op.\n\n# Examples\n\nConvert the host platform's endianness to big-endian:\n\n```rust\nuse byteorder::{ByteOrder, BigEndian};\n\nlet mut numbers = [5, 65000];\nBigEndian::from_slice_u16(&mut numbers);\nassert_eq!(numbers, [5u16.to_be(), 65000u16.to_be()]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["numbers",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u16"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"5:824:4021":{"id":"5:824:4021","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:187:2550":{"id":"0:187:2550","crate_id":0,"name":"write_u16","span":{"filename":"src/lib.rs","begin":[387,4],"end":[387,41]},"visibility":"default","docs":"Writes an unsigned 16 bit integer `n` to `buf`.\n\n# Panics\n\nPanics when `buf.len() < 2`.\n\n# Examples\n\nWrite and read `u16` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 2];\nLittleEndian::write_u16(&mut buf, 1_000);\nassert_eq!(1_000, LittleEndian::read_u16(&buf));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:3191-0:322:2474":{"id":"b:2:3191-0:322:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3193:868"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:334:509":{"id":"0:334:509","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[1812,39],"end":[1812,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:34980:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:826:4023":{"id":"5:826:4023","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:353":{"id":"0:353","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1842,44],"end":[1842,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:36222:259","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:246:2784":{"id":"0:246:2784","crate_id":0,"name":"from_slice_i64","span":{"filename":"src/lib.rs","begin":[1749,4],"end":[1754,5]},"visibility":"default","docs":"Converts the given slice of signed 64 bit integers to a particular\nendianness.\n\nIf the endianness matches the endianness of the host platform, then\nthis is a no-op.\n\n# Examples\n\nConvert the host platform's endianness to big-endian:\n\n```rust\nuse byteorder::{ByteOrder, BigEndian};\n\nlet mut numbers = [5, 65000];\nBigEndian::from_slice_i64(&mut numbers);\nassert_eq!(numbers, [5i64.to_be(), 65000i64.to_be()]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"i64"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:228:2708":{"id":"0:228:2708","crate_id":0,"name":"read_f64_into_unchecked","span":{"filename":"src/lib.rs","begin":[1305,4],"end":[1307,5]},"visibility":"default","docs":"**DEPRECATED**.\n\nThis method is deprecated. Use `read_f64_into` instead.\n\nReads IEEE754 single-precision (4 bytes) floating point numbers from\n`src` into `dst`.\n\n# Panics\n\nPanics when `src.len() != 8*dst.len()`.\n\n# Examples\n\nWrite and read `f64` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 32];\nlet numbers_given = [1.0, 2.0, 31.312e211, -11.32e91];\nLittleEndian::write_f64_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0.0; 4];\nLittleEndian::read_f64_into_unchecked(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":["#[inline]","#[deprecated(since = \"1.3.0\", note = \"please use `read_f64_into` instead\")]"],"deprecation":{"since":"1.3.0","note":"please use `read_f64_into` instead"},"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"f64"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:251:60":{"id":"0:251:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[1816,4],"end":[1818,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:88:2673":{"id":"0:88:2673","crate_id":0,"name":"read_i16_into","span":{"filename":"src/io.rs","begin":[747,4],"end":[754,5]},"visibility":"default","docs":"Reads a sequence of signed 16 bit integers from the underlying\nreader.\n\nThe given buffer is either filled completely or an error is returned.\nIf an error is returned, the contents of `dst` are unspecified.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead a sequence of signed 16 bit big-endian integers from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![2, 5, 3, 0]);\nlet mut dst = [0; 2];\nrdr.read_i16_into::<BigEndian>(&mut dst).unwrap();\nassert_eq!([517, 768], dst);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"i16"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:322:2474":{"id":"0:322:2474","crate_id":0,"name":"BigEndian","span":{"filename":"src/lib.rs","begin":[1813,0],"end":[1813,21]},"visibility":"public","docs":"Defines big-endian serialization.\n\nNote that this type has no value constructor. It is used purely at the\ntype level.\n\n# Examples\n\nWrite and read `u32` numbers in big endian order:\n\n```rust\nuse byteorder::{ByteOrder, BigEndian};\n\nlet mut buf = [0; 4];\nBigEndian::write_u32(&mut buf, 1_000_000);\nassert_eq!(1_000_000, BigEndian::read_u32(&buf));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":[],"impls":["a:2:36220:250-0:322:2474","a:2:3420:262-0:322:2474","a:2:3455:3921-0:322:2474","a:2:36279:3835-0:322:2474","a:2:46106:3874-0:322:2474","a:2:46107:3873-0:322:2474","b:2:2872-0:322:2474","b:2:2875-0:322:2474","b:2:2930-0:322:2474","b:2:3187-0:322:2474","b:2:3191-0:322:2474","b:2:3197-0:322:2474","b:2:3202-0:322:2474","b:2:4067-0:322:2474","b:5:822-0:322:2474","0:323","0:325","0:326","0:328","0:330","0:333","0:335","0:336","0:338","0:250","0:260"]}}},"0:81:2655":{"id":"0:81:2655","crate_id":0,"name":"read_u32_into","span":{"filename":"src/io.rs","begin":[597,4],"end":[604,5]},"visibility":"default","docs":"Reads a sequence of unsigned 32 bit integers from the underlying\nreader.\n\nThe given buffer is either filled completely or an error is returned.\nIf an error is returned, the contents of `dst` are unspecified.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead a sequence of unsigned 32 bit big-endian integers from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![0, 0, 2, 5, 0, 0, 3, 0]);\nlet mut dst = [0; 2];\nrdr.read_u32_into::<BigEndian>(&mut dst).unwrap();\nassert_eq!([517, 768], dst);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u32"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:236:2743":{"id":"0:236:2743","crate_id":0,"name":"write_i64_into","span":{"filename":"src/lib.rs","begin":[1512,4],"end":[1517,5]},"visibility":"default","docs":"Writes signed 64 bit integers from `src` into `dst`.\n\n# Panics\n\nPanics when `dst.len() != 8*src.len()`.\n\n# Examples\n\nWrite and read `i64` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 32];\nlet numbers_given = [1, 2, 0xf00f, 0xffee];\nLittleEndian::write_i64_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0; 4];\nLittleEndian::read_i64_into(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"i64"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:244:2776":{"id":"0:244:2776","crate_id":0,"name":"from_slice_i16","span":{"filename":"src/lib.rs","begin":[1699,4],"end":[1704,5]},"visibility":"default","docs":"Converts the given slice of signed 16 bit integers to a particular\nendianness.\n\nIf the endianness matches the endianness of the host platform, then\nthis is a no-op.\n\n# Examples\n\nConvert the host platform's endianness to big-endian:\n\n```rust\nuse byteorder::{ByteOrder, BigEndian};\n\nlet mut numbers = [5, 6500];\nBigEndian::from_slice_i16(&mut numbers);\nassert_eq!(numbers, [5i16.to_be(), 6500i16.to_be()]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"i16"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:306:2566":{"id":"0:306:2566","crate_id":0,"name":"write_uint128","span":{"filename":"src/lib.rs","begin":[2194,4],"end":[2201,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"u128"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:330":{"id":"0:330","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1812,33],"end":[1812,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:11347:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:331:911"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2872-0:340:2473":{"id":"b:2:2872-0:340:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2866:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:3609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:345:837":{"id":"0:345:837","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1842,22],"end":[1842,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:11091:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:11072:239","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:309:2655":{"id":"0:309:2655","crate_id":0,"name":"read_u32_into","span":{"filename":"src/lib.rs","begin":[2209,4],"end":[2211,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u32"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:157:2635":{"id":"0:157:2635","crate_id":0,"name":"write_f32","span":{"filename":"src/io.rs","begin":[1541,4],"end":[1545,5]},"visibility":"default","docs":"Writes a IEEE754 single-precision (4 bytes) floating point number to\nthe underlying writer.\n\n# Errors\n\nThis method returns the same errors as [`Write::write_all`].\n\n[`Write::write_all`]: https://doc.rust-lang.org/std/io/trait.Write.html#method.write_all\n\n# Examples\n\nWrite a big-endian single-precision floating point number to a `Write`:\n\n```rust\nuse std::f32;\n\nuse byteorder::{BigEndian, WriteBytesExt};\n\nlet mut wtr = Vec::new();\nwtr.write_f32::<BigEndian>(f32::consts::PI).unwrap();\nassert_eq!(wtr, b\"\\x40\\x49\\x0f\\xdb\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f32"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:207:2624":{"id":"0:207:2624","crate_id":0,"name":"write_i32","span":{"filename":"src/lib.rs","begin":[814,4],"end":[816,5]},"visibility":"default","docs":"Writes a signed 32 bit integer `n` to `buf`.\n\n# Panics\n\nPanics when `buf.len() < 4`.\n\n# Examples\n\nWrite and read `i32` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 4];\nLittleEndian::write_i32(&mut buf, -1_000_000);\nassert_eq!(-1_000_000, LittleEndian::read_i32(&buf));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:79:2647":{"id":"0:79:2647","crate_id":0,"name":"read_u16_into","span":{"filename":"src/io.rs","begin":[562,4],"end":[569,5]},"visibility":"default","docs":"Reads a sequence of unsigned 16 bit integers from the underlying\nreader.\n\nThe given buffer is either filled completely or an error is returned.\nIf an error is returned, the contents of `dst` are unspecified.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead a sequence of unsigned 16 bit big-endian integers from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![2, 5, 3, 0]);\nlet mut dst = [0; 2];\nrdr.read_u16_into::<BigEndian>(&mut dst).unwrap();\nassert_eq!([517, 768], dst);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u16"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:341":{"id":"0:341","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1842,9],"end":[1842,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:342:501"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:201:2577":{"id":"0:201:2577","crate_id":0,"name":"read_int","span":{"filename":"src/lib.rs","begin":[679,4],"end":[681,5]},"visibility":"default","docs":"Reads a signed n-bytes integer from `buf`.\n\n# Panics\n\nPanics when `nbytes < 1` or `nbytes > 8` or\n`buf.len() < nbytes`\n\n# Examples\n\nWrite and read n-length signed numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 3];\nLittleEndian::write_int(&mut buf, -1_000, 3);\nassert_eq!(-1_000, LittleEndian::read_int(&buf, 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208:2626":{"id":"0:208:2626","crate_id":0,"name":"write_i48","span":{"filename":"src/lib.rs","begin":[836,4],"end":[838,5]},"visibility":"default","docs":"Writes a signed 48 bit integer `n` to `buf`, stored in i64.\n\n# Panics\n\nPanics when `buf.len() < 6`.\n\n# Examples\n\nWrite and read 48 bit `i64` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 6];\nLittleEndian::write_i48(&mut buf, -1_000_000_000_000);\nassert_eq!(-1_000_000_000_000, LittleEndian::read_i48(&buf));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:130:2626":{"id":"0:130:2626","crate_id":0,"name":"write_i48","span":{"filename":"src/io.rs","begin":[1340,4],"end":[1344,5]},"visibility":"default","docs":"Writes a signed 48 bit integer to the underlying writer.\n\n# Errors\n\nThis method returns the same errors as [`Write::write_all`].\n\n[`Write::write_all`]: https://doc.rust-lang.org/std/io/trait.Write.html#method.write_all\n\n# Examples\n\nWrite signed 48 bit big-endian integers to a `Write`:\n\n```rust\nuse byteorder::{BigEndian, WriteBytesExt};\n\nlet mut wtr = Vec::new();\nwtr.write_i48::<BigEndian>(-108363435763825).unwrap();\nwtr.write_i48::<BigEndian>(77).unwrap();\nassert_eq!(wtr, b\"\\x9d\\x71\\xab\\xe7\\x97\\x8f\\x00\\x00\\x00\\x00\\x00\\x4d\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:199:2592":{"id":"0:199:2592","crate_id":0,"name":"read_i64","span":{"filename":"src/lib.rs","begin":[634,4],"end":[636,5]},"visibility":"default","docs":"Reads a signed 64 bit integer from `buf`.\n\n# Panics\n\nPanics when `buf.len() < 8`.\n\n# Examples\n\nWrite and read `i64` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 8];\nLittleEndian::write_i64(&mut buf, -1_000_000_000);\nassert_eq!(-1_000_000_000, LittleEndian::read_i64(&buf));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3202-0:340:2473":{"id":"b:2:3202-0:340:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3205:150","2:3206:1873"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:302:2559":{"id":"0:302:2559","crate_id":0,"name":"write_u64","span":{"filename":"src/lib.rs","begin":[2174,4],"end":[2176,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:36279:3835-0:322:2474":{"id":"a:2:36279:3835-0:322:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:36279:3835","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:262:2514":{"id":"0:262:2514","crate_id":0,"name":"read_u32","span":{"filename":"src/lib.rs","begin":[1945,4],"end":[1947,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:25:2502":{"id":"0:25:2502","crate_id":0,"name":"read_u16","span":{"filename":"src/io.rs","begin":[112,4],"end":[116,5]},"visibility":"default","docs":"Reads an unsigned 16 bit integer from the underlying reader.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead unsigned 16 bit big-endian integers from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![2, 5, 3, 0]);\nassert_eq!(517, rdr.read_u16::<BigEndian>().unwrap());\nassert_eq!(768, rdr.read_u16::<BigEndian>().unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u16"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:136:2628":{"id":"0:136:2628","crate_id":0,"name":"write_i64","span":{"filename":"src/io.rs","begin":[1394,4],"end":[1398,5]},"visibility":"default","docs":"Writes a signed 64 bit integer to the underlying writer.\n\n# Errors\n\nThis method returns the same errors as [`Write::write_all`].\n\n[`Write::write_all`]: https://doc.rust-lang.org/std/io/trait.Write.html#method.write_all\n\n# Examples\n\nWrite signed 64 bit big-endian integers to a `Write`:\n\n```rust\nuse byteorder::{BigEndian, WriteBytesExt};\n\nlet mut wtr = Vec::new();\nwtr.write_i64::<BigEndian>(i64::min_value()).unwrap();\nwtr.write_i64::<BigEndian>(i64::max_value()).unwrap();\nassert_eq!(wtr, b\"\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x7f\\xff\\xff\\xff\\xff\\xff\\xff\\xff\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:121:2555":{"id":"0:121:2555","crate_id":0,"name":"write_u32","span":{"filename":"src/io.rs","begin":[1259,4],"end":[1263,5]},"visibility":"default","docs":"Writes an unsigned 32 bit integer to the underlying writer.\n\n# Errors\n\nThis method returns the same errors as [`Write::write_all`].\n\n[`Write::write_all`]: https://doc.rust-lang.org/std/io/trait.Write.html#method.write_all\n\n# Examples\n\nWrite unsigned 32 bit big-endian integers to a `Write`:\n\n```rust\nuse byteorder::{BigEndian, WriteBytesExt};\n\nlet mut wtr = Vec::new();\nwtr.write_u32::<BigEndian>(267).unwrap();\nwtr.write_u32::<BigEndian>(1205419366).unwrap();\nassert_eq!(wtr, b\"\\x00\\x00\\x01\\x0b\\x47\\xd9\\x3d\\x66\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:85:2667":{"id":"0:85:2667","crate_id":0,"name":"read_u128_into","span":{"filename":"src/io.rs","begin":[673,4],"end":[683,5]},"visibility":"default","docs":"Reads a sequence of unsigned 128 bit integers from the underlying\nreader.\n\nThe given buffer is either filled completely or an error is returned.\nIf an error is returned, the contents of `dst` are unspecified.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead a sequence of unsigned 128 bit big-endian integers from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 5,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0,\n]);\nlet mut dst = [0; 2];\nrdr.read_u128_into::<BigEndian>(&mut dst).unwrap();\nassert_eq!([517, 768], dst);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u128"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:318:2767":{"id":"0:318:2767","crate_id":0,"name":"from_slice_u64","span":{"filename":"src/lib.rs","begin":[2262,4],"end":[2268,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["numbers",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u64"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:349:911":{"id":"0:349:911","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[1842,33],"end":[1842,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:11355:169","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:295:2535":{"id":"0:295:2535","crate_id":0,"name":"read_u128","span":{"filename":"src/lib.rs","begin":[2143,4],"end":[2145,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3190:3954":{"id":"2:3190:3954","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3164:157"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:255:2806":{"id":"0:255:2806","crate_id":0,"name":"LE","span":{"filename":"src/lib.rs","begin":[1854,0],"end":[1854,27]},"visibility":"public","docs":"A type alias for [`LittleEndian`].\n\n[`LittleEndian`]: enum.LittleEndian.html","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"0:109:2550":{"id":"0:109:2550","crate_id":0,"name":"write_u16","span":{"filename":"src/io.rs","begin":[1151,4],"end":[1155,5]},"visibility":"default","docs":"Writes an unsigned 16 bit integer to the underlying writer.\n\n# Errors\n\nThis method returns the same errors as [`Write::write_all`].\n\n[`Write::write_all`]: https://doc.rust-lang.org/std/io/trait.Write.html#method.write_all\n\n# Examples\n\nWrite unsigned 16 bit big-endian integers to a `Write`:\n\n```rust\nuse byteorder::{BigEndian, WriteBytesExt};\n\nlet mut wtr = Vec::new();\nwtr.write_u16::<BigEndian>(517).unwrap();\nwtr.write_u16::<BigEndian>(768).unwrap();\nassert_eq!(wtr, b\"\\x02\\x05\\x03\\x00\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u16"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3205:150":{"id":"2:3205:150","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:36144:3651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:76:2617":{"id":"0:76:2617","crate_id":0,"name":"read_f64","span":{"filename":"src/io.rs","begin":[530,4],"end":[534,5]},"visibility":"default","docs":"Reads a IEEE754 double-precision (8 bytes) floating point number from\nthe underlying reader.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead a big-endian double-precision floating point number from a `Read`:\n\n```rust\nuse std::f64;\nuse std::io::Cursor;\n\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![\n    0x40, 0x09, 0x21, 0xfb, 0x54, 0x44, 0x2d, 0x18,\n]);\nassert_eq!(f64::consts::PI, rdr.read_f64::<BigEndian>().unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"f64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:34:2576":{"id":"0:34:2576","crate_id":0,"name":"read_i24","span":{"filename":"src/io.rs","begin":[191,4],"end":[195,5]},"visibility":"default","docs":"Reads a signed 24 bit integer from the underlying reader.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead signed 24 bit big-endian integers from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![0xff, 0x7a, 0x33]);\nassert_eq!(-34253, rdr.read_i24::<BigEndian>().unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:4069:1888":{"id":"2:4069:1888","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:43724:7392","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:232:2720":{"id":"0:232:2720","crate_id":0,"name":"write_u128_into","span":{"filename":"src/lib.rs","begin":[1399,4],"end":[1399,53]},"visibility":"default","docs":"Writes unsigned 128 bit integers from `src` into `dst`.\n\n# Panics\n\nPanics when `dst.len() != 16*src.len()`.\n\n# Examples\n\nWrite and read `u128` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 64];\nlet numbers_given = [1, 2, 0xf00f, 0xffee];\nLittleEndian::write_u128_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0; 4];\nLittleEndian::read_u128_into(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u128"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:241:2763":{"id":"0:241:2763","crate_id":0,"name":"from_slice_u32","span":{"filename":"src/lib.rs","begin":[1641,4],"end":[1641,43]},"visibility":"default","docs":"Converts the given slice of unsigned 32 bit integers to a particular\nendianness.\n\nIf the endianness matches the endianness of the host platform, then\nthis is a no-op.\n\n# Examples\n\nConvert the host platform's endianness to big-endian:\n\n```rust\nuse byteorder::{ByteOrder, BigEndian};\n\nlet mut numbers = [5, 65000];\nBigEndian::from_slice_u32(&mut numbers);\nassert_eq!(numbers, [5u32.to_be(), 65000u32.to_be()]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["numbers",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u32"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:292:2502":{"id":"0:292:2502","crate_id":0,"name":"read_u16","span":{"filename":"src/lib.rs","begin":[2128,4],"end":[2130,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:267:2545":{"id":"0:267:2545","crate_id":0,"name":"read_uint128","span":{"filename":"src/lib.rs","begin":[1969,4],"end":[1975,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:186:2545":{"id":"0:186:2545","crate_id":0,"name":"read_uint128","span":{"filename":"src/lib.rs","begin":[368,4],"end":[368,55]},"visibility":"default","docs":"Reads an unsigned n-bytes integer from `buf`.\n\n# Panics\n\nPanics when `nbytes < 1` or `nbytes > 16` or\n`buf.len() < nbytes`\n\n# Examples\n\nWrite and read an n-byte number in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 3];\nLittleEndian::write_uint128(&mut buf, 1_000_000, 3);\nassert_eq!(1_000_000, LittleEndian::read_uint128(&buf, 3));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:98:2700":{"id":"0:98:2700","crate_id":0,"name":"read_f32_into_unchecked","span":{"filename":"src/io.rs","begin":[948,4],"end":[953,5]},"visibility":"default","docs":"**DEPRECATED**.\n\nThis method is deprecated. Use `read_f32_into` instead.\n\nReads a sequence of IEEE754 single-precision (4 bytes) floating\npoint numbers from the underlying reader.\n\nThe given buffer is either filled completely or an error is returned.\nIf an error is returned, the contents of `dst` are unspecified.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead a sequence of big-endian single-precision floating point number\nfrom a `Read`:\n\n```rust\nuse std::f32;\nuse std::io::Cursor;\n\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![\n    0x40, 0x49, 0x0f, 0xdb,\n    0x3f, 0x80, 0x00, 0x00,\n]);\nlet mut dst = [0.0; 2];\nrdr.read_f32_into_unchecked::<BigEndian>(&mut dst).unwrap();\nassert_eq!([f32::consts::PI, 1.0], dst);\n```","links":{},"attrs":["#[inline]","#[deprecated(since = \"1.2.0\", note = \"please use `read_f32_into` instead\")]"],"deprecation":{"since":"1.2.0","note":"please use `read_f32_into` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"f32"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:94:2687":{"id":"0:94:2687","crate_id":0,"name":"read_i128_into","span":{"filename":"src/io.rs","begin":[858,4],"end":[868,5]},"visibility":"default","docs":"Reads a sequence of signed 128 bit integers from the underlying\nreader.\n\nThe given buffer is either filled completely or an error is returned.\nIf an error is returned, the contents of `dst` are unspecified.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead a sequence of signed 128 bit big-endian integers from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 5,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0,\n]);\nlet mut dst = [0; 2];\nrdr.read_i128_into::<BigEndian>(&mut dst).unwrap();\nassert_eq!([517, 768], dst);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"i128"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:238:2747":{"id":"0:238:2747","crate_id":0,"name":"write_f32_into","span":{"filename":"src/lib.rs","begin":[1569,4],"end":[1574,5]},"visibility":"default","docs":"Writes IEEE754 single-precision (4 bytes) floating point numbers from\n`src` into `dst`.\n\n# Panics\n\nPanics when `src.len() != 4*dst.len()`.\n\n# Examples\n\nWrite and read `f32` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 16];\nlet numbers_given = [1.0, 2.0, 31.312e31, -11.32e19];\nLittleEndian::write_f32_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0.0; 4];\nLittleEndian::read_f32_into(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"f32"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43:2521":{"id":"0:43:2521","crate_id":0,"name":"read_u48","span":{"filename":"src/io.rs","begin":[269,4],"end":[273,5]},"visibility":"default","docs":"Reads an unsigned 48 bit integer from the underlying reader.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead unsigned 48 bit big-endian integers from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![0xb6, 0x71, 0x6b, 0xdc, 0x2b, 0x31]);\nassert_eq!(200598257150769, rdr.read_u48::<BigEndian>().unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:127:2557":{"id":"0:127:2557","crate_id":0,"name":"write_u48","span":{"filename":"src/io.rs","begin":[1313,4],"end":[1317,5]},"visibility":"default","docs":"Writes an unsigned 48 bit integer to the underlying writer.\n\n# Errors\n\nThis method returns the same errors as [`Write::write_all`].\n\n[`Write::write_all`]: https://doc.rust-lang.org/std/io/trait.Write.html#method.write_all\n\n# Examples\n\nWrite unsigned 48 bit big-endian integers to a `Write`:\n\n```rust\nuse byteorder::{BigEndian, WriteBytesExt};\n\nlet mut wtr = Vec::new();\nwtr.write_u48::<BigEndian>(52360336390828).unwrap();\nwtr.write_u48::<BigEndian>(541).unwrap();\nassert_eq!(wtr, b\"\\x2f\\x9f\\x17\\x40\\x3a\\xac\\x00\\x00\\x00\\x00\\x02\\x1d\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3202-0:322:2474":{"id":"b:2:3202-0:322:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3205:150","2:3206:1873"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:179:2502":{"id":"0:179:2502","crate_id":0,"name":"read_u16","span":{"filename":"src/lib.rs","begin":[229,4],"end":[229,35]},"visibility":"default","docs":"Reads an unsigned 16 bit integer from `buf`.\n\n# Panics\n\nPanics when `buf.len() < 2`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"u16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:300:2550":{"id":"0:300:2550","crate_id":0,"name":"write_u16","span":{"filename":"src/lib.rs","begin":[2164,4],"end":[2166,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:151:2566":{"id":"0:151:2566","crate_id":0,"name":"write_uint128","span":{"filename":"src/io.rs","begin":[1493,4],"end":[1501,5]},"visibility":"default","docs":"Writes an unsigned n-bytes integer to the underlying writer.\n\nIf the given integer is not representable in the given number of bytes,\nthis method panics. If `nbytes > 16`, this method panics.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u128"}],["nbytes",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:194:2566":{"id":"0:194:2566","crate_id":0,"name":"write_uint128","span":{"filename":"src/lib.rs","begin":[526,4],"end":[526,61]},"visibility":"default","docs":"Writes an unsigned integer `n` to `buf` using only `nbytes`.\n\n# Panics\n\nIf `n` is not representable in `nbytes`, or if `nbytes` is `> 16`, then\nthis method panics.\n\n# Examples\n\nWrite and read an n-byte number in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 3];\nLittleEndian::write_uint128(&mut buf, 1_000_000, 3);\nassert_eq!(1_000_000, LittleEndian::read_uint128(&buf, 3));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"u128"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:200:2597":{"id":"0:200:2597","crate_id":0,"name":"read_i128","span":{"filename":"src/lib.rs","begin":[656,4],"end":[658,5]},"visibility":"default","docs":"Reads a signed 128 bit integer from `buf`.\n\n# Panics\n\nPanics when `buf.len() < 16`.\n\n# Examples\n\nWrite and read `i128` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 16];\nLittleEndian::write_i128(&mut buf, -1_000_000_000);\nassert_eq!(-1_000_000_000, LittleEndian::read_i128(&buf));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218:2667":{"id":"0:218:2667","crate_id":0,"name":"read_u128_into","span":{"filename":"src/lib.rs","begin":[1066,4],"end":[1066,52]},"visibility":"default","docs":"Reads unsigned 128 bit integers from `src` into `dst`.\n\n# Panics\n\nPanics when `src.len() != 16*dst.len()`.\n\n# Examples\n\nWrite and read `u128` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 64];\nlet numbers_given = [1, 2, 0xf00f, 0xffee];\nLittleEndian::write_u128_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0; 4];\nLittleEndian::read_u128_into(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u128"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1938,0],"end":[2124,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_i32","write_u48","write_i24","read_i32_into","write_i64_into","read_i16_into","write_i8_into","write_f64_into","read_i128","from_slice_i32","read_u48","read_i32","read_i24","read_f64_into","write_i128","write_i64","write_int","write_i16","write_u24","read_i64_into","read_f32","write_i32_into","read_int128","write_f32_into","read_i64","from_slice_i64","read_f64_into_unchecked","read_int","read_u24","read_i16","write_f32","write_f64","write_i48","read_i128_into","read_f64","write_i128_into","write_i16_into","from_slice_i128","read_i48","from_slice_i16","read_f32_into_unchecked","write_int128","read_f32_into"],"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:261:2502","0:262:2514","0:263:2528","0:264:2535","0:265:2511","0:267:2545","0:269:2550","0:270:2555","0:271:2559","0:272:2561","0:273:2553","0:275:2566","0:277:2647","0:278:2655","0:279:2661","0:280:2667","0:281:2711","0:282:2714","0:283:2717","0:284:2720","0:285:2758","0:286:2763","0:287:2767","0:288:2771","0:289:2791","0:290:2793"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3187-0:322:2474":{"id":"b:2:3187-0:322:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3190:3954"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:271:2559":{"id":"0:271:2559","crate_id":0,"name":"write_u64","span":{"filename":"src/lib.rs","begin":[1988,4],"end":[1990,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:31:2510":{"id":"0:31:2510","crate_id":0,"name":"read_u24","span":{"filename":"src/io.rs","begin":[165,4],"end":[169,5]},"visibility":"default","docs":"Reads an unsigned 24 bit integer from the underlying reader.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead unsigned 24 bit big-endian integers from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![0x00, 0x01, 0x0b]);\nassert_eq!(267, rdr.read_u24::<BigEndian>().unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:298:2545":{"id":"0:298:2545","crate_id":0,"name":"read_uint128","span":{"filename":"src/lib.rs","begin":[2156,4],"end":[2161,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:264:2535":{"id":"0:264:2535","crate_id":0,"name":"read_u128","span":{"filename":"src/lib.rs","begin":[1955,4],"end":[1957,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:308:2647":{"id":"0:308:2647","crate_id":0,"name":"read_u16_into","span":{"filename":"src/lib.rs","begin":[2204,4],"end":[2206,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u16"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:294:2528":{"id":"0:294:2528","crate_id":0,"name":"read_u64","span":{"filename":"src/lib.rs","begin":[2138,4],"end":[2140,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:284:2720":{"id":"0:284:2720","crate_id":0,"name":"write_u128_into","span":{"filename":"src/lib.rs","begin":[2061,4],"end":[2063,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u128"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3206:1873":{"id":"2:3206:1873","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:46278:239","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:190:2557":{"id":"0:190:2557","crate_id":0,"name":"write_u48","span":{"filename":"src/lib.rs","begin":[446,4],"end":[448,5]},"visibility":"default","docs":"Writes an unsigned 48 bit integer `n` to `buf`, stored in u64.\n\n# Panics\n\nPanics when `buf.len() < 6`.\n\n# Examples\n\nWrite and read 48 bit `u64` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 6];\nLittleEndian::write_u48(&mut buf, 1_000_000_000_000);\nassert_eq!(1_000_000_000_000, LittleEndian::read_u48(&buf));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2932:27948":{"id":"2:2932:27948","crate_id":2,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:279:2661":{"id":"0:279:2661","crate_id":0,"name":"read_u64_into","span":{"filename":"src/lib.rs","begin":[2036,4],"end":[2038,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u64"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2875-0:340:2473":{"id":"b:2:2875-0:340:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2869:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2877:27947"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:340:2473":{"id":"0:340:2473","crate_id":0,"name":"LittleEndian","span":{"filename":"src/lib.rs","begin":[1843,0],"end":[1843,24]},"visibility":"public","docs":"Defines little-endian serialization.\n\nNote that this type has no value constructor. It is used purely at the\ntype level.\n\n# Examples\n\nWrite and read `u32` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 4];\nLittleEndian::write_u32(&mut buf, 1_000_000);\nassert_eq!(1_000_000, LittleEndian::read_u32(&buf));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":[],"impls":["a:2:36220:250-0:340:2473","a:2:3420:262-0:340:2473","a:2:3455:3921-0:340:2473","a:2:36279:3835-0:340:2473","a:2:46106:3874-0:340:2473","a:2:46107:3873-0:340:2473","b:2:2872-0:340:2473","b:2:2875-0:340:2473","b:2:2930-0:340:2473","b:2:3187-0:340:2473","b:2:3191-0:340:2473","b:2:3197-0:340:2473","b:2:3202-0:340:2473","b:2:4067-0:340:2473","b:5:822-0:340:2473","0:341","0:343","0:344","0:346","0:348","0:351","0:353","0:354","0:356","0:253","0:291"]}}},"0:181:2514":{"id":"0:181:2514","crate_id":0,"name":"read_u32","span":{"filename":"src/lib.rs","begin":[269,4],"end":[269,35]},"visibility":"default","docs":"Reads an unsigned 32 bit integer from `buf`.\n\n# Panics\n\nPanics when `buf.len() < 4`.\n\n# Examples\n\nWrite and read `u32` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 4];\nLittleEndian::write_u32(&mut buf, 1_000_000);\nassert_eq!(1_000_000, LittleEndian::read_u32(&buf));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:102:2708":{"id":"0:102:2708","crate_id":0,"name":"read_f64_into_unchecked","span":{"filename":"src/io.rs","begin":[1039,4],"end":[1044,5]},"visibility":"default","docs":"**DEPRECATED**.\n\nThis method is deprecated. Use `read_f64_into` instead.\n\nReads a sequence of IEEE754 double-precision (8 bytes) floating\npoint numbers from the underlying reader.\n\nThe given buffer is either filled completely or an error is returned.\nIf an error is returned, the contents of `dst` are unspecified.\n\n# Safety\n\nThis method is unsafe because there are no guarantees made about the\nfloating point values. In particular, this method does not check for\nsignaling NaNs, which may result in undefined behavior.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead a sequence of big-endian single-precision floating point number\nfrom a `Read`:\n\n```rust\nuse std::f64;\nuse std::io::Cursor;\n\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![\n    0x40, 0x09, 0x21, 0xfb, 0x54, 0x44, 0x2d, 0x18,\n    0x3f, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n]);\nlet mut dst = [0.0; 2];\nrdr.read_f64_into_unchecked::<BigEndian>(&mut dst).unwrap();\nassert_eq!([f64::consts::PI, 1.0], dst);\n```","links":{},"attrs":["#[inline]","#[deprecated(since = \"1.2.0\", note = \"please use `read_f64_into` instead\")]"],"deprecation":{"since":"1.2.0","note":"please use `read_f64_into` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"f64"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:100:2704":{"id":"0:100:2704","crate_id":0,"name":"read_f64_into","span":{"filename":"src/io.rs","begin":[987,4],"end":[994,5]},"visibility":"default","docs":"Reads a sequence of IEEE754 double-precision (8 bytes) floating\npoint numbers from the underlying reader.\n\nThe given buffer is either filled completely or an error is returned.\nIf an error is returned, the contents of `dst` are unspecified.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead a sequence of big-endian single-precision floating point number\nfrom a `Read`:\n\n```rust\nuse std::f64;\nuse std::io::Cursor;\n\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![\n    0x40, 0x09, 0x21, 0xfb, 0x54, 0x44, 0x2d, 0x18,\n    0x3f, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n]);\nlet mut dst = [0.0; 2];\nrdr.read_f64_into::<BigEndian>(&mut dst).unwrap();\nassert_eq!([f64::consts::PI, 1.0], dst);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"f64"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:36220:250-0:340:2473":{"id":"a:2:36220:250-0:340:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:36220:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:49:2528":{"id":"0:49:2528","crate_id":0,"name":"read_u64","span":{"filename":"src/io.rs","begin":[321,4],"end":[325,5]},"visibility":"default","docs":"Reads an unsigned 64 bit integer from the underlying reader.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead an unsigned 64 bit big-endian integer from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![0x00, 0x03, 0x43, 0x95, 0x4d, 0x60, 0x86, 0x83]);\nassert_eq!(918733457491587, rdr.read_u64::<BigEndian>().unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:342:501":{"id":"0:342:501","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[1842,9],"end":[1842,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257:2817":{"id":"0:257:2817","crate_id":0,"name":"NativeEndian","span":{"filename":"src/lib.rs","begin":[1891,0],"end":[1891,37]},"visibility":"public","docs":"Defines system native-endian serialization.\n\nNote that this type has no value constructor. It is used purely at the\ntype level.\n\nOn this platform, this is an alias for [`LittleEndian`].\n\n[`LittleEndian`]: enum.LittleEndian.html","links":{},"attrs":["#[cfg(target_endian = \"little\")]"],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"0:354":{"id":"0:354","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1842,44],"end":[1842,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2964:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:355:732"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:242:2767":{"id":"0:242:2767","crate_id":0,"name":"from_slice_u64","span":{"filename":"src/lib.rs","begin":[1660,4],"end":[1660,43]},"visibility":"default","docs":"Converts the given slice of unsigned 64 bit integers to a particular\nendianness.\n\nIf the endianness matches the endianness of the host platform, then\nthis is a no-op.\n\n# Examples\n\nConvert the host platform's endianness to big-endian:\n\n```rust\nuse byteorder::{ByteOrder, BigEndian};\n\nlet mut numbers = [5, 65000];\nBigEndian::from_slice_u64(&mut numbers);\nassert_eq!(numbers, [5u64.to_be(), 65000u64.to_be()]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["numbers",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u64"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2872-0:322:2474":{"id":"b:2:2872-0:322:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2866:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:3609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3197-0:340:2473":{"id":"b:2:3197-0:340:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3167:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:150","2:3201:1875"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:12-0:106:2442":{"id":"0:12-0:106:2442","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[82,34],"end":[82,47]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"crate::io::WriteBytesExt","name":"WriteBytesExt","id":"0:106:2442","glob":false}}},"0:154:2633":{"id":"0:154:2633","crate_id":0,"name":"write_int128","span":{"filename":"src/io.rs","begin":[1508,4],"end":[1516,5]},"visibility":"default","docs":"Writes a signed n-bytes integer to the underlying writer.\n\nIf the given integer is not representable in the given number of bytes,\nthis method panics. If `nbytes > 16`, this method panics.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i128"}],["nbytes",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:286:2763":{"id":"0:286:2763","crate_id":0,"name":"from_slice_u32","span":{"filename":"src/lib.rs","begin":[2075,4],"end":[2081,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["numbers",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u32"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:270:2555":{"id":"0:270:2555","crate_id":0,"name":"write_u32","span":{"filename":"src/lib.rs","begin":[1983,4],"end":[1985,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:21:3255":{"id":"0:21:3255","crate_id":0,"name":"read_u8","span":{"filename":"src/io.rs","begin":[55,4],"end":[59,5]},"visibility":"default","docs":"Reads an unsigned 8 bit integer from the underlying reader.\n\nNote that since this reads a single byte, no byte order conversions\nare used. It is included for completeness.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead unsigned 8 bit integers from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::ReadBytesExt;\n\nlet mut rdr = Cursor::new(vec![2, 5]);\nassert_eq!(2, rdr.read_u8().unwrap());\nassert_eq!(5, rdr.read_u8().unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:118:2621":{"id":"0:118:2621","crate_id":0,"name":"write_i24","span":{"filename":"src/io.rs","begin":[1232,4],"end":[1236,5]},"visibility":"default","docs":"Writes a signed 24 bit integer to the underlying writer.\n\n# Errors\n\nThis method returns the same errors as [`Write::write_all`].\n\n[`Write::write_all`]: https://doc.rust-lang.org/std/io/trait.Write.html#method.write_all\n\n# Examples\n\nWrite signed 24 bit big-endian integers to a `Write`:\n\n```rust\nuse byteorder::{BigEndian, WriteBytesExt};\n\nlet mut wtr = Vec::new();\nwtr.write_i24::<BigEndian>(-34253).unwrap();\nwtr.write_i24::<BigEndian>(120111).unwrap();\nassert_eq!(wtr, b\"\\xff\\x7a\\x33\\x01\\xd5\\x2f\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:106:2442":{"id":"0:106:2442","crate_id":0,"name":"WriteBytesExt","span":{"filename":"src/io.rs","begin":[1073,0],"end":[1575,1]},"visibility":"public","docs":"Extends [`Write`] with methods for writing numbers. (For `std::io`.)\n\nMost of the methods defined here have an unconstrained type parameter that\nmust be explicitly instantiated. Typically, it is instantiated with either\nthe [`BigEndian`] or [`LittleEndian`] types defined in this crate.\n\n# Examples\n\nWrite unsigned 16 bit big-endian integers to a [`Write`]:\n\n```rust\nuse byteorder::{BigEndian, WriteBytesExt};\n\nlet mut wtr = vec![];\nwtr.write_u16::<BigEndian>(517).unwrap();\nwtr.write_u16::<BigEndian>(768).unwrap();\nassert_eq!(wtr, vec![2, 5, 3, 0]);\n```\n\n[`BigEndian`]: enum.BigEndian.html\n[`LittleEndian`]: enum.LittleEndian.html\n[`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:107:3416","0:108:3423","0:109:2550","0:112:2619","0:115:2552","0:118:2621","0:121:2555","0:124:2624","0:127:2557","0:130:2626","0:133:2559","0:136:2628","0:139:2561","0:142:2631","0:145:2553","0:148:2622","0:151:2566","0:154:2633","0:157:2635","0:160:2638"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:3788:3405","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:163"]}}},"0:278:2655":{"id":"0:278:2655","crate_id":0,"name":"read_u32_into","span":{"filename":"src/lib.rs","begin":[2031,4],"end":[2033,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u32"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2930-0:322:2474":{"id":"b:2:2930-0:322:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2928:3919","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2932:27948"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:104":{"id":"0:104","crate_id":0,"name":null,"span":{"filename":"src/io.rs","begin":[1049,0],"end":[1049,48]},"visibility":"default","docs":"All types that implement `Read` get methods defined in `ReadBytesExt`\nfor free.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3731:3243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["read_u8","read_i32_into","read_uint128","read_i16_into","read_u128_into","read_i128","read_u64_into","read_u32_into","read_i8_into","read_u48","read_i32","read_i24","read_f64_into","read_i8","read_i64_into","read_f32","read_int128","read_u64","read_i64","read_u16_into","read_f64_into_unchecked","read_int","read_u24","read_i16","read_i128_into","read_f64","read_u128","read_i48","read_u32","read_uint","read_f32_into_unchecked","read_u16","read_f32_into"],"trait":{"name":"ReadBytesExt","id":"0:20:2441","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"generic":"R"},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3420:262-0:340:2473":{"id":"a:2:3420:262-0:340:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3420:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:273:2553":{"id":"0:273:2553","crate_id":0,"name":"write_uint","span":{"filename":"src/lib.rs","begin":[1998,4],"end":[2009,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"u64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:328":{"id":"0:328","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1812,29],"end":[1812,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2969:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:178:2498":{"id":"0:178:2498","crate_id":0,"name":"ByteOrder","span":{"filename":"src/lib.rs","begin":[212,0],"end":[1794,1]},"visibility":"public","docs":"`ByteOrder` describes types that can serialize integers as bytes.\n\nNote that `Self` does not appear anywhere in this trait's definition!\nTherefore, in order to use it, you'll need to use syntax like\n`T::read_u16(&[0, 1])` where `T` implements `ByteOrder`.\n\nThis crate provides two types that implement `ByteOrder`: [`BigEndian`]\nand [`LittleEndian`].\nThis trait is sealed and cannot be implemented for callers to avoid\nbreaking backwards compatibility when adding new derived traits.\n\n# Examples\n\nWrite and read `u32` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 4];\nLittleEndian::write_u32(&mut buf, 1_000_000);\nassert_eq!(1_000_000, LittleEndian::read_u32(&buf));\n```\n\nWrite and read `i16` numbers in big endian order:\n\n```rust\nuse byteorder::{ByteOrder, BigEndian};\n\nlet mut buf = [0; 2];\nBigEndian::write_i16(&mut buf, -5_000);\nassert_eq!(-5_000, BigEndian::read_i16(&buf));\n```\n\n[`BigEndian`]: enum.BigEndian.html\n[`LittleEndian`]: enum.LittleEndian.html","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:179:2502","0:180:2510","0:181:2514","0:182:2521","0:183:2528","0:184:2535","0:185:2511","0:186:2545","0:187:2550","0:188:2552","0:189:2555","0:190:2557","0:191:2559","0:192:2561","0:193:2553","0:194:2566","0:195:2571","0:196:2576","0:197:2582","0:198:2587","0:199:2592","0:200:2597","0:201:2577","0:202:2604","0:203:2610","0:204:2617","0:205:2619","0:206:2621","0:207:2624","0:208:2626","0:209:2628","0:210:2631","0:211:2622","0:212:2633","0:213:2635","0:214:2638","0:215:2647","0:216:2655","0:217:2661","0:218:2667","0:219:2673","0:220:2679","0:221:2683","0:222:2687","0:223:2694","0:225:2700","0:226:2704","0:228:2708","0:229:2711","0:230:2714","0:231:2717","0:232:2720","0:233:2734","0:234:2739","0:235:2741","0:236:2743","0:237:2745","0:238:2747","0:239:2749","0:240:2758","0:241:2763","0:242:2767","0:243:2771","0:244:2776","0:245:2780","0:246:2784","0:247:2788","0:248:2791","0:249:2793"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3415:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Debug","id":"2:11127:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Default","id":"2:3239:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"2:2969:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"2:11347:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Ord","id":"2:3000:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2964:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:3006:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"private::Sealed","id":"0:175:2472","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:260","0:291"]}}},"0:282:2714":{"id":"0:282:2714","crate_id":0,"name":"write_u32_into","span":{"filename":"src/lib.rs","begin":[2051,4],"end":[2053,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u32"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:314:2717":{"id":"0:314:2717","crate_id":0,"name":"write_u64_into","span":{"filename":"src/lib.rs","begin":[2234,4],"end":[2236,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u64"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:3111":{"id":"0:0:3111","crate_id":0,"name":"byteorder","span":{"filename":"src/lib.rs","begin":[1,0],"end":[3975,1]},"visibility":"public","docs":"This crate provides convenience methods for encoding and decoding numbers in\neither [big-endian or little-endian order].\n\nThe organization of the crate is pretty simple. A trait, [`ByteOrder`], specifies\nbyte conversion methods for each type of number in Rust (sans numbers that have\na platform dependent size like `usize` and `isize`). Two types, [`BigEndian`]\nand [`LittleEndian`] implement these methods. Finally, [`ReadBytesExt`] and\n[`WriteBytesExt`] provide convenience methods available to all types that\nimplement [`Read`] and [`Write`].\n\nAn alias, [`NetworkEndian`], for [`BigEndian`] is provided to help improve\ncode clarity.\n\nAn additional alias, [`NativeEndian`], is provided for the endianness of the\nlocal platform. This is convenient when serializing data for use and\nconversions are not desired.\n\n# Examples\n\nRead unsigned 16 bit big-endian integers from a [`Read`] type:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![2, 5, 3, 0]);\n// Note that we use type parameters to indicate which kind of byte order\n// we want!\nassert_eq!(517, rdr.read_u16::<BigEndian>().unwrap());\nassert_eq!(768, rdr.read_u16::<BigEndian>().unwrap());\n```\n\nWrite unsigned 16 bit little-endian integers to a [`Write`] type:\n\n```rust\nuse byteorder::{LittleEndian, WriteBytesExt};\n\nlet mut wtr = vec![];\nwtr.write_u16::<LittleEndian>(517).unwrap();\nwtr.write_u16::<LittleEndian>(768).unwrap();\nassert_eq!(wtr, vec![5, 2, 0, 3]);\n```\n\n# Optional Features\n\nThis crate optionally provides support for 128 bit values (`i128` and `u128`)\nwhen built with the `i128` feature enabled.\n\nThis crate can also be used without the standard library.\n\n# Alternatives\n\nNote that as of Rust 1.32, the standard numeric types provide built-in methods\nlike `to_le_bytes` and `from_le_bytes`, which support some of the same use\ncases.\n\n[big-endian or little-endian order]: https://en.wikipedia.org/wiki/Endianness\n[`ByteOrder`]: trait.ByteOrder.html\n[`BigEndian`]: enum.BigEndian.html\n[`LittleEndian`]: enum.LittleEndian.html\n[`ReadBytesExt`]: trait.ReadBytesExt.html\n[`WriteBytesExt`]: trait.WriteBytesExt.html\n[`NetworkEndian`]: type.NetworkEndian.html\n[`NativeEndian`]: type.NativeEndian.html\n[`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html\n[`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","links":{},"attrs":["#![deny(missing_docs)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:11-0:20:2441","0:12-0:106:2442","0:178:2498","0:322:2474","0:252:2802","0:340:2473","0:255:2806","0:256:2814","0:257:2817"],"is_stripped":false}}},"0:198:2587":{"id":"0:198:2587","crate_id":0,"name":"read_i48","span":{"filename":"src/lib.rs","begin":[612,4],"end":[614,5]},"visibility":"default","docs":"Reads a signed 48 bit integer from `buf`, stored in i64.\n\n# Panics\n\nPanics when `buf.len() < 6`.\n\n# Examples\n\nWrite and read 48 bit `i64` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 6];\nLittleEndian::write_i48(&mut buf, -1_000_000_000_000);\nassert_eq!(-1_000_000_000_000, LittleEndian::read_i48(&buf));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"i64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:317:2763":{"id":"0:317:2763","crate_id":0,"name":"from_slice_u32","span":{"filename":"src/lib.rs","begin":[2253,4],"end":[2259,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["numbers",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u32"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:230:2714":{"id":"0:230:2714","crate_id":0,"name":"write_u32_into","span":{"filename":"src/lib.rs","begin":[1353,4],"end":[1353,51]},"visibility":"default","docs":"Writes unsigned 32 bit integers from `src` into `dst`.\n\n# Panics\n\nPanics when `dst.len() != 4*src.len()`.\n\n# Examples\n\nWrite and read `u32` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 16];\nlet numbers_given = [1, 2, 0xf00f, 0xffee];\nLittleEndian::write_u32_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0; 4];\nLittleEndian::read_u32_into(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u32"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:36220:250-0:322:2474":{"id":"a:2:36220:250-0:322:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:36220:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:231:2717":{"id":"0:231:2717","crate_id":0,"name":"write_u64_into","span":{"filename":"src/lib.rs","begin":[1376,4],"end":[1376,51]},"visibility":"default","docs":"Writes unsigned 64 bit integers from `src` into `dst`.\n\n# Panics\n\nPanics when `dst.len() != 8*src.len()`.\n\n# Examples\n\nWrite and read `u64` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 32];\nlet numbers_given = [1, 2, 0xf00f, 0xffee];\nLittleEndian::write_u64_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0; 4];\nLittleEndian::read_u64_into(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u64"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:336":{"id":"0:336","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1812,44],"end":[1812,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2964:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:337:732"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:280:2667":{"id":"0:280:2667","crate_id":0,"name":"read_u128_into","span":{"filename":"src/lib.rs","begin":[2041,4],"end":[2043,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u128"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3197-0:322:2474":{"id":"b:2:3197-0:322:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3167:273","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:150","2:3201:1875"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3187-0:340:2473":{"id":"b:2:3187-0:340:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3164:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3161:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3190:3954"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:183:2528":{"id":"0:183:2528","crate_id":0,"name":"read_u64","span":{"filename":"src/lib.rs","begin":[309,4],"end":[309,35]},"visibility":"default","docs":"Reads an unsigned 64 bit integer from `buf`.\n\n# Panics\n\nPanics when `buf.len() < 8`.\n\n# Examples\n\nWrite and read `u64` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 8];\nLittleEndian::write_u64(&mut buf, 1_000_000);\nassert_eq!(1_000_000, LittleEndian::read_u64(&buf));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:202:2604":{"id":"0:202:2604","crate_id":0,"name":"read_int128","span":{"filename":"src/lib.rs","begin":[702,4],"end":[704,5]},"visibility":"default","docs":"Reads a signed n-bytes integer from `buf`.\n\n# Panics\n\nPanics when `nbytes < 1` or `nbytes > 16` or\n`buf.len() < nbytes`\n\n# Examples\n\nWrite and read n-length signed numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 3];\nLittleEndian::write_int128(&mut buf, -1_000, 3);\nassert_eq!(-1_000, LittleEndian::read_int128(&buf, 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"i128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:333":{"id":"0:333","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1812,39],"end":[1812,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","clamp","min"],"trait":{"name":"Ord","id":"2:3000:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:334:509"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2126,0],"end":[2302,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["write_i32","write_u48","write_i24","read_i32_into","write_i64_into","read_i16_into","write_i8_into","write_f64_into","read_i128","from_slice_i32","read_u48","read_i32","read_i24","read_f64_into","write_i128","write_i64","write_int","write_i16","write_u24","read_i64_into","read_f32","write_i32_into","read_int128","write_f32_into","read_i64","from_slice_i64","read_f64_into_unchecked","read_int","read_u24","read_i16","write_f32","write_f64","write_i48","read_i128_into","read_f64","write_i128_into","write_i16_into","from_slice_i128","read_i48","from_slice_i16","read_f32_into_unchecked","write_int128","read_f32_into"],"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:292:2502","0:293:2514","0:294:2528","0:295:2535","0:296:2511","0:298:2545","0:300:2550","0:301:2555","0:302:2559","0:303:2561","0:304:2553","0:306:2566","0:308:2647","0:309:2655","0:310:2661","0:311:2667","0:312:2711","0:313:2714","0:314:2717","0:315:2720","0:316:2758","0:317:2763","0:318:2767","0:319:2771","0:320:2791","0:321:2793"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:293:2514":{"id":"0:293:2514","crate_id":0,"name":"read_u32","span":{"filename":"src/lib.rs","begin":[2133,4],"end":[2135,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:189:2555":{"id":"0:189:2555","crate_id":0,"name":"write_u32","span":{"filename":"src/lib.rs","begin":[427,4],"end":[427,41]},"visibility":"default","docs":"Writes an unsigned 32 bit integer `n` to `buf`.\n\n# Panics\n\nPanics when `buf.len() < 4`.\n\n# Examples\n\nWrite and read `u32` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 4];\nLittleEndian::write_u32(&mut buf, 1_000_000);\nassert_eq!(1_000_000, LittleEndian::read_u32(&buf));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:206:2621":{"id":"0:206:2621","crate_id":0,"name":"write_i24","span":{"filename":"src/lib.rs","begin":[792,4],"end":[794,5]},"visibility":"default","docs":"Writes a signed 24 bit integer `n` to `buf`, stored in i32.\n\n# Panics\n\nPanics when `buf.len() < 3`.\n\n# Examples\n\nWrite and read 24 bit `i32` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 3];\nLittleEndian::write_i24(&mut buf, -1_000_000);\nassert_eq!(-1_000_000, LittleEndian::read_i24(&buf));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"i32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:245:2780":{"id":"0:245:2780","crate_id":0,"name":"from_slice_i32","span":{"filename":"src/lib.rs","begin":[1724,4],"end":[1729,5]},"visibility":"default","docs":"Converts the given slice of signed 32 bit integers to a particular\nendianness.\n\nIf the endianness matches the endianness of the host platform, then\nthis is a no-op.\n\n# Examples\n\nConvert the host platform's endianness to big-endian:\n\n```rust\nuse byteorder::{ByteOrder, BigEndian};\n\nlet mut numbers = [5, 65000];\nBigEndian::from_slice_i32(&mut numbers);\nassert_eq!(numbers, [5i32.to_be(), 65000i32.to_be()]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"i32"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:55:2535":{"id":"0:55:2535","crate_id":0,"name":"read_u128","span":{"filename":"src/io.rs","begin":[376,4],"end":[380,5]},"visibility":"default","docs":"Reads an unsigned 128 bit integer from the underlying reader.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead an unsigned 128 bit big-endian integer from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![\n    0x00, 0x03, 0x43, 0x95, 0x4d, 0x60, 0x86, 0x83,\n    0x00, 0x03, 0x43, 0x95, 0x4d, 0x60, 0x86, 0x83\n]);\nassert_eq!(16947640962301618749969007319746179, rdr.read_u128::<BigEndian>().unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u128"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:331:911":{"id":"0:331:911","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[1812,33],"end":[1812,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:11355:169","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:822-0:340:2473":{"id":"b:5:822-0:340:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:818:265","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:824:4021","5:825:4022","5:826:4023"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:197:2582":{"id":"0:197:2582","crate_id":0,"name":"read_i32","span":{"filename":"src/lib.rs","begin":[590,4],"end":[592,5]},"visibility":"default","docs":"Reads a signed 32 bit integer from `buf`.\n\n# Panics\n\nPanics when `buf.len() < 4`.\n\n# Examples\n\nWrite and read `i32` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 4];\nLittleEndian::write_i32(&mut buf, -1_000_000);\nassert_eq!(-1_000_000, LittleEndian::read_i32(&buf));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:142:2631":{"id":"0:142:2631","crate_id":0,"name":"write_i128","span":{"filename":"src/io.rs","begin":[1410,4],"end":[1414,5]},"visibility":"default","docs":"Writes a signed 128 bit integer to the underlying writer.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i128"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:139:2561":{"id":"0:139:2561","crate_id":0,"name":"write_u128","span":{"filename":"src/io.rs","begin":[1402,4],"end":[1406,5]},"visibility":"default","docs":"Writes an unsigned 128 bit integer to the underlying writer.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u128"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:203:2610":{"id":"0:203:2610","crate_id":0,"name":"read_f32","span":{"filename":"src/lib.rs","begin":[725,4],"end":[727,5]},"visibility":"default","docs":"Reads a IEEE754 single-precision (4 bytes) floating point number.\n\n# Panics\n\nPanics when `buf.len() < 4`.\n\n# Examples\n\nWrite and read `f32` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet e = 2.71828;\nlet mut buf = [0; 4];\nLittleEndian::write_f32(&mut buf, e);\nassert_eq!(e, LittleEndian::read_f32(&buf));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"f32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:222:2687":{"id":"0:222:2687","crate_id":0,"name":"read_i128_into","span":{"filename":"src/lib.rs","begin":[1177,4],"end":[1182,5]},"visibility":"default","docs":"Reads signed 128 bit integers from `src` into `dst`.\n\n# Panics\n\nPanics when `src.len() != 16*dst.len()`.\n\n# Examples\n\nWrite and read `i128` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 64];\nlet numbers_given = [1, 2, 0xf00f, 0xffee];\nLittleEndian::write_i128_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0; 4];\nLittleEndian::read_i128_into(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"i128"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:323":{"id":"0:323","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1812,9],"end":[1812,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:324:501"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:301:2555":{"id":"0:301:2555","crate_id":0,"name":"write_u32","span":{"filename":"src/lib.rs","begin":[2169,4],"end":[2171,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:160:2638":{"id":"0:160:2638","crate_id":0,"name":"write_f64","span":{"filename":"src/io.rs","begin":[1570,4],"end":[1574,5]},"visibility":"default","docs":"Writes a IEEE754 double-precision (8 bytes) floating point number to\nthe underlying writer.\n\n# Errors\n\nThis method returns the same errors as [`Write::write_all`].\n\n[`Write::write_all`]: https://doc.rust-lang.org/std/io/trait.Write.html#method.write_all\n\n# Examples\n\nWrite a big-endian double-precision floating point number to a `Write`:\n\n```rust\nuse std::f64;\n\nuse byteorder::{BigEndian, WriteBytesExt};\n\nlet mut wtr = Vec::new();\nwtr.write_f64::<BigEndian>(f64::consts::PI).unwrap();\nassert_eq!(wtr, b\"\\x40\\x09\\x21\\xfb\\x54\\x44\\x2d\\x18\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"f64"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:73:2610":{"id":"0:73:2610","crate_id":0,"name":"read_f32","span":{"filename":"src/io.rs","begin":[499,4],"end":[503,5]},"visibility":"default","docs":"Reads a IEEE754 single-precision (4 bytes) floating point number from\nthe underlying reader.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead a big-endian single-precision floating point number from a `Read`:\n\n```rust\nuse std::f32;\nuse std::io::Cursor;\n\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![\n    0x40, 0x49, 0x0f, 0xdb,\n]);\nassert_eq!(f32::consts::PI, rdr.read_f32::<BigEndian>().unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"f32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:283:2717":{"id":"0:283:2717","crate_id":0,"name":"write_u64_into","span":{"filename":"src/lib.rs","begin":[2056,4],"end":[2058,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u64"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83:2661":{"id":"0:83:2661","crate_id":0,"name":"read_u64_into","span":{"filename":"src/io.rs","begin":[635,4],"end":[642,5]},"visibility":"default","docs":"Reads a sequence of unsigned 64 bit integers from the underlying\nreader.\n\nThe given buffer is either filled completely or an error is returned.\nIf an error is returned, the contents of `dst` are unspecified.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead a sequence of unsigned 64 bit big-endian integers from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![\n    0, 0, 0, 0, 0, 0, 2, 5,\n    0, 0, 0, 0, 0, 0, 3, 0,\n]);\nlet mut dst = [0; 2];\nrdr.read_u64_into::<BigEndian>(&mut dst).unwrap();\nassert_eq!([517, 768], dst);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u64"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:217:2661":{"id":"0:217:2661","crate_id":0,"name":"read_u64_into","span":{"filename":"src/lib.rs","begin":[1043,4],"end":[1043,50]},"visibility":"default","docs":"Reads unsigned 64 bit integers from `src` into `dst`.\n\n# Panics\n\nPanics when `src.len() != 8*dst.len()`.\n\n# Examples\n\nWrite and read `u64` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 32];\nlet numbers_given = [1, 2, 0xf00f, 0xffee];\nLittleEndian::write_u64_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0; 4];\nLittleEndian::read_u64_into(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u64"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:311:2667":{"id":"0:311:2667","crate_id":0,"name":"read_u128_into","span":{"filename":"src/lib.rs","begin":[2219,4],"end":[2221,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u128"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:70:2604":{"id":"0:70:2604","crate_id":0,"name":"read_int128","span":{"filename":"src/io.rs","begin":[468,4],"end":[472,5]},"visibility":"default","docs":"Reads a signed n-bytes integer from the underlying reader.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i128"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:304:2553":{"id":"0:304:2553","crate_id":0,"name":"write_uint","span":{"filename":"src/lib.rs","begin":[2184,4],"end":[2191,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"u64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265:2511":{"id":"0:265:2511","crate_id":0,"name":"read_uint","span":{"filename":"src/lib.rs","begin":[1960,4],"end":[1966,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:275:2566":{"id":"0:275:2566","crate_id":0,"name":"write_uint128","span":{"filename":"src/lib.rs","begin":[2012,4],"end":[2023,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"u128"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:219:2673":{"id":"0:219:2673","crate_id":0,"name":"read_i16_into","span":{"filename":"src/lib.rs","begin":[1090,4],"end":[1095,5]},"visibility":"default","docs":"Reads signed 16 bit integers from `src` to `dst`.\n\n# Panics\n\nPanics when `buf.len() != 2*dst.len()`.\n\n# Examples\n\nWrite and read `i16` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 8];\nlet numbers_given = [1, 2, 0x0f, 0xee];\nLittleEndian::write_i16_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0; 4];\nLittleEndian::read_i16_into(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"i16"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112:2619":{"id":"0:112:2619","crate_id":0,"name":"write_i16","span":{"filename":"src/io.rs","begin":[1178,4],"end":[1182,5]},"visibility":"default","docs":"Writes a signed 16 bit integer to the underlying writer.\n\n# Errors\n\nThis method returns the same errors as [`Write::write_all`].\n\n[`Write::write_all`]: https://doc.rust-lang.org/std/io/trait.Write.html#method.write_all\n\n# Examples\n\nWrite signed 16 bit big-endian integers to a `Write`:\n\n```rust\nuse byteorder::{BigEndian, WriteBytesExt};\n\nlet mut wtr = Vec::new();\nwtr.write_i16::<BigEndian>(193).unwrap();\nwtr.write_i16::<BigEndian>(-132).unwrap();\nassert_eq!(wtr, b\"\\x00\\xc1\\xff\\x7c\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i16"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:229:2711":{"id":"0:229:2711","crate_id":0,"name":"write_u16_into","span":{"filename":"src/lib.rs","begin":[1330,4],"end":[1330,51]},"visibility":"default","docs":"Writes unsigned 16 bit integers from `src` into `dst`.\n\n# Panics\n\nPanics when `dst.len() != 2*src.len()`.\n\n# Examples\n\nWrite and read `u16` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 8];\nlet numbers_given = [1, 2, 0xf00f, 0xffee];\nLittleEndian::write_u16_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0; 4];\nLittleEndian::read_u16_into(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u16"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:108:3423":{"id":"0:108:3423","crate_id":0,"name":"write_i8","span":{"filename":"src/io.rs","begin":[1126,4],"end":[1128,5]},"visibility":"default","docs":"Writes a signed 8 bit integer to the underlying writer.\n\nNote that since this writes a single byte, no byte order conversions\nare used. It is included for completeness.\n\n# Errors\n\nThis method returns the same errors as [`Write::write_all`].\n\n[`Write::write_all`]: https://doc.rust-lang.org/std/io/trait.Write.html#method.write_all\n\n# Examples\n\nWrite signed 8 bit integers to a `Write`:\n\n```rust\nuse byteorder::WriteBytesExt;\n\nlet mut wtr = Vec::new();\nwtr.write_i8(2).unwrap();\nwtr.write_i8(-5).unwrap();\nassert_eq!(wtr, b\"\\x02\\xfb\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i8"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:4067-0:322:2474":{"id":"b:2:4067-0:322:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4065:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4069:1888"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:281:2711":{"id":"0:281:2711","crate_id":0,"name":"write_u16_into","span":{"filename":"src/lib.rs","begin":[2046,4],"end":[2048,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u16"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:303:2561":{"id":"0:303:2561","crate_id":0,"name":"write_u128","span":{"filename":"src/lib.rs","begin":[2179,4],"end":[2181,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269:2550":{"id":"0:269:2550","crate_id":0,"name":"write_u16","span":{"filename":"src/lib.rs","begin":[1978,4],"end":[1980,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"u16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:296:2511":{"id":"0:296:2511","crate_id":0,"name":"read_uint","span":{"filename":"src/lib.rs","begin":[2148,4],"end":[2153,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3200:150":{"id":"2:3200:150","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"a:2:3455:3921-0:340:2473":{"id":"a:2:3455:3921-0:340:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3455:3921","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:312:2711":{"id":"0:312:2711","crate_id":0,"name":"write_u16_into","span":{"filename":"src/lib.rs","begin":[2224,4],"end":[2226,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u16"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1815,0],"end":[1819,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3239:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:251:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:46:2587":{"id":"0:46:2587","crate_id":0,"name":"read_i48","span":{"filename":"src/io.rs","begin":[295,4],"end":[299,5]},"visibility":"default","docs":"Reads a signed 48 bit integer from the underlying reader.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead signed 48 bit big-endian integers from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![0x9d, 0x71, 0xab, 0xe7, 0x97, 0x8f]);\nassert_eq!(-108363435763825, rdr.read_i48::<BigEndian>().unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:204:2617":{"id":"0:204:2617","crate_id":0,"name":"read_f64","span":{"filename":"src/lib.rs","begin":[748,4],"end":[750,5]},"visibility":"default","docs":"Reads a IEEE754 double-precision (8 bytes) floating point number.\n\n# Panics\n\nPanics when `buf.len() < 8`.\n\n# Examples\n\nWrite and read `f64` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet phi = 1.6180339887;\nlet mut buf = [0; 8];\nLittleEndian::write_f64(&mut buf, phi);\nassert_eq!(phi, LittleEndian::read_f64(&buf));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"f64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:192:2561":{"id":"0:192:2561","crate_id":0,"name":"write_u128","span":{"filename":"src/lib.rs","begin":[486,4],"end":[486,43]},"visibility":"default","docs":"Writes an unsigned 128 bit integer `n` to `buf`.\n\n# Panics\n\nPanics when `buf.len() < 16`.\n\n# Examples\n\nWrite and read `u128` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 16];\nLittleEndian::write_u128(&mut buf, 1_000_000);\nassert_eq!(1_000_000, LittleEndian::read_u128(&buf));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:226:2704":{"id":"0:226:2704","crate_id":0,"name":"read_f64_into","span":{"filename":"src/lib.rs","begin":[1269,4],"end":[1275,5]},"visibility":"default","docs":"Reads IEEE754 single-precision (4 bytes) floating point numbers from\n`src` into `dst`.\n\n# Panics\n\nPanics when `src.len() != 8*dst.len()`.\n\n# Examples\n\nWrite and read `f64` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 32];\nlet numbers_given = [1.0, 2.0, 31.312e211, -11.32e91];\nLittleEndian::write_f64_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0.0; 4];\nLittleEndian::read_f64_into(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"f64"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:237:2745":{"id":"0:237:2745","crate_id":0,"name":"write_i128_into","span":{"filename":"src/lib.rs","begin":[1540,4],"end":[1545,5]},"visibility":"default","docs":"Writes signed 128 bit integers from `src` into `dst`.\n\n# Panics\n\nPanics when `dst.len() != 16*src.len()`.\n\n# Examples\n\nWrite and read `i128` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 64];\nlet numbers_given = [1, 2, 0xf00f, 0xffee];\nLittleEndian::write_i128_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0; 4];\nLittleEndian::read_i128_into(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"i128"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:346":{"id":"0:346","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1842,29],"end":[1842,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2969:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:290:2793":{"id":"0:290:2793","crate_id":0,"name":"from_slice_f64","span":{"filename":"src/lib.rs","begin":[2114,4],"end":[2123,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["numbers",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"f64"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:184:2535":{"id":"0:184:2535","crate_id":0,"name":"read_u128","span":{"filename":"src/lib.rs","begin":[328,4],"end":[328,37]},"visibility":"default","docs":"Reads an unsigned 128 bit integer from `buf`.\n\n# Panics\n\nPanics when `buf.len() < 16`.\n\n# Examples\n\nWrite and read `u128` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 16];\nLittleEndian::write_u128(&mut buf, 1_000_000);\nassert_eq!(1_000_000, LittleEndian::read_u128(&buf));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"u128"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:3201:1875":{"id":"2:3201:1875","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:46278:239","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3171:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:193:2553":{"id":"0:193:2553","crate_id":0,"name":"write_uint","span":{"filename":"src/lib.rs","begin":[506,4],"end":[506,57]},"visibility":"default","docs":"Writes an unsigned integer `n` to `buf` using only `nbytes`.\n\n# Panics\n\nIf `n` is not representable in `nbytes`, or if `nbytes` is `> 8`, then\nthis method panics.\n\n# Examples\n\nWrite and read an n-byte number in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 3];\nLittleEndian::write_uint(&mut buf, 1_000_000, 3);\nassert_eq!(1_000_000, LittleEndian::read_uint(&buf, 3));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"u64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:90:2679":{"id":"0:90:2679","crate_id":0,"name":"read_i32_into","span":{"filename":"src/io.rs","begin":[782,4],"end":[789,5]},"visibility":"default","docs":"Reads a sequence of signed 32 bit integers from the underlying\nreader.\n\nThe given buffer is either filled completely or an error is returned.\nIf an error is returned, the contents of `dst` are unspecified.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead a sequence of signed 32 bit big-endian integers from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![0, 0, 2, 5, 0, 0, 3, 0]);\nlet mut dst = [0; 2];\nrdr.read_i32_into::<BigEndian>(&mut dst).unwrap();\nassert_eq!([517, 768], dst);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"i32"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:221:2683":{"id":"0:221:2683","crate_id":0,"name":"read_i64_into","span":{"filename":"src/lib.rs","begin":[1148,4],"end":[1153,5]},"visibility":"default","docs":"Reads signed 64 bit integers from `src` into `dst`.\n\n# Panics\n\nPanics when `src.len() != 8*dst.len()`.\n\n# Examples\n\nWrite and read `i64` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 32];\nlet numbers_given = [1, 2, 0xf00f, 0xffee];\nLittleEndian::write_i64_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0; 4];\nLittleEndian::read_i64_into(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"i64"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2874:3609":{"id":"2:2874:3609","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:11-0:20:2441":{"id":"0:11-0:20:2441","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[82,20],"end":[82,32]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"crate::io::ReadBytesExt","name":"ReadBytesExt","id":"0:20:2441","glob":false}}},"a:2:46106:3874-0:340:2473":{"id":"a:2:46106:3874-0:340:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:46106:3874","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:351":{"id":"0:351","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1842,39],"end":[1842,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","clamp","min"],"trait":{"name":"Ord","id":"2:3000:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:352:509"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:145:2553":{"id":"0:145:2553","crate_id":0,"name":"write_uint","span":{"filename":"src/io.rs","begin":[1442,4],"end":[1450,5]},"visibility":"default","docs":"Writes an unsigned n-bytes integer to the underlying writer.\n\n# Errors\n\nThis method returns the same errors as [`Write::write_all`].\n\n[`Write::write_all`]: https://doc.rust-lang.org/std/io/trait.Write.html#method.write_all\n\n# Panics\n\nIf the given integer is not representable in the given number of bytes,\nthis method panics. If `nbytes > 8`, this method panics.\n\n# Examples\n\nWrite unsigned 40 bit big-endian integers to a `Write`:\n\n```rust\nuse byteorder::{BigEndian, WriteBytesExt};\n\nlet mut wtr = Vec::new();\nwtr.write_uint::<BigEndian>(312550384361, 5).unwrap();\nwtr.write_uint::<BigEndian>(43, 5).unwrap();\nassert_eq!(wtr, b\"\\x48\\xc5\\x74\\x62\\xe9\\x00\\x00\\x00\\x00\\x2b\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}],["nbytes",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:209:2628":{"id":"0:209:2628","crate_id":0,"name":"write_i64","span":{"filename":"src/lib.rs","begin":[858,4],"end":[860,5]},"visibility":"default","docs":"Writes a signed 64 bit integer `n` to `buf`.\n\n# Panics\n\nPanics when `buf.len() < 8`.\n\n# Examples\n\nWrite and read `i64` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 8];\nLittleEndian::write_i64(&mut buf, -1_000_000_000);\nassert_eq!(-1_000_000_000, LittleEndian::read_i64(&buf));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"i64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:210:2631":{"id":"0:210:2631","crate_id":0,"name":"write_i128","span":{"filename":"src/lib.rs","begin":[880,4],"end":[882,5]},"visibility":"default","docs":"Writes a signed 128 bit integer `n` to `buf`.\n\n# Panics\n\nPanics when `buf.len() < 16`.\n\n# Examples\n\nWrite and read n-byte `i128` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 16];\nLittleEndian::write_i128(&mut buf, -1_000_000_000);\nassert_eq!(-1_000_000_000, LittleEndian::read_i128(&buf));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"i128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:339:1342":{"id":"0:339:1342","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[1812,55],"end":[1812,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:46010:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:34980:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:220:2679":{"id":"0:220:2679","crate_id":0,"name":"read_i32_into","span":{"filename":"src/lib.rs","begin":[1119,4],"end":[1124,5]},"visibility":"default","docs":"Reads signed 32 bit integers from `src` into `dst`.\n\n# Panics\n\nPanics when `src.len() != 4*dst.len()`.\n\n# Examples\n\nWrite and read `i32` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 16];\nlet numbers_given = [1, 2, 0xf00f, 0xffee];\nLittleEndian::write_i32_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0; 4];\nLittleEndian::read_i32_into(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"i32"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:310:2661":{"id":"0:310:2661","crate_id":0,"name":"read_u64_into","span":{"filename":"src/lib.rs","begin":[2214,4],"end":[2216,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u64"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:61:2511":{"id":"0:61:2511","crate_id":0,"name":"read_uint","span":{"filename":"src/io.rs","begin":[427,4],"end":[431,5]},"visibility":"default","docs":"Reads an unsigned n-bytes integer from the underlying reader.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead an unsigned n-byte big-endian integer from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![0x80, 0x74, 0xfa]);\nassert_eq!(8418554, rdr.read_uint::<BigEndian>(3).unwrap());","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:356":{"id":"0:356","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1842,55],"end":[1842,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","lt","le"],"trait":{"name":"PartialOrd","id":"2:3006:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:357:1342"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:233:2734":{"id":"0:233:2734","crate_id":0,"name":"write_i8_into","span":{"filename":"src/lib.rs","begin":[1428,4],"end":[1433,5]},"visibility":"default","docs":"Writes signed 8 bit integers from `src` into `dst`.\n\nNote that since each `i8` is a single byte, no byte order conversions\nare used. This method is included because it provides a safe, simple\nway for the caller to write from a `&[i8]` buffer. (Without this\nmethod, the caller would have to either use `unsafe` code or convert\neach byte to `u8` individually.)\n\n# Panics\n\nPanics when `buf.len() != src.len()`.\n\n# Examples\n\nWrite and read `i8` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian, ReadBytesExt};\n\nlet mut bytes = [0; 4];\nlet numbers_given = [1, 2, 0xf, 0xe];\nLittleEndian::write_i8_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0; 4];\nbytes.as_ref().read_i8_into(&mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"i8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3455:3921-0:322:2474":{"id":"a:2:3455:3921-0:322:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3455:3921","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:344":{"id":"0:344","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1842,22],"end":[1842,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:11127:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:345:837"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:133:2559":{"id":"0:133:2559","crate_id":0,"name":"write_u64","span":{"filename":"src/io.rs","begin":[1367,4],"end":[1371,5]},"visibility":"default","docs":"Writes an unsigned 64 bit integer to the underlying writer.\n\n# Errors\n\nThis method returns the same errors as [`Write::write_all`].\n\n[`Write::write_all`]: https://doc.rust-lang.org/std/io/trait.Write.html#method.write_all\n\n# Examples\n\nWrite unsigned 64 bit big-endian integers to a `Write`:\n\n```rust\nuse byteorder::{BigEndian, WriteBytesExt};\n\nlet mut wtr = Vec::new();\nwtr.write_u64::<BigEndian>(918733457491587).unwrap();\nwtr.write_u64::<BigEndian>(143).unwrap();\nassert_eq!(wtr, b\"\\x00\\x03\\x43\\x95\\x4d\\x60\\x86\\x83\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x8f\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:175:2472":{"id":"0:175:2472","crate_id":0,"name":"Sealed","span":{"filename":"src/lib.rs","begin":[172,4],"end":[172,23]},"visibility":"public","docs":"Sealed stops crates other than byteorder from implementing any traits\nthat use it.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:211:2622":{"id":"0:211:2622","crate_id":0,"name":"write_int","span":{"filename":"src/lib.rs","begin":[903,4],"end":[905,5]},"visibility":"default","docs":"Writes a signed integer `n` to `buf` using only `nbytes`.\n\n# Panics\n\nIf `n` is not representable in `nbytes`, or if `nbytes` is `> 8`, then\nthis method panics.\n\n# Examples\n\nWrite and read an n-byte number in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 3];\nLittleEndian::write_int(&mut buf, -1_000, 3);\nassert_eq!(-1_000, LittleEndian::read_int(&buf, 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"i64"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:320:2791":{"id":"0:320:2791","crate_id":0,"name":"from_slice_f32","span":{"filename":"src/lib.rs","begin":[2280,4],"end":[2289,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["numbers",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"f32"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:234:2739":{"id":"0:234:2739","crate_id":0,"name":"write_i16_into","span":{"filename":"src/lib.rs","begin":[1456,4],"end":[1461,5]},"visibility":"default","docs":"Writes signed 16 bit integers from `src` into `dst`.\n\n# Panics\n\nPanics when `buf.len() != 2*src.len()`.\n\n# Examples\n\nWrite and read `i16` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 8];\nlet numbers_given = [1, 2, 0x0f, 0xee];\nLittleEndian::write_i16_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0; 4];\nLittleEndian::read_i16_into(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"i16"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277:2647":{"id":"0:277:2647","crate_id":0,"name":"read_u16_into","span":{"filename":"src/lib.rs","begin":[2026,4],"end":[2028,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u16"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2930-0:340:2473":{"id":"b:2:2930-0:340:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2928:3919","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2932:27948"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:195:2571":{"id":"0:195:2571","crate_id":0,"name":"read_i16","span":{"filename":"src/lib.rs","begin":[546,4],"end":[548,5]},"visibility":"default","docs":"Reads a signed 16 bit integer from `buf`.\n\n# Panics\n\nPanics when `buf.len() < 2`.\n\n# Examples\n\nWrite and read `i16` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 2];\nLittleEndian::write_i16(&mut buf, -1_000);\nassert_eq!(-1_000, LittleEndian::read_i16(&buf));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"i16"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:343":{"id":"0:343","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1842,16],"end":[1842,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3415:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:64:2577":{"id":"0:64:2577","crate_id":0,"name":"read_int","span":{"filename":"src/io.rs","begin":[452,4],"end":[456,5]},"visibility":"default","docs":"Reads a signed n-bytes integer from the underlying reader.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead an unsigned n-byte big-endian integer from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![0xc1, 0xff, 0x7c]);\nassert_eq!(-4063364, rdr.read_int::<BigEndian>(3).unwrap());","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:213:2635":{"id":"0:213:2635","crate_id":0,"name":"write_f32","span":{"filename":"src/lib.rs","begin":[949,4],"end":[951,5]},"visibility":"default","docs":"Writes a IEEE754 single-precision (4 bytes) floating point number.\n\n# Panics\n\nPanics when `buf.len() < 4`.\n\n# Examples\n\nWrite and read `f32` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet e = 2.71828;\nlet mut buf = [0; 4];\nLittleEndian::write_f32(&mut buf, e);\nassert_eq!(e, LittleEndian::read_f32(&buf));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"f32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215:2647":{"id":"0:215:2647","crate_id":0,"name":"read_u16_into","span":{"filename":"src/lib.rs","begin":[997,4],"end":[997,50]},"visibility":"default","docs":"Reads unsigned 16 bit integers from `src` into `dst`.\n\n# Panics\n\nPanics when `src.len() != 2*dst.len()`.\n\n# Examples\n\nWrite and read `u16` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 8];\nlet numbers_given = [1, 2, 0xf00f, 0xffee];\nLittleEndian::write_u16_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0; 4];\nLittleEndian::read_u16_into(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u16"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:67:2545":{"id":"0:67:2545","crate_id":0,"name":"read_uint128","span":{"filename":"src/io.rs","begin":[460,4],"end":[464,5]},"visibility":"default","docs":"Reads an unsigned n-bytes integer from the underlying reader.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["nbytes",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u128"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:352:509":{"id":"0:352:509","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[1842,39],"end":[1842,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:34980:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:188:2552":{"id":"0:188:2552","crate_id":0,"name":"write_u24","span":{"filename":"src/lib.rs","begin":[406,4],"end":[408,5]},"visibility":"default","docs":"Writes an unsigned 24 bit integer `n` to `buf`, stored in u32.\n\n# Panics\n\nPanics when `buf.len() < 3`.\n\n# Examples\n\nWrite and read 24 bit `u32` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 3];\nLittleEndian::write_u24(&mut buf, 1_000_000);\nassert_eq!(1_000_000, LittleEndian::read_u24(&buf));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"u32"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:4067-0:340:2473":{"id":"b:2:4067-0:340:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4065:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4069:1888"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:248:2791":{"id":"0:248:2791","crate_id":0,"name":"from_slice_f32","span":{"filename":"src/lib.rs","begin":[1786,4],"end":[1786,43]},"visibility":"default","docs":"Converts the given slice of IEEE754 single-precision (4 bytes) floating\npoint numbers to a particular endianness.\n\nIf the endianness matches the endianness of the host platform, then\nthis is a no-op.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["numbers",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"f32"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:324:501":{"id":"0:324:501","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[1812,9],"end":[1812,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:239:2749":{"id":"0:239:2749","crate_id":0,"name":"write_f64_into","span":{"filename":"src/lib.rs","begin":[1598,4],"end":[1603,5]},"visibility":"default","docs":"Writes IEEE754 double-precision (8 bytes) floating point numbers from\n`src` into `dst`.\n\n# Panics\n\nPanics when `src.len() != 8*dst.len()`.\n\n# Examples\n\nWrite and read `f64` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 32];\nlet numbers_given = [1.0, 2.0, 31.312e211, -11.32e91];\nLittleEndian::write_f64_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0.0; 4];\nLittleEndian::read_f64_into(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"f64"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:205:2619":{"id":"0:205:2619","crate_id":0,"name":"write_i16","span":{"filename":"src/lib.rs","begin":[770,4],"end":[772,5]},"visibility":"default","docs":"Writes a signed 16 bit integer `n` to `buf`.\n\n# Panics\n\nPanics when `buf.len() < 2`.\n\n# Examples\n\nWrite and read `i16` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 2];\nLittleEndian::write_i16(&mut buf, -1_000);\nassert_eq!(-1_000, LittleEndian::read_i16(&buf));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"i16"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:40:2582":{"id":"0:40:2582","crate_id":0,"name":"read_i32","span":{"filename":"src/io.rs","begin":[243,4],"end":[247,5]},"visibility":"default","docs":"Reads a signed 32 bit integer from the underlying reader.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead signed 32 bit big-endian integers from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![0xff, 0xff, 0x7a, 0x33]);\nassert_eq!(-34253, rdr.read_i32::<BigEndian>().unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:20:2441":{"id":"0:20:2441","crate_id":0,"name":"ReadBytesExt","span":{"filename":"src/io.rs","begin":[30,0],"end":[1045,1]},"visibility":"public","docs":"Extends [`Read`] with methods for reading numbers. (For `std::io`.)\n\nMost of the methods defined here have an unconstrained type parameter that\nmust be explicitly instantiated. Typically, it is instantiated with either\nthe [`BigEndian`] or [`LittleEndian`] types defined in this crate.\n\n# Examples\n\nRead unsigned 16 bit big-endian integers from a [`Read`]:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![2, 5, 3, 0]);\nassert_eq!(517, rdr.read_u16::<BigEndian>().unwrap());\nassert_eq!(768, rdr.read_u16::<BigEndian>().unwrap());\n```\n\n[`BigEndian`]: enum.BigEndian.html\n[`LittleEndian`]: enum.LittleEndian.html\n[`Read`]: https://doc.rust-lang.org/std/io/trait.Read.html","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:21:3255","0:23:3262","0:25:2502","0:28:2571","0:31:2510","0:34:2576","0:37:2514","0:40:2582","0:43:2521","0:46:2587","0:49:2528","0:52:2592","0:55:2535","0:58:2597","0:61:2511","0:64:2577","0:67:2545","0:70:2604","0:73:2610","0:76:2617","0:79:2647","0:81:2655","0:83:2661","0:85:2667","0:87:3362","0:88:2673","0:90:2679","0:92:2683","0:94:2687","0:96:2694","0:98:2700","0:100:2704","0:102:2708"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:3731:3243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:104"]}}},"0:191:2559":{"id":"0:191:2559","crate_id":0,"name":"write_u64","span":{"filename":"src/lib.rs","begin":[467,4],"end":[467,41]},"visibility":"default","docs":"Writes an unsigned 64 bit integer `n` to `buf`.\n\n# Panics\n\nPanics when `buf.len() < 8`.\n\n# Examples\n\nWrite and read `u64` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 8];\nLittleEndian::write_u64(&mut buf, 1_000_000);\nassert_eq!(1_000_000, LittleEndian::read_u64(&buf));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:321:2793":{"id":"0:321:2793","crate_id":0,"name":"from_slice_f64","span":{"filename":"src/lib.rs","begin":[2292,4],"end":[2301,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["numbers",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"f64"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:115:2552":{"id":"0:115:2552","crate_id":0,"name":"write_u24","span":{"filename":"src/io.rs","begin":[1205,4],"end":[1209,5]},"visibility":"default","docs":"Writes an unsigned 24 bit integer to the underlying writer.\n\n# Errors\n\nThis method returns the same errors as [`Write::write_all`].\n\n[`Write::write_all`]: https://doc.rust-lang.org/std/io/trait.Write.html#method.write_all\n\n# Examples\n\nWrite unsigned 24 bit big-endian integers to a `Write`:\n\n```rust\nuse byteorder::{BigEndian, WriteBytesExt};\n\nlet mut wtr = Vec::new();\nwtr.write_u24::<BigEndian>(267).unwrap();\nwtr.write_u24::<BigEndian>(120111).unwrap();\nassert_eq!(wtr, b\"\\x00\\x01\\x0b\\x01\\xd5\\x2f\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u32"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:327:837":{"id":"0:327:837","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1812,22],"end":[1812,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:11091:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:11072:239","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:185:2511":{"id":"0:185:2511","crate_id":0,"name":"read_uint","span":{"filename":"src/lib.rs","begin":[348,4],"end":[348,51]},"visibility":"default","docs":"Reads an unsigned n-bytes integer from `buf`.\n\n# Panics\n\nPanics when `nbytes < 1` or `nbytes > 8` or\n`buf.len() < nbytes`\n\n# Examples\n\nWrite and read an n-byte number in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 3];\nLittleEndian::write_uint(&mut buf, 1_000_000, 3);\nassert_eq!(1_000_000, LittleEndian::read_uint(&buf, 3));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["nbytes",{"primitive":"usize"}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:247:2788":{"id":"0:247:2788","crate_id":0,"name":"from_slice_i128","span":{"filename":"src/lib.rs","begin":[1774,4],"end":[1779,5]},"visibility":"default","docs":"Converts the given slice of signed 128 bit integers to a particular\nendianness.\n\nIf the endianness matches the endianness of the host platform, then\nthis is a no-op.\n\n# Examples\n\nConvert the host platform's endianness to big-endian:\n\n```rust\nuse byteorder::{ByteOrder, BigEndian};\n\nlet mut numbers = [5, 65000];\nBigEndian::from_slice_i128(&mut numbers);\nassert_eq!(numbers, [5i128.to_be(), 65000i128.to_be()]);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"i128"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:243:2771":{"id":"0:243:2771","crate_id":0,"name":"from_slice_u128","span":{"filename":"src/lib.rs","begin":[1679,4],"end":[1679,45]},"visibility":"default","docs":"Converts the given slice of unsigned 128 bit integers to a particular\nendianness.\n\nIf the endianness matches the endianness of the host platform, then\nthis is a no-op.\n\n# Examples\n\nConvert the host platform's endianness to big-endian:\n\n```rust\nuse byteorder::{ByteOrder, BigEndian};\n\nlet mut numbers = [5, 65000];\nBigEndian::from_slice_u128(&mut numbers);\nassert_eq!(numbers, [5u128.to_be(), 65000u128.to_be()]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["numbers",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u128"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:315:2720":{"id":"0:315:2720","crate_id":0,"name":"write_u128_into","span":{"filename":"src/lib.rs","begin":[2239,4],"end":[2241,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u128"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:212:2633":{"id":"0:212:2633","crate_id":0,"name":"write_int128","span":{"filename":"src/lib.rs","begin":[926,4],"end":[928,5]},"visibility":"default","docs":"Writes a signed integer `n` to `buf` using only `nbytes`.\n\n# Panics\n\nIf `n` is not representable in `nbytes`, or if `nbytes` is `> 16`, then\nthis method panics.\n\n# Examples\n\nWrite and read n-length signed numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 3];\nLittleEndian::write_int128(&mut buf, -1_000, 3);\nassert_eq!(-1_000, LittleEndian::read_int128(&buf, 3));\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"i128"}],["nbytes",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:272:2561":{"id":"0:272:2561","crate_id":0,"name":"write_u128","span":{"filename":"src/lib.rs","begin":[1993,4],"end":[1995,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["n",{"primitive":"u128"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:107:3416":{"id":"0:107:3416","crate_id":0,"name":"write_u8","span":{"filename":"src/io.rs","begin":[1098,4],"end":[1100,5]},"visibility":"default","docs":"Writes an unsigned 8 bit integer to the underlying writer.\n\nNote that since this writes a single byte, no byte order conversions\nare used. It is included for completeness.\n\n# Errors\n\nThis method returns the same errors as [`Write::write_all`].\n\n[`Write::write_all`]: https://doc.rust-lang.org/std/io/trait.Write.html#method.write_all\n\n# Examples\n\nWrite unsigned 8 bit integers to a `Write`:\n\n```rust\nuse byteorder::WriteBytesExt;\n\nlet mut wtr = Vec::new();\nwtr.write_u8(2).unwrap();\nwtr.write_u8(5).unwrap();\nassert_eq!(wtr, b\"\\x02\\x05\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"u8"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3420:262-0:322:2474":{"id":"a:2:3420:262-0:322:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3420:262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:46107:3873-0:322:2474":{"id":"a:2:46107:3873-0:322:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:46107:3873","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:289:2791":{"id":"0:289:2791","crate_id":0,"name":"from_slice_f32","span":{"filename":"src/lib.rs","begin":[2102,4],"end":[2111,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["numbers",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"f32"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:313:2714":{"id":"0:313:2714","crate_id":0,"name":"write_u32_into","span":{"filename":"src/lib.rs","begin":[2229,4],"end":[2231,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u32"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:52:2592":{"id":"0:52:2592","crate_id":0,"name":"read_i64","span":{"filename":"src/io.rs","begin":[347,4],"end":[351,5]},"visibility":"default","docs":"Reads a signed 64 bit integer from the underlying reader.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead a signed 64 bit big-endian integer from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![0x80, 0, 0, 0, 0, 0, 0, 0]);\nassert_eq!(i64::min_value(), rdr.read_i64::<BigEndian>().unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:223:2694":{"id":"0:223:2694","crate_id":0,"name":"read_f32_into","span":{"filename":"src/lib.rs","begin":[1207,4],"end":[1213,5]},"visibility":"default","docs":"Reads IEEE754 single-precision (4 bytes) floating point numbers from\n`src` into `dst`.\n\n# Panics\n\nPanics when `src.len() != 4*dst.len()`.\n\n# Examples\n\nWrite and read `f32` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 16];\nlet numbers_given = [1.0, 2.0, 31.312e31, -11.32e19];\nLittleEndian::write_f32_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0.0; 4];\nLittleEndian::read_f32_into(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"f32"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:87:3362":{"id":"0:87:3362","crate_id":0,"name":"read_i8_into","span":{"filename":"src/io.rs","begin":[716,4],"end":[719,5]},"visibility":"default","docs":"Reads a sequence of signed 8 bit integers from the underlying reader.\n\nThe given buffer is either filled completely or an error is returned.\nIf an error is returned, the contents of `dst` are unspecified.\n\nNote that since each `i8` is a single byte, no byte order conversions\nare used. This method is included because it provides a safe, simple\nway for the caller to read into a `&mut [i8]` buffer. (Without this\nmethod, the caller would have to either use `unsafe` code or convert\neach byte to `i8` individually.)\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead a sequence of signed 8 bit integers from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![2, 251, 3]);\nlet mut dst = [0; 3];\nrdr.read_i8_into(&mut dst).unwrap();\nassert_eq!([2, -5, 3], dst);\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"i8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:288:2771":{"id":"0:288:2771","crate_id":0,"name":"from_slice_u128","span":{"filename":"src/lib.rs","begin":[2093,4],"end":[2099,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["numbers",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u128"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:825:4022":{"id":"5:825:4022","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:23:3262":{"id":"0:23:3262","crate_id":0,"name":"read_i8","span":{"filename":"src/io.rs","begin":[85,4],"end":[89,5]},"visibility":"default","docs":"Reads a signed 8 bit integer from the underlying reader.\n\nNote that since this reads a single byte, no byte order conversions\nare used. It is included for completeness.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead signed 8 bit integers from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::ReadBytesExt;\n\nlet mut rdr = Cursor::new(vec![0x02, 0xfb]);\nassert_eq!(2, rdr.read_i8().unwrap());\nassert_eq!(-5, rdr.read_i8().unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i8"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:46106:3874-0:322:2474":{"id":"a:2:46106:3874-0:322:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:46106:3874","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:355:732":{"id":"0:355:732","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[1842,44],"end":[1842,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:253":{"id":"0:253","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1845,0],"end":[1849,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3239:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:254:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:319:2771":{"id":"0:319:2771","crate_id":0,"name":"from_slice_u128","span":{"filename":"src/lib.rs","begin":[2271,4],"end":[2277,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["numbers",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u128"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:822-0:322:2474":{"id":"b:5:822-0:322:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2918:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:818:265","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:824:4021","5:825:4022","5:826:4023"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:216:2655":{"id":"0:216:2655","crate_id":0,"name":"read_u32_into","span":{"filename":"src/lib.rs","begin":[1020,4],"end":[1020,50]},"visibility":"default","docs":"Reads unsigned 32 bit integers from `src` into `dst`.\n\n# Panics\n\nPanics when `src.len() != 4*dst.len()`.\n\n# Examples\n\nWrite and read `u32` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 16];\nlet numbers_given = [1, 2, 0xf00f, 0xffee];\nLittleEndian::write_u32_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0; 4];\nLittleEndian::read_u32_into(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u32"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:46107:3873-0:340:2473":{"id":"a:2:46107:3873-0:340:2473","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:46107:3873","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LittleEndian","id":"0:340:2473","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:37:2514":{"id":"0:37:2514","crate_id":0,"name":"read_u32","span":{"filename":"src/io.rs","begin":[217,4],"end":[221,5]},"visibility":"default","docs":"Reads an unsigned 32 bit integer from the underlying reader.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead unsigned 32 bit big-endian integers from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![0x00, 0x00, 0x01, 0x0b]);\nassert_eq!(267, rdr.read_u32::<BigEndian>().unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u32"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:58:2597":{"id":"0:58:2597","crate_id":0,"name":"read_i128","span":{"filename":"src/io.rs","begin":[402,4],"end":[406,5]},"visibility":"default","docs":"Reads a signed 128 bit integer from the underlying reader.\n\n# Errors\n\nThis method returns the same errors as [`Read::read_exact`].\n\n[`Read::read_exact`]: https://doc.rust-lang.org/std/io/trait.Read.html#method.read_exact\n\n# Examples\n\nRead a signed 128 bit big-endian integer from a `Read`:\n\n```rust\nuse std::io::Cursor;\nuse byteorder::{BigEndian, ReadBytesExt};\n\nlet mut rdr = Cursor::new(vec![0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nassert_eq!(i128::min_value(), rdr.read_i128::<BigEndian>().unwrap());\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"i128"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2877:27947":{"id":"2:2877:27947","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:326":{"id":"0:326","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1812,22],"end":[1812,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:11127:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:327:837"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2875-0:322:2474":{"id":"b:2:2875-0:322:2474","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:36221:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2869:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2877:27947"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:263:2528":{"id":"0:263:2528","crate_id":0,"name":"read_u64","span":{"filename":"src/lib.rs","begin":[1950,4],"end":[1952,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225:2700":{"id":"0:225:2700","crate_id":0,"name":"read_f32_into_unchecked","span":{"filename":"src/lib.rs","begin":[1242,4],"end":[1244,5]},"visibility":"default","docs":"**DEPRECATED**.\n\nThis method is deprecated. Use `read_f32_into` instead.\nReads IEEE754 single-precision (4 bytes) floating point numbers from\n`src` into `dst`.\n\n# Panics\n\nPanics when `src.len() != 4*dst.len()`.\n\n# Examples\n\nWrite and read `f32` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 16];\nlet numbers_given = [1.0, 2.0, 31.312e31, -11.32e19];\nLittleEndian::write_f32_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0.0; 4];\nLittleEndian::read_f32_into_unchecked(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":["#[inline]","#[deprecated(since = \"1.3.0\", note = \"please use `read_f32_into` instead\")]"],"deprecation":{"since":"1.3.0","note":"please use `read_f32_into` instead"},"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"f32"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:235:2741":{"id":"0:235:2741","crate_id":0,"name":"write_i32_into","span":{"filename":"src/lib.rs","begin":[1484,4],"end":[1489,5]},"visibility":"default","docs":"Writes signed 32 bit integers from `src` into `dst`.\n\n# Panics\n\nPanics when `dst.len() != 4*src.len()`.\n\n# Examples\n\nWrite and read `i32` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut bytes = [0; 16];\nlet numbers_given = [1, 2, 0xf00f, 0xffee];\nLittleEndian::write_i32_into(&numbers_given, &mut bytes);\n\nlet mut numbers_got = [0; 4];\nLittleEndian::read_i32_into(&bytes, &mut numbers_got);\nassert_eq!(numbers_given, numbers_got);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"i32"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:256:2814":{"id":"0:256:2814","crate_id":0,"name":"NetworkEndian","span":{"filename":"src/lib.rs","begin":[1880,0],"end":[1880,35]},"visibility":"public","docs":"Defines network byte order serialization.\n\nNetwork byte order is defined by [RFC 1700][1] to be big-endian, and is\nreferred to in several protocol specifications.  This type is an alias of\n[`BigEndian`].\n\n[1]: https://tools.ietf.org/html/rfc1700\n\nNote that this type has no value constructor. It is used purely at the\ntype level.\n\n# Examples\n\nWrite and read `i16` numbers in big endian order:\n\n```rust\nuse byteorder::{ByteOrder, NetworkEndian, BigEndian};\n\nlet mut buf = [0; 2];\nBigEndian::write_i16(&mut buf, -5_000);\nassert_eq!(-5_000, NetworkEndian::read_i16(&buf));\n```\n\n[`BigEndian`]: enum.BigEndian.html","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"0:287:2767":{"id":"0:287:2767","crate_id":0,"name":"from_slice_u64","span":{"filename":"src/lib.rs","begin":[2084,4],"end":[2090,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["numbers",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u64"}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:338":{"id":"0:338","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1812,55],"end":[1812,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","lt","le"],"trait":{"name":"PartialOrd","id":"2:3006:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BigEndian","id":"0:322:2474","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:339:1342"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:148:2622":{"id":"0:148:2622","crate_id":0,"name":"write_int","span":{"filename":"src/io.rs","begin":[1478,4],"end":[1486,5]},"visibility":"default","docs":"Writes a signed n-bytes integer to the underlying writer.\n\n# Errors\n\nThis method returns the same errors as [`Write::write_all`].\n\n[`Write::write_all`]: https://doc.rust-lang.org/std/io/trait.Write.html#method.write_all\n\n# Panics\n\nIf the given integer is not representable in the given number of bytes,\nthis method panics. If `nbytes > 8`, this method panics.\n\n# Examples\n\nWrite signed 56 bit big-endian integers to a `Write`:\n\n```rust\nuse byteorder::{BigEndian, WriteBytesExt};\n\nlet mut wtr = Vec::new();\nwtr.write_int::<BigEndian>(-3548172039376767, 7).unwrap();\nwtr.write_int::<BigEndian>(43, 7).unwrap();\nassert_eq!(wtr, b\"\\xf3\\x64\\xf4\\xd1\\xfd\\xb0\\x81\\x00\\x00\\x00\\x00\\x00\\x00\\x2b\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i64"}],["nbytes",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:124:2624":{"id":"0:124:2624","crate_id":0,"name":"write_i32","span":{"filename":"src/io.rs","begin":[1286,4],"end":[1290,5]},"visibility":"default","docs":"Writes a signed 32 bit integer to the underlying writer.\n\n# Errors\n\nThis method returns the same errors as [`Write::write_all`].\n\n[`Write::write_all`]: https://doc.rust-lang.org/std/io/trait.Write.html#method.write_all\n\n# Examples\n\nWrite signed 32 bit big-endian integers to a `Write`:\n\n```rust\nuse byteorder::{BigEndian, WriteBytesExt};\n\nlet mut wtr = Vec::new();\nwtr.write_i32::<BigEndian>(-34253).unwrap();\nwtr.write_i32::<BigEndian>(1205419366).unwrap();\nassert_eq!(wtr, b\"\\xff\\xff\\x7a\\x33\\x47\\xd9\\x3d\\x66\");\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"i32"}]],"output":{"resolved_path":{"name":"Result","id":"1:3201:239","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"ByteOrder","id":"0:178:2498","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180:2510":{"id":"0:180:2510","crate_id":0,"name":"read_u24","span":{"filename":"src/lib.rs","begin":[248,4],"end":[250,5]},"visibility":"default","docs":"Reads an unsigned 24 bit integer from `buf`, stored in u32.\n\n# Panics\n\nPanics when `buf.len() < 3`.\n\n# Examples\n\nWrite and read 24 bit `u32` numbers in little endian order:\n\n```rust\nuse byteorder::{ByteOrder, LittleEndian};\n\nlet mut buf = [0; 3];\nLittleEndian::write_u24(&mut buf, 1_000_000);\nassert_eq!(1_000_000, LittleEndian::read_u24(&buf));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"u32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"2:3000:207":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:8286:9130":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:46348:208":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:48994:240":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:15983:5236":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"17:11776:23772":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"2:44406:7529":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"6:5594:6702":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"11:893:8257":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"6:5249:6547":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"16:6502:22776":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:51555:7756":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"16:6159:5590":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:5651:1016":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:5844:8380":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"6:5333:6587":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:16794:5462":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"1:6670:7783":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"6:492:6142":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"14:40:4709":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"17:14371:4833":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"16:6368:5623":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:50868:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"18:635:4346":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:45005:3762":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:3532:3788":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:46107:3873":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"6:1704:6334":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:15134:4970":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:11210:7792":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"1:8577:3780":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:3171:272":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"6:6609:6881":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:12441:4054":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:8179:34628":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:3155:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:12811:497":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:6475:7248":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:2292:3731":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:12594:4593":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:44580:7538":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:8962:7852":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:37736:16307":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:12835:1005":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:13654:4674":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"6:560:6186":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:42262:16316":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:9682:8404":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"2:43555:9159":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:50183:7707":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"17:14128:4771":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:15990:5237":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:12830:1919":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:8114:16140":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:3167:273":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"17:16385:5361":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:44516:7534":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"6:5485:6665":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"16:7919:8232":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:14591:4869":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:48275:3760":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:12562:4057":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:44602:7242":{"crate_id":2,"path":["core","ffi","va_list","VaListImpl"],"kind":"struct"},"16:7401:37330":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"16:8598:8244":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:1980:586":{"crate_id":2,"path":["core","intrinsics","copy_nonoverlapping"],"kind":"function"},"6:474:6134":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"11:862:9145":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"16:4404:5555":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"6:5357:6592":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"2:50407:7715":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"16:7789:37332":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:44787:7553":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"16:7938:5844":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"17:13882:4723":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"16:2435:22804":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"2:14601:8321":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"2:51957:7772":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:51288:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:780:8351":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:51051:7738":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:50980:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:25843:35265":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"16:6588:5661":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"17:12337:8133":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:26190:3715":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"17:16033:5247":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"11:1934:6036":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"18:538:4332":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:9583:7873":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:12028:8117":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"18:491:4323":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:14264:4795":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"5:1411:5788":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:1090:8257":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:11995:8114":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:3203:150":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:10938:28206":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"2:3415:121":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:3164:157":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:8008:2826":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"11:691:4048":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"6:5496:6668":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"5:827:122":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:11221:7887":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"6:1691:6330":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"6:5490:6667":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:6662:6906":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:15821:5191":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:51176:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:8035:28099":{"crate_id":1,"path":["std","panicking","begin_panic","Payload"],"kind":"struct"},"2:48772:7681":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:44544:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:42207:16315":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"5:2638:7208":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:16639:4712":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"6:466:6129":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:46670:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"5:1442:8259":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"18:659:8065":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:5590:458":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"5:6758:9453":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:12829:923":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"16:6998:5690":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"1:9616:7876":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"17:10673:4487":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:50687:7725":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"16:7462:8211":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:12649:4526":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"6:8024:7157":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:15804:5188":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:13598:4666":{"crate_id":17,"path":["object","read","RelocationMapEntry"],"kind":"struct"},"2:51827:7703":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2:51023:7737":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:50952:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:9238:16296":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"14:190:22747":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"6:6718:6926":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"17:15462:5091":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"0:0:3111":{"crate_id":0,"path":["byteorder"],"kind":"module"},"1:728:9125":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:12207:4544":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"1:3668:3794":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"1:8768:3764":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:13842:4712":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:8716:3758":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:34633:33739":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"17:14196:4791":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:2303:3730":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"6:4877:6409":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"16:5144:5568":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:9098:4048":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:49056:33885":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"5:1580:4049":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"6:6780:6945":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"17:10261:23730":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:8838:9276":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:10806:30415":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"1:6891:8393":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:12109:4535":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:15584:5139":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:15646:5150":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:11132:133":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:45791:7579":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"6:5327:6586":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:15920:5215":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:12568:8140":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:6044:233":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:46744:8319":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:11403:28205":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"6:8041:7167":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:5131:8375":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"6:4972:6451":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"18:507:4324":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:47767:8339":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:6058:7784":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:9672:248":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:1067:8252":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:47938:4051":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:13509:16342":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:8321:8412":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:12816:1753":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:50308:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:50084:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:5179:3669":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:44632:9190":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"2:26679:7300":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:11355:169":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"6:7318:7006":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"5:5754:4027":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"18:718:4357":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:51680:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:25964:9368":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"11:2580:6041":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:2766:3716":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"2:50715:7726":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:51079:7739":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:44368:33752":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"6:5052:6494":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"5:7827:3036":{"crate_id":5,"path":["alloc","collections","btree","set","Cursor"],"kind":"struct"},"18:515:4327":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"5:3385:6036":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:51428:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:37602:16306":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:48243:7647":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:34606:3702":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"6:1490:6204":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"16:7838:23675":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:26188:35480":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"6:5194:6517":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:12051:4421":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"5:7992:7231":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:51583:7757":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"5:5163:230":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:26507:7273":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:4243:9247":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"17:14449:4846":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"11:1927:6035":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:8220:2472":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"1:8432:7794":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:52034:7703":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"17:16253:5323":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"16:6421:5481":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:14184:4788":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:51232:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:4922:6431":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"6:6750:6935":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"2:50267:7710":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:43647:227":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"6:5413:6620":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:8444:152":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:51540:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:13706:4681":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:46010:206":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:44482:7533":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:51344:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"5:3854:4048":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"16:7765:5824":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"16:7030:5699":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:2834:3777":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"6:6517:6829":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:11969:4533":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"13:272:6020":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:8708:3834":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"17:13027:23871":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:6244:8387":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:9348:8429":{"crate_id":1,"path":["std","pipe","PipeReader"],"kind":"struct"},"6:1644:6303":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:0:3513":{"crate_id":17,"path":["object"],"kind":"module"},"5:7777:8299":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:3158:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:36222:259":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"5:8039:8301":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:49067:8342":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"5:313:35538":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"1:9966:8413":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"1:12077:7620":{"crate_id":1,"path":["std","sys","thread_local","native","eager","State"],"kind":"enum"},"1:8852:8423":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:16657:4722":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"14:7:8245":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"16:5689:5580":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:11429:23753":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:14643:7551":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"5:2318:7198":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:43724:7392":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"5:3724:8282":{"crate_id":5,"path":["alloc","collections","btree","set","CursorMutKey"],"kind":"struct"},"17:486:8072":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:8781:8423":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"16:7508:5782":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:12181:8405":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:26176:9451":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"17:15745:5170":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"6:6726:6930":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"6:8294:7177":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:14961:4941":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:12220:4545":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"2:48295:7649":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:48320:7531":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:9115:7864":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"17:520:4428":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"16:6696:8197":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"6:8300:7178":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:14527:4860":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:11763:4516":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"6:1540:6228":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:4046:8370":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:36312:279":{"crate_id":2,"path":["core","marker","UnsizedConstParamTy"],"kind":"trait"},"5:4314:35538":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"16:3987:4383":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"16:6408:5627":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:12834:1895":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:45271:7573":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"11:1084:22734":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:12913:4661":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"6:5290:6570":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:13047:4040":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"17:16406:5364":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:16017:5244":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:51946:7703":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2:3922:34699":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"5:1627:6033":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"1:12270:8369":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:9570:8440":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"5:6342:7219":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:8493:3036":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:3695:155":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:47197:3665":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"17:11464:8096":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"11:2601:7224":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:51888:7769":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:12581:8141":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"6:5570:6695":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:50896:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:15733:5167":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:8787:8425":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:16341:5346":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"9:53:8845":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:46054:3966":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:52064:2153":{"crate_id":2,"path":["core","core_arch","x86","bf16"],"kind":"struct"},"1:5794:8377":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:47365:7619":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:9884:8316":{"crate_id":2,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"6:8283:7173":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:3519:16308":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"5:3323:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:46278:239":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"18:613:37351":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:15204:4983":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:15019:4950":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:2764:3715":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"6:6574:6859":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"16:5113:5567":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:12884:4612":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:586:28167":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:8858:7841":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"1:6718:233":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"5:8016:258":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:50672:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:48861:16443":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:2185:210":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:25305:35259":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:50379:7714":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:3413:278":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:3692:154":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"6:6503:6818":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"6:5449:6641":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"17:14840:4923":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:50784:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:15783:5184":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:47980:7632":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:14630:4873":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:8277:7172":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:48826:135":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"17:13237:8165":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"2:4716:8308":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"5:2197:3036":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:48654:7673":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"17:16676:5433":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"17:16223:5316":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:981:4048":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:15:2875":{"crate_id":2,"path":["core","write"],"kind":"macro"},"16:2966:5519":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:11265:8093":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:2928:3919":{"crate_id":2,"path":["core","clone","CloneToUninit"],"kind":"trait"},"2:25809:9372":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"2:51907:7770":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:34600:3701":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"17:13334:4442":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:13139:4633":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"17:10437:23736":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"16:8058:8239":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:4342:9252":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:7008:8394":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:16700:5438":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"17:16285:5338":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"5:6475:3739":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"17:13763:4693":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"16:7542:5787":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:2006:8358":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:3625:3771":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"15:338:8842":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"11:1920:6034":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:42896:16318":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:11334:37346":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:8477:8415":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"16:6843:5676":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:4464:9272":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:3731:3243":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:4961:7054":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"5:1256:37147":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:12198:7910":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"16:7159:5725":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"6:6391:6752":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"5:41:9161":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"11:901:8258":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:11696:4514":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:9088:7860":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:3788:3405":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"6:7351:7029":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:46446:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:16772:5456":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"6:5656:6735":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:2294:3732":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"17:14419:4843":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:8775:3760":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:10772:4490":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:15813:5189":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:11649:4526":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"16:6144:23665":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"5:1646:8250":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"16:5060:5565":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"6:5096:6508":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:10517:7590":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"17:12820:8155":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:4480:9274":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:10339:23733":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:8699:177":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:12363:8135":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"6:1598:6266":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"6:4929:6435":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:14075:4758":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"1:12796:28076":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"6:5027:6480":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:51789:7703":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"17:10411:23735":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:14437:4844":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"16:6713:8198":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:4065:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"5:3398:35745":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:13801:4708":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:48619:7668":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"6:5225:6536":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"16:4241:5553":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:50743:7727":{"crate_id":2,"path":["core","core_arch","simd","f16x8"],"kind":"struct"},"6:8259:7169":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:4442:31837":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"16:6738:37329":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:48568:7667":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"16:6822:23669":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"1:697:8347":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:6173:5593":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:14577:4566":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:6892:6974":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:12261:4049":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:47382:169":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:16025:5245":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:48125:4058":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:11609:8101":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:14099:4760":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:12099:4534":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:3689:153":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:51064:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:7528:7109":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"6:5643:6729":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"5:1677:8279":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:5248:9297":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"17:12061:8119":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"2:44677:8333":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"6:7596:7145":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:14851:4925":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"11:451:37305":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:10565:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:12743:8149":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:9448:7869":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:14027:4746":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"6:1585:6259":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"6:5637:6726":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"6:5309:6578":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"6:8265:7170":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:44799:7554":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"11:855:8252":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"14:163:8245":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"16:5417:5577":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:16842:5472":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"1:11603:174":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"6:7464:7066":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:4869:7240":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:11382:28202":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:12413:7913":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:14740:217":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:46038:4048":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:14482:4854":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:12126:4537":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"17:16262:5325":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"6:4837:6376":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:50728:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:322:8071":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"6:533:6171":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:52053:7703":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2:47836:4046":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:15108:4968":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:1059:8250":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:44856:4344":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"5:7787:7222":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"2:3893:159":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:26886:7311":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"17:11401:23752":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:46203:7604":{"crate_id":2,"path":["core","range","iter","IterRangeFrom"],"kind":"struct"},"1:2119:820":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"17:13201:8162":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"17:15150:4972":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:9639:199":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"16:2796:5511":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"6:486:6140":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"6:480:6137":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:51036:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:26875:7310":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"17:14696:4882":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"17:11558:8098":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"6:5403:6613":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:12837:1471":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"5:5622:1753":{"crate_id":5,"path":["alloc","slice"],"kind":"module"},"17:12260:4551":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"16:7192:23672":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:14551:4861":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:45990:7595":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:10068:23725":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:11108:8091":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:25407:9366":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:26594:7285":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:2750:704":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:49117:7701":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"16:8585:8241":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:2430:151":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"16:7016:5697":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:50840:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"16:2704:5507":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:43572:226":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"6:4965:6448":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:777:8349":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"5:2348:7201":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:12436:4560":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:2909:3779":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:48972:7696":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"11:2586:37296":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:47846:4044":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:48426:7655":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:16041:5248":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:5034:9277":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:47159:3664":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:3006:214":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"18:670:8069":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:50071:7702":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"6:6701:6916":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"2:25531:9367":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:12870:4607":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:47906:4034":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:11324:8094":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:11020:3784":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"1:9511:7872":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"16:2724:5508":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:3420:262":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"18:80:27930":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:46707:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"6:7458:7064":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:12822:773":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"18:623:37352":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:4996:8311":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:25354:9370":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"17:12941:4619":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"2:3492:9360":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"16:7424:23673":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:14604:4870":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:16128:5297":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"5:4284:8266":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:2848:28169":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"5:3715:8281":{"crate_id":5,"path":["alloc","collections","btree","set","CursorMut"],"kind":"struct"},"2:40276:5808":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:16242:5322":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"11:1160:8263":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"6:6768:6943":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"2:51471:7753":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:15165:4976":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:12950:4620":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"2:51359:7749":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"16:7969:5848":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"5:3139:4021":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"5:1826:35538":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"5:7490:35601":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:10182:23728":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:4352:9253":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:11144:3658":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:8415:7792":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:50700:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:5687:133":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:5076:9265":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"16:6389:8171":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"16:6084:5583":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"16:2860:5514":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"1:1217:8264":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:3497:9362":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:13679:4675":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"5:3352:4048":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:15997:5238":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:34621:3664":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"11:874:8255":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:7282:5753":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:36311:118":{"crate_id":2,"path":["core","marker","ConstParamTy_"],"kind":"trait"},"11:718:3966":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"6:6483:6805":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:48338:7530":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:12964:4621":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:1954:729":{"crate_id":1,"path":["std","env"],"kind":"module"},"17:16758:5453":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"2:51204:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:15192:4979":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:47610:7627":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:11491:8097":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:26820:7305":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"17:10208:23729":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:15685:5159":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"6:5458:6647":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:48776:7682":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:14897:119":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:12399:28047":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"16:8483:5907":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:12304:23844":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCacheSlice"],"kind":"enum"},"2:44778:7552":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:48788:7685":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"17:13515:4605":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:10971:8089":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"5:6777:9454":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"18:706:4353":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:14116:4768":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:8792:9228":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"9:356:22670":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:10846:3763":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"5:5477:7219":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"16:7372:5532":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:26270:2472":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"5:4359:4049":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"16:7807:37333":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"16:6640:8178":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"2:49002:220":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"11:1694:37309":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:15617:5142":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:51877:7703":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2:50588:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"4:0:3504":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"5:4013:8281":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"16:5318:5574":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"5:1272:35747":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:11660:8093":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:13163:4634":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"13:0:3503":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:50168:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:11136:3655":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:16745:5447":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"5:2401:35629":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"11:2358:8259":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"17:5334:8085":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"17:15540:5134":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"16:7223:5739":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:16052:5252":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:47919:4050":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"5:8029:7232":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:43717:8331":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:8106:4474":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:50603:7722":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:44755:7548":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"16:8000:5537":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"16:6794:5670":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"1:2600:9211":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:11397:28204":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:8023:28098":{"crate_id":1,"path":["std","panicking","begin_panic_handler","StaticStrPayload"],"kind":"struct"},"2:51938:7771":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"17:15007:4948":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:16070:5255":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:36204:3667":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"17:16686:5434":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"2:4728:111":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"16:7471:5777":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"16:6970:5524":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:11695:34492":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"2:2904:34485":{"crate_id":2,"path":["core","clone","uninit","InitializingSlice"],"kind":"struct"},"17:12152:4540":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:50939:7734":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:13213:8163":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"2:46318:4048":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:13493:4109":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:11014:3786":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"2:5070:3667":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"9:391:22656":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:25352:2472":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"11:850:8265":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:1054:8265":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:26919:7314":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"11:2248:6038":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"2:36197:8330":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"16:8267:5866":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"6:554:6183":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"16:7044:5529":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:11362:37347":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:2758:3776":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:11247:7890":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"6:6787:6946":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"0:178:2498":{"crate_id":0,"path":["byteorder","ByteOrder"],"kind":"trait"},"11:1125:8262":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:14942:7269":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"2:2869:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:13736:7645":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:12247:28216":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"5:5604:16336":{"crate_id":5,"path":["alloc","rc","UniqueRcUninit"],"kind":"struct"},"16:3695:5548":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:2224:1408":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:46237:227":{"crate_id":2,"path":["core","range","RangeInclusive"],"kind":"struct"},"17:10530:23739":{"crate_id":17,"path":["object","common","RelocationFlags"],"kind":"enum"},"17:13099:4510":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"5:3140:35750":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:44717:7543":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:12331:8371":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:4991:8310":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:15797:5187":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:11596:8100":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:11146:3659":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:14920:7267":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:3577:5803":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:14752:4891":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"6:6536:6831":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:13774:4060":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:4472:9273":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:47373:3683":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"16:7350:5760":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:12828:942":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"5:6222:8266":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:5808:8378":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:9375:7865":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"16:908:8071":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"1:9726:7878":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:13189:8161":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"11:316:6023":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"11:2455:3966":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2:46557:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"16:6984:5541":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:46145:7602":{"crate_id":2,"path":["core","range","iter","IterRange"],"kind":"struct"},"2:52026:7775":{"crate_id":2,"path":["core","core_arch","x86","__m256h"],"kind":"struct"},"1:8826:7839":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:15519:5129":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:6421:6777":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:26783:2472":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"6:6472:6797":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:26908:7313":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"2:3905:16108":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:50099:7704":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:2457:8080":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:36279:3835":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:44523:7535":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"2:15040:4031":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"17:10577:2473":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"1:2584:3704":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"1:8049:28100":{"crate_id":1,"path":["std","panicking","rust_panic_without_hook","RewrapBox"],"kind":"struct"},"16:7305:5754":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:12406:4061":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"16:7259:5752":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:47893:4033":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:14794:4913":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"11:2157:8259":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"16:4694:5556":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:3575:3784":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"16:8121:223":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:5005:6467":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"5:7747:3966":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"11:2415:4048":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"2:50364:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:46372:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:11069:37342":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:15454:5088":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"1:5914:8381":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:12368:4047":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:13429:4656":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:50476:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"11:0:3508":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"6:7587:7142":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"1:4356:9254":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:51846:7703":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"19:0:1338":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:44699:7540":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:43609:225":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"6:5065:6498":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"6:5515:6676":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"17:15359:5005":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:914:9232":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"2:13080:4041":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"2:14618:8324":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"16:6866:23670":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:14671:4880":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:12831:1901":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:48980:176":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"11:2530:22730":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"1:11230:7793":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"16:4267:5554":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"16:8546:5914":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"6:1685:6327":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:48808:7690":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"5:8140:8303":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"16:6098:8169":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"6:4955:6445":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"5:968:9146":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:51596:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"16:6852:5677":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:8650:16298":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:12278:4638":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:50252:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:498:6145":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:44769:7551":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:48405:16354":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"6:1697:6331":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"5:5705:35538":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:46185:7603":{"crate_id":2,"path":["core","range","iter","IterRangeInclusive"],"kind":"struct"},"16:4902:5561":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:14991:4944":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:12785:9132":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:51163:7742":{"crate_id":2,"path":["core","core_arch","simd","f16x16"],"kind":"struct"},"16:3441:5546":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"2:35007:3935":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"16:4120:5550":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"17:12415:4558":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:25303:35257":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:50631:7723":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:12842:23869":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"17:13559:23744":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:50224:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"5:2211:8281":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"1:5985:9317":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"6:518:6162":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:1522:6217":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"6:5349:6591":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"2:25521:2472":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"2:50519:7719":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:3888:269":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:12826:930":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:50336:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:2969:147":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:13405:4655":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"16:7907:5843":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:51372:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:51499:7754":{"crate_id":2,"path":["core","core_arch","simd","f16x32"],"kind":"struct"},"1:11524:7866":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"16:5649:5579":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:11921:4526":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:11907:8113":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:13085:8160":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"16:2820:5512":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:8463:7787":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:2497:3733":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:9542:28031":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:49043:7697":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:16176:5298":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:12403:8139":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"16:6953:5689":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:26397:7271":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:36772:5801":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:3294:8306":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"2:51456:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:12780:8152":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"18:680:4347":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:8240:7789":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:50112:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:51667:7760":{"crate_id":2,"path":["core","core_arch","simd","i32x32"],"kind":"struct"},"17:11546:4509":{"crate_id":17,"path":["object","read","archive","ArchiveSymbol"],"kind":"struct"},"17:12930:4618":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"17:12755:8150":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"5:7819:223":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"6:5204:6524":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"16:6111:5588":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:6589:7249":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:3239:127":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"5:1565:4048":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:3534:3789":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:15593:5140":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:8725:3759":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"1:3478:3786":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"17:13915:4729":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"16:8209:5528":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"9:237:7620":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"16:7959:5847":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:14014:4745":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:13945:9203":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"16:8723:150":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:10827:8087":{"crate_id":17,"path":["object","read","read_cache","ReadCacheInternal"],"kind":"struct"},"1:3437:32560":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:51611:7758":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:11140:3657":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:14977:4942":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:12833:1913":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:14736:4886":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"6:5630:6723":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"1:11017:3788":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"6:7558:7126":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:1741:6035":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:9921:3872":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:8877:8427":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:10607:4484":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:8881:7039":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:10821:8086":{"crate_id":17,"path":["object","read","read_cache","ReadCache"],"kind":"struct"},"16:5255:5572":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"15:405:22769":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"1:11550:7690":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"2:3878:4111":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"11:2435:4049":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"16:5198:5570":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:12078:6038":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:14656:4877":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:50504:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"16:8105:5854":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:14460:4847":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"6:4813:6358":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:13249:8166":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"16:8636:23679":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:5365:6593":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"6:7441:7059":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"10:44:6049":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"16:7949:5535":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"11:1043:8259":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:11542:28080":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:7066:8397":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"1:11276:28079":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:2432:8365":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:50295:7711":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"11:345:6026":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:48472:7665":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:44554:7537":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:48780:7683":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"5:5750:4026":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:4294:9249":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:44443:16137":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"17:16308:5339":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:14143:4777":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:2439:3748":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"1:6172:8386":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"11:102:6021":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:15041:4961":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"16:4983:5564":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:13777:4694":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:12548:4059":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:10640:4486":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"11:2334:5788":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"2:46137:4187":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:12193:4543":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"2:4:1303":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:46863:3657":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:9401:7867":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:43908:16142":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:12235:4548":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"1:9388:7866":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:5126:3668":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:48644:7669":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:16830:5469":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"16:5085:5566":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:25322:35262":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:1235:8074":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:51191:7743":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:13006:23870":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:48021:3764":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:5331:3864":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:761:8348":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:11646:7894":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"16:2620:5503":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:11622:8102":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:13350:4652":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:7011:9329":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:6051:7783":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:2586:9207":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"5:2222:8282":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"1:1185:5788":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:12293:8130":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"6:8340:7186":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"6:4889:6412":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:4302:9250":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:47357:3684":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:47176:150":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:6615:8388":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:12767:8151":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:52007:7774":{"crate_id":2,"path":["core","core_arch","x86","__m128h"],"kind":"struct"},"17:14087:4759":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"16:6123:5526":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"5:1041:4048":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:51869:7768":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:11127:123":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:36144:3651":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:52072:7777":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:13994:8317":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:3654:128":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"5:3519:8280":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"2:46066:3871":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"5:7738:4032":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:11833:34493":{"crate_id":2,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"16:7578:7873":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:45253:7570":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:2186:703":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"18:598:37350":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:10034:8317":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"6:7614:7148":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:47121:5885":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:4700:8374":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"12:0:3509":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:9048:9311":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"18:608:8064":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"6:7371:7035":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:14684:4881":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:25804:2472":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"18:531:4329":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"16:2415:22777":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"5:6724:16688":{"crate_id":5,"path":["alloc","sync","UniqueArcUninit"],"kind":"struct"},"16:8096:8240":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:50196:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:16443:5371":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"16:6658:8188":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:8612:5542":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:9652:3739":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"5:4080:8280":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"2:38054:16312":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"5:2421:7207":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:8707:3795":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"17:13050:4631":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:11296:8453":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"6:5033:6483":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:5117:16120":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:3462:3729":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"2:50323:7712":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:10866:4492":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:9277:35022":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"5:7767:8266":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"5:7855:3966":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"16:8528:5911":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:9364:211":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:8936:3869":{"crate_id":1,"path":["std","panic","PanicHookInfo"],"kind":"struct"},"2:45938:7593":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"6:5428:6626":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:4620:3739":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"6:6429:6779":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:11268:28077":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"2:51400:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:12832:1907":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:51838:7767":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"16:6942:5688":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"5:1657:8251":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"6:5611:6709":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:49105:6046":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"17:16783:5461":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"2:11130:123":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"1:6491:28196":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:47967:7629":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:12534:4056":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:615:9108":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"16:5282:5573":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:43687:4110":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"9:0:3506":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"16:6188:5595":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"18:698:4351":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:4912:9295":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"16:3308:5488":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"6:546:6178":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"16:4152:5551":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:37669:16305":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"16:5172:5569":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:25405:2472":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:49035:8340":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:26853:7308":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"17:12731:8148":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:16429:5368":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"6:5684:6745":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:11167:37344":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:11259:3758":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"2:45229:7568":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:3881:8083":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"6:565:6188":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:50827:7730":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:14066:16348":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"16:2990:5520":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:51984:7703":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"18:735:27939":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"6:1668:6320":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:11555:34488":{"crate_id":2,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"17:15829:5193":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:44650:3766":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"2:45756:182":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2:45972:7594":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"16:8298:5870":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:12836:1983":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:3981:9230":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"1:3797:32071":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:7326:7256":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"2:51708:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:5666:6736":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"17:12248:4549":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"1:12430:28218":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"16:2530:5499":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"16:155:5476":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"1:5860:116":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"18:481:4322":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"16:8223:5858":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:10904:151":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"2:10747:35023":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"5:3998:3036":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"17:15575:5135":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:13581:4623":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"6:8318:7181":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"14:31:8245":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:3250:150":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"16:7168:5726":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"16:6625:5664":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:5263:9298":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:16063:5253":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:15896:5208":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"3:0:532":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:37196:16304":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:12614:8143":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:2112:9187":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"11:2594:6043":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:44420:7530":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"6:5263:6553":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:50756:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"18:0:3514":{"crate_id":18,"path":["memchr"],"kind":"module"},"16:6808:5521":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:13253:150":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"18:113:27932":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:14002:4744":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"5:1596:3966":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:5609:3765":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"6:7401:7057":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:13953:4735":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"5:1668:223":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"17:12324:8131":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:11073:3405":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"17:15630:5147":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:11059:8090":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"18:765:27940":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:26241:3715":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"0:322:2474":{"crate_id":0,"path":["byteorder","BigEndian"],"kind":"enum"},"1:11292:8412":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"2:8230:16292":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"5:7325:16374":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"2:50140:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:12824:768":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"18:521:27941":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"5:1024:9147":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"6:5159:6513":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:10902:3674":{"crate_id":2,"path":["core","fmt","builders","FromFn"],"kind":"struct"},"6:6669:6907":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:10156:23727":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"3:751:7234":{"crate_id":3,"path":["compiler_builtins","int","big","u256"],"kind":"struct"},"6:5279:6562":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:4987:234":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:12904:4617":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"1:9959:151":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"6:6775:6944":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"6:1658:6314":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:13862:4722":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:12286:3764":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"0:255:2806":{"crate_id":0,"path":["byteorder","LE"],"kind":"type_alias"},"1:11759:8458":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"2:44831:7557":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"6:6682:6911":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:52015:7703":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2:44565:16411":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"6:4937:6437":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"14:205:16356":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:11874:4510":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:14946:4937":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:2602:9212":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"16:7337:5758":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:48792:7686":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"11:1745:168":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:2870:3768":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"3:766:7235":{"crate_id":3,"path":["compiler_builtins","int","big","i256"],"kind":"struct"},"1:9409:4048":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:44686:3761":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:36186:8329":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:50239:7709":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"6:0:1041":{"crate_id":6,"path":["libc"],"kind":"module"},"5:4524:4048":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:44727:146":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"17:15723:5166":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:3507:5802":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"5:3364:35744":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:3522:16309":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"6:5383:6603":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:11138:3656":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"6:5044:6489":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:8235:8408":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"6:5479:6662":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"11:728:8250":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:26703:9231":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:12014:8116":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"16:6440:23667":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"6:6459:6796":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:11064:4564":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"2:47856:4045":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"6:6490:6809":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"0:257:2817":{"crate_id":0,"path":["byteorder","NativeEndian"],"kind":"type_alias"},"17:12269:4552":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"2:51387:7750":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:12520:4058":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:14982:164":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:14865:4927":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"16:2450:5489":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"5:7910:7224":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:4280:9248":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:47412:7625":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:50855:7731":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:44612:8332":{"crate_id":2,"path":["core","ffi","va_list","VaList"],"kind":"struct"},"2:51965:7703":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"5:7921:9139":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"17:11157:8092":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"6:6833:6962":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:14227:123":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"11:1600:8267":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:7135:246":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:46409:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:15709:5165":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"16:6680:8194":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"2:26227:9452":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:46128:3914":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:10151:218":{"crate_id":2,"path":["core","pin","PinCoerceUnsized"],"kind":"trait"},"2:51148:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:9575:8441":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"9:423:22657":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:44737:7545":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:9417:8432":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"6:539:6174":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:45804:9229":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"6:6800:6953":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"18:754:4365":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:51331:7748":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:43559:7386":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2:51303:7747":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"2:48313:7651":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:51762:7763":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:9425:3966":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"16:2467:5491":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:50463:7717":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:48143:4056":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:5239:9296":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"6:8363:7192":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:26864:7309":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"6:4910:6422":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"16:6876:5682":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:46334:3966":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:37535:9363":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"6:5420:1290":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"17:13977:4739":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:2193:3696":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:8654:16297":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:51260:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"5:6364:16680":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:11337:7867":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"2:51652:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:12192:7909":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:46046:4049":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:51639:7759":{"crate_id":2,"path":["core","core_arch","simd","u16x64"],"kind":"struct"},"2:48089:7640":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:2083:8361":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"11:818:8266":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:48685:7679":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:14617:4872":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:46097:3861":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"6:5470:6656":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:7126:7250":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"5:6310:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:47109:7616":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:1025:6033":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"16:7716:37331":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"16:903:8070":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"5:8124:8280":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"1:4957:7050":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"17:15068:4963":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:51415:7751":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:44708:7542":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"11:1900:4048":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:11390:3680":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:47928:4053":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:43475:4186":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:7520:28095":{"crate_id":1,"path":["std","sys","backtrace","print","DisplayBacktrace"],"kind":"struct"},"2:7331:7254":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"17:12831:4600":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"5:7465:35597":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:51484:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"5:1528:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:8881:190":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:26317:9444":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"2:44880:7561":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"5:761:8273":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"16:6914:5686":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:44321:7522":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:9033:7855":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:51808:7703":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2:51120:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"6:7360:7030":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:48441:7661":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"16:2748:5509":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:14045:4754":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"16:8233:23677":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"7:0:1973":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:44428:7522":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"6:7996:7154":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"6:579:6196":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"17:15873:5205":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:3134:2472":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:14313:4820":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"17:14402:4840":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:11916:28208":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"2:11353:165":{"crate_id":2,"path":["core","hash","macros","Hash"],"kind":"proc_derive"},"2:37468:9361":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:5615:215":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"6:1570:6247":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:9104:7863":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"11:2501:8280":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"6:8306:7179":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"16:896:8168":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"2:13660:7636":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:12153:7906":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:2100:3739":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"11:2168:8260":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:50967:7735":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:51819:7766":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:14643:4875":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"5:6151:266":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:43511:16320":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"18:689:4350":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:12167:7907":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:14005:4353":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"6:1531:6222":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:1590:6261":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:14716:4885":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:12818:1878":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"16:8043:37336":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:13225:8164":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"16:7416:8210":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"6:524:6165":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:9799:8359":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"5:3142:7204":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:4751:16111":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"18:589:4335":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:11181:8452":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"2:13697:7641":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:50435:7716":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:12049:2472":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:5154:9261":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:14063:4755":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"16:8014:5538":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:10559:23740":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"5:7936:7225":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"16:2506:5498":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"10:0:3507":{"crate_id":10,"path":["adler"],"kind":"module"},"1:5031:9299":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"5:4484:3739":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"18:651:4324":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"10:36:6048":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"17:12041:8118":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:50392:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:26284:9445":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"2:25320:35260":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"17:14916:4932":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:13965:4738":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"5:1636:8265":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:1719:4048":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:16876:4744":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"17:15665:5151":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:13591:8167":{"crate_id":17,"path":["object","read","RelocationMap"],"kind":"struct"},"16:546:5478":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:3528:8081":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:4493:9275":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"16:3587:5547":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"6:6823:6959":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:9667:247":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"16:6749:5666":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:7629:28214":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:8945:3868":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"0:252:2802":{"crate_id":0,"path":["byteorder","BE"],"kind":"type_alias"},"17:3747:8082":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:11568:7877":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"1:11240:152":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"1:8844:8426":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"6:5541:6678":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:51695:7761":{"crate_id":2,"path":["core","core_arch","simd","u32x32"],"kind":"struct"},"6:1564:6245":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:43667:229":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:10981:37340":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"5:243:8272":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:11461:1753":{"crate_id":2,"path":["core","slice"],"kind":"module"},"2:44657:4033":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"11:1913:8280":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"2:26672:7297":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"9:501:6110":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"17:15180:4623":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:11320:28043":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:12071:8120":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"17:13266:23741":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:3683:3832":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:25276:35254":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"2:50280:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:5370:16131":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"6:6531:6830":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"6:7573:7133":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:15699:5164":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:15963:5230":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:16551:4708":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"2:48784:7684":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:44870:7560":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:15601:5141":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:51107:7740":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:12406:7913":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"16:8565:5917":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:1208:8260":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"6:6927:6999":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"16:8320:23678":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"11:1105:37311":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"16:7075:23671":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:15888:5207":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"15:0:3511":{"crate_id":15,"path":["addr2line"],"kind":"module"},"11:1178:8264":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"5:0:327":{"crate_id":5,"path":["alloc"],"kind":"module"},"16:6042:5525":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"17:13020:4627":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:3161:175":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"1:9358:8431":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:13987:16339":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:51624:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:8225:7788":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:8410:8413":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"16:5224:5571":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:1096:8258":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:1199:8259":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:4837:8309":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:0:1779":{"crate_id":1,"path":["std"],"kind":"module"},"6:4984:6456":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:13471:4659":{"crate_id":17,"path":["object","read","ObjectMapFile"],"kind":"struct"},"6:6912:6988":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:50547:7720":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"5:1292:37148":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:13989:4742":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:16421:5365":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:4770:16112":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"6:7342:7023":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:14343:4829":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV1"],"kind":"struct"},"2:7320:7257":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:43735:7393":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:9988:131":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"2:51915:7703":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"2:46326:4049":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"6:4945:6439":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"18:573:4324":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"16:7358:5531":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:10898:8431":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"16:6781:5669":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:48225:7646":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:45244:3794":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:48304:7650":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:15975:5233":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"6:1633:6295":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:11134:3654":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:26586:7284":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:10706:4488":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:5453:8376":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:51751:7703":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"17:12975:4623":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:10485:23738":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:50351:7713":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:44592:3763":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"1:3577:3785":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"17:12179:4542":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"16:6064:5527":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"16:2570:5501":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:45832:7586":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"6:7473:7070":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:48071:7639":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:51800:7765":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:9596:28032":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"1:868:166":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:14765:8325":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:11395:3681":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"6:5125:6510":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:51743:7762":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"18:563:4334":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:9644:8390":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"6:5374:6597":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:13736:4685":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"17:13393:4654":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:26941:7316":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"1:12387:7912":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"6:6554:6843":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:9677:8403":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"2:50532:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"5:4653:35548":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"5:7130:35538":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"17:2398:23800":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"6:571:6191":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:3455:3921":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"8:0:3505":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"16:4929:5562":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"6:5059:6496":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:47151:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"5:7755:7221":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:50448:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:11894:8112":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"6:4978:6453":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:5160:8084":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"1:2625:9219":{"crate_id":1,"path":["std","fs","exists"],"kind":"function"},"18:643:4324":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:52045:7776":{"crate_id":2,"path":["core","core_arch","x86","__m512h"],"kind":"struct"},"17:13072:8159":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"2:3636:16319":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"2:51219:7744":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"11:368:37297":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"1:785:9128":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:15330:4985":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:6407:233":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:50771:7728":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:3698:3739":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:9010:7620":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"16:8669:5841":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:10645:8444":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"2:26162:2472":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"1:11205:7881":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"1:3480:3787":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:2247:8076":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"11:829:8280":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"2:25533:7270":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"6:4992:6461":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"16:2640:5504":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"16:8165:5530":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"17:15908:5214":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"5:3867:4049":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:6544:6836":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:9229:162":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:46213:223":{"crate_id":2,"path":["core","range","Range"],"kind":"struct"},"1:10626:8358":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"17:15880:5206":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:47404:7624":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"6:5135:6511":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:5074:9264":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:43587:223":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:26630:33730":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"15:317:22760":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"17:11206:4526":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:4364:9256":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:1966:16251":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"2:38227:16313":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:48667:7677":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:10886:4493":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:12669:4597":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:49077:192":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:26056:9448":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"5:7039:3966":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:50127:7705":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"16:7521:5785":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:11511:7865":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:47997:7634":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:26100:9449":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"2:37881:16311":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"16:6462:23668":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:5828:8379":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:50575:7721":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:13825:4709":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:8300:9131":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:1073:9145":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:5449:5578":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:8258:4564":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:47827:4042":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:8774:134":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"16:7212:5738":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:48329:7522":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"17:16231:5317":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"6:1495:6206":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:36984:5798":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:10317:23732":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"6:6758:6936":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"17:14889:4930":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:8688:158":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"6:7497:7083":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:6567:7267":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:12391:8138":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:46842:3655":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:917:202":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"1:10789:116":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"17:14356:4831":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV2"],"kind":"struct"},"6:5213:6529":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:10647:8443":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"1:6583:28200":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:7953:30464":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:10461:23737":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:15483:5099":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:4148:8371":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:1723:3966":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"6:7549:7123":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:42317:16317":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:2918:114":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"16:2486:5497":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:25288:35254":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"6:5173:6514":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:9971:28201":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"17:14876:4928":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:44396:7528":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"6:5319:6582":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:10138:23726":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"6:6886:6973":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"5:7965:16411":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"6:5077:6507":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:9353:8430":{"crate_id":1,"path":["std","pipe","PipeWriter"],"kind":"struct"},"9:176:8856":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:12001:8115":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:14016:16340":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:8422:7793":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:3672:16122":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"2:14713:35072":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"16:6337:5617":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:11142:219":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:1726:8266":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"1:8116:8406":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:6929:7786":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:8698:3793":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"17:16856:5473":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"17:11444:4501":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:8829:3833":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"16:8179:5856":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"14:0:3510":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:15949:5223":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:12310:8370":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:4249:9246":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"17:14564:4864":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:11305:8381":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"16:4810:5558":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:5499:216":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:51135:7741":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"5:2308:9108":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:47614:4036":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:12141:7902":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:27495:249":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"16:8066:23676":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:47818:4043":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"16:3014:22805":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:51527:7755":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"6:1515:6214":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"6:6741:6932":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"16:6573:5658":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:12838:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"6:8271:7171":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:50799:7729":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:11831:8107":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"7:32:22641":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:12827:936":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"6:7424:7058":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:22:853":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:11072:239":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"17:15856:5197":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:4308:9251":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"6:5601:6704":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"16:2920:5517":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:317:8070":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"5:7315:16373":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:12985:4624":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"1:2659:2440":{"crate_id":1,"path":["std","io"],"kind":"module"},"11:1940:6037":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"1:11200:7879":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"2:25413:9369":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:48633:16355":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:36309:3923":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"6:6453:6795":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"1:8485:3778":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:2168:2439":{"crate_id":2,"path":["core","mem","align_of"],"kind":"function"},"2:47137:33821":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"1:1972:8357":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"3:355:239":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"17:15094:4965":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"5:6911:8266":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"5:4452:3739":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:44808:7555":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:2188:209":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"16:2900:5516":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:14903:4931":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:26930:7315":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"2:50924:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"17:15121:4969":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:3440:32561":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"16:7990:5849":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:2426:8077":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:13934:4734":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:8567:8416":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:5147:6512":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:5649:6732":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"17:14379:4835":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"6:6733:6931":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"1:1735:6034":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:50883:7732":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:12996:4625":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"2:50155:7706":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"13:125:37313":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:46483:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:26842:7307":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"17:11275:23755":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:12350:4555":{"crate_id":17,"path":["object","read","macho","fat","MachOFatFile"],"kind":"struct"},"17:13366:23743":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"11:413:37302":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"5:3146:35748":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"11:1584:22735":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:10836:4366":{"crate_id":17,"path":["object","read","read_cache","ReadCacheRange"],"kind":"struct"},"16:7058:5701":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:3425:3672":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:36220:250":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"6:5436:6631":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"17:16599:5419":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"1:640:9124":{"crate_id":1,"path":["std","thread","thread_name_string","ThreadNameString"],"kind":"struct"},"2:46856:3656":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:2866:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"16:5742:2474":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:2295:3704":{"crate_id":2,"path":["core","ptr","metadata","metadata"],"kind":"function"},"11:2401:8271":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"2:48171:7643":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:51770:7703":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"1:8469:7796":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"2:5557:34477":{"crate_id":2,"path":["core","ffi","va_list","sealed_trait","VaArgSafe"],"kind":"trait"},"1:4959:7052":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"1:6781:198":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:16866:4739":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"17:14328:4824":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:44327:7523":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:994:4049":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:25962:2472":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:26452:7272":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"11:1904:3966":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"17:13636:4671":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:0:591":{"crate_id":2,"path":["core"],"kind":"module"},"2:34333:9233":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"6:4904:6419":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:3135:3652":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"6:5015:6474":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"6:8209:7168":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"11:1908:8266":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:4178:8266":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:46594:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:12599:28220":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:16007:5241":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:16805:5463":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"1:4043:8369":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:46849:3654":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:11635:4467":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"6:5395:6608":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"16:8137:5539":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"6:587:6200":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:46258:225":{"crate_id":2,"path":["core","range","RangeFrom"],"kind":"struct"},"2:48039:4054":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:51443:7752":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:13477:4107":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"16:3141:4370":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"6:1626:6291":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:9431:7868":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"6:5690:6748":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:12329:4060":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"18:581:3935":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:14011:16341":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:12764:8462":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"11:1025:5788":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:9490:9335":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:2349:133":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"1:12823:789":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:11582:4510":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:26645:33731":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"17:12139:4539":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"16:6731:8206":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"16:6256:5606":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:8755:3762":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:26572:33727":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:11585:7893":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"17:16564:5389":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"11:2574:6040":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:48534:7666":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"7:79:22648":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:10560:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:4704:8307":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"18:96:27931":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:26692:7301":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"6:5528:6677":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"5:8004:8300":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"16:2840:5513":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:51512:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:463:8345":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"16:7495:5778":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:51316:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:25831:4112":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:51092:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"2:3937:115":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:8458:131":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:2372:201":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"16:3834:5549":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:26138:9450":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"6:1501:6209":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"11:505:166":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"16:7554:23674":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"5:7952:7226":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:11118:37343":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:13114:4526":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"16:5757:5581":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"17:16728:5445":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"5:4638:282":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"16:7883:5631":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:48977:163":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"1:5982:6960":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:50995:7736":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:11848:8110":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"11:1069:8260":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:12237:4048":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"16:2660:5505":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:26831:7306":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"16:4844:5559":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:42152:16314":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"17:16367:5355":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:44531:7536":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:11500:4505":{"crate_id":17,"path":["object","read","archive","ArchiveOffset"],"kind":"struct"},"17:16080:5260":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:11352:8095":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"16:7731:3871":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"16:2684:5506":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:47394:7620":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"11:705:4049":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:4947:9251":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:673:9114":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"16:6890:5523":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:12825:948":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:4311:3966":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:12793:8153":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:7363:9364":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"16:6608:219":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:25334:35263":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"6:7378:7039":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"16:6269:5607":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"5:4732:35548":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"5:7797:35626":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:12814:1363":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:44840:7558":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:45950:7839":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"5:1930:8280":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"1:1970:8356":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:11284:8427":{"crate_id":1,"path":["std","sys","pal","unix","linux","pidfd","PidFd"],"kind":"struct"},"5:7811:3966":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"5:7291:16372":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:11091:156":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"17:11020:37341":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:9690:174":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"1:8161:28221":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:5389:6605":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:26312:9446":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"2:47092:3664":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:8113:16139":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"17:15395:5036":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"6:5502:6670":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"5:7417:281":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"17:11800:23773":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"5:1618:6032":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"11:2141:5788":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"1:3201:239":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"17:12379:8137":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"6:5273:6559":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"5:1165:35538":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"16:2880:5515":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"11:1621:8268":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"6:5559:6689":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"16:6837:8209":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"16:6302:5614":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:1038:8266":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:47082:7605":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"5:3150:35749":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:44383:7527":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"9:329:6087":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"16:8503:5908":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"11:123:6022":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:47991:7633":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:3815:224":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:50491:7718":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:13119:2735":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"6:1712:6338":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:1004:3966":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"6:1508:6212":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:13535:4663":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"16:2772:5510":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:15475:5098":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:3816:3753":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:6199:3870":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:8833:7840":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:4917:3666":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:6391:7783":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"11:2568:6039":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:3749:3749":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:4626:8373":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:26538:7278":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:6397:3739":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:12147:8459":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"6:5232:6537":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:16327:5344":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:48984:232":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:48285:7648":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:8306:9177":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"16:6904:5685":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:1354:8075":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"16:2550:5500":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:48455:7664":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:12895:4616":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:46631:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:51896:7703":{"crate_id":2,"path":["core","core_arch","x86","splat","JustOne"],"kind":"struct"},"6:6641:6894":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:13058:8157":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"6:5578:6697":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"16:8151:5540":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"16:8711:5927":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"1:2029:8359":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"17:16376:5359":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"6:8312:7180":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"17:13495:4661":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:9524:8433":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"16:6205:23666":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:16355:5353":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:0:3512":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:11688:34490":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"17:13126:8093":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"17:16203:5310":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"6:1728:6343":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"14:168:22740":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:5148:3670":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:4545:8372":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:597:8073":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"16:5709:23664":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:50560:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:8903:7842":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:45029:7565":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:3667:3796":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:25425:7270":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:48804:7689":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:13310:23742":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"6:6633:6893":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:14158:4783":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:45238:7569":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:51976:7773":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"6:5115:6509":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:11734:8105":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"16:6239:5601":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"6:7479:7072":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:12806:8154":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:47867:4035":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:8353:7190":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:44821:7556":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"11:447:37304":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:50644:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"16:3889:4375":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:50616:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"16:4956:5563":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:1084:8255":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:11861:8111":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:12812:1941":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"17:15054:4962":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"5:4686:3739":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"5:3841:194":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"16:3048:22806":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:48189:7644":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:50911:7733":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:13442:4658":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:14930:4935":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:13036:4628":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:13720:7642":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:45215:7567":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:47948:4052":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:48007:3763":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:5060:7241":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"6:4998:6464":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:15758:5176":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"11:381:37300":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:457:8343":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:15940:5222":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:50420:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:8011:28096":{"crate_id":1,"path":["std","panicking","begin_panic_handler","FormatStringPayload"],"kind":"struct"},"17:10739:4489":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:46520:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"5:2869:7211":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"6:8018:7155":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:45222:3674":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:1730:8280":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"17:11721:8104":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:14782:4910":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"15:299:22759":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"0:340:2473":{"crate_id":0,"path":["byteorder","LittleEndian"],"kind":"enum"},"2:44357:7524":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:34980:208":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:516:197":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:49094:7700":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:36221:252":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:3724:9160":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"6:5678:6743":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:11738:7898":{"crate_id":1,"path":["std","sys","exit_guard","PThread"],"kind":"struct"},"16:8028:5850":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:12692:4598":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:51247:7745":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"1:12809:440":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:26610:33729":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"5:7863:3966":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:12815:354":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"6:5296:6573":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:4898:6417":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:9563:8439":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"17:16215:5313":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:6165:8382":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"5:924:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:48850:7693":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"11:2475:8266":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"17:14171:4787":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:15931:5219":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"16:6028:5522":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"5:7835:7223":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:2031:8360":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:12860:4605":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"17:12453:23845":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"16:5379:5576":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"9:446:22655":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:48800:7688":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:51568:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:2612:9217":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"17:11820:4523":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"16:8626:5920":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:15080:4964":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:8403:3793":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:3527:16310":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"16:4873:5560":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:9529:119":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"1:11827:6107":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"11:2384:8260":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"2:45263:7571":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:50812:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"1:1063:8251":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"11:805:6033":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"17:10375:23734":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:14390:4838":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:12810:1218":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"17:16189:5304":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"6:5238:6540":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"11:760:8251":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:11673:4512":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:43627:228":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"16:2950:5518":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"5:1427:8260":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:26897:7312":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"14:223:6007":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"5:7980:7229":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"1:7080:8401":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"16:4766:5557":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:3167:8367":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"5:6012:16372":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:4834:9278":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:45778:7577":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:7697:31838":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:16819:5467":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"16:2590:5502":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:11570:8099":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:12817:1787":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:2964:213":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:8745:3761":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:11945:4531":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:13898:4727":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"6:5257:6551":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:7598:28212":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"1:5422:8376":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:25266:3935":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:3434:32414":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:8762:3763":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:51008:7703":{"crate_id":2,"path":["core","core_arch","simd","splat","JustOne"],"kind":"struct"},"5:1456:8264":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"6:6648:6895":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"6:5342:6590":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"6:6676:6908":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:3126:22807":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:1747:6036":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"5:4719:3739":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"2:12479:4055":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:11216:37345":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"6:6621:6886":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:1752:6037":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:36211:7382":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"6:4850:6386":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:11518:23755":{"crate_id":17,"path":["object","read","archive","SymbolIteratorInternal"],"kind":"enum"},"5:3393:6034":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:1591:168":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"16:5727:2473":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"5:6957:35538":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:26561:7282":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"16:7386:5762":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"5:3359:6035":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"5:3947:35538":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:11347:165":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:9475:9333":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"5:328:3836":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"6:6447:6792":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:12627:4596":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:11508:4506":{"crate_id":17,"path":["object","read","archive","ArchiveSymbolIterator"],"kind":"struct"},"5:818:265":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:681:4474":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:46029:185":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"5:5312:3739":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:16538:4694":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"2:44746:7547":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:3974:132":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:9232:4185":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:5072:9262":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:34568:3700":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:45916:33757":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"14:217:6005":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:9535:8435":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:12087:8125":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:13614:23712":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:26522:7274":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"18:548:165":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:50211:7708":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:12821:770":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"2:48796:7687":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:4812:9277":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"1:9708:7877":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"5:3419:6037":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"17:14817:4922":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:38400:5807":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"17:12166:4541":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:2435:2874":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"16:4184:5552":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:10752:8865":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"17:15775:5181":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:4824:6366":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"6:6710:6922":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"6:5549:6683":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:46106:3874":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"16:5348:5575":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"6:4800:6349":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:9460:9334":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"11:792:6032":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"16:7980:5536":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:50659:7724":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"6:1676:6321":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:12062:253":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"16:3110:5543":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:5187:6515":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"9:481:22654":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:6887:7568":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"6:1552:6237":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:8405:4422":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:44436:7531":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"6:8329:7185":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:8464:7795":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"5:928:8274":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:10592:2474":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"17:11475:23754":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"17:12717:8144":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:51275:7746":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"1:1012:6032":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:45015:7564":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:5303:6575":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:47597:7626":{"crate_id":2,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"1:3806:3750":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"6:6690:6913":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:16712:5440":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"2:36280:3924":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:51781:7764":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:1048:8280":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"0:256:2814":{"crate_id":0,"path":["byteorder","NetworkEndian"],"kind":"type_alias"},"18:726:4360":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"6:7326:7011":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:11749:8106":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"17:14504:4855":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:8572:8417":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:3899:16109":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:10289:23731":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:12780:8867":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:36190:5841":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"6:4883:6410":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:29895:284":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":33}