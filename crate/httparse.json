{"root":"0:0:2071","crate_version":"1.7.1","includes_private":false,"index":{"1:9365:8561":{"id":"1:9365:8561","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9366:56602","1:9367:56603","1:9368:56604","1:9369:56605","1:9370:56606","1:9371:39168","1:9372:56601"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10587:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13212:8349":{"id":"2:13212:8349","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13214:8351","2:13215:58918","2:13216:58919","2:13217:58920","2:13218:58922","2:13219:58921","2:13220:58923"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:300:1738":{"id":"0:300:1738","crate_id":0,"name":"method","span":{"filename":"src/lib.rs","begin":[412,4],"end":[412,33]},"visibility":"public","docs":"The request method, such as `GET`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"2:13594:32029":{"id":"2:13594:32029","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15995:2345"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49863:8355","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11082:214":{"id":"2:11082:214","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:11084:181","2:11085:2171","2:11086:13405","2:11087:2184","2:11088:1857","2:11089:753","2:11090:754"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:11073:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:175":{"id":"0:175","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[668,0],"end":[679,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:177:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3352:8939":{"id":"2:3352:8939","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3354:181","2:3355:558"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3406:8608":{"id":"2:3406:8608","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3408:181","2:3409:356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6104:60364":{"id":"5:6104:60364","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:8361:216","`Box<str>`":"5:432:7668"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:7668","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:7932","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8361:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3278:217":{"id":"2:3278:217","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13686:54780":{"id":"2:13686:54780","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13611:7847":{"id":"2:13611:7847","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"prim@char":"1:15989:2340","self::pattern":"2:13202:8353","`None`":"2:47617:176"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:8350","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3358:8942":{"id":"2:3358:8942","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3360:181","2:3361:1102"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6088:60361":{"id":"5:6088:60361","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8361:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8361:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:783:222":{"id":"5:783:222","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:7902","5:785:7903","5:786:7904"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13618:31897":{"id":"2:13618:31897","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:13202:8353","prim@char":"1:15989:2340"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12994:7964","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:253":{"id":"0:253","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[184,9],"end":[184,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:254:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13568:59701":{"id":"2:13568:59701","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6883:8521":{"id":"1:6883:8521","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6884:54702"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3202-0:286:1655":{"id":"b:2:3202-0:286:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:286:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:171:920":{"id":"0:171:920","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[564,4],"end":[571,5]},"visibility":"public","docs":"Creates a new `Response` using a slice of `Header`s you have allocated.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["headers",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13656:59715":{"id":"2:13656:59715","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:257:604":{"id":"0:257:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[184,16],"end":[184,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:294:660":{"id":"0:294:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[244,16],"end":[244,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:177:660":{"id":"0:177:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[669,4],"end":[678,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:347:1710":{"id":"a:2:3281:220-0:347:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:129":{"id":"0:129","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,0],"end":[191,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:130:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:295":{"id":"0:295","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[244,23],"end":[244,30]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:286:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:296:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3213-0:297:1704":{"id":"b:2:3213-0:297:1704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13654:59714":{"id":"2:13654:59714","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:261:1613":{"id":"b:2:3202-0:261:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:140:1658":{"id":"0:140:1658","crate_id":0,"name":"allow_multiple_spaces_in_request_line_delimiters","span":{"filename":"src/lib.rs","begin":[275,4],"end":[278,5]},"visibility":"public","docs":"Sets whether multiple spaces are allowed as delimiters in request lines.\n\n# Background\n\nThe [latest version of the HTTP/1.1 spec][spec] allows implementations to parse multiple\nwhitespace characters in place of the `SP` delimiters in the request line, including:\n\n> SP, HTAB, VT (%x0B), FF (%x0C), or bare CR\n\nThis option relaxes the parser to allow for multiple spaces, but does *not* allow the\nrequest line to contain the other mentioned whitespace characters.\n\n[spec]: https://httpwg.org/http-core/draft-ietf-httpbis-messaging-latest.html#rfc.section.3.p.3","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:322:1715":{"id":"a:2:3281:220-0:322:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:4004:1429":{"id":"2:4004:1429","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46145:8295","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:172:1766":{"id":"0:172:1766","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[574,4],"end":[576,5]},"visibility":"public","docs":"Try to parse a buffer of bytes into this `Response`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:131:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3717:9288":{"id":"2:3717:9288","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3648:9287","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10678:142":{"id":"2:10678:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10679:715","2:10681:56962"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3516:1856":{"id":"2:3516:1856","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3517:578"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3525:132":{"id":"2:3525:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3527:181","2:3528:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2869-0:322:1715":{"id":"b:2:2869-0:322:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2871:2410"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3279:106":{"id":"2:3279:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3217:1416":{"id":"2:3217:1416","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47742:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:353":{"id":"0:353","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[655,15],"end":[655,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:355:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:297:1704":{"id":"b:2:4002-0:297:1704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3427:8919":{"id":"2:3427:8919","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3429:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23618:21336":{"id":"2:23618:21336","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23619:58484","2:23620:58485","2:23621:58486"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialOrd","id":"2:23613:9025","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10447:119":{"id":"2:10447:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10448:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:302:1504":{"id":"0:302:1504","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[416,4],"end":[416,27]},"visibility":"public","docs":"The request version, such as `HTTP/1.1`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}},"2:3247:115":{"id":"2:3247:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3248:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13645:59711":{"id":"2:13645:59711","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"prim@char":"1:15989:2340","str::matches":"1:15995:2345","self::pattern":"2:13202:8353","`DoubleEndedIterator`":"2:8591:120"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49802:8372","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:8350","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2874:53183":{"id":"2:2874:53183","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10461:8256":{"id":"2:10461:8256","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10462:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3310:7665-0:251:1631":{"id":"a:2:3310:7665-0:251:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:238:1619":{"id":"0:238:1619","crate_id":0,"name":"Version","span":{"filename":"src/lib.rs","begin":[151,4],"end":[151,11]},"visibility":"default","docs":"Invalid byte in HTTP version.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:9031:8305":{"id":"2:9031:8305","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:9035:8875":{"id":"2:9035:8875","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Step","id":"2:8071:8876","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6085:1762":{"id":"5:6085:1762","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8361:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8361:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2888:104":{"id":"2:2888:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2889:408","2:2890:410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6579:8556":{"id":"1:6579:8556","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6580:56413","1:6581:56414"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13567:7848":{"id":"2:13567:7848","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3178:228":{"id":"2:3178:228","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3180:127","2:3181:1417"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:356":{"id":"0:356","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[655,22],"end":[655,24]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:240":{"id":"0:240","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[136,9],"end":[136,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:230:1611":{"id":"0:230:1611","crate_id":0,"name":"NewLine","span":{"filename":"src/lib.rs","begin":[143,4],"end":[143,11]},"visibility":"default","docs":"Invalid byte in new line.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:228:1609":{"id":"0:228:1609","crate_id":0,"name":"HeaderValue","span":{"filename":"src/lib.rs","begin":[141,4],"end":[141,15]},"visibility":"default","docs":"Invalid byte in header value.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:304":{"id":"0:304","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[409,9],"end":[409,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:307:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:126:660":{"id":"0:126:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[170,4],"end":[172,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:232:1613":{"id":"0:232:1613","crate_id":0,"name":"Status","span":{"filename":"src/lib.rs","begin":[145,4],"end":[145,10]},"visibility":"default","docs":"Invalid byte in Response status.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:326:1776":{"id":"0:326:1776","crate_id":0,"name":"code","span":{"filename":"src/lib.rs","begin":[552,4],"end":[552,25]},"visibility":"public","docs":"The response code, such as `200`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u16"}}],"bindings":[]}}}}},"b:2:3198-0:286:1655":{"id":"b:2:3198-0:286:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:286:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:7841"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:297:1704":{"id":"0:297:1704","crate_id":0,"name":"Request","span":{"filename":"src/lib.rs","begin":[410,0],"end":[419,1]},"visibility":"public","docs":"A parsed Request.\n\nThe optional values will be `None` if a parse was not complete, and did not\nparse the associated property. This allows you to inspect the parts that\ncould be parsed, before reading more, in case you wish to exit early.\n\n# Example\n\n```no_run\nlet buf = b\"GET /404 HTTP/1.1\\r\\nHost:\";\nlet mut headers = [httparse::EMPTY_HEADER; 16];\nlet mut req = httparse::Request::new(&mut headers);\nlet res = req.parse(buf).unwrap();\nif res.is_partial() {\n    match req.path {\n        Some(ref path) => {\n            // check router for path.\n            // /404 doesn't exist? we could stop parsing\n        },\n        None => {\n            // must read more and parse again\n        }\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:300:1738","0:301:1002","0:302:1504","0:303:1709"],"impls":["0:158","a:2:9407:7649-0:297:1704","a:2:3269:211-0:297:1704","a:2:9408:7648-0:297:1704","a:2:3310:7665-0:297:1704","a:2:3281:220-0:297:1704","b:2:2869-0:297:1704","b:2:4002-0:297:1704","b:2:3202-0:297:1704","b:2:3213-0:297:1704","b:2:3198-0:297:1704","b:2:2872-0:297:1704","b:2:3208-0:297:1704","0:304","0:308","0:311","0:315","0:318"]}},"a:2:3310:7665-0:322:1715":{"id":"a:2:3310:7665-0:322:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'buf","bounds":[{"outlives":"'headers"}]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8748:157":{"id":"2:8748:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8749:2183","2:8750:922","2:8751:7853","2:8754:7854","2:8755:495","2:8757:7855","2:8760:7856","2:8761:7857","2:8762:7858","2:8763:7859","2:8765:7860","2:8767:7861","2:8768:7862","2:8770:841","2:8773:7863","2:8780:7864","2:8782:7865","2:8785:2281","2:8786:7866","2:8787:7867","2:8789:7868","2:8791:7869","2:8794:1308","2:8795:2456","2:8796:7870","2:8800:7871","2:8803:7872","2:8804:7873","2:8805:7874","2:8807:7875","2:8808:7673","2:8810:7876","2:8813:7877","2:8815:7878","2:8825:7879","2:8840:7880","2:8842:7881","2:8846:7882","2:8855:7883","2:8858:7884","2:8860:7885","2:8863:276","2:8870:294","2:8877:7886","2:8884:7887","2:8893:7888","2:8903:1014","2:8910:1877","2:8917:7833","2:8918:7830","2:8919:7835","2:8931:7834","2:8938:7832","2:8950:7831","2:8957:2278","2:8958:7889","2:8963:7890","2:8966:2172","2:8969:7891","2:8970:7892","2:8972:7893","2:8974:7894","2:8976:415","2:8979:7895","2:8982:997","2:8985:7896","2:8988:604","2:8991:7897","2:8994:907","2:8996:826","2:8998:792","2:9000:713","2:9002:696","2:9004:7898","2:9005:7899","2:9013:7900"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3281:220":{"id":"2:3281:220","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:225:127":{"id":"b:5:787-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7902","5:790:7903","5:791:7904"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:297:1704":{"id":"b:2:3198-0:297:1704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:3201:7841"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:261:1613":{"id":"b:2:2869-0:261:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2871:2410"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9407:7649-0:251:1631":{"id":"a:2:9407:7649-0:251:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7649","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2926:124":{"id":"2:2926:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:4002-0:286:1655":{"id":"b:2:4002-0:286:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:286:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:131:205":{"id":"0:131:205","crate_id":0,"name":"Result","span":{"filename":"src/lib.rs","begin":[198,0],"end":[198,54]},"visibility":"public","docs":"A Result of any parsing action.\n\nIf the input is invalid, an `Error` will be returned. Note that incomplete\ndata is not considered invalid, and so will not return an error, but rather\na `Ok(Status::Partial)`.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"result::Result","id":"2:47742:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"b:2:3208-0:251:1631":{"id":"b:2:3208-0:251:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:292:408":{"id":"0:292:408","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[244,9],"end":[244,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:286:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:149:1708":{"id":"0:149:1708","crate_id":0,"name":"parse_request_with_uninit_headers","span":{"filename":"src/lib.rs","begin":[355,4],"end":[362,5]},"visibility":"public","docs":"Parses a request with the given config and buffer for headers","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["request",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["headers",{"kind":"borrowed_ref","inner":{"lifetime":"'headers","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"MaybeUninit","id":"2:32458:1581","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:131:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:261:1613":{"id":"0:261:1613","crate_id":0,"name":"Status","span":{"filename":"src/lib.rs","begin":[206,0],"end":[211,1]},"visibility":"public","docs":"The result of a successful parse pass.\n\n`Complete` is used when the buffer contained the complete value.\n`Partial` is used when parsing did not reach the end of the expected value,\nbut no invalid data was found.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:263:1643","0:266:1645"],"impls":["0:133","a:2:9407:7649-0:261:1613","a:2:3269:211-0:261:1613","a:2:9408:7648-0:261:1613","a:2:3310:7665-0:261:1613","a:2:3281:220-0:261:1613","b:2:2869-0:261:1613","b:2:4002-0:261:1613","b:2:3202-0:261:1613","b:2:3213-0:261:1613","b:2:3198-0:261:1613","b:2:2872-0:261:1613","b:2:3208-0:261:1613","b:5:787-0:261:1613","0:268","0:270","0:273","0:275","0:278","0:280","0:283"]}},"5:6084:60360":{"id":"5:6084:60360","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:7668","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:7932","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:7668","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:7932","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:168":{"id":"0:168","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[561,0],"end":[652,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"items":["0:171:920","0:172:1766"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8616:7666":{"id":"2:8616:7666","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8617:793","2:8618:7848"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:265:1542":{"id":"0:265:1542","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[208,13],"end":[208,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"2:3734:137":{"id":"2:3734:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3736:687"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3729:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13141:8365":{"id":"2:13141:8365","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13142:126","2:13143:57535"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:296:59":{"id":"0:296:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[244,23],"end":[244,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:286:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13574:54463":{"id":"2:13574:54463","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12673:1792"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8591:120":{"id":"2:8591:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8592:7842","2:8593:7843","2:8594:7844","2:8595:7845","2:8599:7846","2:8602:7847"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3396:8606":{"id":"2:3396:8606","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3398:181","2:3399:351"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13627:59708":{"id":"2:13627:59708","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split_terminator":"1:15995:2345","self::pattern":"2:13202:8353","prim@char":"1:15989:2340","str::split":"1:15995:2345"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49648:8373","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:8350","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:340":{"id":"0:340","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[547,20],"end":[547,29]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:293":{"id":"0:293","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[244,16],"end":[244,21]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:286:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:294:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13586:8643":{"id":"2:13586:8643","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:15995:2345","crate::ops::Index":"2:3577:8593","str::slice_mut_unchecked":"1:15995:2345"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:3577:8593":{"id":"2:3577:8593","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3579:181","2:3580:753"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:9408:7648-0:261:1613":{"id":"a:2:9408:7648-0:261:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9408:7648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13582:2184":{"id":"2:13582:2184","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:22899:9128":{"id":"2:22899:9128","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22900:9023","2:22901:58810","2:22902:59312","2:22903:59313","2:22904:59314","2:22905:42568","2:22906:59315","2:22907:59316","2:22908:59317","2:22909:59318","2:22910:59319","2:22911:59320","2:22912:59321","2:22913:59322","2:22914:59323","2:22915:59324","2:22916:58867","2:22917:59325","2:22918:58485","2:22919:58484","2:22920:58486","2:22921:58811","2:22922:58812","2:22923:58813","2:22924:58814"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23001:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:145:1698":{"id":"0:145:1698","crate_id":0,"name":"obsolete_multiline_headers_in_responses_are_allowed","span":{"filename":"src/lib.rs","begin":[341,4],"end":[343,5]},"visibility":"public","docs":"Whether obsolete multiline headers should be allowed.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:251:1631":{"id":"a:2:3281:220-0:251:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8506:8992":{"id":"2:8506:8992","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8508:7893"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13677:59722":{"id":"2:13677:59722","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13202:8353","prim@char":"1:15989:2340"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:318":{"id":"0:318","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[409,20],"end":[409,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:321:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3277:218":{"id":"2:3277:218","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13595:9713":{"id":"2:13595:9713","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49834:8367","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10390:8246":{"id":"2:10390:8246","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10391:1533","2:10392:57548","2:10394:57549"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:142:1659":{"id":"0:142:1659","crate_id":0,"name":"allow_multiple_spaces_in_response_status_delimiters","span":{"filename":"src/lib.rs","begin":[299,4],"end":[302,5]},"visibility":"public","docs":"Sets whether multiple spaces are allowed as delimiters in response status lines.\n\n# Background\n\nThe [latest version of the HTTP/1.1 spec][spec] allows implementations to parse multiple\nwhitespace characters in place of the `SP` delimiters in the response status line,\nincluding:\n\n> SP, HTAB, VT (%x0B), FF (%x0C), or bare CR\n\nThis option relaxes the parser to allow for multiple spaces, but does *not* allow the status\nline to contain the other mentioned whitespace characters.\n\n[spec]: https://httpwg.org/http-core/draft-ietf-httpbis-messaging-latest.html#rfc.section.4.p.3","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:246":{"id":"0:246","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[136,33],"end":[136,35]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10688:146":{"id":"2:10688:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10689:652","2:10690:2424","2:10691:56469","2:10692:56470","2:10693:56471","2:10694:56472","2:10695:56473","2:10696:56474","2:10697:56475","2:10698:56476","2:10699:56477","2:10700:56478","2:10701:56479","2:10702:56480","2:10703:56481","2:10704:1533"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[136,22],"end":[136,31]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:245:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:273":{"id":"0:273","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[205,22],"end":[205,24]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:322:1715":{"id":"a:2:3269:211-0:322:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:4748:8433":{"id":"1:4748:8433","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4749:57820","1:4750:57821","1:4751:57823","1:4753:8454","1:4754:57822","1:4756:54886","1:4757:9713"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4666:8448","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3104:8930":{"id":"2:3104:8930","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:3103:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3519:130":{"id":"2:3519:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3521:376"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5811:8498":{"id":"1:5811:8498","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5812:56387"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10587:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:138":{"id":"0:138","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[252,0],"end":[382,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:286:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:139:1656","0:140:1658","0:141:1671","0:142:1659","0:143:1679","0:144:1657","0:145:1698","0:146:1700","0:149:1708","0:152:1713","0:155:1717"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3208-0:286:1655":{"id":"b:2:3208-0:286:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:286:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13642:2421":{"id":"2:13642:2421","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"prim@char":"1:15989:2340","str::matches":"1:15995:2345","`DoubleEndedIterator`":"2:8591:120","self::pattern":"2:13202:8353"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49784:8371","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:347:1710":{"id":"b:5:787-0:347:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:789:7902","5:790:7903","5:791:7904"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6459:8518":{"id":"1:6459:8518","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6460:8823","1:6461:8824","1:6462:13244","1:6463:57325","1:6465:57329","1:6467:57326","1:6468:57327","1:6470:57328"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10587:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3208-0:322:1715":{"id":"b:2:3208-0:322:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13658:59716":{"id":"2:13658:59716","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13636:59709":{"id":"2:13636:59709","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13607:7886":{"id":"2:13607:7886","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"2:13202:8353","prim@char":"1:15989:2340","`None`":"2:47617:176"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2871:2410":{"id":"2:2871:2410","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13665:59720":{"id":"2:13665:59720","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15989:2340","self::pattern":"2:13202:8353"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:285:660":{"id":"0:285:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[205,37],"end":[205,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13930:150":{"id":"2:13930:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13931:181","2:13932:150","2:13933:767"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6091:60362":{"id":"5:6091:60362","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8361:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8361:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:286:1655":{"id":"a:2:3281:220-0:286:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:286:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:333":{"id":"0:333","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[547,16],"end":[547,18]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[244,9],"end":[244,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:286:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:292:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3175:135":{"id":"2:3175:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3177:681"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13661:59718":{"id":"2:13661:59718","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:347:1710":{"id":"b:2:3198-0:347:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3201:7841"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13689:59724":{"id":"2:13689:59724","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15989:2340"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49879:8362","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6415:1397":{"id":"5:6415:1397","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8361:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:261:1613":{"id":"b:2:3213-0:261:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3166:75":{"id":"2:3166:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3168:305"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:22952:9140":{"id":"2:22952:9140","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22953:9023","2:22954:58810","2:22955:1227","2:22956:1228","2:22957:42568","2:22958:58863","2:22959:58864","2:22960:58865","2:22961:58866","2:22962:58867","2:22963:58811","2:22964:58812","2:22965:58813","2:22966:58814","2:22967:58815","2:22968:58816","2:22969:58817"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23001:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:307:660":{"id":"0:307:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[409,9],"end":[409,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13691:8537":{"id":"2:13691:8537","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15989:2340"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49888:8363","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23025:9129":{"id":"2:23025:9129","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23026:9023","2:23027:1247","2:23028:1272"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6885:8522":{"id":"1:6885:8522","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6886:56929"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:270":{"id":"0:270","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[205,15],"end":[205,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:272:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3269:211":{"id":"2:3269:211","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8510:8990":{"id":"2:8510:8990","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8512:7894"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:351":{"id":"0:351","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[655,9],"end":[655,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13683:1766":{"id":"2:13683:1766","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:13141:8365","`FromStr`":"2:13141:8365"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47742:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:13141:8365","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13141:8365","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9407:7649-0:225:127":{"id":"a:2:9407:7649-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7649","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:321:604":{"id":"0:321:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[409,20],"end":[409,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13674:59721":{"id":"2:13674:59721","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15989:2340","self::pattern":"2:13202:8353"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:8350","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13592:1747":{"id":"2:13592:1747","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49566:1582","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[136,15],"end":[136,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:242:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:243":{"id":"0:243","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[136,22],"end":[136,31]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:245:604":{"id":"0:245:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[136,22],"end":[136,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:2071":{"id":"0:0:2071","crate_id":0,"name":"httparse","span":{"filename":"src/lib.rs","begin":[1,0],"end":[1917,1]},"visibility":"public","docs":"# httparse\n\nA push library for parsing HTTP/1.x requests and responses.\n\nThe focus is on speed and safety. Unsafe code is used to keep parsing fast,\nbut unsafety is contained in a submodule, with invariants enforced. The\nparsing internals use an `Iterator` instead of direct indexing, while\nskipping bounds checks.\n\nWith Rust 1.27.0 or later, support for SIMD is enabled automatically.\nIf building an executable to be run on multiple platforms, and thus\nnot passing `target_feature` or `target_cpu` flags to the compiler,\nruntime detection can still detect SSE4.2 or AVX2 support to provide\nmassive wins.\n\nIf compiling for a specific target, remembering to include\n`-C target_cpu=native` allows the detection to become compile time checks,\nmaking it *even* faster.","links":{},"attrs":["#![deny(missing_docs)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:225:127","0:251:1631","0:131:205","0:261:1613","0:286:1655","0:297:1704","0:322:1715","0:347:1710","0:178:1796","0:187:1846","0:215:1883"],"is_stripped":false}},"1:5675:8527":{"id":"1:5675:8527","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5676:10135","1:5677:54463"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10587:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2872-0:297:1704":{"id":"b:2:2872-0:297:1704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2874:53183"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:347:1710":{"id":"b:2:3213-0:347:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23922:9020":{"id":"2:23922:9020","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23923:9023"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23918:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3269:211-0:347:1710":{"id":"a:2:3269:211-0:347:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9407:7649-0:347:1710":{"id":"a:2:9407:7649-0:347:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7649","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10457:189":{"id":"2:10457:189","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10458:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13692:59725":{"id":"2:13692:59725","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15989:2340"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49897:8364","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:365:604":{"id":"0:365:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[655,26],"end":[655,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:128:1629":{"id":"0:128:1629","crate_id":0,"name":"description","span":{"filename":"src/lib.rs","begin":[177,4],"end":[179,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:311":{"id":"0:311","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[409,16],"end":[409,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:343":{"id":"0:343","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[547,20],"end":[547,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:346:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3198-0:225:127":{"id":"b:2:3198-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:7841"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5008:8538":{"id":"1:5008:8538","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5009:7952","1:5010:57009"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6106:55940":{"id":"5:6106:55940","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15995:2345"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8361:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:1075:8535":{"id":"1:1075:8535","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1076:7902","1:1077:9377","1:1078:55940","1:1079:55941","1:1080:54780","1:1081:54781","1:1082:54782"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3172:149":{"id":"2:3172:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3174:7841"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:258":{"id":"0:258","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[184,27],"end":[184,29]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:322:1715":{"id":"0:322:1715","crate_id":0,"name":"Response","span":{"filename":"src/lib.rs","begin":[548,0],"end":[559,1]},"visibility":"public","docs":"A parsed Response.\n\nSee `Request` docs for explanation of optional values.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:325:1504","0:326:1776","0:327:1080","0:328:1709"],"impls":["0:168","a:2:9407:7649-0:322:1715","a:2:3269:211-0:322:1715","a:2:9408:7648-0:322:1715","a:2:3310:7665-0:322:1715","a:2:3281:220-0:322:1715","b:2:2869-0:322:1715","b:2:4002-0:322:1715","b:2:3202-0:322:1715","b:2:3213-0:322:1715","b:2:3198-0:322:1715","b:2:2872-0:322:1715","b:2:3208-0:322:1715","0:329","0:333","0:336","0:340","0:343"]}},"a:2:3281:220-0:225:127":{"id":"a:2:3281:220-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2872-0:322:1715":{"id":"b:2:2872-0:322:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2874:53183"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3648:9287":{"id":"2:3648:9287","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3650:58367","2:3651:58368","2:3652:1826"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:329":{"id":"0:329","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[547,9],"end":[547,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:332:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9407:7649-0:286:1655":{"id":"a:2:9407:7649-0:286:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7649","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:286:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:130:660":{"id":"0:130:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[188,4],"end":[190,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4666:8448":{"id":"1:4666:8448","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4667:8758","1:4668:56752","1:4670:56753","1:4671:56755","1:4672:8449","1:4673:56754","1:4674:54640","1:4676:56756","1:4677:7875","1:4678:1747","1:4679:7859","1:4681:2456"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9407:7649-0:322:1715":{"id":"a:2:9407:7649-0:322:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7649","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:3202-0:322:1715":{"id":"b:2:3202-0:322:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13688:54782":{"id":"2:13688:54782","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5797:8496":{"id":"1:5797:8496","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5798:54482","1:5799:54483","1:5800:54484","1:5801:54485"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3208-0:261:1613":{"id":"b:2:3208-0:261:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:136:1649":{"id":"0:136:1649","crate_id":0,"name":"is_partial","span":{"filename":"src/lib.rs","begin":[225,4],"end":[230,5]},"visibility":"public","docs":"Convenience method to check if status is partial.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13615:54886":{"id":"2:13615:54886","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::rsplit":"1:15995:2345","`DoubleEndedIterator`":"2:8591:120","self::pattern":"2:13202:8353","str::split_whitespace":"1:15995:2345","prim@char":"1:15989:2340"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49580:7948","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5837:7926":{"id":"5:5837:7926","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5839:181","5:5840:32979"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:6413-0:251:1631":{"id":"b:5:6413-0:251:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6415:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:361":{"id":"0:361","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[655,26],"end":[655,35]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13593:32039":{"id":"2:13593:32039","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15995:2345"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49854:8356","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6707:8495":{"id":"1:6707:8495","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6708:56420","1:6709:12683","1:6710:12684","1:6711:12686","1:6712:12685","1:6713:12687","1:6714:12688","1:6715:12690","1:6716:11278","1:6717:12693","1:6718:12694","1:6719:12695","1:6720:12696","1:6721:12697","1:6722:12698","1:6723:12691","1:6724:12692"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:259":{"id":"0:259","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[184,27],"end":[184,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:261:1613":{"id":"a:2:3269:211-0:261:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3505:8307":{"id":"2:3505:8307","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3506:545"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"2:3492:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:14390:7931":{"id":"2:14390:7931","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14391:57270","2:14392:57271","2:14393:57272","2:14394:57273","2:14395:57274","2:14396:57275","2:14397:7875"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:250:660":{"id":"0:250:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[136,37],"end":[136,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:791:7904":{"id":"5:791:7904","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13633:54893":{"id":"2:13633:54893","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"str::splitn":"1:15995:2345","self::pattern":"2:13202:8353","prim@char":"1:15989:2340"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49702:7960","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:8350","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:7665-0:261:1613":{"id":"a:2:3310:7665-0:261:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:7665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3269:211-0:286:1655":{"id":"a:2:3269:211-0:286:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:286:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3368:8714":{"id":"2:3368:8714","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3370:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2872-0:347:1710":{"id":"b:2:2872-0:347:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2874:53183"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:255":{"id":"0:255","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[184,16],"end":[184,25]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13687:54781":{"id":"2:13687:54781","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4723:8246":{"id":"1:4723:8246","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4724:2424","1:4725:57624","1:4727:57625","1:4728:9636","1:4729:57626","1:4730:57627","1:4731:57549","1:4740:7875"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13227:8350":{"id":"2:13227:8350","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13229:7842","2:13230:58678","2:13231:58679"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"2:13221:8351","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3364:8945":{"id":"2:3364:8945","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3365:181","2:3366:913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:355:408":{"id":"0:355:408","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[655,15],"end":[655,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:297:1704":{"id":"b:2:3202-0:297:1704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:282:604":{"id":"0:282:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[205,26],"end":[205,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13596:59706":{"id":"2:13596:59706","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49844:8368","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:322:1715":{"id":"b:2:3198-0:322:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:3201:7841"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13604:54896":{"id":"2:13604:54896","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:13202:8353","prim@char":"1:15989:2340"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:8350","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:163:1761":{"id":"0:163:1761","crate_id":0,"name":"parse_with_uninit_headers","span":{"filename":"src/lib.rs","begin":[469,4],"end":[475,5]},"visibility":"public","docs":"Try to parse a buffer of bytes into the Request,\nexcept use an uninitialized slice of `Header`s.\n\nFor more information, see `parse`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["headers",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"MaybeUninit","id":"2:32458:1581","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:131:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10455:8254":{"id":"2:10455:8254","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10456:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6103:60363":{"id":"5:6103:60363","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8361:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8361:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:358":{"id":"0:358","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[655,22],"end":[655,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3435:8923":{"id":"2:3435:8923","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3437:1234"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13624:59707":{"id":"2:13624:59707","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:13202:8353","prim@char":"1:15989:2340","`DoubleEndedIterator`":"2:8591:120","str::split":"1:15995:2345","str::rsplit_terminator":"1:15995:2345"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49630:8374","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10723:8591":{"id":"2:10723:8591","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10724:146","2:10725:33223","2:10726:58002"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:165:1766":{"id":"0:165:1766","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[498,4],"end":[500,5]},"visibility":"public","docs":"Try to parse a buffer of bytes into the Request.\n\nReturns byte offset in `buf` to start of HTTP body.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:131:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10453:8253":{"id":"2:10453:8253","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10454:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:69:1238":{"id":"0:69:1238","crate_id":0,"name":"simd","span":{"filename":"src/simd/mod.rs","begin":[1,0],"end":[284,35]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:112"],"is_stripped":true}},"2:3380:8951":{"id":"2:3380:8951","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3382:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:283":{"id":"0:283","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[205,37],"end":[205,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:285:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:225:127":{"id":"b:2:2869-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2410"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3492:116":{"id":"2:3492:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3493:221","2:3494:543"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13578:2171":{"id":"2:13578:2171","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47617:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13668:19843":{"id":"2:13668:19843","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13202:8353","prim@char":"1:15989:2340"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2863:97":{"id":"2:2863:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2865:2410"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:242:408":{"id":"0:242:408","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[136,15],"end":[136,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9408:7648-0:322:1715":{"id":"a:2:9408:7648-0:322:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3274:2461":{"id":"2:3274:2461","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2872-0:225:127":{"id":"b:2:2872-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53183"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6411:223":{"id":"5:6411:223","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6412:1397"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:303:1709":{"id":"0:303:1709","crate_id":0,"name":"headers","span":{"filename":"src/lib.rs","begin":[418,4],"end":[418,45]},"visibility":"public","docs":"The request headers.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'headers","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}}}},"1:5757:8494":{"id":"1:5757:8494","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5758:10307","1:5759:13014"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5741:8492":{"id":"1:5741:8492","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5742:57744","1:5743:57746","1:5744:57745","1:5745:57747"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2957:177":{"id":"2:2957:177","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2958:415","2:2959:7833","2:2960:7830","2:2961:7839"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13598:1826":{"id":"2:13598:1826","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:15989:2340","self::pattern":"2:13202:8353"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13571:59703":{"id":"2:13571:59703","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:15995:2345"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:327:1080":{"id":"0:327:1080","crate_id":0,"name":"reason","span":{"filename":"src/lib.rs","begin":[556,4],"end":[556,33]},"visibility":"public","docs":"The response reason-phrase, such as `OK`.\n\nContains an empty string if the reason-phrase was missing or contained invalid characters.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"a:2:3269:211-0:297:1704":{"id":"a:2:3269:211-0:297:1704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:272:408":{"id":"0:272:408","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[205,15],"end":[205,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:249":{"id":"0:249","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[136,37],"end":[136,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:250:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5763:8495":{"id":"1:5763:8495","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5764:12338","1:5765:56626","1:5766:10307","1:5767:56627","1:5768:8823","1:5769:8824","1:5770:56628","1:5771:1304","1:5772:56629","1:5773:56630","1:5774:56631","1:5775:56632","1:5776:56633","1:5777:56634","1:5778:56635","1:5779:56636"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:286:1655":{"id":"b:2:3213-0:286:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:286:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:790:7903":{"id":"5:790:7903","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13591:8980":{"id":"2:13591:8980","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15989:2340"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49556:8358","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6083":{"id":"5:6083","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5903:1340","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6084:60360","5:6085:1762","5:6088:60361","5:6091:60362","5:6103:60363","5:6104:60364","5:6105:8477","5:6106:55940","5:6107:55941"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3198-0:251:1631":{"id":"b:2:3198-0:251:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:7841"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8071:8876":{"id":"2:8071:8876","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8072:58695","2:8073:58696","2:8074:58693","2:8075:58691","2:8076:58697","2:8077:58694","2:8078:58692"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3389:8907":{"id":"2:3389:8907","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3390:181","2:3391:952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9408:7648-0:286:1655":{"id":"a:2:9408:7648-0:286:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:286:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:275":{"id":"0:275","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[205,22],"end":[205,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:251:1631":{"id":"a:2:3269:211-0:251:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5749:8493":{"id":"1:5749:8493","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5750:10307","1:5751:54675","1:5752:54676"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13588:54878":{"id":"2:13588:54878","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:15995:2345"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:22988:8996":{"id":"2:22988:8996","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22989:58810","2:22990:1227","2:22991:1228","2:22992:58811","2:22993:58812","2:22994:58813","2:22995:58814","2:22996:58815","2:22997:58816","2:22998:58817"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23001:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3384:8953":{"id":"2:3384:8953","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3386:1103"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13565":{"id":"2:13565","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12662:1340","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13566:793","2:13567:7848","2:13568:59701","2:13569:59702","2:13571:59703","2:13574:54463","2:13575:59704","2:13576:304","2:13577:13417","2:13578:2171","2:13580:13405","2:13582:2184","2:13584:1857","2:13586:8643","2:13587:59705","2:13588:54878","2:13589:54879","2:13590:8377","2:13591:8980","2:13592:1747","2:13593:32039","2:13594:32029","2:13595:9713","2:13596:59706","2:13597:32024","2:13598:1826","2:13601:54895","2:13604:54896","2:13607:7886","2:13611:7847","2:13615:54886","2:13618:31897","2:13621:54889","2:13624:59707","2:13627:59708","2:13630:54891","2:13633:54893","2:13636:59709","2:13639:59710","2:13642:2421","2:13645:59711","2:13648:59712","2:13651:59713","2:13654:59714","2:13656:59715","2:13658:59716","2:13660:59717","2:13661:59718","2:13662:59719","2:13665:59720","2:13668:19843","2:13671:54897","2:13674:59721","2:13677:59722","2:13680:59723","2:13683:1766","2:13685:9377","2:13686:54780","2:13687:54781","2:13688:54782","2:13689:59724","2:13691:8537","2:13692:59725"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8543:136":{"id":"2:8543:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8545:684"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3417:8906":{"id":"2:3417:8906","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3419:181","2:3420:1236"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3347:8937":{"id":"2:3347:8937","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3349:181","2:3350:892"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2869-0:347:1710":{"id":"b:2:2869-0:347:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2871:2410"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13566:793":{"id":"2:13566:793","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15989:2340"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:125":{"id":"0:125","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[169,0],"end":[173,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:126:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13569:59702":{"id":"2:13569:59702","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:308":{"id":"0:308","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[409,16],"end":[409,18]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:347:1710":{"id":"0:347:1710","crate_id":0,"name":"Header","span":{"filename":"src/lib.rs","begin":[656,0],"end":[666,1]},"visibility":"public","docs":"Represents a parsed header.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:349:899","0:350:1661"],"impls":["a:2:9407:7649-0:347:1710","a:2:3269:211-0:347:1710","a:2:9408:7648-0:347:1710","a:2:3310:7665-0:347:1710","a:2:3281:220-0:347:1710","b:2:2869-0:347:1710","b:2:4002-0:347:1710","b:2:3202-0:347:1710","b:2:3213-0:347:1710","b:2:3198-0:347:1710","b:2:2872-0:347:1710","b:2:3208-0:347:1710","b:5:787-0:347:1710","0:351","0:353","0:356","0:358","0:361","0:363","0:175"]}},"0:44":{"id":"0:44","crate_id":0,"name":null,"span":{"filename":"src/iter.rs","begin":[75,0],"end":[80,1]},"visibility":{"restricted":{"parent":"0:24:779","path":"::iter"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"2:3166:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Bytes","id":"0:28:1582","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:46:305"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:133":{"id":"0:133","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[213,0],"end":[241,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:135:1647","0:136:1649","0:137:1484"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:4000:68":{"id":"2:4000:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4001:1429"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"1:5669:8529":{"id":"1:5669:8529","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5670:54500","1:5671:9457"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10587:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:9408:7648":{"id":"2:9408:7648","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6881:8508":{"id":"1:6881:8508","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6882:57787"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2921:183":{"id":"2:2921:183","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2923:604","2:2924:907"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:5807:8497":{"id":"1:5807:8497","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5808:56626"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13587:59705":{"id":"2:13587:59705","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"str::slice_unchecked":"1:15995:2345","crate::ops::IndexMut":"2:3581:8931","`str`":"1:15995:2345"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13639:59710":{"id":"2:13639:59710","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:8350","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3401:8607":{"id":"2:3401:8607","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3403:181","2:3404:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4002-0:261:1613":{"id":"b:2:4002-0:261:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6105:8477":{"id":"5:6105:8477","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8361:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8361:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23237:21317":{"id":"2:23237:21317","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23238:11920","2:23239:58799","2:23240:58800"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23230:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:46:305":{"id":"0:46:305","crate_id":0,"name":"as_ref","span":{"filename":"src/iter.rs","begin":[77,4],"end":[79,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:251:1631":{"id":"b:2:4002-0:251:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:225:127":{"id":"b:2:3202-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13577:13417":{"id":"2:13577:13417","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:16006:2354"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9408:7648-0:225:127":{"id":"a:2:9408:7648-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:297:1704":{"id":"b:2:2869-0:297:1704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2871:2410"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:220-0:297:1704":{"id":"a:2:3281:220-0:297:1704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:9028:8304":{"id":"2:9028:8304","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8748:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3411:8912":{"id":"2:3411:8912","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3413:181","2:3414:1233"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[205,26],"end":[205,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:282:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:137:1484":{"id":"0:137:1484","crate_id":0,"name":"unwrap","span":{"filename":"src/lib.rs","begin":[235,4],"end":[240,5]},"visibility":"public","docs":"Convenience method to unwrap a Complete value. Panics if the status is\n`Partial`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9407:7649":{"id":"2:9407:7649","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3729:224":{"id":"2:3729:224","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3730:181","2:3731:9000","2:3732:686","2:3733:369"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromResidual","id":"2:3734:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3729:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:135:1647":{"id":"0:135:1647","crate_id":0,"name":"is_complete","span":{"filename":"src/lib.rs","begin":[216,4],"end":[221,5]},"visibility":"public","docs":"Convenience method to check if status is complete.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14314:141":{"id":"2:14314:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14315:277","2:14316:518","2:14317:280","2:14318:1079"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3216:127":{"id":"2:3216:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38930:8290","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:3208-0:225:127":{"id":"b:2:3208-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:251:1631":{"id":"b:2:2872-0:251:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53183"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3581:8931":{"id":"2:3581:8931","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3583:754"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Index","id":"2:3577:8593","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:5:787-0:286:1655":{"id":"b:5:787-0:286:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:286:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:7902","5:790:7903","5:791:7904"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:112":{"id":"0:112","crate_id":0,"name":null,"span":{"filename":"src/simd/mod.rs","begin":[167,0],"end":[167,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(all(httparse_simd,\nnot(any(httparse_simd_target_feature_sse42,\nhttparse_simd_target_feature_avx2,)),\nany(target_arch = \"x86\", target_arch = \"x86_64\",),))]"],"deprecation":null,"kind":"import","inner":{"source":"self::runtime","name":"runtime","id":"0:99:2207","glob":true}},"2:13680:59723":{"id":"2:13680:59723","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13202:8353","prim@char":"1:15989:2340"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:8350","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:347:1710":{"id":"b:2:4002-0:347:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:278":{"id":"0:278","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[205,26],"end":[205,35]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3202-0:347:1710":{"id":"b:2:3202-0:347:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13221:8351":{"id":"2:13221:8351","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13223:8973","2:13224:922","2:13225:58165","2:13226:58166"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3198-0:261:1613":{"id":"b:2:3198-0:261:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3201:7841"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6981:8507":{"id":"1:6981:8507","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6982:56343"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:256":{"id":"0:256","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[184,16],"end":[184,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:257:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13671:54897":{"id":"2:13671:54897","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13202:8353","prim@char":"1:15989:2340"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:8350","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13575:59704":{"id":"2:13575:59704","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:350:1661":{"id":"0:350:1661","crate_id":0,"name":"value","span":{"filename":"src/lib.rs","begin":[665,4],"end":[665,23]},"visibility":"public","docs":"The value portion of a header.\n\nWhile headers **should** be ASCII-US, the specification allows for\nvalues that may not be, and so the value is stored as bytes.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},"b:2:2872-0:261:1613":{"id":"b:2:2872-0:261:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2874:53183"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9408:7648-0:297:1704":{"id":"a:2:9408:7648-0:297:1704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3310:7665":{"id":"2:3310:7665","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3740:9000":{"id":"2:3740:9000","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3742:53890"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23088:8564":{"id":"2:23088:8564","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23078:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9407:7649-0:297:1704":{"id":"a:2:9407:7649-0:297:1704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7649","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:3376:8949":{"id":"2:3376:8949","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3378:893"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:141:1671":{"id":"0:141:1671","crate_id":0,"name":"multiple_spaces_in_request_line_delimiters_are_allowed","span":{"filename":"src/lib.rs","begin":[281,4],"end":[283,5]},"visibility":"public","docs":"Whether multiple spaces are allowed as delimiters in request lines.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:328:1709":{"id":"0:328:1709","crate_id":0,"name":"headers","span":{"filename":"src/lib.rs","begin":[558,4],"end":[558,45]},"visibility":"public","docs":"The response headers.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'headers","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}}}},"2:13630:54891":{"id":"2:13630:54891","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:15989:2340","str::rsplitn":"1:15995:2345","self::pattern":"2:13202:8353"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49684:7962","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:349:899":{"id":"0:349:899","crate_id":0,"name":"name","span":{"filename":"src/lib.rs","begin":[660,4],"end":[660,21]},"visibility":"public","docs":"The name portion of a header.\n\nA header name must be valid ASCII-US, so it's safe to store as a `&str`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"a:2:3310:7665-0:225:127":{"id":"a:2:3310:7665-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:787-0:261:1613":{"id":"b:5:787-0:261:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:789:7902","5:790:7903","5:791:7904"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10440:109":{"id":"2:10440:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10441:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3812:8893":{"id":"2:3812:8893","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3522:131":{"id":"2:3522:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3524:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3525:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:139:1656":{"id":"0:139:1656","crate_id":0,"name":"allow_spaces_after_header_name_in_responses","span":{"filename":"src/lib.rs","begin":[254,4],"end":[260,5]},"visibility":"public","docs":"Sets whether spaces should be allowed after header name.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6809:8533":{"id":"1:6809:8533","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6810:12800","1:6811:54613"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10587:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:234:1615":{"id":"0:234:1615","crate_id":0,"name":"Token","span":{"filename":"src/lib.rs","begin":[147,4],"end":[147,9]},"visibility":"default","docs":"Invalid byte where token is required.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13651:59713":{"id":"2:13651:59713","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:13202:8353","`DoubleEndedIterator`":"2:8591:120","prim@char":"1:15989:2340","str::match_indices":"1:15995:2345"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49748:8370","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:8350","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:178:1796":{"id":"0:178:1796","crate_id":0,"name":"EMPTY_HEADER","span":{"filename":"src/lib.rs","begin":[689,0],"end":[689,74]},"visibility":"public","docs":"An empty header, useful for constructing a `Header` array to pass in for\nparsing.\n\n# Example\n\n```\nlet headers = [httparse::EMPTY_HEADER; 64];\n```","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"2:23285:9024":{"id":"2:23285:9024","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdElement","id":"2:23922:9020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23276:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:254:660":{"id":"0:254:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[184,9],"end":[184,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:266:1645":{"id":"0:266:1645","crate_id":0,"name":"Partial","span":{"filename":"src/lib.rs","begin":[210,4],"end":[210,11]},"visibility":"default","docs":"A partial result.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13915:138":{"id":"2:13915:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13916:181","2:13917:1013"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13685:9377":{"id":"2:13685:9377","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:363":{"id":"0:363","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[655,26],"end":[655,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:365:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:286:1655":{"id":"b:2:2869-0:286:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:286:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2410"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9408:7648-0:251:1631":{"id":"a:2:9408:7648-0:251:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:315":{"id":"0:315","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[409,20],"end":[409,29]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:301:1002":{"id":"0:301:1002","crate_id":0,"name":"path","span":{"filename":"src/lib.rs","begin":[414,4],"end":[414,31]},"visibility":"public","docs":"The request path, such as `/about-us`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"2:10459:8255":{"id":"2:10459:8255","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10460:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:5833:7925":{"id":"5:5833:7925","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5835:181","5:5836:432"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13590:8377":{"id":"2:13590:8377","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15989:2340"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49550:8359","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3169:74":{"id":"2:3169:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3171:7840"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13660:59717":{"id":"2:13660:59717","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:143:1679":{"id":"0:143:1679","crate_id":0,"name":"multiple_spaces_in_response_status_delimiters_are_allowed","span":{"filename":"src/lib.rs","begin":[305,4],"end":[307,5]},"visibility":"public","docs":"Whether multiple spaces are allowed as delimiters in response status lines.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:7665-0:286:1655":{"id":"a:2:3310:7665-0:286:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:286:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:7817:8694":{"id":"1:7817:8694","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7818:56623"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13662:59719":{"id":"2:13662:59719","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:13202:8353","prim@char":"1:15989:2340"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13232:8348","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:251:1631":{"id":"0:251:1631","crate_id":0,"name":"InvalidChunkSize","span":{"filename":"src/lib.rs","begin":[185,0],"end":[185,28]},"visibility":"public","docs":"An error in parsing a chunk size.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"unit","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":[],"impls":["a:2:9407:7649-0:251:1631","a:2:3269:211-0:251:1631","a:2:9408:7648-0:251:1631","a:2:3310:7665-0:251:1631","a:2:3281:220-0:251:1631","b:2:2869-0:251:1631","b:2:4002-0:251:1631","b:2:3202-0:251:1631","b:2:3213-0:251:1631","b:2:3198-0:251:1631","b:2:2872-0:251:1631","b:2:3208-0:251:1631","b:5:6413-0:251:1631","0:253","0:255","0:256","0:258","0:259","0:129"]}},"0:263:1643":{"id":"0:263:1643","crate_id":0,"name":"Complete","span":{"filename":"src/lib.rs","begin":[208,4],"end":[208,15]},"visibility":"default","docs":"The completed result.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"generic","inner":"T"}]}},"a:2:9408:7648-0:347:1710":{"id":"a:2:9408:7648-0:347:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9408:7648","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9407:7649-0:261:1613":{"id":"a:2:9407:7649-0:261:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9407:7649","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9407:7649","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3204:681":{"id":"2:3204:681","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:347:1710":{"id":"b:2:3208-0:347:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:322:1715":{"id":"b:2:3213-0:322:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:325:1504":{"id":"0:325:1504","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[550,4],"end":[550,27]},"visibility":"public","docs":"The response version, such as `HTTP/1.1`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}},"2:13232:8348":{"id":"2:13232:8348","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:8350","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10451:8252":{"id":"2:10451:8252","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10452:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:146:1700":{"id":"0:146:1700","crate_id":0,"name":"parse_request","span":{"filename":"src/lib.rs","begin":[346,4],"end":[352,5]},"visibility":"public","docs":"Parses a request with the given config.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["request",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:131:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3211:127":{"id":"2:3211:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"2:3431:8921":{"id":"2:3431:8921","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3433:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:332:660":{"id":"0:332:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[547,9],"end":[547,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10400:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10389:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:187:1846":{"id":"0:187:1846","crate_id":0,"name":"parse_headers","span":{"filename":"src/lib.rs","begin":[846,0],"end":[853,1]},"visibility":"public","docs":"Parse a buffer of bytes as headers.\n\nThe return value, if complete and successful, includes the index of the\nbuffer that parsing stopped at, and a sliced reference to the parsed\nheaders. The length of the slice will be equal to the number of properly\nparsed headers.\n\n# Example\n\n```\nlet buf = b\"Host: foo.bar\\nAccept: */*\\n\\nblah blah\";\nlet mut headers = [httparse::EMPTY_HEADER; 4];\nassert_eq!(httparse::parse_headers(buf, &mut headers),\n           Ok(httparse::Status::Complete((27, &[\n               httparse::Header { name: \"Host\", value: b\"foo.bar\" },\n               httparse::Header { name: \"Accept\", value: b\"*/*\" }\n           ][..]))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["src",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:131:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":["'h"]}}},{"name":"'h","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:4783:8901":{"id":"2:4783:8901","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4784:2183","2:4785:58950","2:4786:7854"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6481:8515":{"id":"1:6481:8515","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6482:54742","1:6483:12760","1:6484:54743","1:6485:54744","1:6486:54745","1:6487:54746"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10587:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3212:1417":{"id":"2:3212:1417","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47742:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4741:8452":{"id":"1:4741:8452","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4742:57445","1:4743:39579","1:4744:57446","1:4745:57447"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:158":{"id":"0:158","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[421,0],"end":[501,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"items":["0:161:920","0:163:1761","0:165:1766"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10449:8251":{"id":"2:10449:8251","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10450:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3440:8926":{"id":"2:3440:8926","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3442:1237"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:161:920":{"id":"0:161:920","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[424,4],"end":[431,5]},"visibility":"public","docs":"Creates a new Request, using a slice of headers you allocate.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["headers",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:322:1715":{"id":"b:2:4002-0:322:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3372:8715":{"id":"2:3372:8715","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3374:1356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3423:8917":{"id":"2:3423:8917","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3425:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3310:7665-0:297:1704":{"id":"a:2:3310:7665-0:297:1704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'buf","bounds":[{"outlives":"'headers"}]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4002-0:225:127":{"id":"b:2:4002-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:220-0:261:1613":{"id":"a:2:3281:220-0:261:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3775:8892":{"id":"2:3775:8892","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:6812:8518":{"id":"1:6812:8518","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6813:13245"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10587:8512","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3342:8609":{"id":"2:3342:8609","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3344:181","2:3345:1355"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6107:55941":{"id":"5:6107:55941","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15995:2345"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8361:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:251:1631":{"id":"b:2:2869-0:251:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2410"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:336":{"id":"0:336","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[547,16],"end":[547,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3202-0:251:1631":{"id":"b:2:3202-0:251:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13576:304":{"id":"2:13576:304","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:16006:2354","str::as_mut_ptr":"1:15995:2345"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[136,33],"end":[136,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13589:54879":{"id":"2:13589:54879","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:15995:2345"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:789:7902":{"id":"5:789:7902","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"2:13601:54895":{"id":"2:13601:54895","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:13202:8353","prim@char":"1:15989:2340"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2967:184":{"id":"2:2967:184","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2969:997","2:2970:826","2:2971:792","2:2972:713","2:2973:696"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:215:1883":{"id":"0:215:1883","crate_id":0,"name":"parse_chunk_size","span":{"filename":"src/lib.rs","begin":[1135,0],"end":[1198,1]},"visibility":"public","docs":"Parse a buffer of bytes as a chunk size.\n\nThe return value, if complete and successful, includes the index of the\nbuffer that parsing stopped at, and the size of the following chunk.\n\n# Example\n\n```\nlet buf = b\"4\\r\\nRust\\r\\n0\\r\\n\\r\\n\";\nassert_eq!(httparse::parse_chunk_size(buf),\n           Ok(httparse::Status::Complete((3, 4))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"result::Result","id":"2:47742:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"u64"}]}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3559:9136":{"id":"2:3559:9136","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3561:237","2:3562:206","2:3563:58549"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:286:1655":{"id":"0:286:1655","crate_id":0,"name":"ParserConfig","span":{"filename":"src/lib.rs","begin":[245,0],"end":[250,1]},"visibility":"public","docs":"Parser configuration.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:138","a:2:9407:7649-0:286:1655","a:2:3269:211-0:286:1655","a:2:9408:7648-0:286:1655","a:2:3310:7665-0:286:1655","a:2:3281:220-0:286:1655","b:2:2869-0:286:1655","b:2:4002-0:286:1655","b:2:3202-0:286:1655","b:2:3213-0:286:1655","b:2:3198-0:286:1655","b:2:2872-0:286:1655","b:2:3208-0:286:1655","b:5:787-0:286:1655","0:291","0:293","0:295"]}},"2:2866:7930":{"id":"2:2866:7930","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2868:53183"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3213-0:251:1631":{"id":"b:2:3213-0:251:1631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:297:1704":{"id":"b:2:3208-0:297:1704","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:297:1704","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5819:8500":{"id":"1:5819:8500","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5820:10307"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:225:127":{"id":"b:2:3213-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8556:7667":{"id":"2:8556:7667","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8558:7849","2:8560:7850","2:8561:7851"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:226:1607":{"id":"0:226:1607","crate_id":0,"name":"HeaderName","span":{"filename":"src/lib.rs","begin":[139,4],"end":[139,14]},"visibility":"default","docs":"Invalid byte in header name.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13597:32024":{"id":"2:13597:32024","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49872:8354","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[205,9],"end":[205,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1613","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:7665-0:347:1710":{"id":"a:2:3310:7665-0:347:1710","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:7665","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8547:151":{"id":"2:8547:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8548:2183","2:8549:7852","2:8550:768"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3269:211-0:225:127":{"id":"a:2:3269:211-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:236:1617":{"id":"0:236:1617","crate_id":0,"name":"TooManyHeaders","span":{"filename":"src/lib.rs","begin":[149,4],"end":[149,18]},"visibility":"default","docs":"Parsed more headers than provided buffer can contain.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:144:1657":{"id":"0:144:1657","crate_id":0,"name":"allow_obsolete_multiline_headers_in_responses","span":{"filename":"src/lib.rs","begin":[332,4],"end":[338,5]},"visibility":"public","docs":"Sets whether obsolete multiline headers should be allowed.\n\nThis is an obsolete part of HTTP/1. Use at your own risk. If you are\nbuilding an HTTP library, the newlines (`\\r` and `\\n`) should be\nreplaced by spaces before handing the header value to the user.\n\n# Example\n\n```rust\nlet buf = b\"HTTP/1.1 200 OK\\r\\nFolded-Header: hello\\r\\n there \\r\\n\\r\\n\";\nlet mut headers = [httparse::EMPTY_HEADER; 16];\nlet mut response = httparse::Response::new(&mut headers);\n\nlet res = httparse::ParserConfig::default()\n    .allow_obsolete_multiline_headers_in_responses(true)\n    .parse_response(&mut response, buf);\n\nassert_eq!(res, Ok(httparse::Status::Complete(buf.len())));\n\nassert_eq!(response.headers.len(), 1);\nassert_eq!(response.headers[0].name, \"Folded-Header\");\nassert_eq!(response.headers[0].value, b\"hello\\r\\n there\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:152:1713":{"id":"0:152:1713","crate_id":0,"name":"parse_response","span":{"filename":"src/lib.rs","begin":[365,4],"end":[371,5]},"visibility":"public","docs":"Parses a response with the given config.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["response",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:131:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3182:227":{"id":"2:3182:227","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3184:127","2:3185:1416"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3337:8713":{"id":"2:3337:8713","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3339:181","2:3340:265"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3201:7841":{"id":"2:3201:7841","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3175:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2572:127":{"id":"1:2572:127","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2573:8300","1:2575:1629","1:2576:8301","1:2577:8302"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10440:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13648:59712":{"id":"2:13648:59712","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"`DoubleEndedIterator`":"2:8591:120","str::rmatch_indices":"1:15995:2345","self::pattern":"2:13202:8353","prim@char":"1:15989:2340"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49730:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23613:9025":{"id":"2:23613:9025","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23614:1270","2:23615:1269","2:23616:1267","2:23617:1266"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialEq","id":"2:23025:9129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13580:13405":{"id":"2:13580:13405","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47617:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47617:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:225:127":{"id":"0:225:127","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[137,0],"end":[152,1]},"visibility":"public","docs":"An error in parsing.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:226:1607","0:228:1609","0:230:1611","0:232:1613","0:234:1615","0:236:1617","0:238:1619"],"impls":["a:2:9407:7649-0:225:127","a:2:3269:211-0:225:127","a:2:9408:7648-0:225:127","a:2:3310:7665-0:225:127","a:2:3281:220-0:225:127","b:2:2869-0:225:127","b:2:4002-0:225:127","b:2:3202-0:225:127","b:2:3213-0:225:127","b:2:3198-0:225:127","b:2:2872-0:225:127","b:2:3208-0:225:127","b:5:787-0:225:127","b:5:6413-0:225:127","0:240","0:241","0:243","0:244","0:246","0:247","0:249","0:125","0:127"]}},"0:346:604":{"id":"0:346:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[547,20],"end":[547,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4051:8294":{"id":"2:4051:8294","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4052:8302"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:12649:9373":{"id":"2:12649:9373","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12650:2183","2:12651:58333"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:6413-0:225:127":{"id":"b:5:6413-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10447:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6415:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:286:1655":{"id":"b:2:2872-0:286:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2461","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:7930","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:286:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53183"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13584:1857":{"id":"2:13584:1857","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11082:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:155:1717":{"id":"0:155:1717","crate_id":0,"name":"parse_response_with_uninit_headers","span":{"filename":"src/lib.rs","begin":[374,4],"end":[381,5]},"visibility":"public","docs":"Parses a response with the given config and buffer for headers","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["response",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Response","id":"0:322:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["headers",{"kind":"borrowed_ref","inner":{"lifetime":"'headers","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"MaybeUninit","id":"2:32458:1581","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:347:1710","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:131:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13621:54889":{"id":"2:13621:54889","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:13202:8353","`DoubleEndedIterator`":"2:8591:120","str::split":"1:15995:2345","prim@char":"1:15989:2340"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49598:7958","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13212:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13227:8350","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:127":{"id":"0:127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[176,0],"end":[180,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","description","cause","source","provide"],"trait":{"name":"Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:128:1629"],"negative":false,"synthetic":false,"blanket_impl":null}}},"paths":{"2:48384:8251":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:11457:11253":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"18:866:10216":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:48003:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:10874:11234":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:5455:12597":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:15316:8548":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"6:1680:12103":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:49379:7943":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:46687:7934":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"17:11579:11281":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:13212:8349":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"6:1721:12127":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:51336:9062":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:3492:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:13247:11698":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"5:1694:9487":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"6:521:11936":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:46743:9082":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"16:7323:9782":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"16:5412:9808":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"12:2419:8589":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"5:1843:11032":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:11437:8802":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:49419:7936":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:46703:9096":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"5:8338:9456":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:46842:9090":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:13961:11897":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:1651:8581":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:24389:9278":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:3423:8917":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"5:5889:11043":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"5:8121:9507":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:12171:8624":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:13915:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"1:8432:9481":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"5:4599:11035":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"5:432:7668":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"6:1626:12061":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:28180:8995":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:50103:8965":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:13432:13403":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"2:46657:11051":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:6812:8518":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:12482:11460":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:1157:16011":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:6719:12695":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"16:5257:10741":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:542:9733":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"12:1121:8579":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:13427:13219":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"6:4179:12307":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:13215:11685":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:9793:11077":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"1:15988:2339":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:6721:12697":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:3278:217":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:7139:7637":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:50355:9304":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"1:13782:8696":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"1:5982:8856":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"0:0:2071":{"crate_id":0,"path":["httparse"],"kind":"module"},"1:11680:8667":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:50028:8963":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"16:4716:10749":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:11411:8540":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:7685:8685":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:53479:7473":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:56409:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:4743:10735":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"6:3972:12212":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"16:7379:9783":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:11354:10097":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:10829:8505":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"6:593:11977":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:13233:11693":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:10705:17020":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:22729:58321":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:47102:7520":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"1:1518:8575":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:10516:12955":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"16:7169:9776":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:9326:10095":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:8930:7520":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"17:11474:11258":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"16:7868:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:51314:9058":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"16:5685:9819":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:12674:11496":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"5:3759:7952":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"12:2036:7852":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"6:5229:12479":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:2027:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:12585:11478":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"6:5426:12589":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"12:2269:8579":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"6:6205:12765":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:51492:10386":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:10476:10116":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:10667:16008":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"12:764:7953":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:3166:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:53525:7476":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:6959:8523":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:12245:7521":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:3734:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:1438:7852":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"16:4660:10734":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:13785:11852":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"6:6671:12799":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:9948:13154":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:10678:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"17:10545:13167":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:49538:8361":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"5:1091:11032":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"0:236:1617":{"crate_id":0,"path":["httparse","Error","TooManyHeaders"],"kind":"variant"},"17:12921:11537":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"9:157:9549":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"17:11181:10862":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:3581:8931":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"6:5567:12631":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:10900:8465":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"17:11615:11288":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:22697:58194":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"6:4454:12398":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"16:3314:10011":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:7896:9105":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:12093:11385":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:46563:9148":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:5030:8267":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:49500:7956":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"5:1011:7952":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"18:774:11183":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:3192:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"16:7782:9768":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:49161:9375":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"16:6504:9842":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:12994:7964":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:50302:9245":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:11087:8479":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"12:979:8577":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"16:5902:9825":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:6949:10069":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"6:4067:12256":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"18:754:60890":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"16:6518:9775":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:23276:8512":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"16:7131:9856":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:32458:1581":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"16:7826:9117":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:10039:13157":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:7309:9764":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"0:232:1613":{"crate_id":0,"path":["httparse","Error","Status"],"kind":"variant"},"2:2194:2458":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:10824:8755":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:51982:10403":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:11674:7952":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"16:4942:10727":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:11262:7952":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:50154:8967":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:51284:9070":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:13377:11726":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:12003:11366":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:50294:9242":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:48930:8934":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:7354:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:47877:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"16:5427:9809":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:24363:9321":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"16:3461:10033":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:3427:8919":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:15739:11088":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:13755:11846":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"5:4643:11037":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:9740:8794":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"17:12222:11402":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:10127:10115":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:8250:8479":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:48635:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:5757:8494":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:22752:58319":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:23078:8512":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:23922:9020":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:10389:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:10443:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"1:10730:8287":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"1:7949:8744":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"17:12237:11405":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"16:5530:9813":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"6:5311:12525":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:48171:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"5:3040:12829":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:12731:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"18:169:13393":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"5:1674:8572":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:3310:7665":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"16:6342:9837":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:46412:9143":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:24968:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"16:4351:10752":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"6:6902:12811":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:46763:9084":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:11082:214":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:5395:8800":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:13660:11827":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"5:3329:7952":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"6:4218:12310":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:23230:8512":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:46772:9085":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:48377:8252":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:5811:8498":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"6:4287:12321":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:3525:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:47793:7953":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"1:14030:8687":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:12183:11397":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:10836:8757":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:24238:9181":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:2921:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"16:7415:9781":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:50306:9243":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"6:4135:12293":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"5:5609:1309":{"crate_id":5,"path":["alloc","slice"],"kind":"module"},"17:13129:11665":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"0:266:1645":{"crate_id":0,"path":["httparse","Status","Partial"],"kind":"variant"},"1:3323:8761":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:46753:9083":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:48129:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"6:4392:12372":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"12:2052:8602":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:10082:10192":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:53655:7482":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"5:8146:59499":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:5034:9205":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"16:5745:9822":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:46523:8362":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:46179:8266":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"2:46040:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"16:5273:10731":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:47111:12999":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"16:3177:10027":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:46577:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:16000:2348":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:14006:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:9579:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:56026:9121":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"16:6190:9834":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"6:5547:12617":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:4148:12297":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"11:54:9653":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"17:13602:11785":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:10899:13177":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"16:3686:10586":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:3129:10035":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:12920:9231":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:5952:8853":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:12442:11455":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"5:5903:1340":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"17:13953:11894":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:24273:10414":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:46824:9089":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:13721:11834":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"6:4116:12283":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"15:0:2319":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:2866:7930":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:23141:9023":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"5:374:9436":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"6:6250:12787":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"16:6159:9763":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:12758:11508":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:11466:7958":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:38993:7825":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:24311:38882":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"6:4061:12253":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:5584:16014":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"14:244:12971":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:51731:9039":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"16:2813:10039":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:9291:10796":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:11443:8822":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:53117:9061":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"16:7355:9761":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:3368:8714":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"6:3907:12166":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:10455:8254":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"11:46:11924":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"6:4379:12367":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:13221:8351":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"12:2059:8603":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"6:6943:12820":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:14217:8903":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:51637:9066":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:11207:8542":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"1:1149:13222":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:50532:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:10364:10167":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:15081:8631":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"12:353:12973":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"9:1075:9600":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"6:4362:12356":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:9746:13150":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"16:5348:9804":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:3812:8893":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"18:782:11183":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"6:6908:12812":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"16:3494:10800":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"6:4020:12236":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:3682:8457":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:15376:8801":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:13202:8353":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:49370:7944":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"6:4088:12267":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:13539:11771":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"16:7369:9762":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"12:777:7852":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:5631:779":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:4684:8450":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"16:3770:10732":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:5749:8493":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:23088:8564":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"0:322:1715":{"crate_id":0,"path":["httparse","Response"],"kind":"struct"},"5:1472:8579":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:4157:10188":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"16:6468:9840":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:15955:13333":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"9:0:2314":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"17:11409:11238":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"16:6557:9843":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"16:6130:9831":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:49854:8356":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"16:7200:9778":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:51206:9057":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:3169:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:49802:8372":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:11068:10104":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"6:1694:12114":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:10831:10115":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"6:1606:12047":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"16:5396:9807":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:11381:1710":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"16:6595:9774":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:4300:8482":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"2:51615:9063":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"16:3077:10083":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"6:6925:12817":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:16001:2349":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"1:7817:8694":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:50519:9250":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:2458:13233":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"16:5362:9805":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:51539:9071":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"6:4142:12295":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:12170:11395":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"6:513:11931":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"16:6089:9829":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"6:4509:12418":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:11130:12956":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"12:2412:11922":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:3758:9003":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:49490:7955":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:5990:8858":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:49784:8371":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"16:4381:10561":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"16:6173:9833":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"6:5541:12616":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"5:7849:11049":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"6:4208:12309":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:11374:8804":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"6:5398:12575":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:48961:13004":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:11922:11350":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:15999:2347":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"16:5941:9827":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:12041:8690":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:23001:8512":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:2937:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:6481:8515":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:11429:8813":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"1:1501:8573":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"17:13522:11767":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:6883:8521":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"16:4467:10560":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"9:809:8662":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"16:3478:10032":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"12:880:8569":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"5:7379:7852":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:10949:13184":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"16:6873:7645":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:10449:11079":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"18:790:10209":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:10643:11200":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:15993:2343":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:7308:13235":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"12:466:13396":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:46084:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:49445:7934":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"6:4464:12404":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:24377:9279":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"17:11494:11268":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"8:0:2313":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"5:2330:9491":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:4639:8440":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:11017:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:48969:13005":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"0:230:1611":{"crate_id":0,"path":["httparse","Error","NewLine"],"kind":"variant"},"6:5178:12459":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:3406:8608":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:13037:11629":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"5:3882:8465":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"17:13361:11722":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"16:6286:9683":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:5974:8855":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:5156:9212":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"6:4526:12426":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:16007:2355":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:11890:11340":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:10614:8743":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"17:11968:11362":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:9561:10106":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:11587:7961":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:607:13145":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"16:6012:9758":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:49566:1582":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"6:5210:12477":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:6407:9838":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:13595:11783":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"18:811:10211":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"16:6050:9828":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:11166:8367":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:14571:8505":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"17:10660:46915":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"6:4081:12264":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:16012:2360":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"18:694:10225":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"5:8130:8568":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:15992:2342":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:12026:11369":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:4032:8709":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:12431:11454":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:1415:7952":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"17:12512:11465":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:49408:7946":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:32424:2462":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:56396:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"15:269:9690":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:3172:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:2062:8440":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:52239:9067":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"18:0:2322":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:12226:7518":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:5186:12461":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:11278:8650":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"1:10388:10852":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"16:4803:10733":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:4752:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:3384:8953":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"16:2861:10021":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"5:3362:8604":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"16:5460:9811":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:12360:11440":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"5:8115:7852":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"5:6411:223":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:3358:8942":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:46893:9098":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:52475:9047":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:8506:8992":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:22988:8996":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"2:4921:9204":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:7238:9780":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"12:432:9668":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"6:6688:12808":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:1944:1580":{"crate_id":2,"path":["core","mem"],"kind":"module"},"17:13735:11840":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"6:3883:12149":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:13919:8686":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:5605:9138":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"6:6027:12678":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"5:3375:9427":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:11725:11307":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:10390:10114":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"6:6184:12751":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:50468:12908":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:9649:54674":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"17:11335:10098":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"12:750:7952":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:3281:220":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:10698:8583":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"18:611:10220":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"5:994:9506":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"17:10851:11233":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:46397:8363":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:4740:9017":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:47140:13001":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:10728:8933":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"16:7754:9863":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"5:2262:9492":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:13515:11766":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"17:9930:60877":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"5:3748:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:24214:10420":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:3275:7821":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:3325:8762":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"16:2981:10034":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:8001:9080":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:3380:8951":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"17:9646:60879":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:45996:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:510:13144":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:14604:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"17:10586:13171":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:3103:8512":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:2292:9009":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"5:8138:9508":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:11172:8540":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"17:2484:46815":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"6:5447:12595":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"12:2032:7952":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"6:1621:12059":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:49834:8367":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:5185:7575":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"16:4840:10750":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:10598:13172":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"5:4699:11037":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:8071:8876":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:10639:7914":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"1:2183:8604":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"5:8361:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:50318:9239":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"12:399:9669":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:49398:7945":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:46734:9100":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:3352:8939":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:49458:7935":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:49879:8362":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:9396:10845":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:11393:7949":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"16:4411:10512":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"14:11:13204":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:48398:8254":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:5039:9206":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"6:4516:12421":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:10455:10112":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:13141:8365":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"16:2733:9997":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:15994:2344":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:1642:8580":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:11168:12957":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"18:766:11194":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"6:4270:8821":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:24704:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:49844:8368":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"5:4215:8568":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:2362:600":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:32524:58655":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"2:24869:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:13935:54663":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:53563:7478":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"5:3336:8603":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"6:533:11941":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"5:1235:9490":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:46852:9091":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:12078:54637":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"5:7212:8568":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"14:56:11253":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:10688:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:9883:60883":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:1482:8569":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"2:24803:8748":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"5:1441:8578":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:12731:11504":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:10925:13182":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"9:1056:9592":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:15971:53218":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:4066:8293":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"2:48641:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"0:263:1643":{"crate_id":0,"path":["httparse","Status","Complete"],"kind":"variant"},"6:5260:12500":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"16:5923:9826":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"16:6331:9682":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"6:6034:12682":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:47742:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"5:3970:11032":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:12883:9230":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"9:41:9582":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"2:8748:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:8410:8662":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"16:7637:9860":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:10253:10150":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:50286:9237":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"1:894:8724":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:3007:10024":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"6:6080:12701":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"6:4416:12380":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:6717:12693":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"16:7247:9794":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:48045:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:12255:7529":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"16:7051:9849":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:48255:7514":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:24671:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"12:183:9671":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:48668:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"17:12282:11413":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:15044:8710":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"5:6954:9378":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"0:131:205":{"crate_id":0,"path":["httparse","Result"],"kind":"typedef"},"2:23025:9129":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"16:5238:45149":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:32472:58652":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"18:651:10219":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"6:5974:12649":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"6:6856:12809":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:47666:7953":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"17:10445:10792":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:7141:9857":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:4728:9016":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:16010:2358":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"16:5784:9823":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"7:85:44409":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"6:4012:12234":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:14390:7931":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"16:5959:9751":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:15118:8698":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"12:928:8570":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:8311:8745":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"2:4000:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"17:11514:11269":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"6:6914:12813":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:3648:9287":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:4512:8471":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"12:1682:9677":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:8861:13236":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"9:686:9530":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"1:10682:16010":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:2219:1050":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"5:5833:7925":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"16:6482:10054":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"18:739:13141":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:11591:11284":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:9587:60882":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:46403:12985":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"9:927:44506":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"16:4628:10746":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"9:603:13325":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:11256:10859":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"1:4748:8433":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:3342:8609":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:47658:7952":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:48738:8250":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"12:815:8572":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:12943:9232":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"12:2253:8578":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:53593:7480":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"6:1531:12006":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:0:798":{"crate_id":6,"path":["libc"],"kind":"module"},"1:11363:8802":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:13257:11699":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:6003:8859":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"17:13472:11752":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:10884:8779":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:12496:11463":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:12383:11449":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"5:3048:59576":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:9716:60884":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:10447:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:9028:8304":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:6514:9086":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:16014:2362":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"5:3839:11032":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:52509:9029":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:14111:58677":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"2:46594:9294":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:9916:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:9082:7524":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:696:8720":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"16:6656:10059":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:46106:9286":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"12:2392:11919":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:1446:8566":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:2751:8288":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"18:720:11185":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:14637:53220":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"0:238:1619":{"crate_id":0,"path":["httparse","Error","Version"],"kind":"variant"},"17:9206:46730":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:10340:10169":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:1619:8578":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"16:7100:9853":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:14584:10316":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:46924:9095":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"6:5998:12666":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:5807:8497":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"16:5855:9824":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:13306:11709":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:3417:8906":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:12298:8711":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:3347:8937":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:4078:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"2:12205:11057":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"2:9666:1113":{"crate_id":2,"path":["core","result"],"kind":"module"},"2:53319:9030":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:11956:11360":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"6:3896:12158":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"12:1256:8581":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:13271:11700":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"6:5204:12474":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:11369:8803":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"16:5443:9810":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:5008:8538":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"16:5176:10587":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:49702:7960":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:9786:13151":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:12557:11472":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:3274:2461":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:12634:11491":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"6:4373:12364":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:3200:8449":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"1:16011:2359":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:23082:8562":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:46804:9088":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"16:2792:9746":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"1:5522:8808":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:47716:7646":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"6:161:39540":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"16:4599:10740":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:11985:11365":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"6:6214:12768":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:4670:8440":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"1:11350:10313":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"1:6707:8495":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:2508:8902":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"18:849:10214":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:5208:8269":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:14235:8474":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"5:8309:9294":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:8402:8745":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"17:10291:10090":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"16:4975:10522":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:11094:8481":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:8547:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"6:4256:12313":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:10974:8707":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:12133:7852":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:12348:11438":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"18:661:10223":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"16:4439:10751":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:14815:8691":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"2:23287:9023":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:5741:8492":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:13549:11774":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"16:3340:10012":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:9361:10869":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:3746:9002":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:10599:54607":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"13:0:2311":{"crate_id":13,"path":["std_detect"],"kind":"module"},"6:4434:12389":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:4885:9203":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:13557:11775":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"16:4903:10755":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"16:547:10004":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:22952:9140":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"6:4356:12353":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:50314:9238":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:15202:8639":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:46020:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:5165:8268":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:45906:8306":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"16:3908:10729":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:51474:9027":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:9911:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:22731:58317":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:11261:8546":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"17:11689:11302":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:12250:7528":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:2159:7852":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:4008:13147":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"16:6643:10058":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"6:4110:12280":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"6:565:11962":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"13:232:11918":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"14:194:45072":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:3351:8772":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"16:6630:10057":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:13529:11768":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:1524:8576":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:13887:11882":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"6:5274:12511":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:9836:60886":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"5:7453:11032":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:3297:7824":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:3287:7823":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"0:286:1655":{"crate_id":0,"path":["httparse","ParserConfig"],"kind":"struct"},"12:2398:11920":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:2269:9005":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"6:1748:12137":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:50188:10344":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"1:15995:2345":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"5:5788:11032":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:57757:12910":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"16:7184:10070":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"6:1704:12120":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:53459:2233":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:6896:12810":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:3178:228":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"17:9988:46777":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"6:1558:12017":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"6:5405:12576":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"0:228:1609":{"crate_id":0,"path":["httparse","Error","HeaderValue"],"kind":"variant"},"0:226:1607":{"crate_id":0,"path":["httparse","Error","HeaderName"],"kind":"variant"},"18:820:10212":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"16:7659:9861":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:8825:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:4965:8265":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:3337:8713":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:4080:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:3197:8758":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"5:923:9505":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:15024:8690":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"12:2040:8568":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"17:11305:11505":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"1:2572:127":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"2:3401:8607":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"5:5093:660":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"17:11603:11285":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:7463:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"17:10489:12954":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:9004:46725":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:9183:10103":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:51853:9032":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"5:5875:11041":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"5:6764:8440":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:32284:9316":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"1:10721:13239":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"6:1669:12095":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:820:11078":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"14:216:45078":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:6341:8820":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:11465:12682":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"6:5390:12574":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:3440:8926":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:2433:13231":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:12072:7950":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"16:2905:10022":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:3522:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"9:234:9557":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"6:4198:12308":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:12716:11500":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:51951:10347":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:15188:8638":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:9920:13153":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:14227:9251":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"1:7814:8692":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:10390:8246":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"17:299:13143":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:4666:8448":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"16:5217:10014":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:48914:8592":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"12:1203:9665":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:12543:11470":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:1302:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"16:6490:9841":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:12455:11457":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:12469:11459":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"17:9131:46729":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"5:8455:9410":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:12738:8755":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"1:11423:8857":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"6:1634:12066":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:46781:12994":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:294:13142":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:1132:8296":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"5:8278:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:8307:13402":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"6:4038:12245":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:52865:9073":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:12401:13232":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:10859:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:12700:11498":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"16:5639:9816":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"2:46813:9101":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"16:7264:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:618:11990":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"14:189:13204":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:10435:10113":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:11146:8455":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:13584:11782":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"9:1020:9599":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:13708:11828":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"16:6381:9773":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:14561:13007":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"17:10187:13160":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:12959:9233":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:37774:7829":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:23237:21317":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"6:4446:12393":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:52445:9044":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:9407:7649":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:53514:7475":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:12009:8687":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:10048:13158":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:52399:9040":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:9539:10155":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"11:0:2316":{"crate_id":11,"path":["adler"],"kind":"module"},"1:14232:8472":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"1:13564:13231":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:6221:8819":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"6:5331:12541":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:6579:8556":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:10775:13174":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:12573:11476":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:47734:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:13917:11890":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"12:971:8576":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:3372:8715":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:8947:8835":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"2:52085:9072":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:3559:9136":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:49960:8955":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:11013:13189":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"16:7721:9772":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:50165:8968":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:3505:8307":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:11547:11275":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:47725:7919":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:11545:7962":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:12660:11493":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:16003:2351":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:13965:59311":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"16:3155:10026":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:3431:8921":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:7651:8683":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"16:5498:9812":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:9466:10857":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:10558:13169":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"5:3488:8569":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"16:6604:9844":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:4051:8294":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"16:3402:9747":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"5:8203:7852":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:16002:2350":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"18:885:10217":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:2926:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"16:7684:9771":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:48087:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"12:472:13397":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"16:6691:9845":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"16:7281:9765":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:46883:9093":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:2888:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:9489:13268":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"17:13440:11744":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"5:5536:7513":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:49888:8363":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"5:2310:9515":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:10136:13152":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:1236:13146":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:5763:8495":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:9275:10731":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"5:3370:8602":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"5:6672:7513":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"16:3743:10739":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"5:69:9409":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:2395:13229":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:14546:8534":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"18:829:10213":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:14566:13009":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"16:6433:9839":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"15:230:9685":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:13278:8958":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:49471:7954":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:13073:11659":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:12649:9373":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:3561:8461":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:9085:7525":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:11433:11252":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:3279:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"17:13147:11670":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"16:5605:9815":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"0:187:1846":{"crate_id":0,"path":["httparse","parse_headers"],"kind":"function"},"2:56383:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:11784:11330":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:4410:12379":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"7:0:1481":{"crate_id":7,"path":["unwind"],"kind":"module"},"0:347:1710":{"crate_id":0,"path":["httparse","Header"],"kind":"struct"},"12:114:13395":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:4434:8473":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:13463:11749":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:24356:12982":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"12:1103:8578":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"5:3300:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"9:900:11925":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:5101:9211":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"5:3039:59574":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"5:5415:8440":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"6:580:11971":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"5:783:222":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:11907:11346":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:1493:8571":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:11628:11290":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"6:3981:12217":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:5085:8651":{"crate_id":1,"path":["std","net","ip","display_buffer","IpDisplayBuffer"],"kind":"struct"},"17:9064:46727":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"18:896:10218":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:11573:7963":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:48754:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"16:2937:10045":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:13418:8815":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:9031:8305":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"6:4308:12333":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:49863:8355":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:9873:13152":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:13281:11701":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"6:5478:12603":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:47919:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:3182:227":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"18:645:10222":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:46145:8295":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:3339:8766":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:50476:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"16:3521:11912":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"17:12117:11387":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:3247:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:11691:8668":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"16:3029:10025":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"5:1618:7852":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:8510:8621":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:16013:2361":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:2187:578":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:6459:8518":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:53195:9045":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"6:1537:12009":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:38930:8290":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:23285:9024":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"16:3103:10036":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:11153:1582":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:1190:16012":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"2:52659:9053":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:24198:12979":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:32624:58653":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"2:11354:7964":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"5:8160:7852":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:5819:8500":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:9826:10115":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:15173:8637":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:51385:9050":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:56461:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:11286:7953":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"16:6907:9847":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:45980:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:2957:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"18:621:12949":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:1311:10199":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:3341:8767":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:24161:10387":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"2:24327:38891":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"5:8197:7852":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"6:4277:12314":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:50140:8966":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:11307:12914":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"17:13323:11714":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:1507:8574":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:10453:8253":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"5:1597:7952":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:13908:11888":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:11769:11324":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:12130:11390":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"5:1486:8581":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"6:6016:12673":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:10422:13163":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"12:933:8573":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"12:895:9655":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"2:24638:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:47674:7852":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:23613:9025":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"2:50011:8962":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:16006:2354":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"5:8383:9382":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:46165:9117":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"9:692:9532":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"5:4515:9467":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"17:12070:11379":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:49598:7958":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:10814:10185":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"16:7155:9858":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:13180:11681":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:12769:13240":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"2:46507:9360":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"6:5301:12518":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"16:5698:9820":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"16:5948:10019":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"18:704:11183":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"16:7208:9859":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:11559:7960":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"19:117:11179":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"1:1152:13224":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:8510:8990":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:7810:7860":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:6809:8533":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:0:1331":{"crate_id":1,"path":["std"],"kind":"module"},"2:53441:9033":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"5:8295:9454":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"6:4340:12346":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:49165:7937":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:626:11995":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:51585:9059":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:51140:10407":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"12:869:8568":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:48702:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"6:3966:12210":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:12740:11083":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:10198:13161":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"5:6652:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"18:744:60887":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"16:2959:10023":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:3736:8464":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:46795:9087":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:6104:8810":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:6931:12818":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"6:4296:12326":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"16:6099:9830":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:10587:8512":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"6:1662:12091":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"6:1912:40847":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:10609:8729":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"17:13507:11763":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:3648:8462":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:14313:7914":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"1:5669:8529":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"12:1881:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:8661:7515":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:12527:11469":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:48939:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:51455:10411":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:4378:7852":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:1530:8577":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"16:6549:9777":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"5:8355:12830":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"1:7954:54672":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"2:46537:9362":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:6885:8522":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:47835:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:11314:10099":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:11582:8662":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:4732:57581":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"9:996:9598":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:10503:10117":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"16:6277:9835":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:50561:8291":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"17:11142:10828":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"6:157:39539":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"1:4723:8246":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"16:3366:10037":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:9161:7527":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"6:571:11965":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"17:9087:46728":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"12:2280:8580":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"6:3960:12209":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"0:215:1883":{"crate_id":0,"path":["httparse","parse_chunk_size"],"kind":"function"},"2:46712:8287":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:10588:8721":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:11713:11306":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:51904:10383":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"5:4306:7953":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:14278:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"2:47095:12998":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:14099:11084":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"1:10979:8466":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:51829:9031":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"16:6533:10052":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"5:4628:235":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:53403:9068":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"16:6980:9848":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:681:10852":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"12:379:9670":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:49897:8364":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:13196:11684":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:13899:11884":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:13404:11730":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:9788:11076":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"17:8902:46723":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"6:4230:12311":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:10962:13185":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:46914:9094":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:9409:7647":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"6:1544:12012":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"6:612:11987":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:10058:10198":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:8995:7531":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:10459:8255":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:11563:11280":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:15012:8689":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:13930:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:9656:11075":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"2:48680:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:3277:218":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"6:3920:12176":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"9:749:9534":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"1:8049:8745":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"2:10595:13218":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"6:539:11942":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:10266:10087":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:25001:9265":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"5:4242:11032":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:8712:7517":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"5:1457:8580":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:1497:8572":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"6:4028:12239":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:23918:8512":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:48650:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"16:2883:10040":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:10223:10108":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"5:8372:9381":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"6:1740:12133":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"19:0:994":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:7025:9752":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:56422:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:8929:46724":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:46440:9146":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:46904:8455":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"12:559:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:10688:8582":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"16:5887:10009":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"6:4332:12342":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:13167:11676":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:24290:38890":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:8954:10105":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:9529:8349":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:9033:46726":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"18:801:10210":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:10399:13247":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"17:9431:10858":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"6:4055:12251":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:12607:11489":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"12:1162:9663":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"16:5289:9759":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"16:7079:9851":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:46484:9359":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"2:46582:9293":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"16:7792:9797":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:9035:8875":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:12957:11568":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:2793:8289":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:10474:11081":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"16:6931:10068":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:46454:9364":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:3104:8930":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"9:963:9597":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:3411:8912":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"18:152:13390":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"6:6097:12703":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:15468:54606":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"18:712:7829":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:48617:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:50076:8964":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:13612:11790":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"1:14238:8470":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"17:12048:11378":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"6:1764:12142":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"6:4485:12411":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:12673:1792":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:13227:8350":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"12:940:8574":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"12:1238:9666":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:22684:7829":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:13573:11778":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:50298:9241":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:10457:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:56448:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:7671:8684":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:3740:9000":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"16:2772:10046":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:24090:9262":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"5:5837:7926":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"6:6967:12825":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:10318:10115":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"16:7702:9770":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"6:5419:12587":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"14:231:9384":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:11640:11291":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:21:672":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:50322:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:3435:8923":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:5582:12642":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:13794:11854":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"14:47:13204":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:2177:8603":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"5:3044:59577":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:8215:11060":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"16:5516:10002":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:51437:9042":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:14951:11087":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:24902:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:10028:13156":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:52209:9064":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:10723:8591":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"0:251:1631":{"crate_id":0,"path":["httparse","InvalidChunkSize"],"kind":"struct"},"16:4573:10511":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:7277:13235":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:13859:11873":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:47801:7852":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"16:5303:9802":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"17:13345:11719":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:53616:7481":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:57736:12909":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"6:3993:12221":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:49684:7962":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:10801:10184":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:12085:10306":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"1:4473:8475":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"18:837:8351":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:14929:11085":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:15397:8808":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"16:6035:9799":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:13331:11717":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:13938:11893":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"5:1644:8567":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"6:5439:12593":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:8496:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:49556:8358":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:2934:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:11073:8512":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:15214:8645":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"6:6954:12824":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:11797:11334":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:2397:8681":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:12250:11406":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"6:1576:12028":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:10400:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:9755:8795":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:46544:9363":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"6:607:11985":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"6:527:11939":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:11504:7959":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"6:5982:12654":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:47129:12897":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:49982:8956":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"5:7111:11045":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"1:14798:13239":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"1:15960:16013":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:10969:8706":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:4425:12383":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:10876:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:46861:2221":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"5:1607:7953":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:8591:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:13094:11664":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:23618:21336":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"2:52005:10408":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:12892:11517":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:47120:8480":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"6:1526:12004":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"6:4402:12375":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:8849:10154":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"12:1666:9676":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:49550:8359":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:13565:11777":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"6:3933:12186":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:10725:9498":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"17:10937:13183":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:11418:8854":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:2512:10166":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"5:1195:13401":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:13583:13404":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:53007:9041":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:4:979":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:10115:10195":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"16:3243:10030":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"16:5374:9806":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"16:7063:9850":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"12:856:8567":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"16:6026:9756":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:3269:211":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"5:4443:7952":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"3:0:430":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:14314:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:1459:8567":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"9:469:13315":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:9408:7648":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"6:4242:12312":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:12027:8689":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"12:1784:11030":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"16:6075:9760":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"18:136:13389":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:46501:8363":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"3:321:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"17:11085:10160":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"17:13155:11671":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:24182:9186":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"17:11102:46732":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"12:2045:8569":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"6:545:11945":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:5998:9779":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:11221:8544":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"6:6229:12775":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:4048:12248":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:10819:8560":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:47961:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"5:2777:9494":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:10015:13155":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:16004:2352":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"6:4346:12347":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"16:6858:10065":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:15062:10297":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:32464:2463":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"2:10449:8251":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"5:6688:9439":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:13232:8348":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"17:9796:60881":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"16:7471:9757":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:2456:13232":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"1:9365:8561":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:51252:9037":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:783:11078":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"1:2162:8568":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"5:2218:9429":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"6:4127:12288":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"16:5326:9803":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:3717:9288":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:10068:10087":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:5797:8496":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:49319:9228":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"6:4440:12390":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:5408:9356":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:51160:10391":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:12279:8710":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"16:4316:10588":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:50290:9240":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:3516:1856":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"6:6120:12710":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:1428:7953":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:24737:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:12125:8619":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"6:5293:12513":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:2594:13234":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"2:51184:9069":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"6:6665:12797":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:11136:8287":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"16:3265:10031":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:11822:11338":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:12620:11490":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"5:8262:8590":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"17:13138:11669":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:49730:8369":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:12063:13006":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"2:51783:9046":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:53257:9065":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"5:3341:9426":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:10988:13187":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:12105:7951":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:15996:2346":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"17:11282:46733":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"5:3951:8569":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"17:10147:11195":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"5:8106:7932":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:46610:9295":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:24935:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"17:13452:11745":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:12646:11492":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:14041:13220":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"16:6060:9800":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"17:11530:11273":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"9:776:9579":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"6:4160:12306":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"6:586:11974":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"12:1147:8580":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"16:5649:9817":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:11212:10158":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"16:2839:10020":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"5:7257:11032":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:4607:8480":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:11234:10156":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:9259:10741":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"1:9661:54673":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"16:6717:9846":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:12139:8622":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:1017:8745":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:51415:9038":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:15036:53216":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"12:2066:8604":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:1041:8559":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"17:10093:10193":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:12687:11497":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:11742:11315":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:22712:58194":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:11664:8665":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:49580:7948":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:634:12000":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:15494:9694":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"17:13016:11620":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:47617:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"12:952:8575":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"5:7824:11045":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:5398:8801":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:10211:13162":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"6:3987:12218":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:900:8725":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:14596:8757":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:47683:7645":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"17:13975:11900":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:1075:8535":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"7:38:44402":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:51354:10381":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:51761:9043":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"18:857:10215":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:13421:11737":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:16008:2356":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"6:4321:12337":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:2155:7952":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:11115:8453":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"16:5566:9814":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:8616:7666":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:46464:9365":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:13817:11867":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"5:0:277":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:12015:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:9616:11074":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"6:6007:12672":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"16:7295:9766":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:2314:10168":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:22899:9128":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"14:0:2318":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"6:672:39873":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:24265:12832":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:13029:11627":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"16:2754:10013":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"17:9517:1582":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:23824:58197":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"16:4871:10619":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:46873:9092":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"6:4005:12230":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:15220:8646":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"16:3576:10804":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:10846:8506":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:10304:10093":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:13957:8688":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"17:10394:10165":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"17:13763:11847":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"1:3194:8756":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:13840:11868":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:46725:9097":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:11031:46731":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:12262:11407":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"17:10530:10818":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:3364:8945":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"5:8250:8589":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:7637:8682":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:15459:12917":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"6:1600:12045":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:6591:9099":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:46833:9103":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"16:4495:10738":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:4471:8474":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:23812:8563":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"18:678:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:16005:2353":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:2863:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:3577:8593":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:3376:8949":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:11311:7948":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"5:1215:9489":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:13873:11875":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:3389:8907":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"6:5216:12478":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"5:3894:9482":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:25370:9194":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:11622:8664":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:56435:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"0:234:1615":{"crate_id":0,"path":["httparse","Error","Token"],"kind":"variant"},"2:24019:9261":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:10610:13173":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"12:0:2317":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"2:2283:9008":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:50343:8716":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"5:8176:9388":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:12196:11398":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"5:8325:9455":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"16:3297:10084":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:10440:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:9240:10094":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:15989:2340":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"5:5315:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"6:5366:12562":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"4:0:2312":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"6:4532:12428":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"16:3199:10028":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:0:488":{"crate_id":2,"path":["core"],"kind":"module"},"17:11002:13188":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"16:5668:9818":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:12067:53219":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"1:1633:8579":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:11461:8532":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"14:250:11916":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:53499:7474":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"6:4493:12413":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:4432:8472":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:46530:9361":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"16:5869:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:14620:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:48951:8662":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:11701:11305":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"6:5378:12567":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"15:248:9686":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:8323:7509":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:5111:8266":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"16:7449:9769":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:3175:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"12:1703:9678":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:12015:11368":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:11754:11318":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:2188:8605":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:12158:8623":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:8543:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:12157:11394":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"6:4386:12369":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:50511:9249":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:53365:9048":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"6:6153:12725":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"13:120:8118":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"5:2553:9495":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"12:787:8571":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"6:4315:12334":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"6:1567:12022":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:10166:11197":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"5:1653:8570":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:2166:8569":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"5:7780:234":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"17:10104:10194":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:45933:9137":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"5:7620:9414":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"6:5488:12605":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:16009:2357":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:49388:7947":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:3519:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"6:5149:12435":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"5:3772:7953":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:3729:224":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:9160:10157":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:51230:9049":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"17:13352:11721":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"6:1727:12130":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:4510:8470":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:49997:8959":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:11327:53212":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"2:24250:9182":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"6:5433:12590":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:6679:10061":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:12260:8631":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:13747:11843":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"6:4098:12274":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"9:722:9533":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"2:49480:7957":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:7529:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:48391:8253":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"6:4474:12405":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:6057:12700":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"6:4075:12261":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"6:6979:12827":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:11159:7948":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:49748:8370":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"12:843:8566":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:15110:13015":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:7033:9102":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"16:6141:9832":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:10975:13186":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"18:668:10224":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:11937:11355":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"17:12143:11205":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:11605:8663":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"18:637:11183":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:11514:7638":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:4783:8901":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"16:7768:9767":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:12406:11450":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:51685:9051":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:52321:9052":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"6:5247:12491":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:10127:9215":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:2967:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"16:0:2320":{"crate_id":16,"path":["gimli"],"kind":"module"},"6:1733:8814":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:13369:11724":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"6:6268:12790":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:22750:58322":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:13655:8680":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"16:4198:10754":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:15338:8800":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:14802:8530":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"0:178:1796":{"crate_id":0,"path":["httparse","EMPTY_HEADER"],"kind":"constant"},"1:4397:8786":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:6774:58471":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"17:10571:10187":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"17:12209:11400":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:12746:11505":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:10122:9214":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:8503:8620":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:2171:8602":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:3658:11059":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:12417:11452":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:12240:7519":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:24770:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:12117:7952":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:10913:13181":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"5:1635:8566":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:12203:8626":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"16:3051:10082":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"17:10788:13176":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"16:3221:10029":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"6:6243:12784":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:50175:8969":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:12055:8691":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"5:3038:7902":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:46062:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:49648:8373":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:11810:11335":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:13428:11738":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:15483:9694":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:46138:9004":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:14945:11086":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"5:2200:11034":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"6:4538:12431":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:12318:11419":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"16:7121:9855":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:1472:8568":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:4394:8785":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"6:6643:12796":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:15987:2338":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:50458:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"16:4271:10730":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"12:2404:60874":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:49630:8374":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"1:9196:13236":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"17:9636:13148":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:7997:11060":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"5:8438:8569":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"17:12770:11515":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"16:6310:9836":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:48922:13003":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:11431:7965":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"17:9756:60885":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:53468:7472":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:13481:11753":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:7754:8688":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"5:6475:8568":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:0:2321":{"crate_id":17,"path":["object"],"kind":"module"},"1:11103:8451":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"17:11671:11301":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:8760:7530":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"0:261:1613":{"crate_id":0,"path":["httparse","Status"],"kind":"enum"},"2:53540:7477":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:10464:10111":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:46667:13221":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"16:7741:9862":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:8556:7667":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:12187:8625":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"6:6937:12819":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:47649:2183":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:32820:2464":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:10407:10164":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:11487:8520":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"16:7110:9854":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"12:162:9667":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:10622:11198":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:37750:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:46476:8364":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"0:297:1704":{"crate_id":0,"path":["httparse","Request"],"kind":"struct"},"17:11945:11357":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"16:7090:9852":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:2543:10109":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"5:1939:8569":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"5:3396:8605":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:10892:8463":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:7699:8686":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:47810:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:47785:7952":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"6:1551:12014":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:2769:579":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:10451:8252":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"16:4775:10529":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:9883:11078":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"2:46424:9144":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:48213:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"0:225:127":{"crate_id":0,"path":["httparse","Error"],"kind":"enum"},"6:601:11982":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:10461:8256":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"9:27:9581":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"1:11195:8541":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"2:24836:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:15990:2341":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:50549:8292":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"6:6129:12713":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:3877:12148":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:49872:8354":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"12:1183:9664":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:4741:8452":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"6:1712:12121":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:2397:13230":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"17:10240:10147":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"6:6135:12714":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:5288:12512":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"6:6114:12708":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"18:729:60888":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:53488:2290":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"5:1685:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:51807:9028":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:14627:8451":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"10:0:2315":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"5:8168:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:6881:8508":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"17:13293:11704":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:14:2424":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:13495:11760":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:53578:7479":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"17:9706:13149":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:9676:60878":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:5675:8527":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:49524:8366":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"12:2072:8605":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"2:46224:9162":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:8668:7516":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:1588:12037":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:46172:9118":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"5:6257:9414":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:5721:9821":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:8154:8745":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"5:1663:8571":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:3396:8606":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"6:5240:12487":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:5880:8850":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"17:9958:60880":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:6981:8507":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:11532:8652":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:50310:9244":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"16:4689:10753":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"17:12302:11414":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"6:88:39473":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"5:7642:9415":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:11653:11292":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:1488:8570":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:3775:8892":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:13774:11851":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:4400:8787":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:52163:9060":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:11244:8545":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"17:3743:10181":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"}},"external_crates":{"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":18}