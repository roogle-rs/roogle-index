{"root":"0:0:2192","crate_version":"1.8.0","includes_private":false,"index":{"0:231":{"id":"0:231","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,27],"end":[182,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:73:2332":{"id":"0:73:2332","crate_id":0,"name":"runtime","span":{"filename":"src/simd/mod.rs","begin":[91,0],"end":[91,11]},"visibility":{"restricted":{"parent":"0:47:1295","path":"::simd"}},"docs":"Runtime detection of simd features. Used when the build script\ndoesn't notice any target features at build time.\n\nWhile `is_x86_feature_detected!` has it's own caching built-in,\nat least in 1.27.0, the functions don't inline, leaving using it\nactually *slower* than just using the scalar fallback.","links":{},"attrs":["#[cfg(all(httparse_simd,\nnot(any(httparse_simd_target_feature_sse42,\nhttparse_simd_target_feature_avx2,)),\nany(target_arch = \"x86\", target_arch = \"x86_64\",),))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":true}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[615,0],"end":[706,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"items":["0:147:941","0:148:1864"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:300:1123":{"id":"0:300:1123","crate_id":0,"name":"reason","span":{"filename":"src/lib.rs","begin":[610,4],"end":[610,33]},"visibility":"public","docs":"The response reason-phrase, such as `OK`.\n\nContains an empty string if the reason-phrase was missing or contained invalid characters.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'buf","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}},"b:2:2548-0:320:1775":{"id":"b:2:2548-0:320:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12014":{"id":"2:12014","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12015:813","2:12016:7923","2:12017:34035","2:12018:34036","2:12020:34037","2:12023:25911","2:12024:34038","2:12025:314","2:12026:27029","2:12027:2305","2:12029:12990","2:12031:2317","2:12033:1948","2:12035:34039","2:12036:34040","2:12037:27052","2:12038:27053","2:12039:12235","2:12040:12245","2:12041:1838","2:12042:31676","2:12043:31690","2:12044:12968","2:12045:34041","2:12046:31734","2:12047:1917","2:12050:27069","2:12053:27070","2:12056:7961","2:12060:7922","2:12064:25085","2:12067:27061","2:12070:27063","2:12073:34042","2:12076:34043","2:12079:27065","2:12082:27067","2:12085:34044","2:12088:34045","2:12091:2545","2:12094:34046","2:12097:34047","2:12100:34048","2:12103:34049","2:12105:34050","2:12107:34051","2:12109:34052","2:12110:34053","2:12111:34054","2:12114:34055","2:12117:25345","2:12120:27071","2:12123:34056","2:12126:34057","2:12129:34058","2:12132:1864","2:12134:26794","2:12135:26967","2:12136:26795","2:12137:26791","2:12138:26790","2:12139:34059","2:12141:13188","2:12142:34060"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:223:1696":{"id":"b:2:2553-0:223:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,0],"end":[419,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:109:1720","0:110:1722","0:111:1736","0:112:1723","0:113:1744","0:114:1721","0:115:1763","0:116:1765","0:119:1773","0:122:1724","0:123:1804","0:126:1808"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8254:7701-0:295:1806":{"id":"a:2:8254:7701-0:295:1806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:7701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,9],"end":[134,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:265:423":{"id":"0:265:423","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[242,9],"end":[242,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParserConfig","id":"0:258:1719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:254:613":{"id":"0:254:613","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[203,26],"end":[203,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257:670":{"id":"0:257:670","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[203,37],"end":[203,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12082:27067":{"id":"2:12082:27067","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11898:419","str::splitn":"2:12079:27065","self::pattern":"2:11716:8384"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43494:8019","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:8400","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[211,0],"end":[239,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:105:1711","0:106:1713","0:107:1548"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2538-0:320:1775":{"id":"b:2:2538-0:320:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2541:7916"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12085:34044":{"id":"2:12085:34044","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:309":{"id":"0:309","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,16],"end":[601,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2548-0:270:1769":{"id":"b:2:2548-0:270:1769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8254:7701-0:270:1769":{"id":"a:2:8254:7701-0:270:1769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:7701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:237:1608":{"id":"0:237:1608","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[206,13],"end":[206,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"2:12103:34049":{"id":"2:12103:34049","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12094:34046":{"id":"2:12094:34046","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11716:8384","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11898:419","str::matches":"2:12091:2545"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43594:8417","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:8400","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:227":{"id":"0:227","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,16],"end":[182,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,22],"end":[203,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:202:1676":{"id":"0:202:1676","crate_id":0,"name":"NewLine","span":{"filename":"src/lib.rs","begin":[141,4],"end":[141,11]},"visibility":"default","docs":"Invalid byte in new line.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"5:5679:1457":{"id":"5:5679:1457","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7265:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:302":{"id":"0:302","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,9],"end":[601,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:305:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5435:26792":{"id":"5:5435:26792","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12138:26790"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7265:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3322:1493":{"id":"2:3322:1493","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39353:8741","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:1773":{"id":"0:119:1773","crate_id":0,"name":"parse_request_with_uninit_headers","span":{"filename":"src/lib.rs","begin":[354,4],"end":[361,5]},"visibility":"public","docs":"Parses a request with the given config and buffer for headers","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["request",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":"'buf","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["headers",{"borrowed_ref":{"lifetime":"'headers","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30278:1646","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12046:31734":{"id":"2:12046:31734","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43664:8420","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:244:423":{"id":"0:244:423","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[203,15],"end":[203,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:200:1674":{"id":"0:200:1674","crate_id":0,"name":"HeaderValue","span":{"filename":"src/lib.rs","begin":[139,4],"end":[139,15]},"visibility":"default","docs":"Invalid byte in header value.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,15],"end":[203,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:244:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2741:7712-0:258:1719":{"id":"a:2:2741:7712-0:258:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:7712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:276:1774":{"id":"0:276:1774","crate_id":0,"name":"headers","span":{"filename":"src/lib.rs","begin":[455,4],"end":[455,45]},"visibility":"public","docs":"The request headers.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'headers","mutable":true,"type":{"slice":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}}}}},"a:2:2684:220-0:270:1769":{"id":"a:2:2684:220-0:270:1769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8254:7701-0:320:1775":{"id":"a:2:8254:7701-0:320:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:7701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12033:1948":{"id":"2:12033:1948","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:221":{"id":"0:221","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,37],"end":[134,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:222:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:223:1696":{"id":"b:2:2251-0:223:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:24472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,22],"end":[203,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:233:1678":{"id":"a:2:2701:228-0:233:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12064:25085":{"id":"2:12064:25085","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11716:8384","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11898:419","str::split_whitespace":"2:12042:31676","str::rsplit":"2:12070:27063"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43372:8021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:7712-0:197:128":{"id":"a:2:2741:7712-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:7712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2684:220-0:233:1678":{"id":"a:2:2684:220-0:233:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:99":{"id":"0:99","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[185,0],"end":[189,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:100:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12038:27053":{"id":"2:12038:27053","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12037:27052"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12134:26794":{"id":"2:12134:26794","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12024:34038":{"id":"2:12024:34038","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:153:670":{"id":"0:153:670","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[723,4],"end":[732,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5415":{"id":"5:5415","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5416:34710","5:5417:1860","5:5420:34711","5:5423:34712","5:5431:34713","5:5432:34714","5:5433:13304","5:5434:26793","5:5435:26792"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12044:12968":{"id":"2:12044:12968","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43626:8411","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:197:128":{"id":"b:2:2548-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12097:34047":{"id":"2:12097:34047","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11716:8384","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11898:419","str::rmatch_indices":"2:12100:34048"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43522:8418","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:197:128":{"id":"b:2:2538-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:7916"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12107:34051":{"id":"2:12107:34051","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12139:34059":{"id":"2:12139:34059","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4539:34059"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43671:8421","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:223:1696":{"id":"0:223:1696","crate_id":0,"name":"InvalidChunkSize","span":{"filename":"src/lib.rs","begin":[183,0],"end":[183,28]},"visibility":"public","docs":"An error in parsing a chunk size.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":["a:2:8254:7701-0:223:1696","a:2:2701:228-0:223:1696","a:2:2684:220-0:223:1696","a:2:8253:7702-0:223:1696","a:2:2741:7712-0:223:1696","b:2:2538-0:223:1696","b:2:3320-0:223:1696","b:2:2548-0:223:1696","b:2:2251-0:223:1696","b:2:2542-0:223:1696","b:2:2248-0:223:1696","b:2:2553-0:223:1696","b:5:5677-0:223:1696","0:228","0:227","0:230","0:225","0:231","0:99"]}}},"0:213":{"id":"0:213","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,15],"end":[134,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:214:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:111:1736":{"id":"0:111:1736","crate_id":0,"name":"multiple_spaces_in_request_line_delimiters_are_allowed","span":{"filename":"src/lib.rs","begin":[280,4],"end":[282,5]},"visibility":"public","docs":"Whether multiple spaces are allowed as delimiters in request lines.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,9],"end":[446,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:280:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:0:2192":{"id":"0:0:2192","crate_id":0,"name":"httparse","span":{"filename":"src/lib.rs","begin":[1,0],"end":[2236,1]},"visibility":"public","docs":"# httparse\n\nA push library for parsing HTTP/1.x requests and responses.\n\nThe focus is on speed and safety. Unsafe code is used to keep parsing fast,\nbut unsafety is contained in a submodule, with invariants enforced. The\nparsing internals use an `Iterator` instead of direct indexing, while\nskipping bounds checks.\n\nWith Rust 1.27.0 or later, support for SIMD is enabled automatically.\nIf building an executable to be run on multiple platforms, and thus\nnot passing `target_feature` or `target_cpu` flags to the compiler,\nruntime detection can still detect SSE4.2 or AVX2 support to provide\nmassive wins.\n\nIf compiling for a specific target, remembering to include\n`-C target_cpu=native` allows the detection to become compile time checks,\nmaking it *even* faster.","links":{},"attrs":["#![deny(missing_docs)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:197:128","0:223:1696","0:101:210","0:233:1678","0:258:1719","0:270:1769","0:295:1806","0:320:1775","0:154:1894","0:164:1937","0:195:1978"],"is_stripped":false}}},"2:12015:813":{"id":"2:12015:813","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11898:419"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5420:34711":{"id":"5:5420:34711","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7265:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7265:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5431:34713":{"id":"5:5431:34713","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7265:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7265:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12020:34037":{"id":"2:12020:34037","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12018:34036"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,0],"end":[178,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cause","type_id","provide","description","source"],"trait":{"name":"Error","id":"2:2603:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:98:1694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:258:1719":{"id":"b:2:2553-0:258:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2684:220-0:295:1806":{"id":"a:2:2684:220-0:295:1806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2741:7712-0:295:1806":{"id":"a:2:2741:7712-0:295:1806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:7712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12043:31690":{"id":"2:12043:31690","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12042:31676"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43655:8424","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12111:34054":{"id":"2:12111:34054","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:8384"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11741:8399","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:320:1775":{"id":"a:2:2701:228-0:320:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:226:670":{"id":"0:226:670","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[182,9],"end":[182,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:122:1724":{"id":"0:122:1724","crate_id":0,"name":"ignore_invalid_headers_in_responses","span":{"filename":"src/lib.rs","begin":[393,4],"end":[399,5]},"visibility":"public","docs":"Sets whether invalid header lines should be silently ignored in responses.\n\nThis mimicks the behaviour of major browsers. You probably don't want this.\nYou should only want this if you are implementing a proxy whose main\npurpose is to sit in front of browsers whose users access arbitrary content\nwhich may be malformed, and they expect everything that works without\nthe proxy to keep working with the proxy.\n\nThis option will prevent `ParserConfig::parse_response` from returning\nan error encountered when parsing a header, except if the error was caused\nby the character NUL (ASCII code 0), as Chrome specifically always reject\nthose, or if the error was caused by a lone character `\\r`, as Firefox and\nChrome behave differently in that case.\n\nThe ignorable errors are:\n* empty header names;\n* characters that are not allowed in header names, except for `\\0` and `\\r`;\n* when `allow_spaces_after_header_name_in_responses` is not enabled,\n  spaces and tabs between the header name and the colon;\n* missing colon between header name and value;\n* when `allow_obsolete_multiline_headers_in_responses` is not enabled,\n  headers using obsolete line folding.\n* characters that are not allowed in header values except for `\\0` and `\\r`.\n\nIf an ignorable error is encountered, the parser tries to find the next\nline in the input to resume parsing the rest of the headers. As lines\ncontributing to a header using obsolete line folding always start\nwith whitespace, those will be ignored too. An error will be emitted\nnonetheless if it finds `\\0` or a lone `\\r` while looking for the\nnext line.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:106:1713":{"id":"0:106:1713","crate_id":0,"name":"is_partial","span":{"filename":"src/lib.rs","begin":[223,4],"end":[228,5]},"visibility":"public","docs":"Convenience method to check if status is partial.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:320:1775":{"id":"b:2:2542-0:320:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2544:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3320-0:270:1769":{"id":"b:2:3320-0:270:1769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:258:1719":{"id":"b:2:2548-0:258:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:334":{"id":"0:334","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,26],"end":[709,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:255":{"id":"0:255","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,37],"end":[203,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:257:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:684-0:258:1719":{"id":"b:5:684-0:258:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:7976","5:687:7977","5:688:7978"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12025:314":{"id":"2:12025:314","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12026:27029","`u8`":"1:11915:1501"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:223:1696":{"id":"a:2:2684:220-0:223:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:299:1873":{"id":"0:299:1873","crate_id":0,"name":"code","span":{"filename":"src/lib.rs","begin":[606,4],"end":[606,25]},"visibility":"public","docs":"The response code, such as `200`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u16"}}],"bindings":[]}}}}}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,16],"end":[446,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8254:7701-0:223:1696":{"id":"a:2:8254:7701-0:223:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:7701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2542-0:233:1678":{"id":"b:2:2542-0:233:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2544:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:295:1806":{"id":"a:2:2701:228-0:295:1806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12018:34036":{"id":"2:12018:34036","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5416:34710":{"id":"5:5416:34710","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:7718","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7005:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:280:7718","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:7005:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:233:1678":{"id":"b:2:2251-0:233:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2253:24472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:110:1722":{"id":"0:110:1722","crate_id":0,"name":"allow_multiple_spaces_in_request_line_delimiters","span":{"filename":"src/lib.rs","begin":[274,4],"end":[277,5]},"visibility":"public","docs":"Sets whether multiple spaces are allowed as delimiters in request lines.\n\n# Background\n\nThe [latest version of the HTTP/1.1 spec][spec] allows implementations to parse multiple\nwhitespace characters in place of the `SP` delimiters in the request line, including:\n\n> SP, HTAB, VT (%x0B), FF (%x0C), or bare CR\n\nThis option relaxes the parser to allow for multiple spaces, but does *not* allow the\nrequest line to contain the other mentioned whitespace characters.\n\n[spec]: https://httpwg.org/http-core/draft-ietf-httpbis-messaging-latest.html#rfc.section.3.p.3","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12079:27065":{"id":"2:12079:27065","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:8384","str::rsplitn":"2:12082:27067"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43476:8023","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12138:26790":{"id":"2:12138:26790","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12073:34042":{"id":"2:12073:34042","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11716:8384","str::split":"2:12064:25085","prim@char":"1:11898:419","`DoubleEndedIterator`":"2:7244:121","str::rsplit_terminator":"2:12076:34043"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43422:8415","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5677-0:197:128":{"id":"b:5:5677-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5675:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5679:1457"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3320-0:258:1719":{"id":"b:2:3320-0:258:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:148:1864":{"id":"0:148:1864","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[628,4],"end":[630,5]},"visibility":"public","docs":"Try to parse a buffer of bytes into this `Response`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:320:1775":{"id":"b:5:684-0:320:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:686:7976","5:687:7977","5:688:7978"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:197:128":{"id":"0:197:128","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[135,0],"end":[150,1]},"visibility":"public","docs":"An error in parsing.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:198:1672","0:200:1674","0:202:1676","0:204:1678","0:206:1680","0:208:1682","0:210:1684"],"impls":["a:2:8254:7701-0:197:128","a:2:2701:228-0:197:128","a:2:2684:220-0:197:128","a:2:8253:7702-0:197:128","a:2:2741:7712-0:197:128","b:2:2538-0:197:128","b:2:3320-0:197:128","b:2:2610-0:197:128","b:2:2548-0:197:128","b:2:2251-0:197:128","b:2:2542-0:197:128","b:2:2248-0:197:128","b:2:2553-0:197:128","b:5:5677-0:197:128","b:5:684-0:197:128","0:218","0:216","0:97","0:95","0:221","0:219","0:212","0:213","0:215"]}}},"5:5423:34712":{"id":"5:5423:34712","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7265:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7265:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2612:8340":{"id":"2:2612:8340","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["demand",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Demand","id":"2:3386:12633","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:139:1859":{"id":"0:139:1859","crate_id":0,"name":"parse_with_uninit_headers","span":{"filename":"src/lib.rs","begin":[523,4],"end":[529,5]},"visibility":"public","docs":"Try to parse a buffer of bytes into the Request,\nexcept use an uninitialized slice of `Header`s.\n\nFor more information, see `parse`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["headers",{"borrowed_ref":{"lifetime":"'h","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30278:1646","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:7702-0:270:1769":{"id":"a:2:8253:7702-0:270:1769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:7702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12050:27069":{"id":"2:12050:27069","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:8384"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:147:941":{"id":"0:147:941","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[618,4],"end":[625,5]},"visibility":"public","docs":"Creates a new `Response` using a slice of `Header`s you have allocated.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["headers",{"borrowed_ref":{"lifetime":"'h","mutable":true,"type":{"slice":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12105:34050":{"id":"2:12105:34050","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:7712-0:233:1678":{"id":"a:2:2741:7712-0:233:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2741:7712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:7712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12060:7922":{"id":"2:12060:7922","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41405:179","prim@char":"1:11898:419","self::pattern":"2:11716:8384"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:8400","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12136:26795":{"id":"2:12136:26795","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,33],"end":[134,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12091:2545":{"id":"2:12091:2545","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11716:8384","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11898:419","str::matches":"2:12091:2545"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43576:8416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12123:34056":{"id":"2:12123:34056","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:8384"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:8400","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12056:7961":{"id":"2:12056:7961","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41405:179","prim@char":"1:11898:419","self::pattern":"2:11716:8384"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12023:25911":{"id":"2:12023:25911","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11283:1889"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:223:1696":{"id":"b:2:2538-0:223:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:7916"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:295:1806":{"id":"b:2:2538-0:295:1806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2541:7916"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:233:1678":{"id":"b:2:2248-0:233:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2250:2535"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:295:1806":{"id":"b:2:2248-0:295:1806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2250:2535"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:319:613":{"id":"0:319:613","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[601,20],"end":[601,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:258:1719":{"id":"b:2:2251-0:258:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:24472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12110:34053":{"id":"2:12110:34053","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12129:34058":{"id":"2:12129:34058","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:8384"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:8400","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:197:128":{"id":"b:2:2248-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2535"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:258:1719":{"id":"b:2:2248-0:258:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2535"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2253:24472":{"id":"2:2253:24472","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:132:941":{"id":"0:132:941","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[461,4],"end":[468,5]},"visibility":"public","docs":"Creates a new Request, using a slice of headers you allocate.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["headers",{"borrowed_ref":{"lifetime":"'h","mutable":true,"type":{"slice":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:322:919":{"id":"0:322:919","crate_id":0,"name":"name","span":{"filename":"src/lib.rs","begin":[714,4],"end":[714,21]},"visibility":"public","docs":"The name portion of a header.\n\nA header name must be valid ASCII-US, so it's safe to store as a `&str`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}},"a:2:2741:7712-0:320:1775":{"id":"a:2:2741:7712-0:320:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:7712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8253:7702-0:233:1678":{"id":"a:2:8253:7702-0:233:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8253:7702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:7702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12047:1917":{"id":"2:12047:1917","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:8384"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,16],"end":[182,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:229:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:240":{"id":"0:240","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,9],"end":[203,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2248-0:223:1696":{"id":"b:2:2248-0:223:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2535"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2684:220-0:320:1775":{"id":"a:2:2684:220-0:320:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:336":{"id":"0:336","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,26],"end":[709,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:338:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:338:613":{"id":"0:338:613","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[709,26],"end":[709,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:7702-0:258:1719":{"id":"a:2:8253:7702-0:258:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:7702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:210:1684":{"id":"0:210:1684","crate_id":0,"name":"Version","span":{"filename":"src/lib.rs","begin":[149,4],"end":[149,11]},"visibility":"default","docs":"Invalid byte in HTTP version.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:222:670":{"id":"0:222:670","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[134,37],"end":[134,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12053:27070":{"id":"2:12053:27070","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:8384"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:8400","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:114:1721":{"id":"0:114:1721","crate_id":0,"name":"allow_obsolete_multiline_headers_in_responses","span":{"filename":"src/lib.rs","begin":[331,4],"end":[337,5]},"visibility":"public","docs":"Sets whether obsolete multiline headers should be allowed.\n\nThis is an obsolete part of HTTP/1. Use at your own risk. If you are\nbuilding an HTTP library, the newlines (`\\r` and `\\n`) should be\nreplaced by spaces before handing the header value to the user.\n\n# Example\n\n```rust\nlet buf = b\"HTTP/1.1 200 OK\\r\\nFolded-Header: hello\\r\\n there \\r\\n\\r\\n\";\nlet mut headers = [httparse::EMPTY_HEADER; 16];\nlet mut response = httparse::Response::new(&mut headers);\n\nlet res = httparse::ParserConfig::default()\n    .allow_obsolete_multiline_headers_in_responses(true)\n    .parse_response(&mut response, buf);\n\nassert_eq!(res, Ok(httparse::Status::Complete(buf.len())));\n\nassert_eq!(response.headers.len(), 1);\nassert_eq!(response.headers[0].name, \"Folded-Header\");\nassert_eq!(response.headers[0].value, b\"hello\\r\\n there\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,20],"end":[446,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:294:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:280:670":{"id":"0:280:670","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[446,9],"end":[446,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:229:613":{"id":"0:229:613","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[182,16],"end":[182,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:230":{"id":"0:230","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,27],"end":[182,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12031:2317":{"id":"2:12031:2317","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:305:670":{"id":"0:305:670","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[601,9],"end":[601,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:198:1672":{"id":"0:198:1672","crate_id":0,"name":"HeaderName","span":{"filename":"src/lib.rs","begin":[137,4],"end":[137,14]},"visibility":"default","docs":"Invalid byte in header name.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:313":{"id":"0:313","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,20],"end":[601,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12041:1838":{"id":"2:12041:1838","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43358:1647","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:320:1775":{"id":"0:320:1775","crate_id":0,"name":"Header","span":{"filename":"src/lib.rs","begin":[710,0],"end":[720,1]},"visibility":"public","docs":"Represents a parsed header.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:322:919","0:323:1726"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:8254:7701-0:320:1775","a:2:2701:228-0:320:1775","a:2:2684:220-0:320:1775","a:2:8253:7702-0:320:1775","a:2:2741:7712-0:320:1775","b:2:2538-0:320:1775","b:2:3320-0:320:1775","b:2:2548-0:320:1775","b:2:2251-0:320:1775","b:2:2542-0:320:1775","b:2:2248-0:320:1775","b:2:2553-0:320:1775","b:5:684-0:320:1775","0:324","0:331","0:334","0:326","0:336","0:329","0:151"]}}},"0:323:1726":{"id":"0:323:1726","crate_id":0,"name":"value","span":{"filename":"src/lib.rs","begin":[719,4],"end":[719,23]},"visibility":"public","docs":"The value portion of a header.\n\nWhile headers **should** be ASCII-US, the specification allows for\nvalues that may not be, and so the value is stored as bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}}},"0:328:423":{"id":"0:328:423","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[709,15],"end":[709,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:219":{"id":"0:219","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,33],"end":[134,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:214:423":{"id":"0:214:423","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[134,15],"end":[134,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:233:1678":{"id":"b:2:2538-0:233:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2541:7916"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2250:2535":{"id":"2:2250:2535","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:270:1769":{"id":"b:2:2538-0:270:1769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2541:7916"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:684-0:233:1678":{"id":"b:5:684-0:233:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:686:7976","5:687:7977","5:688:7978"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3320-0:197:128":{"id":"b:2:3320-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:295:1806":{"id":"b:2:2542-0:295:1806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2544:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:324":{"id":"0:324","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,9],"end":[709,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,22],"end":[134,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:217:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2544:696":{"id":"2:2544:696","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12040:12245":{"id":"2:12040:12245","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11898:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43348:8409","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:316":{"id":"0:316","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,20],"end":[601,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:319:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:331":{"id":"0:331","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,22],"end":[709,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:197:128":{"id":"a:2:2701:228-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:208:1682":{"id":"0:208:1682","crate_id":0,"name":"TooManyHeaders","span":{"filename":"src/lib.rs","begin":[147,4],"end":[147,18]},"visibility":"default","docs":"Parsed more headers than provided buffer can contain.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2741:7712-0:223:1696":{"id":"a:2:2741:7712-0:223:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:7712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12026:27029":{"id":"2:12026:27029","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11915:1501"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5434:26793":{"id":"5:5434:26793","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12137:26791"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7265:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12029:12990":{"id":"2:12029:12990","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41405:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12137:26791":{"id":"2:12137:26791","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:274:1042":{"id":"0:274:1042","crate_id":0,"name":"path","span":{"filename":"src/lib.rs","begin":[451,4],"end":[451,31]},"visibility":"public","docs":"The request path, such as `/about-us`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'buf","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}},"2:12109:34052":{"id":"2:12109:34052","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:197:128":{"id":"b:2:2542-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2610-0:197:128":{"id":"b:2:2610-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2603:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3374:13575","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:8340"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"E"}}}},"2:12132:1864":{"id":"2:12132:1864","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11677:127","`FromStr`":"2:11676:8408"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11676:8408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11676:8408","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:7702-0:197:128":{"id":"a:2:8253:7702-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:7702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:204:1678":{"id":"0:204:1678","crate_id":0,"name":"Status","span":{"filename":"src/lib.rs","begin":[143,4],"end":[143,10]},"visibility":"default","docs":"Invalid byte in Response status.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:126:1808":{"id":"0:126:1808","crate_id":0,"name":"parse_response_with_uninit_headers","span":{"filename":"src/lib.rs","begin":[411,4],"end":[418,5]},"visibility":"public","docs":"Parses a response with the given config and buffer for headers","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["response",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":"'buf","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["headers",{"borrowed_ref":{"lifetime":"'headers","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30278:1646","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:298:1569":{"id":"0:298:1569","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[604,4],"end":[604,27]},"visibility":"public","docs":"The response minor version, such as `1` for `HTTP/1.1`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}},"a:2:2684:220-0:258:1719":{"id":"a:2:2684:220-0:258:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12035:34039":{"id":"2:12035:34039","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11904:1399","str::slice_mut_unchecked":"2:12036:34040","crate::ops::Index":"2:2981:13216"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:258:1719":{"id":"b:2:2538-0:258:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:7916"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12135:26967":{"id":"2:12135:26967","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39561:26976","Self::is_ascii":"2:12134:26794"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39561:26976","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3320-0:233:1678":{"id":"b:2:3320-0:233:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12120:27071":{"id":"2:12120:27071","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:8384"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:8400","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,26],"end":[203,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:129":{"id":"0:129","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[458,0],"end":[555,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"items":["0:132:941","0:139:1859","0:141:1864"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2684:220-0:197:128":{"id":"a:2:2684:220-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:217:613":{"id":"0:217:613","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[134,22],"end":[134,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8254:7701-0:258:1719":{"id":"a:2:8254:7701-0:258:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:7701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:95":{"id":"0:95","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[167,0],"end":[171,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:96:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:269:60":{"id":"0:269:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[242,23],"end":[242,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ParserConfig","id":"0:258:1719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:151":{"id":"0:151","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[722,0],"end":[733,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:153:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12141:13188":{"id":"2:12141:13188","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4540:13188"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43680:8422","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,22],"end":[134,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8253:7702-0:223:1696":{"id":"a:2:8253:7702-0:223:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:7702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2251-0:197:128":{"id":"b:2:2251-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:24472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:233:1678":{"id":"0:233:1678","crate_id":0,"name":"Status","span":{"filename":"src/lib.rs","begin":[204,0],"end":[209,1]},"visibility":"public","docs":"The result of a successful parse pass.\n\n`Complete` is used when the buffer contained the complete value.\n`Partial` is used when parsing did not reach the end of the expected value,\nbut no invalid data was found.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:235:1707","0:238:1709"],"impls":["0:103","a:2:8254:7701-0:233:1678","a:2:2701:228-0:233:1678","a:2:2684:220-0:233:1678","a:2:8253:7702-0:233:1678","a:2:2741:7712-0:233:1678","b:2:2538-0:233:1678","b:2:3320-0:233:1678","b:2:2548-0:233:1678","b:2:2251-0:233:1678","b:2:2542-0:233:1678","b:2:2248-0:233:1678","b:2:2553-0:233:1678","b:5:684-0:233:1678","0:252","0:250","0:242","0:255","0:245","0:240","0:247"]}}},"0:109:1720":{"id":"0:109:1720","crate_id":0,"name":"allow_spaces_after_header_name_in_responses","span":{"filename":"src/lib.rs","begin":[253,4],"end":[259,5]},"visibility":"public","docs":"Sets whether spaces and tabs should be allowed after header names in responses.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:295:1806":{"id":"b:2:2553-0:295:1806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5677-0:223:1696":{"id":"b:5:5677-0:223:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5675:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5679:1457"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:295:1806":{"id":"b:2:2251-0:295:1806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2253:24472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:273:1829":{"id":"0:273:1829","crate_id":0,"name":"method","span":{"filename":"src/lib.rs","begin":[449,4],"end":[449,33]},"visibility":"public","docs":"The request method, such as `GET`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'buf","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}},"0:107:1548":{"id":"0:107:1548","crate_id":0,"name":"unwrap","span":{"filename":"src/lib.rs","begin":[233,4],"end":[238,5]},"visibility":"public","docs":"Convenience method to unwrap a Complete value. Panics if the status is\n`Partial`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:223:1696":{"id":"a:2:2701:228-0:223:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:688:7978":{"id":"5:688:7978","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2557:1479":{"id":"2:2557:1479","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[242,9],"end":[242,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:265:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:141:1864":{"id":"0:141:1864","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[552,4],"end":[554,5]},"visibility":"public","docs":"Try to parse a buffer of bytes into the Request.\n\nReturns byte offset in `buf` to start of HTTP body.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:164:1937":{"id":"0:164:1937","crate_id":0,"name":"parse_headers","span":{"filename":"src/lib.rs","begin":[893,0],"end":[900,1]},"visibility":"public","docs":"Parse a buffer of bytes as headers.\n\nThe return value, if complete and successful, includes the index of the\nbuffer that parsing stopped at, and a sliced reference to the parsed\nheaders. The length of the slice will be equal to the number of properly\nparsed headers.\n\n# Example\n\n```\nlet buf = b\"Host: foo.bar\\nAccept: */*\\n\\nblah blah\";\nlet mut headers = [httparse::EMPTY_HEADER; 4];\nassert_eq!(httparse::parse_headers(buf, &mut headers),\n           Ok(httparse::Status::Complete((27, &[\n               httparse::Header { name: \"Host\", value: b\"foo.bar\" },\n               httparse::Header { name: \"Accept\", value: b\"*/*\" }\n           ][..]))));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":"'h","mutable":true,"type":{"slice":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"primitive":"usize"},{"borrowed_ref":{"lifetime":"'h","mutable":false,"type":{"slice":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":["'h"]}}},{"name":"'h","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12042:31676":{"id":"2:12042:31676","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12043:31690"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43646:8412","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:206:1680":{"id":"0:206:1680","crate_id":0,"name":"Token","span":{"filename":"src/lib.rs","begin":[145,4],"end":[145,9]},"visibility":"default","docs":"Invalid byte where token is required.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:252":{"id":"0:252","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,26],"end":[203,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:254:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:294:613":{"id":"0:294:613","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[446,20],"end":[446,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:687:7977":{"id":"5:687:7977","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:275:1569":{"id":"0:275:1569","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[453,4],"end":[453,27]},"visibility":"public","docs":"The request minor version, such as `1` for `HTTP/1.1`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}},"b:2:2248-0:320:1775":{"id":"b:2:2248-0:320:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2250:2535"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12067:27061":{"id":"2:12067:27061","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:8384"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11539:8038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:295:1806":{"id":"0:295:1806","crate_id":0,"name":"Response","span":{"filename":"src/lib.rs","begin":[602,0],"end":[613,1]},"visibility":"public","docs":"A parsed Response.\n\nSee `Request` docs for explanation of optional values.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:298:1569","0:299:1873","0:300:1123","0:301:1774"],"fields_stripped":false}},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:144","a:2:8254:7701-0:295:1806","a:2:2701:228-0:295:1806","a:2:2684:220-0:295:1806","a:2:8253:7702-0:295:1806","a:2:2741:7712-0:295:1806","b:2:2538-0:295:1806","b:2:3320-0:295:1806","b:2:2548-0:295:1806","b:2:2251-0:295:1806","b:2:2542-0:295:1806","b:2:2248-0:295:1806","b:2:2553-0:295:1806","0:309","0:316","0:313","0:306","0:302"]}}},"0:100:670":{"id":"0:100:670","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[186,4],"end":[188,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:197:128":{"id":"b:2:2553-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:270:1769":{"id":"b:2:2542-0:270:1769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2544:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:270:1769":{"id":"b:2:2251-0:270:1769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2253:24472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:238:1709":{"id":"0:238:1709","crate_id":0,"name":"Partial","span":{"filename":"src/lib.rs","begin":[208,4],"end":[208,11]},"visibility":"default","docs":"A partial result.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:105:1711":{"id":"0:105:1711","crate_id":0,"name":"is_complete","span":{"filename":"src/lib.rs","begin":[214,4],"end":[219,5]},"visibility":"public","docs":"Convenience method to check if status is complete.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12142:34060":{"id":"2:12142:34060","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4537:34060"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43689:8423","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12039:12235":{"id":"2:12039:12235","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11898:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43342:8410","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:258:1719":{"id":"a:2:2701:228-0:258:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2552:1480":{"id":"2:2552:1480","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:113:1744":{"id":"0:113:1744","crate_id":0,"name":"multiple_spaces_in_response_status_delimiters_are_allowed","span":{"filename":"src/lib.rs","begin":[304,4],"end":[306,5]},"visibility":"public","docs":"Whether multiple spaces are allowed as delimiters in response status lines.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5432:34714":{"id":"5:5432:34714","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:280:7718","`String`":"5:7265:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:7718","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7005:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7265:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:235:1707":{"id":"0:235:1707","crate_id":0,"name":"Complete","span":{"filename":"src/lib.rs","begin":[206,4],"end":[206,15]},"visibility":"default","docs":"The completed result.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:237:1608"]},"discriminant":null}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[242,16],"end":[242,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:320:1775":{"id":"b:2:2251-0:320:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2253:24472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:270:1769":{"id":"0:270:1769","crate_id":0,"name":"Request","span":{"filename":"src/lib.rs","begin":[447,0],"end":[456,1]},"visibility":"public","docs":"A parsed Request.\n\nThe optional values will be `None` if a parse was not complete, and did not\nparse the associated property. This allows you to inspect the parts that\ncould be parsed, before reading more, in case you wish to exit early.\n\n# Example\n\n```no_run\nlet buf = b\"GET /404 HTTP/1.1\\r\\nHost:\";\nlet mut headers = [httparse::EMPTY_HEADER; 16];\nlet mut req = httparse::Request::new(&mut headers);\nlet res = req.parse(buf).unwrap();\nif res.is_partial() {\n    match req.path {\n        Some(ref path) => {\n            // check router for path.\n            // /404 doesn't exist? we could stop parsing\n        },\n        None => {\n            // must read more and parse again\n        }\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:273:1829","0:274:1042","0:275:1569","0:276:1774"],"fields_stripped":false}},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:129","a:2:8254:7701-0:270:1769","a:2:2701:228-0:270:1769","a:2:2684:220-0:270:1769","a:2:8253:7702-0:270:1769","a:2:2741:7712-0:270:1769","b:2:2538-0:270:1769","b:2:3320-0:270:1769","b:2:2548-0:270:1769","b:2:2251-0:270:1769","b:2:2542-0:270:1769","b:2:2248-0:270:1769","b:2:2553-0:270:1769","0:277","0:284","0:288","0:291","0:281"]}}},"2:12017:34035":{"id":"2:12017:34035","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112:1723":{"id":"0:112:1723","crate_id":0,"name":"allow_multiple_spaces_in_response_status_delimiters","span":{"filename":"src/lib.rs","begin":[298,4],"end":[301,5]},"visibility":"public","docs":"Sets whether multiple spaces are allowed as delimiters in response status lines.\n\n# Background\n\nThe [latest version of the HTTP/1.1 spec][spec] allows implementations to parse multiple\nwhitespace characters in place of the `SP` delimiters in the response status line,\nincluding:\n\n> SP, HTAB, VT (%x0B), FF (%x0C), or bare CR\n\nThis option relaxes the parser to allow for multiple spaces, but does *not* allow the status\nline to contain the other mentioned whitespace characters.\n\n[spec]: https://httpwg.org/http-core/draft-ietf-httpbis-messaging-latest.html#rfc.section.4.p.3","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258:1719":{"id":"0:258:1719","crate_id":0,"name":"ParserConfig","span":{"filename":"src/lib.rs","begin":[243,0],"end":[249,1]},"visibility":"public","docs":"Parser configuration.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:108","a:2:8254:7701-0:258:1719","a:2:2701:228-0:258:1719","a:2:2684:220-0:258:1719","a:2:8253:7702-0:258:1719","a:2:2741:7712-0:258:1719","b:2:2538-0:258:1719","b:2:3320-0:258:1719","b:2:2548-0:258:1719","b:2:2251-0:258:1719","b:2:2542-0:258:1719","b:2:2248-0:258:1719","b:2:2553-0:258:1719","b:5:684-0:258:1719","0:266","0:264","0:268"]}}},"a:2:8253:7702-0:295:1806":{"id":"a:2:8253:7702-0:295:1806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:7702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:301:1774":{"id":"0:301:1774","crate_id":0,"name":"headers","span":{"filename":"src/lib.rs","begin":[612,4],"end":[612,45]},"visibility":"public","docs":"The response headers.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'headers","mutable":true,"type":{"slice":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}}}}},"0:101:210":{"id":"0:101:210","crate_id":0,"name":"Result","span":{"filename":"src/lib.rs","begin":[196,0],"end":[196,54]},"visibility":"public","docs":"A Result of any parsing action.\n\nIf the input is invalid, an `Error` will be returned. Note that incomplete\ndata is not considered invalid, and so will not return an error, but rather\na `Ok(Status::Partial)`.","links":{},"attrs":[],"deprecation":null,"inner":{"typedef":{"type":{"resolved_path":{"name":"result::Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"0:195:1978":{"id":"0:195:1978","crate_id":0,"name":"parse_chunk_size","span":{"filename":"src/lib.rs","begin":[1203,0],"end":[1266,1]},"visibility":"public","docs":"Parse a buffer of bytes as a chunk size.\n\nThe return value, if complete and successful, includes the index of the\nbuffer that parsing stopped at, and the size of the following chunk.\n\n# Example\n\n```\nlet buf = b\"4\\r\\nRust\\r\\n0\\r\\n\\r\\n\";\nassert_eq!(httparse::parse_chunk_size(buf),\n           Ok(httparse::Status::Complete((3, 4))));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"result::Result","id":"2:41547:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"primitive":"usize"},{"primitive":"u64"}]}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2551:128":{"id":"2:2551:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"2:12126:34057":{"id":"2:12126:34057","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:8384"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12100:34048":{"id":"2:12100:34048","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11716:8384","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11898:419","str::match_indices":"2:12097:34047"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43540:8419","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:8400","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:115:1763":{"id":"0:115:1763","crate_id":0,"name":"obsolete_multiline_headers_in_responses_are_allowed","span":{"filename":"src/lib.rs","begin":[340,4],"end":[342,5]},"visibility":"public","docs":"Whether obsolete multiline headers should be allowed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:686:7976":{"id":"5:686:7976","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[242,23],"end":[242,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:269:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:684-0:197:128":{"id":"b:5:684-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:7976","5:687:7977","5:688:7978"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,20],"end":[446,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2548-0:295:1806":{"id":"b:2:2548-0:295:1806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:320:1775":{"id":"b:2:2553-0:320:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3320-0:223:1696":{"id":"b:2:3320-0:223:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:233:1678":{"id":"b:2:2548-0:233:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:270:1769":{"id":"a:2:2701:228-0:270:1769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3320-0:295:1806":{"id":"b:2:3320-0:295:1806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12016:7923":{"id":"2:12016:7923","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12037:27052":{"id":"2:12037:27052","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12038:27053"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:233:1678":{"id":"b:2:2553-0:233:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12114:34055":{"id":"2:12114:34055","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:8384"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:98:1694":{"id":"0:98:1694","crate_id":0,"name":"description","span":{"filename":"src/lib.rs","begin":[175,4],"end":[177,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12070:27063":{"id":"2:12070:27063","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11716:8384","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11898:419","str::split":"2:12064:25085"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43390:8025","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:8400","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:270:1769":{"id":"b:2:2553-0:270:1769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12045:34041":{"id":"2:12045:34041","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43636:8413","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12117:25345":{"id":"2:12117:25345","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11898:419","self::pattern":"2:11716:8384"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3320-0:320:1775":{"id":"b:2:3320-0:320:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12076:34043":{"id":"2:12076:34043","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11716:8384","str::split":"2:12064:25085","prim@char":"1:11898:419","str::split_terminator":"2:12073:34042"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43440:8414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:8400","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5433:13304":{"id":"5:5433:13304","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7265:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7265:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:270:1769":{"id":"b:2:2248-0:270:1769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2250:2535"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:329":{"id":"0:329","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,22],"end":[709,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8254:7701-0:197:128":{"id":"a:2:8254:7701-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:7701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5417:1860":{"id":"5:5417:1860","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7265:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7265:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:267:670":{"id":"0:267:670","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[242,16],"end":[242,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:123:1804":{"id":"0:123:1804","crate_id":0,"name":"parse_response","span":{"filename":"src/lib.rs","begin":[402,4],"end":[408,5]},"visibility":"public","docs":"Parses a response with the given config.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["response",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":"'buf","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:7712-0:270:1769":{"id":"a:2:2741:7712-0:270:1769","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:7712","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12027:2305":{"id":"2:12027:2305","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41405:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:306":{"id":"0:306","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,16],"end":[601,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:326":{"id":"0:326","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,15],"end":[709,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:328:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:281":{"id":"0:281","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,16],"end":[446,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:154:1894":{"id":"0:154:1894","crate_id":0,"name":"EMPTY_HEADER","span":{"filename":"src/lib.rs","begin":[743,0],"end":[743,74]},"visibility":"public","docs":"An empty header, useful for constructing a `Header` array to pass in for\nparsing.\n\n# Example\n\n```\nlet headers = [httparse::EMPTY_HEADER; 64];\n```","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"2:12036:34040":{"id":"2:12036:34040","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11904:1399","crate::ops::IndexMut":"2:2985:13217","str::slice_unchecked":"2:12035:34039"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:258:1719":{"id":"b:2:2542-0:258:1719","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:82-0:73:2332":{"id":"0:82-0:73:2332","crate_id":0,"name":null,"span":{"filename":"src/simd/mod.rs","begin":[174,0],"end":[174,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(all(httparse_simd,\nnot(any(httparse_simd_target_feature_sse42,\nhttparse_simd_target_feature_avx2,)),\nany(target_arch = \"x86\", target_arch = \"x86_64\",),))]"],"deprecation":null,"inner":{"import":{"source":"self::runtime","name":"runtime","id":"0:73:2332","glob":true}}},"a:2:8254:7701-0:233:1678":{"id":"a:2:8254:7701-0:233:1678","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8254:7701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:7701","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1678","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:96:670":{"id":"0:96:670","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[168,4],"end":[170,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:223:1696":{"id":"b:2:2542-0:223:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:696"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2556:128":{"id":"2:2556:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32032:2594","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:8253:7702-0:320:1775":{"id":"a:2:8253:7702-0:320:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:7702","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2541:7916":{"id":"2:2541:7916","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2515:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12088:34045":{"id":"2:12088:34045","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41403:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:8400","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,9],"end":[182,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:226:670"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2548-0:223:1696":{"id":"b:2:2548-0:223:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:116:1765":{"id":"0:116:1765","crate_id":0,"name":"parse_request","span":{"filename":"src/lib.rs","begin":[345,4],"end":[351,5]},"visibility":"public","docs":"Parses a request with the given config.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["request",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Request","id":"0:270:1769","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":"'buf","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"6:4722:11363":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:7322:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:8842:33455":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:43422:8415":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:3234:13524":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:1544:9928":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"16:6376:9134":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"6:4983:11497":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:20548:7910":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:9478:12472":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:47785:7596":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"5:3334:9938":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"2:41760:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"6:5828:11595":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:8632:20396":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:11193:10221":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"6:5889:11626":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"18:766:24265":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:44103:8393":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:13721:10873":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:8788:9570":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:9165:8319":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"6:5966:11675":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:11918:1500":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:10626:12057":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"6:653:14395":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:6377:12705":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:3163:13593":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:11585:10307":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:8253:7702":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:8970:1680":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"6:5766:11567":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"6:6833:11893":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:40111:8817":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"6:5986:11683":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:2589:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:6625:12704":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"2:2348:182":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:10989:9579":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:8134:12188":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:30284:2591":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"3:229:210":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:47479:9000":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"18:727:10136":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:10248:8023":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:11730:8401":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:9523:12476":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"16:6544:9140":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:44167:9025":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:10169:8025":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:40215:12649":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"1:5389:12696":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"16:4445:9541":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"9:445:19353":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:1062:12609":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:10060:12743":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"17:9670:12485":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"16:7449:12584":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"9:388:19354":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:21851:31066":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"6:1732:11171":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:11847:8551":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"2:3514:9923":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"17:13506:10791":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:2161:13682":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"6:5835:11599":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:9121:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:42704:11969":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"5:6130:13508":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"5:2963:7976":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:8389:20411":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:11172:12274":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"6:1556:11065":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:21016:8727":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:13376:10758":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:8244:12724":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:8437:13382":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:40408:12207":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"16:7016:12107":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"6:4728:11366":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:43238:8034":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:936:13204":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"0:197:128":{"crate_id":0,"path":["httparse","Error"],"kind":"enum"},"5:2039:8547":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"17:11879:10377":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"16:2572:9174":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:22503:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:13516:10796":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"5:4851:204":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"17:8360:20410":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"16:5655:9137":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:11318:10019":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"17:13426:10773":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:40286:12191":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:1667:1089":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:6089:9980":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:9384:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:3197:13523":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"5:211:9910":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:7703:12711":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:10732:25474":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"17:9469:12471":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:11908:642":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"14:187:19442":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"16:3063:9590":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:2741:7712":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"11:2168:10946":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:7202:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:9146:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:47800:7597":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:42485:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"17:13219:10720":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"5:0:286":{"crate_id":5,"path":["alloc"],"kind":"module"},"5:6779:9952":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:6874:12786":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:6076:11715":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:40365:12203":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:7952:13303":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:13309:10741":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"11:447:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"16:7411:9209":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:45983:8828":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:10148:13389":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"6:4823:11409":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:1982:185":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:43899:12249":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:45953:8824":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:10936:9568":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:10923:12063":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:40007:8711":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"11:657:7927":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:41212:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2:4011:12635":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:20608:33392":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"6:4694:11350":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:10589:12055":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"6:4937:11474":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"17:9443:12470":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:8772:8491":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"16:5886:9417":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"10:0:2439":{"crate_id":10,"path":["adler"],"kind":"module"},"5:1142:12980":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:5590:12160":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"6:5079:11538":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:9068:35358":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:10692:11975":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"16:5797:9534":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:40158:8721":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:3387:8609":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"16:5741:20349":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:12358:10463":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"11:749:9923":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"16:3872:9265":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:46461:8737":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:13791:10888":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"5:6263:9923":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:43594:8417":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:8847:12855":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"6:6704:11817":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:9628:12480":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"5:782:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:10857:25477":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:11410:10271":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:47877:7600":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:242:12449":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:4468:11281":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:45837:8729":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:13257:10728":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:9111:8313":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"0:233:1678":{"crate_id":0,"path":["httparse","Status"],"kind":"enum"},"2:2470:2595":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:4646:13344":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:6066:11712":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"11:2033:12114":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"9:352:19368":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"0:164:1937":{"crate_id":0,"path":["httparse","parse_headers"],"kind":"function"},"16:4568:9216":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:10657:12266":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"2:8254:7701":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:3214:12680":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:4994:12690":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:8347:8596":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:11736:8400":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:44306:195":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:21344:13421":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:11896:371":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:9545:9613":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"6:4799:11400":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"6:494:10969":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:41341:8819":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"2:39204:198":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:41377:8769":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:2749:7900":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"1:6105:9998":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:39374:12648":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"17:9641:12481":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"11:1858:12147":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"2:43576:8416":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"16:4872:9562":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:11911:744":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"6:6840:11896":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:10465:12525":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"11:1663:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"6:4991:11499":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:9973:12044":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:1568:9923":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"1:2348:11953":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:41720:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:10823:9642":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:11422:10274":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"6:4786:11395":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:13651:10849":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"6:4555:11325":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:42922:12231":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:7818:8605":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:11064:8492":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"17:13453:10780":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:10134:8039":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:7169:13653":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:3139:24824":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"16:6767:9414":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:11544:10295":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:13812:10894":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:9696:10143":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"6:5024:11512":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:43316:8407":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"6:4314:11194":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:43280:8031":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:45659:8996":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:953:12607":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:1756:8813":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"5:7022:12158":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:6413:8611":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:2805:9469":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"6:4780:11392":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:4418:13344":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:13842:10899":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"16:7042:9213":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:8170:12724":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:45382:8862":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:5472:9928":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"6:4435:11267":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:11785:10360":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"5:3726:8547":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"16:8156:9153":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"6:4388:11245":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"6:1535:11050":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:43251:8029":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"5:3221:34033":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:45558:9003":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"16:5616:12065":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:45406:8745":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"5:4038:9911":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:11155:10017":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"17:13169:10704":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"16:6400:9176":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:45474:8621":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"6:4684:11343":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:43270:8030":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"5:2970:33849":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:7599:13652":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:2350:13262":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"17:10125:10159":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:14:2548":{"crate_id":2,"path":["core","write"],"kind":"macro"},"16:7519:12120":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:10452:12524":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:7165:13654":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:1589:12146":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:43372:8021":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:39388:11956":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:20853:13429":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"17:1919:20458":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"0:200:1674":{"crate_id":0,"path":["httparse","Error","HeaderValue"],"kind":"variant"},"1:10662:12268":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"16:5630:12533":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"17:12259:10453":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:10276:8024":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"6:5993:11684":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"5:6382:7927":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:585:13187":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"11:1103:12613":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"6:6804:11877":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:4606:13609":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:43168:8015":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"6:587:11023":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"16:6254:9305":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:11220:8510":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:4969:9536":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:2774:13661":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"6:1648:11131":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:42714:12229":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"16:6793:9183":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:4255:207":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:13324:10743":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:9130:26488":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"11:403:12973":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"16:2378:9530":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:13233:10723":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:13689:10858":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"5:1015:9911":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:5358:12694":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"17:9917:1684":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:1787:12455":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"11:0:2440":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"6:6021:11698":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"6:6043:11706":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"16:5847:9278":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"16:2524:9215":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:2691:2589":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:12510:10494":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:11821:10368":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:11235:8614":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"16:535:9180":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"5:1527:12621":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"6:4379:11240":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:13625:10840":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"16:7065:12113":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:1637:11123":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:12517:9980":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:2812:13665":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"16:7652:198":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"6:4747:11374":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:7680:12261":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"2:2929:7714":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"6:7277:11911":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"1:8144:12213":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:11653:10327":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"16:6876:9142":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"5:2145:12149":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:11504:8429":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"18:690:12031":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:11253:8004":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"6:5876:11620":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"6:6135:11727":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"16:7669:9150":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"5:3587:8017":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"17:9886:12495":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"11:1845:12145":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:11864:12857":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"1:7654:13192":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"17:12536:10496":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"16:4624:9533":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"11:793:12615":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"17:11220:10229":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"2:21571:13277":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"16:6179:12542":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"18:491:12024":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:43824:12247":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"7:0:1545":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:40142:31063":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:12419:10473":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:43199:8035":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:8230:13343":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:9866:12493":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:22305:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"18:660:12445":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:5503:11713":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"5:4008:9923":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"11:736:12143":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"2:40376:12204":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"6:4482:11289":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"16:7437:10930":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:4849:13369":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:6772:13648":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:8935:25344":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:4764:13332":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"5:7188:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"11:1517:12616":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"16:6990:9277":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:6590:217":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:3251:12681":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:21349:13431":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"5:1306:12614":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:44099:8394":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:40468:12213":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:9108:12740":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"17:1034:12454":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:46075:8662":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"6:4861:11427":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:11372:10265":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"6:6564:11759":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"9:52:12836":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:11917:1499":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:6300:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"0:198:1672":{"crate_id":0,"path":["httparse","Error","HeaderName"],"kind":"variant"},"6:5919:11649":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:4578:11803":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"11:2180:10948":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:7791:9629":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:3142:12461":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:11434:10275":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:11912:745":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:12388:10468":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:10798:20420":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:9839:12491":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:21964:8860":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"6:1708:11162":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:12158:10417":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:44091:8389":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"16:2764:9425":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:487:12452":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:3212:12679":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:13678:10857":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:11478:11988":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:40315:12195":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"17:11471:10281":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"16:7103:8514":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:7215:7717":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"5:1446:7927":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:43778:12237":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:10735:10213":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:13499:10789":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:11919:1497":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:11532:10294":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:11391:10270":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:5723:12702":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:43342:8410":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"5:1676:9911":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:11628:10323":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"6:4625:11338":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:6846:10004":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:43971:12255":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"6:4972:11491":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:2554:9970":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"5:4399:9928":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"9:325:10954":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:46204:8744":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:13659:10852":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"5:3741:12622":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:22602:9004":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:4683:13333":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:731:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:20589:33389":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"14:160:12597":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:5183:190":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:9817:222":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:10743:12530":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"16:8047:10937":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:4381:9958":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:46621:8663":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:9194:12667":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"17:13411:10769":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:13101:10689":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:4326:9957":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:21866:11955":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:41590:8017":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"0:206:1680":{"crate_id":0,"path":["httparse","Error","Token"],"kind":"variant"},"17:10840:9651":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:42507:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:47541:8763":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:9613:9970":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"5:1122:33846":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:12072:10405":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"18:736:24264":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"17:13082:10688":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"5:680:231":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:40333:12198":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"6:5043:11526":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:10026:12504":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"16:7757:12121":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:2856:13672":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"11:1027:19431":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:40130:8632":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:8674:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:43936:12250":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"5:4369:9930":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"5:5831:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"16:8129:12593":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:41880:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"16:2337:9284":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:2376:13272":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"6:119:14037":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"17:386:12451":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:2706:7895":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:20754:13426":{"crate_id":2,"path":["core","core_simd","cast","SimdCastPtr"],"kind":"trait"},"2:7206:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"6:4943:11477":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"1:3133:26781":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:4568:13322":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:11069:20423":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"6:1630:11119":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"6:4615:11337":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:9853:12492":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"11:695:12601":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:12959:10663":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:43807:12246":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"6:4412:11258":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"16:4818:9415":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:1577:12144":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:42692:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:11891:10379":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:9512:12475":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:9299:12642":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"6:4753:11375":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:4114:12636":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:10367:10012":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"6:4495:11295":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:3359:9928":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:2696:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:47838:7599":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:13744:10874":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:39991:31059":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:10014:8021":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"17:12483:10492":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:41615:183":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:6013:9994":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"16:3640:9594":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:3935:9928":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"1:3977:13323":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:47339:8634":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"16:6520:9527":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:43188:8028":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"18:0:2446":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:11916:1498":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:10615:12056":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:8101:11977":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"17:12592:10503":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"16:5386:9276":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"16:6696:20354":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:40066:13615":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"2:2509:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:43225:8033":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:3079:8011":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:5768:9993":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"16:5811:9333":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:13135:10701":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:10262:8019":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:11011:9682":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"6:5862:11619":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:42183:8317":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"16:2742:9238":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"5:7345:9938":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"6:554:11005":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:9826:12490":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:3648:7927":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:7592:8342":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:44004:8403":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"6:1602:11094":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:12006:10397":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:12496:10493":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:8864:13406":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:10104:10157":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:41488:7698":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"6:4542:11321":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"5:7248:9026":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:9013:8545":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:47701:7591":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:12312:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"16:3815:9212":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:11136:1775":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:21799:12171":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:1895:8336":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"1:8420:8538":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:8274:11792":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"14:7:12597":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:9322:35353":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:10334:10150":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"11:986:12609":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:3684:12685":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:6761:13414":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"5:7076:198":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"11:1822:7927":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:41252:8627":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"18:481:12023":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:2481:12672":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"0:223:1696":{"crate_id":0,"path":["httparse","InvalidChunkSize"],"kind":"struct"},"17:9218:10150":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:11813:10366":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:3619:13314":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"1:7266:24853":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:12138:10414":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:5690:12698":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:21:683":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"17:13443:10777":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:10681:12060":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"5:1106:12979":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:47690:7590":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:46543:8713":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"6:6725:11823":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:9424:10140":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:2780:9468":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"5:3146:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"4:0:2436":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:638:12659":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:20782:13682":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"2:30478:31090":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"6:4517:11308":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"16:8180:20361":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:44146:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"6:4303:11186":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:10857:20421":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:8821:670":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"1:676:13191":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"2:47762:7595":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:8252:8540":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"6:4455:11276":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:40255:12650":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"16:6904:10927":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:7595:8343":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"16:6361:9290":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:2836:9989":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:6373:7984":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"6:568:11013":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"5:5941:9928":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"18:599:35366":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:9907:10156":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"6:6774:11860":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:8479:8522":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"16:2694:9155":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:10142:20500":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:10283:10191":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"17:11502:10290":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:43756:13555":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"6:4878:1003":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"16:0:2444":{"crate_id":16,"path":["gimli"],"kind":"module"},"16:7366:20357":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"18:538:10118":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"16:4480:9567":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:21783:8631":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:21443:8012":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"16:6336:9538":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:12609:13205":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"16:5305:9299":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:10429:12679":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:2522:237":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:10649:12058":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:867:7927":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:9476:1369":{"crate_id":2,"path":["core","slice"],"kind":"module"},"1:6336:12704":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"2:43664:8420":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:2163:13683":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"2:2792:13663":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"16:3585:10921":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"16:6321:12572":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:9148:35362":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"1:8903:8537":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:43636:8413":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:44115:8396":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:10702:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"0:210:1684":{"crate_id":0,"path":["httparse","Error","Version"],"kind":"variant"},"16:5677:20348":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:9683:12486":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"5:280:7718":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"16:6442:9297":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:420:9283":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:7831:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"16:2470:9119":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"6:4954:11480":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"6:6670:11811":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"6:4853:11422":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"1:11382:12685":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:8679:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:3915:13319":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"11:1012:12611":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:39228:199":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:8360:8398":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"16:5779:9156":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:4023:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"17:13211:10717":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:5067:11533":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:47663:8823":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:8506:8490":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:7244:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:47681:2358":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:5914:8536":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"2:21002:13420":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:10432:12681":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"2:45696:8778":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:46731:8994":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:13821:10896":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"6:6624:11792":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:40398:12206":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:10897:9616":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:40735:12222":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"13:226:10945":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:3169:13592":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:42402:11960":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:888:12143":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:41539:193":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"1:11013:8517":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"1:2366:13267":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"6:6617:11788":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"14:0:2442":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"16:6535:9900":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"6:1574:11075":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:13461:10781":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:2822:13667":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:43099:12653":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:2796:13662":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:3157:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"16:6201:12557":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"6:6867:11902":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:39381:8325":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"16:7488:12118":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:1924:8337":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"17:13066:10685":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:40417:2346":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:40482:12214":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:1662:11142":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:40078:12182":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:12372:10466":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:9557:10150":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:4046:13522":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:7636:33453":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:43476:8023":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"6:4847:11419":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"3:0:443":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:9157:8316":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"6:562:11010":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:43961:12251":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:3136:24826":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:618:8338":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:2898:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"6:4327:11204":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:12126:10413":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"0:270:1769":{"crate_id":0,"path":["httparse","Request"],"kind":"struct"},"17:12403:10472":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:10722:11977":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"11:630:8017":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"6:4703:11355":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:12361:192":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"5:7160:9031":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:9596:9969":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"6:7598:11944":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"16:7498:12119":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"11:2060:12611":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:10761:20419":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"16:4789:9543":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:11278:1399":{"crate_id":2,"path":["core","str"],"kind":"module"},"16:7557:10932":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"6:4534:11316":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:2768:9465":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:8823:9681":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:11109:9648":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"6:5057:11532":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"6:1695:11158":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:10580:12054":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"17:13698:10860":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:41454:2316":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"17:8651:9276":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"1:6486:12706":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:844:8017":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:21128:8727":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:3152:234":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:11446:10278":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:20934:13277":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"16:2642:9504":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"6:4739:11370":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:2515:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"6:5007:11504":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:6916:10005":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"16:7588:12591":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:5930:206":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:1747:11951":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:562:9617":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"6:7504:11923":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:3142:8010":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"16:5920:9205":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"5:7084:9032":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:39964:8422":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"16:5557:9133":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"17:9340:12469":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"13:110:8193":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"5:5675:232":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"6:5899:11633":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:6678:13656":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"6:547:11002":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"5:4240:8017":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:8283:20408":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:10257:12513":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"16:8025:9264":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"6:4715:11362":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:43689:8423":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:8181:13312":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"11:2130:19426":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"18:671:12448":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"6:4400:11249":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:12331:10461":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"6:6719:11822":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"16:5708:9427":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:7675:12260":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"1:9091:12265":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:9989:8018":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"5:6309:9911":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"16:6351:20352":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:3749:9435":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:40447:12209":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:9734:12488":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:480:9982":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:42430:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"17:10402:12517":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"5:7044:9920":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:12386:12644":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:47417:8668":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"16:7244:35351":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"17:12293:10456":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"18:515:10116":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"6:5014:11507":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"6:1910:15385":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:2753:13410":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:11459:10280":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:10721:10210":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:46173:8738":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:13399:10766":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"14:165:19435":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:4187:8324":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"5:4354:245":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:8057:12718":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"17:10516:10198":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:20816:13428":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:8176:12726":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"16:3225:10918":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"1:8495:11980":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:8928:12734":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"1:1561:8017":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:39367:9330":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"14:40:10245":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:44111:8395":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:4100:12983":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"6:579:11018":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"6:1526:11045":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:40433:9483":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:1071:12611":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:8922:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"5:7235:9042":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"6:4505:11302":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:41530:7995":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:2578:12673":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:3879:13318":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:8471:1158":{"crate_id":2,"path":["core","result"],"kind":"module"},"6:5792:11582":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:30876:7910":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"17:10691:20526":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"6:6572:11764":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:39188:200":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:11355:10263":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:21928:31056":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:43540:8419":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:7864:12715":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:2873:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:44404:12259":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:8255:7700":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:13033:10674":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:12915:10632":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"9:234:11969":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:5574:9992":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:3405:12683":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:1433:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:45761:8764":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"5:1780:9938":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:43872:12248":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:12299:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"11:2174:10947":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"5:3242:12147":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"6:4549:11323":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:12033:10401":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:21095:13277":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:22569:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:2833:9474":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:12194:10423":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"18:590:10121":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:7518:10007":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"11:1501:19432":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:10080:12511":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"18:614:35365":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"6:4394:11246":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:10808:8037":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:40457:12210":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:8753:9631":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"6:4419:11262":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"16:2668:9182":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:11698:10022":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"16:7683:9151":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"6:5073:11535":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"5:3182:12145":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"16:5963:12072":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:2839:13668":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"18:652:10113":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"6:7510:11924":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:11247:12278":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"11:97:12136":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:10052:12508":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"16:2967:19492":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:4437:8327":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:10638:12751":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"5:3187:34034":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:9596:10147":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"6:5848:11608":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:20772:13422":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"11:1611:9906":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:3929:13320":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:42169:8314":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:8443:20413":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:7543:9149":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"6:1499:11034":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:3386:12633":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"5:7265:224":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:6981:8612":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:12307:10458":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"17:10598:9686":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:9072:8492":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:11920:791":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"6:4793:11397":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:11573:10304":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:5025:12690":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:40702:12219":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:44391:9012":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:42467:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:4907:7690":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:5991:12161":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:11465:8430":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:13316:10742":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:2692:7894":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:2312:188":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:10667:12262":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"17:9772:10154":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"5:1261:12114":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:9721:12487":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"6:7522:11926":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"17:10635:10204":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:7796:12712":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:43984:8402":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:9653:12482":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:20950:13416":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"17:11993:10394":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:8218:12263":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:11905:1483":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:41598:8018":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:20780:32021":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"17:13121:10697":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"18:521:24266":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:11676:8408":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"16:8109:12132":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:21874:8656":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"9:0:2438":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:7580:13277":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"17:9028:12463":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:7687:13235":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:10680:8531":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"5:2135:9922":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:11902:10380":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:3296:13300":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:39270:201":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"16:6854:9544":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"16:7572:35350":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:10015:12503":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:7480:12758":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"17:8667:9542":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"17:13194:10712":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"6:4567:11334":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"0:101:210":{"crate_id":0,"path":["httparse","Result"],"kind":"typedef"},"17:10068:12510":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:30244:2590":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:4685:13335":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:11899:1517":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"16:6819:9546":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:10219:12696":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"16:5724:12071":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:2512:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:2746:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"1:11503:12281":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"1:3329:12221":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:39979:8667":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"5:1430:8018":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:10875:8502":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:7024:12986":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"1:3937:13321":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"16:6132:12074":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"16:6164:12077":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:10670:10208":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"1:413:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"6:6588:11776":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"6:4916:11459":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:39126:13526":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:43950:13556":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:40324:12197":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:44349:8714":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:8718:9630":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:11045:8486":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"5:4080:8018":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:12224:10442":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:11921:1555":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"16:4932:9204":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:9048:219":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"18:582:7910":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"16:2905:9160":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:46667:8669":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:12318:10459":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:8092:11976":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:22272:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"17:12894:10622":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"18:644:10113":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"11:836:12607":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:8195:20397":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:12282:10454":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:41269:13313":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"16:5000:9131":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:20881:13423":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"5:7005:8676":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"1:857:8018":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:8397:11969":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:11510:12281":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"17:12770:10519":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:12646:10517":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:12522:10495":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"5:3806:9938":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"16:3446:10920":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"14:215:12134":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"9:502:9077":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"19:0:1033":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"5:5268:13541":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:41479:7927":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"17:9312:12468":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"11:1538:12617":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"5:7290:12632":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:13024:10673":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"11:968:12114":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"6:4488:11292":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:4741:9990":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:42675:12227":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:9577:10145":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:10270:12514":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"5:1518:198":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:4582:11807":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:9038:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:5506:13387":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"17:9188:35355":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"17:12923:10633":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:10039:12506":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:13249:10726":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:4264:12638":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:9530:9967":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"2:1630:588":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:11539:8038":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:9946:12042":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"6:4290:11177":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:30278:1646":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"6:0:818":{"crate_id":6,"path":["libc"],"kind":"module"},"2:40679:12217":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"17:11319:10258":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"5:1507:12601":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:10092:12512":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:2518:238":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"16:2931:19491":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"16:6558:12092":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:8683:9652":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"0:0:2192":{"crate_id":0,"path":["httparse"],"kind":"module"},"1:11913:746":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"11:285:12137":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:2242:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:12622:10205":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"16:6431:12081":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"16:4757:9560":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"11:1826:9923":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"16:6474:9152":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"1:6556:10002":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"16:6662:12096":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"7:32:19339":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:13367:10755":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:361:12655":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"16:7529:9148":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:9159:8317":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"18:574:10113":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:2695:225":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:8971:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:22536:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:901:9923":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"18:80:12955":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:1048:12114":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"6:4817:11408":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:13015:10669":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:21119:13277":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:2364:13266":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:2817:13666":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:12461:10481":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:13344:10750":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:22239:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:11914:742":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:9138:12465":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:10712:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:2694:226":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"17:12799:10539":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:13803:10890":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"11:399:12972":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"16:7803:9431":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:46029:8779":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:9488:12473":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"5:7172:13203":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:926:12601":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:40125:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:5532:12159":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"5:4947:9928":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:9453:20431":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"6:7557:11934":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"11:332:9902":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:21126:13424":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:13564:10833":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:975:12453":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:1821:12666":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:39346:12647":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"6:4871:11433":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:1565:7927":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:10845:12697":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:5443:12697":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:0:2445":{"crate_id":17,"path":["object"],"kind":"module"},"2:40496:12215":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:40085:12183":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:11641:10324":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:43159:8014":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:6725:12981":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"18:719:10133":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:3987:13324":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:2758:13412":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:11341:12684":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:11721:8398":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:10775:8036":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:43655:8424":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"11:760:9938":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"1:7808:11975":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"16:5643:12069":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"5:5867:13957":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:9228:35359":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:42926:8047":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:40031:8725":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:11861:10376":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"16:4702:9175":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"6:6710:11819":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:11488:8427":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"16:4904:9566":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"17:9617:12479":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:12236:10444":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:13865:10903":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"16:2426:9229":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"5:689:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:46051:8665":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"6:7462:11922":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"6:4523:11311":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"16:7837:12122":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:43330:8406":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:8164:8411":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"15:219:12833":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"5:882:9918":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"17:11946:10388":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:47710:2415":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"18:564:10120":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"16:5571:9136":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:8214:9330":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:2985:13217":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:11471:26580":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"5:7279:9033":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:8256:20395":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"5:1477:12143":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"6:541:10999":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"11:2201:9031":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:7859:20360":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:1733:13693":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:2544:9987":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:11923:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"5:2694:9035":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:44107:8397":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:2469:13277":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:9108:35361":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"16:7626:12592":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:530:9983":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:11901:1051":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:8548:20416":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:2843:13669":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"17:13053:10680":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:10377:10196":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:4928:11468":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"6:7516:11925":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:11915:1501":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"18:624:35364":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"6:4841:11418":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:1947:12456":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:12554:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"6:4427:11264":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:501:9922":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:40385:12205":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:11910:747":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"6:1519:11042":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:11163:10217":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"1:11459:11987":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:4512:13362":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:20921:13430":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:911:9938":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"5:3574:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:11942:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:6589:7935":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:45362:8666":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:43358:1647":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"16:4728:9457":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:1467:1645":{"crate_id":2,"path":["core","mem"],"kind":"module"},"1:8236:12727":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"1:3462:13275":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:3786:12686":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:43671:8421":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:40043:8423":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:9748:10150":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"15:0:2443":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:40305:12194":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"11:844:12608":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"16:5693:9311":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:930:12602":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"17:10354:10195":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"0:258:1719":{"crate_id":0,"path":["httparse","ParserConfig"],"kind":"struct"},"5:7219:31063":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:4858:13370":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"11:1121:12614":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:13159:10703":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"16:5418:10922":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"1:8958:12737":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:39173:8995":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"6:4886:11438":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"6:6155:11741":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"6:4637:11339":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:3999:13327":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:2847:13670":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:10303:12516":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:7271:11909":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:11484:10282":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:40059:8421":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:12563:10500":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"18:699:12032":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"5:1277:12611":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:40277:12189":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:11787:13549":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:10941:10014":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"9:481:19352":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:13667:10853":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"6:526:10990":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"16:6236:12569":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"17:13857:10900":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"5:7014:7927":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:20741:13425":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"2:6921:8604":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:43390:8025":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"16:8072:12126":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"6:7608:11946":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:44341:8622":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"16:7697:9141":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:42176:8316":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"11:365:9904":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:2744:7898":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"16:2502:9564":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:6943:20355":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:32068:12646":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:10324:12729":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:2981:13216":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:45677:8773":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"6:5954:11670":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:40727:11957":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:0:1391":{"crate_id":1,"path":["std"],"kind":"module"},"16:8142:12596":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:355:12654":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:7596:20358":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"17:10712:20527":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:8489:8017":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"16:5998:20350":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:41800:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:10832:12711":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:21573:13419":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:20606:33387":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"16:2808:9242":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"1:1844:12667":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:7267:7716":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:40235:8033":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"6:6129:11726":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"16:7635:9123":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:13477:10784":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:2963:13525":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"6:6170:11752":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:11428:8428":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"6:4809:11404":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:11253:12279":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"5:3208:12146":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"6:7574:11939":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:4116:13342":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:43522:8418":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:1572:9938":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"17:10316:10193":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:39292:203":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:9053:8546":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"5:5518:9936":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:13488:10788":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"6:1494:11032":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:2922:1947":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"5:5851:9934":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:13041:10675":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"5:6461:9911":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:959:12608":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:8329:7694":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:44362:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:41960:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"6:7551:11933":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"5:3600:8018":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:42162:8315":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:12449:10479":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:7872:8547":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"17:8310:20409":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"16:5367:19463":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"5:1415:8017":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:11897:938":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"6:6819:11884":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:21815:9020":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:45907:8677":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:8786:8502":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:42683:12228":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:39248:202":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:9155:8315":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:3318:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:40051:8422":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:9807:13277":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"16:7767:20359":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:45714:8720":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"5:7113:7927":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:43626:8411":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:13385:10759":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:2219:13259":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"16:2862:9416":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:947:12605":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:8420:20412":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"6:595:11028":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"17:247:12450":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:3453:24562":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"17:10440:12523":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:11969:10393":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:4078:12982":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:45607:9019":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:2788:13413":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"6:6007:11695":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:30372:31081":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"6:7294:11921":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:9153:8314":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:10207:8026":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"16:4596:9328":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"16:2830:9120":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:11520:10291":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"10:36:10952":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"8:0:2437":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:2210:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"6:6035:11703":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:40172:13246":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"2:47747:7594":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:10236:25037":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:46126:8739":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:20576:33357":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:8296:11978":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:5071:191":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:43348:8409":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"6:7585:11940":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"12:0:2441":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"18:113:12959":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:11869:13194":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:1783:12664":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:4260:12688":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"14:202:13557":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"18:609:12444":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:10491:12527":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:39087:8344":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:4145:8762":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:12433:10475":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:1785:12665":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"17:11060:10205":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:43440:8414":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:8816:8530":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"6:482:10964":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"16:5032:9184":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:2506:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"17:8521:20415":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"16:6061:19464":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"5:2227:34982":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:20561:33357":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:11903:1369":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:1916:11954":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"16:55:9246":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"1:3172:12677":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"1:11898:419":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"6:6027:11701":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:3885:13317":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:41521:7699":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"6:1589:11087":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:9043:218":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:41640:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:11904:1399":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:1637:2585":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"16:5402:9542":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"18:507:10113":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:11909:644":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"16:2786:9211":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:47736:7593":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"16:3899:9561":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"5:4200:9928":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:30848:183":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:47087:8864":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:8758:8517":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:4259:12637":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:875:12142":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:42458:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"14:31:12597":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:7537:10009":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:6137:12703":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"1:1594:12147":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:3253:12682":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"11:1852:12146":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"16:2404:9228":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"13:0:2435":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:4410:7632":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:10885:12062":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:30300:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"16:2319:9244":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:20891:13682":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"2:45428:9010":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:12334:32113":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:42722:12230":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:9380:20429":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"6:4474:11284":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"5:6754:9949":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"16:6293:9423":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:2264:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:4812:797":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:47815:7598":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"6:6849:11899":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:13612:10834":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"5:2974:33850":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:40205:9959":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:10010:12988":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:6240:206":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"16:4400:9424":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:32159:7901":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:1978:12459":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:1768:610":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:11082:8548":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"16:3030:9256":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"17:12345:10462":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"6:5804:11586":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"16:154:9525":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"1:7469:9617":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"16:8170:12133":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:8909:1647":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"15:180:12963":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"5:1496:12600":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"16:7467:12115":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"6:4340:11214":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:11282:10245":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"16:8269:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:4440:13345":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"5:35:9908":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:44095:8392":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"6:4586:11335":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:2926:7713":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:21978:8865":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"0:154:1894":{"crate_id":0,"path":["httparse","EMPTY_HEADER"],"kind":"constant"},"1:6489:13401":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:46005:8861":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"5:2247:12154":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:5324:12691":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:11902:312":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:11556:10296":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:13763:10879":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:9895:12498":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:3469:13295":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:13181:10707":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:11844:10373":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:11924:10387":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:11600:10313":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"16:6868:10925":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:8157:8021":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:8979:35356":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:20591:33391":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"16:6327:12079":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"16:3300:10919":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"17:12113:10412":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"0:202:1676":{"crate_id":0,"path":["httparse","Error","NewLine"],"kind":"variant"},"2:40708:12221":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"16:3047:19493":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:41547:210":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:2933:12460":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"6:5798:11585":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:9178:12466":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:2317:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"5:265:9911":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"17:12576:10501":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"18:96:12956":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:40693:7984":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:10555:12046":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:2800:13664":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:21730:8775":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"5:5224:9911":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:9098:12464":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"5:7054:34031":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"6:6597:11782":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"18:681:12028":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:44298:211":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:12634:10510":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"6:573:11015":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:46227:8717":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:22338:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"17:12980:10668":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:9959:12043":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:9566:12467":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:41920:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:9163:8318":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:11037:20422":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"16:2448:9535":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"6:4462:11279":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:45859:8768":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:8794:8017":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:32032:2594":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:2763:9467":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"5:3175:8017":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:917:12615":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"16:6506:12090":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"6:1594:11089":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:8953:10138":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"16:6935:12573":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"17:10660:10205":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:8978:8514":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"6:7528:11927":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:10478:12526":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"11:2186:35344":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"16:7335:35349":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:40021:12180":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"6:1701:11159":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:2151:589":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:46697:8678":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:7707:12646":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"16:4510:9458":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"17:10545:9579":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"1:11205:8495":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:8965:12738":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"1:8835:8505":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:9628:9975":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"17:12902:10625":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:40356:12202":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:44123:8391":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"9:174:12846":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"6:7563:11935":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:7317:35352":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"11:2049:12609":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"16:7259:7698":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:46385:9015":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:4108:12984":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:9151:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"16:6671:9266":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"6:5881:11621":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"16:4540:9426":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:40717:9965":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"6:1672:11148":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:5567:8536":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:11234:10230":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:40092:13616":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"18:531:12025":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:43150:8016":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:41235:8629":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:9409:13623":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:8151:1647":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:4336:8325":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"6:474:10959":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:25859:8712":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"6:4445:11273":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:41471:8018":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"5:7034:9923":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"6:5817:11587":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:8858:9578":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:39970:12179":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"16:6575:20353":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:21957:12175":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"6:4663:11341":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"6:6606:11783":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"6:4373:11238":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"5:1378:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:46307:9001":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"5:6593:9936":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"16:6460:9135":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"6:4962:11485":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:4643:13371":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:10472:7986":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"6:6014:11697":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:5338:12693":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"17:13332:10744":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:4907:11453":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"1:8225:12264":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:45576:8664":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"11:805:13204":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"6:6687:11812":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:22404:8008":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"5:2966:11948":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:922:12600":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"16:7077:20356":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"6:1505:11037":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:9534:12477":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"11:1068:12612":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"5:6710:244":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:5697:12701":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"16:4327:9188":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"0:320:1775":{"crate_id":0,"path":["httparse","Header"],"kind":"struct"},"17:13639:10846":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:9391:12712":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"1:9396:10011":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"6:6795:11874":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"18:636:10132":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:8931:9647":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:13145:10702":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:12098:10409":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:5104:9563":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:2784:13411":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:8113:13276":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:11721:10331":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:3681:12684":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"6:5978:11682":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:11258:10244":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"0:208:1682":{"crate_id":0,"path":["httparse","Error","TooManyHeaders"],"kind":"variant"},"5:5272:13542":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:1985:184":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:45807:8999":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"0:204:1678":{"crate_id":0,"path":["httparse","Error","Status"],"kind":"variant"},"1:3943:13322":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"6:1680:11149":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:47229:8746":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:41606:7927":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:10057:8038":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"16:7293:9293":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"16:2720:9237":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:40295:12192":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:4332:12689":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"5:633:12618":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:42667:12225":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:41403:181":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:12178:10418":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:11800:10364":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:4180:12687":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:13356:10751":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:7801:12262":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:13292:10734":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:47625:8726":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:8598:20418":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:12046:10402":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:43793:12243":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:8746:186":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:11101:8546":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:11741:8399":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:2354:189":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:9991:12666":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"10:44:10953":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"0:295:1806":{"crate_id":0,"path":["httparse","Response"],"kind":"struct"},"5:4432:9930":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:10428:12522":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:7626:7986":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:21891:31047":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"5:2964:33851":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"16:8090:12129":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"5:5745:9923":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:22470:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:6542:13403":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"11:311:12140":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:10000:9667":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:12835:10570":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"17:9038:35354":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:9265:12467":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"0:195:1978":{"crate_id":0,"path":["httparse","parse_chunk_size"],"kind":"function"},"5:2465:9037":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"5:3216:12144":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"5:6612:9947":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:20996:13418":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:3991:13325":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:30314:31089":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"6:6647:11810":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"5:786:9913":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"6:4605:11336":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:9161:194":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"11:1838:12144":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"6:7545:11932":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"5:6622:9948":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"17:10416:12521":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:1846:12668":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:42907:11973":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"17:9275:35360":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:3182:33678":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:41354:12263":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"16:7478:9146":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:7600:12709":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:39314:8009":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:2851:13671":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:6743:11834":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:9822:12489":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"5:7105:7927":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:10426:12677":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"2:21912:31091":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"11:119:9901":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:7947:12717":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:42040:7602":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"16:6146:194":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:10747:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:44119:8390":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:41463:8017":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"1:5374:12695":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:9876:9628":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:10952:10015":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:21100:13417":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:21677:8740":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"16:3782:9339":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"6:4367:11237":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:4687:13336":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"17:11615:10319":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:62:13983":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:1821:8818":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"16:6390:12080":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:12059:10404":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"16:5944:12535":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:13419:10772":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"16:7711:9309":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"17:12019:10164":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"15:198:12967":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"5:1486:12615":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:45536:8749":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:7856:12714":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:10505:12528":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:23049:8812":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"6:506:10973":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:8270:12728":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:44379:8633":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"6:7249:11908":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:7605:8533":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"6:5050:11529":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:44179:13759":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:46431:8767":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"5:7205:9034":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:9887:8753":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"6:123:14038":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:40347:12201":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"6:4894:11443":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:5384:9928":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:4765:389":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:45452:8624":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:7848:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:10836:9065":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"17:12607:10507":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:11339:10259":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:11037:25482":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"16:6307:9132":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"16:2594:9233":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"1:5560:206":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:3174:12678":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:2911:8345":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:13265:10730":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:11770:10356":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:39561:26976":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"5:4170:9928":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"9:421:19355":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:9350:35357":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"16:6717:12097":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:46881:8829":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"6:7539:11931":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:9110:210":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"17:8573:20417":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"11:723:12142":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"5:1468:12142":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:10569:12050":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"11:644:8018":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:39353:8741":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:1080:12614":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:13777:10881":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"16:7029:12110":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"16:5071:9310":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:11178:12755":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:41840:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:10527:20525":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"17:9498:10143":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"16:6488:12082":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"1:11880:25473":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:13240:10725":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"5:7068:7927":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:22371:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"6:1716:11166":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"6:4763:11381":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"5:2053:12622":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"17:9986:12045":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"14:221:10943":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"16:2298:19465":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:9374:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"6:5774:11569":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:1544:11056":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:7669:13193":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"6:4832:11412":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:2932:7715":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:11922:1128":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:9933:12040":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:42442:9226":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:41389:8732":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:2391:2451":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:45637:9016":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:21839:9009":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"5:2174:12151":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:10967:9686":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:30053:13315":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"1:2215:9953":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"1:635:12657":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:10705:10209":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"11:1818:8017":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:7942:12716":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"16:2546:9154":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"11:667:12600":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:6192:8536":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"1:1931:655":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"16:7509:9147":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"16:5976:9125":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:3064:12675":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"7:79:19346":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:0:497":{"crate_id":2,"path":["core"],"kind":"module"},"5:899:8017":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:43178:8027":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:2212:12671":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"16:5594:9138":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:2245:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:40686:12218":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"16:5346:9537":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:10958:10016":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:2871:210":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"2:43260:8032":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:43494:8019":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:2618:12674":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:11283:1889":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"6:4769:11384":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"6:4948:11479":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"16:2616:9456":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:32072:12178":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"17:13469:10783":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"1:8085:8604":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:8880:13408":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"16:6218:12561":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"16:6728:9189":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"11:798:12602":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:2684:220":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:22437:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"5:3675:9911":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:4786:32798":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:1583:12145":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"6:4677:11342":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:21990:13316":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:41298:11959":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"5:826:9916":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"17:11832:10371":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:8740:12729":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"11:1831:9938":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"16:6243:35348":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:8490:20414":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"16:2357:9261":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"6:4649:11340":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:488:10967":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"16:7743:9139":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:13433:10774":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:9965:8017":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:5251:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:11269:8006":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"17:9409:20430":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"11:817:12605":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:20994:13277":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:12506:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"16:4037:9185":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"6:1512:11040":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:7581:8544":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:11090:9644":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:4580:11805":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"16:6022:20351":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:49683:13434":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"2:2701:228":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:8917:12732":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:2603:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"17:12085:10407":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:4129:12985":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:8802:12731":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"6:1689:11155":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:8992:24625":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"16:2879:9217":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:10290:8020":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:43680:8422":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"5:7362:8499":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"0:238:1709":{"crate_id":0,"path":["httparse","Status","Partial"],"kind":"variant"},"2:41680:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:2827:9473":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"16:6890:9143":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:9414:8756":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:21455:33361":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"0:235:1707":{"crate_id":0,"path":["httparse","Status","Complete"],"kind":"variant"},"5:1292:12609":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"11:2194:10950":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:9366:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:11403:12686":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:41318:31074":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:11716:8384":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:42000:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"5:5068:9934":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:10096:8022":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"16:6981:12574":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"11:1048:35345":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:42412:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:44127:8486":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"17:12550:10499":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:2738:7896":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:11299:10248":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:643:13190":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:4:1016":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"18:755:12039":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"16:4845:9459":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"16:8256:9257":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:3999:12634":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:47587:8630":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"6:500:10970":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:43646:8412":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:4390:8326":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"6:532:10993":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:8848:13407":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"18:707:8401":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:3374:13575":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"16:6919:35347":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:44288:205":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:3266:12462":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:554:12656":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:45506:8863":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:47721:7592":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"6:5736:11542":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:40264:12188":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:13879:10906":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:3444:8313":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"17:9796:10155":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"6:1568:11073":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:11025:8491":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"1:8810:7927":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}