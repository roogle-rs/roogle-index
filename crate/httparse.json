{"root":"0:0:2245","crate_version":"1.8.0","includes_private":false,"index":{"b:5:680-0:258:1774":{"id":"b:5:680-0:258:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2272:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:8028","5:683:8029","5:684:8030"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:231":{"id":"0:231","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,27],"end":[182,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2325:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12340:31899":{"id":"2:12340:31899","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"üóª‚ààüåè\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"üçî‚ààüåè\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[615,0],"end":[706,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"items":["0:147:964","0:148:1919"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12423:31912":{"id":"2:12423:31912","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5527:13410":{"id":"5:5527:13410","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7449:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12410:31907":{"id":"2:12410:31907","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12032:8440","`DoubleEndedIterator`":"2:7472:121","prim@char":"1:12038:428","str::matches":"2:12407:2601"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43582:8473","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12052:8456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,0],"end":[419,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:109:1775","0:110:1777","0:111:1791","0:112:1778","0:113:1799","0:114:1776","0:115:1818","0:116:1820","0:119:1828","0:122:1779","0:123:1859","0:126:1863"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2788:231-0:320:1830":{"id":"a:2:2788:231-0:320:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2788:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8556:7750-0:223:1751":{"id":"a:2:8556:7750-0:223:1751","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8556:7750","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,9],"end":[134,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2783:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:200:1729":{"id":"0:200:1729","crate_id":0,"name":"HeaderValue","span":{"filename":"src/lib.rs","begin":[139,4],"end":[139,15]},"visibility":"default","docs":"Invalid byte in header value.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[211,0],"end":[239,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:105:1766","0:106:1768","0:107:1600"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:309":{"id":"0:309","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,16],"end":[601,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2325:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8557:7749-0:320:1830":{"id":"a:2:8557:7749-0:320:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8557:7749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12331:836":{"id":"2:12331:836","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"∆íoo\".len(), 4); // fancy f!\nassert_eq!(\"∆íoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12038:428"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2771:223-0:223:1751":{"id":"a:2:2771:223-0:223:1751","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2771:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:227":{"id":"0:227","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,16],"end":[182,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2781:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,22],"end":[203,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"2:2325:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2325:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12342:319":{"id":"2:12342:319","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12055:1551"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12445:31919":{"id":"2:12445:31919","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12038:428","self::pattern":"2:12032:8440"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12052:8456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:302":{"id":"0:302","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,9],"end":[601,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9461:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:305:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8556:7750-0:320:1830":{"id":"a:2:8556:7750-0:320:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8556:7750","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:223:1751":{"id":"0:223:1751","crate_id":0,"name":"InvalidChunkSize","span":{"filename":"src/lib.rs","begin":[183,0],"end":[183,28]},"visibility":"public","docs":"An error in parsing a chunk size.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":["a:2:2788:231-0:223:1751","a:2:2828:7760-0:223:1751","a:2:8557:7749-0:223:1751","a:2:8556:7750-0:223:1751","a:2:2771:223-0:223:1751","b:2:2566-0:223:1751","b:2:2572-0:223:1751","b:2:2259-0:223:1751","b:2:2562-0:223:1751","b:2:2256-0:223:1751","b:2:2577-0:223:1751","b:2:3407-0:223:1751","b:5:5771-0:223:1751","0:99","0:227","0:230","0:225","0:231","0:228"]}}},"b:2:2577-0:197:128":{"id":"b:2:2577-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2536:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2546:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:128","2:2581:1528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:111:1791":{"id":"0:111:1791","crate_id":0,"name":"multiple_spaces_in_request_line_delimiters_are_allowed","span":{"filename":"src/lib.rs","begin":[280,4],"end":[282,5]},"visibility":"public","docs":"Whether multiple spaces are allowed as delimiters in request lines.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:237:1663":{"id":"0:237:1663","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[206,13],"end":[206,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"0:109:1775":{"id":"0:109:1775","crate_id":0,"name":"allow_spaces_after_header_name_in_responses","span":{"filename":"src/lib.rs","begin":[253,4],"end":[259,5]},"visibility":"public","docs":"Sets whether spaces and tabs should be allowed after header names in responses.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:105:1766":{"id":"0:105:1766","crate_id":0,"name":"is_complete","span":{"filename":"src/lib.rs","begin":[214,4],"end":[219,5]},"visibility":"public","docs":"Convenience method to check if status is complete.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257:689":{"id":"0:257:689","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[203,37],"end":[203,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9436:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9417:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,15],"end":[203,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2272:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2272:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:244:432"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5509":{"id":"5:5509","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5510:32577","5:5511:1915","5:5514:32578","5:5517:32579","5:5525:32580","5:5526:32581","5:5527:13410","5:5528:26731","5:5529:26730"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:221":{"id":"0:221","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,37],"end":[134,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9461:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:222:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,22],"end":[203,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2782:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12349:2003":{"id":"2:12349:2003","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"üóª‚ààüåè\");\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10126:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10126:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12439:31917":{"id":"2:12439:31917","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12038:428","self::pattern":"2:12032:8440"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12052:8456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:99":{"id":"0:99","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[185,0],"end":[189,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9466:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:100:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12416:31909":{"id":"2:12416:31909","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12032:8440","`DoubleEndedIterator`":"2:7472:121","prim@char":"1:12038:428","str::match_indices":"2:12413:31908"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43528:8475","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12052:8456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:273:1884":{"id":"0:273:1884","crate_id":0,"name":"method","span":{"filename":"src/lib.rs","begin":[449,4],"end":[449,33]},"visibility":"public","docs":"The request method, such as `GET`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41398:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'buf","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}},"b:2:2259-0:270:1824":{"id":"b:2:2259-0:270:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2253:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2261:24516"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:229:631":{"id":"0:229:631","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[182,16],"end":[182,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:115:1818":{"id":"0:115:1818","crate_id":0,"name":"obsolete_multiline_headers_in_responses_are_allowed","span":{"filename":"src/lib.rs","begin":[340,4],"end":[342,5]},"visibility":"public","docs":"Whether obsolete multiline headers should be allowed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:2032":{"id":"0:195:2032","crate_id":0,"name":"parse_chunk_size","span":{"filename":"src/lib.rs","begin":[1203,0],"end":[1266,1]},"visibility":"public","docs":"Parse a buffer of bytes as a chunk size.\n\nThe return value, if complete and successful, includes the index of the\nbuffer that parsing stopped at, and the size of the following chunk.\n\n# Example\n\n```\nlet buf = b\"4\\r\\nRust\\r\\n0\\r\\n\\r\\n\";\nassert_eq!(httparse::parse_chunk_size(buf),\n           Ok(httparse::Status::Complete((3, 4))));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"result::Result","id":"2:41543:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"primitive":"usize"},{"primitive":"u64"}]}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:141:1919":{"id":"0:141:1919","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[552,4],"end":[554,5]},"visibility":"public","docs":"Try to parse a buffer of bytes into the Request.\n\nReturns byte offset in `buf` to start of HTTP body.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:212","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:213":{"id":"0:213","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,15],"end":[134,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2272:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:214:432"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2771:223-0:258:1774":{"id":"a:2:2771:223-0:258:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2771:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3407-0:258:1774":{"id":"b:2:3407-0:258:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3405:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3409:1542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,9],"end":[446,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9461:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:280:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12355:12244":{"id":"2:12355:12244","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"yÃÜ\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'yÃÜ'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12038:428"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43330:8466","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2562-0:197:128":{"id":"b:2:2562-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2539:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2536:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2565:7967"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2771:223-0:320:1830":{"id":"a:2:2771:223-0:320:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2771:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2577-0:223:1751":{"id":"b:2:2577-0:223:1751","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2536:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2546:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:128","2:2581:1528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2580:128":{"id":"2:2580:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:31903:2650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:8557:7749-0:223:1751":{"id":"a:2:8557:7749-0:223:1751","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8557:7749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8557:7749-0:197:128":{"id":"a:2:8557:7749-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8557:7749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8557:7749-0:258:1774":{"id":"a:2:8557:7749-0:258:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8557:7749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2568:715":{"id":"2:2568:715","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,0],"end":[178,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","description","source","type_id","cause"],"trait":{"name":"Error","id":"2:2624:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:98:1749"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12430:31916":{"id":"2:12430:31916","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12038:428","self::pattern":"2:12032:8440"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12341:320":{"id":"2:12341:320","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12342:319","`u8`":"1:12055:1551"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12353:26987":{"id":"2:12353:26987","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-L√∂f\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-L√∂f\", last);\n```","links":{"str::split_at_mut":"2:12354:26988"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:202:1731":{"id":"0:202:1731","crate_id":0,"name":"NewLine","span":{"filename":"src/lib.rs","begin":[141,4],"end":[141,11]},"visibility":"default","docs":"Invalid byte in new line.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2828:7760-0:223:1751":{"id":"a:2:2828:7760-0:223:1751","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2828:7760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12436:27007":{"id":"2:12436:27007","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12038:428","self::pattern":"2:12032:8440"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41398:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12052:8456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265:432":{"id":"0:265:432","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[242,9],"end":[242,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParserConfig","id":"0:258:1774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:258:1774":{"id":"b:2:2566-0:258:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2539:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2568:715"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12451:26908":{"id":"2:12451:26908","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39432:26881","Self::is_ascii":"2:12450:26732"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41398:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39432:26881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8557:7749-0:233:1733":{"id":"a:2:8557:7749-0:233:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8557:7749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8557:7749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8557:7749-0:295:1861":{"id":"a:2:8557:7749-0:295:1861","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8557:7749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5510:32577":{"id":"5:5510:32577","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:7766","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7182:8697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:7766","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:7182:8697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12453:26729":{"id":"2:12453:26729","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Gr√º√üe, J√ºrgen ‚ù§\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:112:1778":{"id":"0:112:1778","crate_id":0,"name":"allow_multiple_spaces_in_response_status_delimiters","span":{"filename":"src/lib.rs","begin":[298,4],"end":[301,5]},"visibility":"public","docs":"Sets whether multiple spaces are allowed as delimiters in response status lines.\n\n# Background\n\nThe [latest version of the HTTP/1.1 spec][spec] allows implementations to parse multiple\nwhitespace characters in place of the `SP` delimiters in the response status line,\nincluding:\n\n> SP, HTAB, VT (%x0B), FF (%x0C), or bare CR\n\nThis option relaxes the parser to allow for multiple spaces, but does *not* allow the status\nline to contain the other mentioned whitespace characters.\n\n[spec]: https://httpwg.org/http-core/draft-ietf-httpbis-messaging-latest.html#rfc.section.4.p.3","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:334":{"id":"0:334","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,26],"end":[709,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2781:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12398:27003":{"id":"2:12398:27003","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12038:428","str::splitn":"2:12395:27001","self::pattern":"2:12032:8440"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43482:8071","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12052:8456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5517:32579":{"id":"5:5517:32579","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Œ£\";\n\nassert_eq!(\"œÉ\", sigma.to_lowercase());\n\n// but at the end of a word, it's œÇ, not œÉ:\nlet odysseus = \"·ΩàŒîŒ•Œ£Œ£ŒïŒéŒ£\";\n\nassert_eq!(\"·ΩÄŒ¥œÖœÉœÉŒµœçœÇ\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7449:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5771-0:197:128":{"id":"b:5:5771-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9466:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5769:235","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5773:1506"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:255":{"id":"0:255","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,37],"end":[203,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9461:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9461:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:257:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2828:7760-0:295:1861":{"id":"a:2:2828:7760-0:295:1861","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2828:7760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:323:1781":{"id":"0:323:1781","crate_id":0,"name":"value","span":{"filename":"src/lib.rs","begin":[719,4],"end":[719,23]},"visibility":"public","docs":"The value portion of a header.\n\nWhile headers **should** be ASCII-US, the specification allows for\nvalues that may not be, and so the value is stored as bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}}},"2:12330":{"id":"2:12330","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12331:836","2:12332:7974","2:12333:31896","2:12334:31897","2:12336:31898","2:12339:26207","2:12340:31899","2:12341:320","2:12342:319","2:12343:2362","2:12345:13088","2:12347:2374","2:12349:2003","2:12351:31900","2:12352:31901","2:12353:26987","2:12354:26988","2:12355:12244","2:12356:12254","2:12357:1893","2:12358:30502","2:12359:30511","2:12360:13067","2:12361:31902","2:12362:30484","2:12363:1972","2:12366:27005","2:12369:27006","2:12372:8013","2:12376:7973","2:12380:26995","2:12383:26997","2:12386:26999","2:12389:31903","2:12392:31904","2:12395:27001","2:12398:27003","2:12401:31905","2:12404:31906","2:12407:2601","2:12410:31907","2:12413:31908","2:12416:31909","2:12419:31910","2:12421:31911","2:12423:31912","2:12425:31913","2:12426:31914","2:12427:31915","2:12430:31916","2:12433:25940","2:12436:27007","2:12439:31917","2:12442:31918","2:12445:31919","2:12448:1919","2:12450:26732","2:12451:26908","2:12452:26733","2:12453:26729","2:12454:26728","2:12455:31920","2:12457:13293","2:12458:31921"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5773:1506":{"id":"5:5773:1506","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:223:1751":{"id":"b:2:2566-0:223:1751","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2539:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2568:715"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12333:31896":{"id":"2:12333:31896","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nassert!(s.is_char_boundary(0));\n// start of `ËÄÅ`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `√∂`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `ËÄÅ`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:682:8028":{"id":"5:682:8028","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,16],"end":[446,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2325:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:164:1992":{"id":"0:164:1992","crate_id":0,"name":"parse_headers","span":{"filename":"src/lib.rs","begin":[893,0],"end":[900,1]},"visibility":"public","docs":"Parse a buffer of bytes as headers.\n\nThe return value, if complete and successful, includes the index of the\nbuffer that parsing stopped at, and a sliced reference to the parsed\nheaders. The length of the slice will be equal to the number of properly\nparsed headers.\n\n# Example\n\n```\nlet buf = b\"Host: foo.bar\\nAccept: */*\\n\\nblah blah\";\nlet mut headers = [httparse::EMPTY_HEADER; 4];\nassert_eq!(httparse::parse_headers(buf, &mut headers),\n           Ok(httparse::Status::Complete((27, &[\n               httparse::Header { name: \"Host\", value: b\"foo.bar\" },\n               httparse::Header { name: \"Accept\", value: b\"*/*\" }\n           ][..]))));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":"'h","mutable":true,"type":{"slice":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:212","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"primitive":"usize"},{"borrowed_ref":{"lifetime":"'h","mutable":false,"type":{"slice":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":["'h"]}}},{"name":"'h","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12455:31920":{"id":"2:12455:31920","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"‚ù§\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_debug().to_string(), \"‚ù§\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4555:31920"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43659:8477","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5529:26730":{"id":"5:5529:26730","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"gr√º√üe, j√ºrgen ‚ù§\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12454:26728"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2572-0:223:1751":{"id":"b:2:2572-0:223:1751","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2546:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2542:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2575:128","2:2576:1529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2572-0:258:1774":{"id":"b:2:2572-0:258:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2546:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2542:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2575:128","2:2576:1529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2259-0:197:128":{"id":"b:2:2259-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2253:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2261:24516"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:113:1799":{"id":"0:113:1799","crate_id":0,"name":"multiple_spaces_in_response_status_delimiters_are_allowed","span":{"filename":"src/lib.rs","begin":[304,4],"end":[306,5]},"visibility":"public","docs":"Whether multiple spaces are allowed as delimiters in response status lines.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2256-0:197:128":{"id":"b:2:2256-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2250:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2258:2591"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:107:1600":{"id":"0:107:1600","crate_id":0,"name":"unwrap","span":{"filename":"src/lib.rs","begin":[233,4],"end":[238,5]},"visibility":"public","docs":"Convenience method to unwrap a Complete value. Panics if the status is\n`Partial`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2256-0:270:1824":{"id":"b:2:2256-0:270:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2250:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2258:2591"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12413:31908":{"id":"2:12413:31908","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12032:8440","`DoubleEndedIterator`":"2:7472:121","prim@char":"1:12038:428","str::rmatch_indices":"2:12416:31909"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43510:8474","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12339:26207":{"id":"2:12339:26207","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11592:1944"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8557:7749-0:270:1824":{"id":"a:2:8557:7749-0:270:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8557:7749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:110:1777":{"id":"0:110:1777","crate_id":0,"name":"allow_multiple_spaces_in_request_line_delimiters","span":{"filename":"src/lib.rs","begin":[274,4],"end":[277,5]},"visibility":"public","docs":"Sets whether multiple spaces are allowed as delimiters in request lines.\n\n# Background\n\nThe [latest version of the HTTP/1.1 spec][spec] allows implementations to parse multiple\nwhitespace characters in place of the `SP` delimiters in the request line, including:\n\n> SP, HTAB, VT (%x0B), FF (%x0C), or bare CR\n\nThis option relaxes the parser to allow for multiple spaces, but does *not* allow the\nrequest line to contain the other mentioned whitespace characters.\n\n[spec]: https://httpwg.org/http-core/draft-ietf-httpbis-messaging-latest.html#rfc.section.3.p.3","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12366:27005":{"id":"2:12366:27005","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12038:428","self::pattern":"2:12032:8440"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12433:25940":{"id":"2:12433:25940","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12038:428","self::pattern":"2:12032:8440"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41398:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:295:1861":{"id":"0:295:1861","crate_id":0,"name":"Response","span":{"filename":"src/lib.rs","begin":[602,0],"end":[613,1]},"visibility":"public","docs":"A parsed Response.\n\nSee `Request` docs for explanation of optional values.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:298:1621","0:299:1928","0:300:1158","0:301:1829"],"fields_stripped":false}},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:144","a:2:2788:231-0:295:1861","a:2:2828:7760-0:295:1861","a:2:8557:7749-0:295:1861","a:2:8556:7750-0:295:1861","a:2:2771:223-0:295:1861","b:2:2566-0:295:1861","b:2:2572-0:295:1861","b:2:2259-0:295:1861","b:2:2562-0:295:1861","b:2:2256-0:295:1861","b:2:2577-0:295:1861","b:2:3407-0:295:1861","0:306","0:302","0:313","0:316","0:309"]}}},"b:2:3407-0:223:1751":{"id":"b:2:3407-0:223:1751","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3405:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3409:1542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:197:128":{"id":"0:197:128","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[135,0],"end":[150,1]},"visibility":"public","docs":"An error in parsing.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:198:1727","0:200:1729","0:202:1731","0:204:1733","0:206:1735","0:208:1737","0:210:1739"],"impls":["a:2:2788:231-0:197:128","a:2:2828:7760-0:197:128","a:2:8557:7749-0:197:128","a:2:8556:7750-0:197:128","a:2:2771:223-0:197:128","b:2:2566-0:197:128","b:2:2572-0:197:128","b:2:2259-0:197:128","b:2:2562-0:197:128","b:2:2256-0:197:128","b:2:2577-0:197:128","b:2:3407-0:197:128","b:5:5771-0:197:128","b:5:680-0:197:128","0:218","0:212","0:216","0:221","0:97","0:215","0:213","0:95","0:219"]}}},"a:2:2788:231-0:223:1751":{"id":"a:2:2788:231-0:223:1751","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2788:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:96:689":{"id":"0:96:689","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[168,4],"end":[170,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9436:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9417:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8556:7750-0:197:128":{"id":"a:2:8556:7750-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8556:7750","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:322:942":{"id":"0:322:942","crate_id":0,"name":"name","span":{"filename":"src/lib.rs","begin":[714,4],"end":[714,21]},"visibility":"public","docs":"The name portion of a header.\n\nA header name must be valid ASCII-US, so it's safe to store as a `&str`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}},"0:280:689":{"id":"0:280:689","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[446,9],"end":[446,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9436:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9417:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:680-0:233:1733":{"id":"b:5:680-0:233:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2272:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:682:8028","5:683:8029","5:684:8030"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:147:964":{"id":"0:147:964","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[618,4],"end":[625,5]},"visibility":"public","docs":"Creates a new `Response` using a slice of `Header`s you have allocated.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["headers",{"borrowed_ref":{"lifetime":"'h","mutable":true,"type":{"slice":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12369:27006":{"id":"2:12369:27006","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12038:428","self::pattern":"2:12032:8440"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12052:8456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5771-0:223:1751":{"id":"b:5:5771-0:223:1751","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9466:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5769:235","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5773:1506"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2771:223-0:233:1733":{"id":"a:2:2771:223-0:233:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2771:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2771:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2565:7967":{"id":"2:2565:7967","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2539:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:294:631":{"id":"0:294:631","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[446,20],"end":[446,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12356:12254":{"id":"2:12356:12254","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"yÃÜes\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'yÃÜ')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12038:428"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43336:8465","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:319:631":{"id":"0:319:631","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[601,20],"end":[601,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2828:7760-0:258:1774":{"id":"a:2:2828:7760-0:258:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2828:7760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:328:432":{"id":"0:328:432","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[709,15],"end":[709,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:2245":{"id":"0:0:2245","crate_id":0,"name":"httparse","span":{"filename":"src/lib.rs","begin":[1,0],"end":[2236,1]},"visibility":"public","docs":"# httparse\n\nA push library for parsing HTTP/1.x requests and responses.\n\nThe focus is on speed and safety. Unsafe code is used to keep parsing fast,\nbut unsafety is contained in a submodule, with invariants enforced. The\nparsing internals use an `Iterator` instead of direct indexing, while\nskipping bounds checks.\n\nWith Rust 1.27.0 or later, support for SIMD is enabled automatically.\nIf building an executable to be run on multiple platforms, and thus\nnot passing `target_feature` or `target_cpu` flags to the compiler,\nruntime detection can still detect SSE4.2 or AVX2 support to provide\nmassive wins.\n\nIf compiling for a specific target, remembering to include\n`-C target_cpu=native` allows the detection to become compile time checks,\nmaking it *even* faster.","links":{},"attrs":["#![deny(missing_docs)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:197:128","0:223:1751","0:101:212","0:233:1733","0:258:1774","0:270:1824","0:295:1861","0:320:1830","0:154:1949","0:164:1992","0:195:2032"],"is_stripped":false}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,33],"end":[134,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2782:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2577-0:295:1861":{"id":"b:2:2577-0:295:1861","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2536:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2546:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2580:128","2:2581:1528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2562-0:320:1830":{"id":"b:2:2562-0:320:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2539:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2536:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2565:7967"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:153:689":{"id":"0:153:689","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[723,4],"end":[732,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9436:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9417:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2256-0:258:1774":{"id":"b:2:2256-0:258:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2250:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2258:2591"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:233:1733":{"id":"0:233:1733","crate_id":0,"name":"Status","span":{"filename":"src/lib.rs","begin":[204,0],"end":[209,1]},"visibility":"public","docs":"The result of a successful parse pass.\n\n`Complete` is used when the buffer contained the complete value.\n`Partial` is used when parsing did not reach the end of the expected value,\nbut no invalid data was found.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:235:1762","0:238:1764"],"impls":["0:103","a:2:2788:231-0:233:1733","a:2:2828:7760-0:233:1733","a:2:8557:7749-0:233:1733","a:2:8556:7750-0:233:1733","a:2:2771:223-0:233:1733","b:2:2566-0:233:1733","b:2:2572-0:233:1733","b:2:2259-0:233:1733","b:2:2562-0:233:1733","b:2:2256-0:233:1733","b:2:2577-0:233:1733","b:2:3407-0:233:1733","b:5:680-0:233:1733","0:255","0:247","0:252","0:250","0:242","0:240","0:245"]}}},"2:12450:26732":{"id":"2:12450:26732","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2576:1529":{"id":"2:2576:1529","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41543:212","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2546:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,16],"end":[182,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2320:190","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:229:631"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12452:26733":{"id":"2:12452:26733","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√∂S\"));\nassert!(!\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√ñS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2788:231-0:233:1733":{"id":"a:2:2788:231-0:233:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2788:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2788:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:240":{"id":"0:240","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,9],"end":[203,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:2783:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2783:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12361:31902":{"id":"2:12361:31902","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43624:8469","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:684:8030":{"id":"5:684:8030","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:217:631":{"id":"0:217:631","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[134,22],"end":[134,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12389:31903":{"id":"2:12389:31903","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12032:8440","str::split":"2:12380:26995","prim@char":"1:12038:428","`DoubleEndedIterator`":"2:7472:121","str::rsplit_terminator":"2:12392:31904"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43410:8471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:336":{"id":"0:336","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,26],"end":[709,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2320:190","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:338:631"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2788:231-0:270:1824":{"id":"a:2:2788:231-0:270:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2788:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:210:1739":{"id":"0:210:1739","crate_id":0,"name":"Version","span":{"filename":"src/lib.rs","begin":[149,4],"end":[149,11]},"visibility":"default","docs":"Invalid byte in HTTP version.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:222:689":{"id":"0:222:689","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[134,37],"end":[134,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9436:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9417:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:100:689":{"id":"0:100:689","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[186,4],"end":[188,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9436:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9417:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12392:31904":{"id":"2:12392:31904","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12032:8440","str::split":"2:12380:26995","prim@char":"1:12038:428","str::split_terminator":"2:12389:31903"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43428:8470","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12052:8456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:683:8029":{"id":"5:683:8029","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2562-0:223:1751":{"id":"b:2:2562-0:223:1751","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2539:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2536:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2565:7967"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:132:964":{"id":"0:132:964","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[461,4],"end":[468,5]},"visibility":"public","docs":"Creates a new Request, using a slice of headers you allocate.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["headers",{"borrowed_ref":{"lifetime":"'h","mutable":true,"type":{"slice":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2577-0:320:1830":{"id":"b:2:2577-0:320:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2536:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2546:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2580:128","2:2581:1528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2771:223-0:270:1824":{"id":"a:2:2771:223-0:270:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2771:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,20],"end":[446,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2320:190","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:294:631"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12442:31918":{"id":"2:12442:31918","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12038:428","self::pattern":"2:12032:8440"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:300:1158":{"id":"0:300:1158","crate_id":0,"name":"reason","span":{"filename":"src/lib.rs","begin":[610,4],"end":[610,33]},"visibility":"public","docs":"The response reason-phrase, such as `OK`.\n\nContains an empty string if the reason-phrase was missing or contained invalid characters.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41398:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'buf","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}},"0:230":{"id":"0:230","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,27],"end":[182,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2782:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2256-0:320:1830":{"id":"b:2:2256-0:320:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2250:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2258:2591"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:313":{"id":"0:313","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,20],"end":[601,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2781:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12362:30484":{"id":"2:12362:30484","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Za≈º√≥≈Çƒá gƒô≈õlƒÖ ja≈∫≈Ñ\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43652:8476","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2788:231-0:295:1861":{"id":"a:2:2788:231-0:295:1861","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2788:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12363:1972":{"id":"2:12363:1972","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12038:428","self::pattern":"2:12032:8440"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8556:7750-0:233:1733":{"id":"a:2:8556:7750-0:233:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8556:7750","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8556:7750","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8556:7750-0:258:1774":{"id":"a:2:8556:7750-0:258:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8556:7750","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2572-0:320:1830":{"id":"b:2:2572-0:320:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2546:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2542:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2575:128","2:2576:1529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:73:2389":{"id":"0:73:2389","crate_id":0,"name":"runtime","span":{"filename":"src/simd/mod.rs","begin":[91,0],"end":[91,11]},"visibility":{"restricted":{"parent":"0:47:1340","path":"::simd"}},"docs":"Runtime detection of simd features. Used when the build script\ndoesn't notice any target features at build time.\n\nWhile `is_x86_feature_detected!` has it's own caching built-in,\nat least in 1.27.0, the functions don't inline, leaving using it\nactually *slower* than just using the scalar fallback.","links":{},"attrs":["#[cfg(all(httparse_simd,\nnot(any(httparse_simd_target_feature_sse42,\nhttparse_simd_target_feature_avx2,)),\nany(target_arch = \"x86\", target_arch = \"x86_64\",),))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":true}}},"0:219":{"id":"0:219","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,33],"end":[134,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2325:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12386:26999":{"id":"2:12386:26999","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12032:8440","`DoubleEndedIterator`":"2:7472:121","prim@char":"1:12038:428","str::split":"2:12380:26995"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43378:8077","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12052:8456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:680-0:197:128":{"id":"b:5:680-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2272:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:8028","5:683:8029","5:684:8030"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:324":{"id":"0:324","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,9],"end":[709,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2783:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,22],"end":[134,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2320:190","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:217:631"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12347:2374":{"id":"2:12347:2374","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"üóª‚ààüåè\";\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10126:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10126:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"5:5511:1915":{"id":"5:5511:1915","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7449:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:316":{"id":"0:316","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,20],"end":[601,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2320:190","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:319:631"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:331":{"id":"0:331","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,22],"end":[709,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2325:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2788:231-0:258:1774":{"id":"a:2:2788:231-0:258:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2788:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2256-0:295:1861":{"id":"b:2:2256-0:295:1861","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2250:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2258:2591"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:305:689":{"id":"0:305:689","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[601,9],"end":[601,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9436:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9417:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8556:7750-0:295:1861":{"id":"a:2:8556:7750-0:295:1861","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8556:7750","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12332:7974":{"id":"2:12332:7974","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:214:432":{"id":"0:214:432","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[134,15],"end":[134,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2577-0:270:1824":{"id":"b:2:2577-0:270:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2536:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2546:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2580:128","2:2581:1528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2828:7760-0:320:1830":{"id":"a:2:2828:7760-0:320:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2828:7760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12376:7973":{"id":"2:12376:7973","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('√©'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41400:181","prim@char":"1:12038:428","self::pattern":"2:12032:8440"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41398:183","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12052:8456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2788:231-0:197:128":{"id":"a:2:2788:231-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2788:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5528:26731":{"id":"5:5528:26731","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12453:26729"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2259-0:223:1751":{"id":"b:2:2259-0:223:1751","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2253:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2261:24516"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12395:27001":{"id":"2:12395:27001","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12038:428","self::pattern":"2:12032:8440","str::rsplitn":"2:12398:27003"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43464:8075","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:204:1733":{"id":"0:204:1733","crate_id":0,"name":"Status","span":{"filename":"src/lib.rs","begin":[143,4],"end":[143,10]},"visibility":"default","docs":"Invalid byte in Response status.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2572-0:270:1824":{"id":"b:2:2572-0:270:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2546:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2542:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2575:128","2:2576:1529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:238:1764":{"id":"0:238:1764","crate_id":0,"name":"Partial","span":{"filename":"src/lib.rs","begin":[208,4],"end":[208,11]},"visibility":"default","docs":"A partial result.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2259-0:233:1733":{"id":"b:2:2259-0:233:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2253:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2261:24516"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12360:13067":{"id":"2:12360:13067","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43614:8467","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,26],"end":[203,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2781:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:126:1863":{"id":"0:126:1863","crate_id":0,"name":"parse_response_with_uninit_headers","span":{"filename":"src/lib.rs","begin":[411,4],"end":[418,5]},"visibility":"public","docs":"Parses a response with the given config and buffer for headers","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["response",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":"'buf","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["headers",{"borrowed_ref":{"lifetime":"'headers","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30149:1701","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:212","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:129":{"id":"0:129","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[458,0],"end":[555,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"items":["0:132:964","0:139:1914","0:141:1919"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3407-0:320:1830":{"id":"b:2:3407-0:320:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3405:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3409:1542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:139:1914":{"id":"0:139:1914","crate_id":0,"name":"parse_with_uninit_headers","span":{"filename":"src/lib.rs","begin":[523,4],"end":[529,5]},"visibility":"public","docs":"Try to parse a buffer of bytes into the Request,\nexcept use an uninitialized slice of `Header`s.\n\nFor more information, see `parse`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["headers",{"borrowed_ref":{"lifetime":"'h","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30149:1701","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:212","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12334:31897":{"id":"2:12334:31897","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji üßë‚Äçüî¨ (scientist) could be split so that the string only\nincludes üßë (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:254:631":{"id":"0:254:631","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[203,26],"end":[203,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12401:31905":{"id":"2:12401:31905","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41398:183","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2562-0:270:1824":{"id":"b:2:2562-0:270:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2539:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2536:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2565:7967"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:95":{"id":"0:95","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[167,0],"end":[171,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9466:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:96:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:269:60":{"id":"0:269:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[242,23],"end":[242,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ParserConfig","id":"0:258:1774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:151":{"id":"0:151","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[722,0],"end":[733,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9461:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:153:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12372:8013":{"id":"2:12372:8013","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('√©'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41400:181","prim@char":"1:12038:428","self::pattern":"2:12032:8440"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41398:183","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,22],"end":[134,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2781:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3407-0:197:128":{"id":"b:2:3407-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3405:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3409:1542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:106:1768":{"id":"0:106:1768","crate_id":0,"name":"is_partial","span":{"filename":"src/lib.rs","begin":[223,4],"end":[228,5]},"visibility":"public","docs":"Convenience method to check if status is partial.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:114:1776":{"id":"0:114:1776","crate_id":0,"name":"allow_obsolete_multiline_headers_in_responses","span":{"filename":"src/lib.rs","begin":[331,4],"end":[337,5]},"visibility":"public","docs":"Sets whether obsolete multiline headers should be allowed.\n\nThis is an obsolete part of HTTP/1. Use at your own risk. If you are\nbuilding an HTTP library, the newlines (`\\r` and `\\n`) should be\nreplaced by spaces before handing the header value to the user.\n\n# Example\n\n```rust\nlet buf = b\"HTTP/1.1 200 OK\\r\\nFolded-Header: hello\\r\\n there \\r\\n\\r\\n\";\nlet mut headers = [httparse::EMPTY_HEADER; 16];\nlet mut response = httparse::Response::new(&mut headers);\n\nlet res = httparse::ParserConfig::default()\n    .allow_obsolete_multiline_headers_in_responses(true)\n    .parse_response(&mut response, buf);\n\nassert_eq!(res, Ok(httparse::Status::Complete(buf.len())));\n\nassert_eq!(response.headers.len(), 1);\nassert_eq!(response.headers[0].name, \"Folded-Header\");\nassert_eq!(response.headers[0].value, b\"hello\\r\\n there\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:275:1621":{"id":"0:275:1621","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[453,4],"end":[453,27]},"visibility":"public","docs":"The request minor version, such as `1` for `HTTP/1.1`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41398:183","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}},"b:2:2577-0:258:1774":{"id":"b:2:2577-0:258:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2536:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2546:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:128","2:2581:1528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:299:1928":{"id":"0:299:1928","crate_id":0,"name":"code","span":{"filename":"src/lib.rs","begin":[606,4],"end":[606,25]},"visibility":"public","docs":"The response code, such as `200`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41398:183","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u16"}}],"bindings":[]}}}}}},"b:2:3407-0:233:1733":{"id":"b:2:3407-0:233:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3405:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3409:1542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2572-0:295:1861":{"id":"b:2:2572-0:295:1861","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2546:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2542:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2575:128","2:2576:1529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:338:631":{"id":"0:338:631","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[709,26],"end":[709,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12345:13088":{"id":"2:12345:13088","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41400:181"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41398:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10126:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10126:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12354:26988":{"id":"2:12354:26988","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-L√∂f\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-L√∂f\", last);\n}\nassert_eq!(\"PER Martin-L√∂f\", s);\n```","links":{"str::split_at":"2:12353:26987"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12383:26997":{"id":"2:12383:26997","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12038:428","self::pattern":"2:12032:8440"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11848:8090","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12421:31911":{"id":"2:12421:31911","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊¢') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12425:31913":{"id":"2:12425:31913","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™\";\nassert!(Some('◊¢') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5514:32578":{"id":"5:5514:32578","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7449:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5525:32580":{"id":"5:5525:32580","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tsch√º√ü\";\n\nassert_eq!(\"TSCH√úSS\", s.to_uppercase());\n```","links":{"`String`":"5:7449:227"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[242,9],"end":[242,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2272:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:265:432"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:252":{"id":"0:252","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,26],"end":[203,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2320:190","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2320:190","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:254:631"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2562-0:233:1733":{"id":"b:2:2562-0:233:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2539:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2536:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2565:7967"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2261:24516":{"id":"2:2261:24516","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12404:31906":{"id":"2:12404:31906","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41398:183","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12052:8456","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2828:7760-0:233:1733":{"id":"a:2:2828:7760-0:233:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2828:7760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2828:7760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2828:7760-0:197:128":{"id":"a:2:2828:7760-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2828:7760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2828:7760-0:270:1824":{"id":"a:2:2828:7760-0:270:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2828:7760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3407-0:295:1861":{"id":"b:2:3407-0:295:1861","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3405:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:3409:1542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2259-0:320:1830":{"id":"b:2:2259-0:320:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2253:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2261:24516"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:98:1749":{"id":"0:98:1749","crate_id":0,"name":"description","span":{"filename":"src/lib.rs","begin":[175,4],"end":[177,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2562-0:258:1774":{"id":"b:2:2562-0:258:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2539:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2536:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2565:7967"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:270:1824":{"id":"0:270:1824","crate_id":0,"name":"Request","span":{"filename":"src/lib.rs","begin":[447,0],"end":[456,1]},"visibility":"public","docs":"A parsed Request.\n\nThe optional values will be `None` if a parse was not complete, and did not\nparse the associated property. This allows you to inspect the parts that\ncould be parsed, before reading more, in case you wish to exit early.\n\n# Example\n\n```no_run\nlet buf = b\"GET /404 HTTP/1.1\\r\\nHost:\";\nlet mut headers = [httparse::EMPTY_HEADER; 16];\nlet mut req = httparse::Request::new(&mut headers);\nlet res = req.parse(buf).unwrap();\nif res.is_partial() {\n    match req.path {\n        Some(ref path) => {\n            // check router for path.\n            // /404 doesn't exist? we could stop parsing\n        },\n        None => {\n            // must read more and parse again\n        }\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:273:1884","0:274:1067","0:275:1621","0:276:1829"],"fields_stripped":false}},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:129","a:2:2788:231-0:270:1824","a:2:2828:7760-0:270:1824","a:2:8557:7749-0:270:1824","a:2:8556:7750-0:270:1824","a:2:2771:223-0:270:1824","b:2:2566-0:270:1824","b:2:2572-0:270:1824","b:2:2259-0:270:1824","b:2:2562-0:270:1824","b:2:2256-0:270:1824","b:2:2577-0:270:1824","b:2:3407-0:270:1824","0:284","0:281","0:277","0:291","0:288"]}}},"2:2258:2591":{"id":"2:2258:2591","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2581:1528":{"id":"2:2581:1528","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41543:212","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2546:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3409:1542":{"id":"2:3409:1542","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39245:9000","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:295:1861":{"id":"b:2:2566-0:295:1861","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2539:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2568:715"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2562-0:295:1861":{"id":"b:2:2562-0:295:1861","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2539:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2536:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2565:7967"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:301:1829":{"id":"0:301:1829","crate_id":0,"name":"headers","span":{"filename":"src/lib.rs","begin":[612,4],"end":[612,45]},"visibility":"public","docs":"The response headers.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'headers","mutable":true,"type":{"slice":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}}}}},"2:12357:1893":{"id":"2:12357:1893","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43346:1702","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[242,16],"end":[242,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9461:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12380:26995":{"id":"2:12380:26995","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12032:8440","`DoubleEndedIterator`":"2:7472:121","prim@char":"1:12038:428","str::split_whitespace":"2:12358:30502","str::rsplit":"2:12386:26999"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43360:8073","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8556:7750-0:270:1824":{"id":"a:2:8556:7750-0:270:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8556:7750","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:258:1774":{"id":"0:258:1774","crate_id":0,"name":"ParserConfig","span":{"filename":"src/lib.rs","begin":[243,0],"end":[249,1]},"visibility":"public","docs":"Parser configuration.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:108","a:2:2788:231-0:258:1774","a:2:2828:7760-0:258:1774","a:2:8557:7749-0:258:1774","a:2:8556:7750-0:258:1774","a:2:2771:223-0:258:1774","b:2:2566-0:258:1774","b:2:2572-0:258:1774","b:2:2259-0:258:1774","b:2:2562-0:258:1774","b:2:2256-0:258:1774","b:2:2577-0:258:1774","b:2:3407-0:258:1774","b:5:680-0:258:1774","0:264","0:268","0:266"]}}},"b:2:2566-0:270:1824":{"id":"b:2:2566-0:270:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2539:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2568:715"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:82-0:73:2389":{"id":"0:82-0:73:2389","crate_id":0,"name":null,"span":{"filename":"src/simd/mod.rs","begin":[174,0],"end":[174,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(all(httparse_simd,\nnot(any(httparse_simd_target_feature_sse42,\nhttparse_simd_target_feature_avx2,)),\nany(target_arch = \"x86\", target_arch = \"x86_64\",),))]"],"deprecation":null,"inner":{"import":{"source":"self::runtime","name":"runtime","id":"0:73:2389","glob":true}}},"a:2:2771:223-0:197:128":{"id":"a:2:2771:223-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2771:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:226:689":{"id":"0:226:689","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[182,9],"end":[182,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9436:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9417:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12454:26728":{"id":"2:12454:26728","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GR√ú√üE, J√úRGEN ‚ù§\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"gr√ú√üe, j√úrgen ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12358:30502":{"id":"2:12358:30502","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12359:30511"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43634:8468","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:320:1830":{"id":"b:2:2566-0:320:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2539:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2568:715"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2771:223-0:295:1861":{"id":"a:2:2771:223-0:295:1861","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2771:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:198:1727":{"id":"0:198:1727","crate_id":0,"name":"HeaderName","span":{"filename":"src/lib.rs","begin":[137,4],"end":[137,14]},"visibility":"default","docs":"Invalid byte in header name.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2566-0:233:1733":{"id":"b:2:2566-0:233:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2539:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2568:715"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[242,23],"end":[242,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2613:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:269:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,20],"end":[446,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2781:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2577-0:233:1733":{"id":"b:2:2577-0:233:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2536:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2546:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2580:128","2:2581:1528"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12419:31910":{"id":"2:12419:31910","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:197:128":{"id":"b:2:2566-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2539:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2568:715"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2572-0:233:1733":{"id":"b:2:2572-0:233:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2546:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2542:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2575:128","2:2576:1529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12407:2601":{"id":"2:12407:2601","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12032:8440","`DoubleEndedIterator`":"2:7472:121","prim@char":"1:12038:428","str::rmatches":"2:12410:31907"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43564:8472","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2256-0:223:1751":{"id":"b:2:2256-0:223:1751","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2250:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2258:2591"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2256-0:233:1733":{"id":"b:2:2256-0:233:1733","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2250:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2258:2591"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:101:212":{"id":"0:101:212","crate_id":0,"name":"Result","span":{"filename":"src/lib.rs","begin":[196,0],"end":[196,54]},"visibility":"public","docs":"A Result of any parsing action.\n\nIf the input is invalid, an `Error` will be returned. Note that incomplete\ndata is not considered invalid, and so will not return an error, but rather\na `Ok(Status::Partial)`.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"result::Result","id":"2:41543:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"b:2:2572-0:197:128":{"id":"b:2:2572-0:197:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2546:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2542:241","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2575:128","2:2576:1529"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:122:1779":{"id":"0:122:1779","crate_id":0,"name":"ignore_invalid_headers_in_responses","span":{"filename":"src/lib.rs","begin":[393,4],"end":[399,5]},"visibility":"public","docs":"Sets whether invalid header lines should be silently ignored in responses.\n\nThis mimicks the behaviour of major browsers. You probably don't want this.\nYou should only want this if you are implementing a proxy whose main\npurpose is to sit in front of browsers whose users access arbitrary content\nwhich may be malformed, and they expect everything that works without\nthe proxy to keep working with the proxy.\n\nThis option will prevent `ParserConfig::parse_response` from returning\nan error encountered when parsing a header, except if the error was caused\nby the character NUL (ASCII code 0), as Chrome specifically always reject\nthose, or if the error was caused by a lone character `\\r`, as Firefox and\nChrome behave differently in that case.\n\nThe ignorable errors are:\n* empty header names;\n* characters that are not allowed in header names, except for `\\0` and `\\r`;\n* when `allow_spaces_after_header_name_in_responses` is not enabled,\n  spaces and tabs between the header name and the colon;\n* missing colon between header name and value;\n* when `allow_obsolete_multiline_headers_in_responses` is not enabled,\n  headers using obsolete line folding.\n* characters that are not allowed in header values except for `\\0` and `\\r`.\n\nIf an ignorable error is encountered, the parser tries to find the next\nline in the input to resume parsing the rest of the headers. As lines\ncontributing to a header using obsolete line folding always start\nwith whitespace, those will be ignored too. An error will be emitted\nnonetheless if it finds `\\0` or a lone `\\r` while looking for the\nnext line.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:274:1067":{"id":"0:274:1067","crate_id":0,"name":"path","span":{"filename":"src/lib.rs","begin":[451,4],"end":[451,31]},"visibility":"public","docs":"The request path, such as `/about-us`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41398:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'buf","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}},"b:2:3407-0:270:1824":{"id":"b:2:3407-0:270:1824","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3405:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:3409:1542"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:208:1737":{"id":"0:208:1737","crate_id":0,"name":"TooManyHeaders","span":{"filename":"src/lib.rs","begin":[147,4],"end":[147,18]},"visibility":"default","docs":"Parsed more headers than provided buffer can contain.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12457:13293":{"id":"2:12457:13293","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4556:13293"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43668:8478","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2259-0:295:1861":{"id":"b:2:2259-0:295:1861","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2253:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2261:24516"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:329":{"id":"0:329","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,22],"end":[709,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2782:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:148:1919":{"id":"0:148:1919","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[628,4],"end":[630,5]},"visibility":"public","docs":"Try to parse a buffer of bytes into this `Response`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:212","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:116:1820":{"id":"0:116:1820","crate_id":0,"name":"parse_request","span":{"filename":"src/lib.rs","begin":[345,4],"end":[351,5]},"visibility":"public","docs":"Parses a request with the given config.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["request",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":"'buf","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:212","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2259-0:258:1774":{"id":"b:2:2259-0:258:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2778:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2253:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1774","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2261:24516"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:235:1762":{"id":"0:235:1762","crate_id":0,"name":"Complete","span":{"filename":"src/lib.rs","begin":[206,4],"end":[206,15]},"visibility":"default","docs":"The completed result.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:237:1663"]},"discriminant":null}}},"0:244:432":{"id":"0:244:432","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[203,15],"end":[203,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Status","id":"0:233:1733","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:206:1735":{"id":"0:206:1735","crate_id":0,"name":"Token","span":{"filename":"src/lib.rs","begin":[145,4],"end":[145,9]},"visibility":"default","docs":"Invalid byte where token is required.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:5:680-0:320:1830":{"id":"b:5:680-0:320:1830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2272:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:234","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:682:8028","5:683:8029","5:684:8030"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:119:1828":{"id":"0:119:1828","crate_id":0,"name":"parse_request_with_uninit_headers","span":{"filename":"src/lib.rs","begin":[354,4],"end":[361,5]},"visibility":"public","docs":"Parses a request with the given config and buffer for headers","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["request",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":"'buf","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["headers",{"borrowed_ref":{"lifetime":"'headers","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30149:1701","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:212","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:306":{"id":"0:306","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,16],"end":[601,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2782:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2575:128":{"id":"2:2575:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2546:240","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:326":{"id":"0:326","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,15],"end":[709,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2272:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:328:432"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:281":{"id":"0:281","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,16],"end":[446,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2782:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1824","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12336:31898":{"id":"2:12336:31898","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°üíõ\");\n```","links":{"str::floor_char_boundary":"2:12334:31897"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12343:2362":{"id":"2:12343:2362","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"üóª‚ààüåè\");\n\nassert_eq!(Some(\"üóª\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41400:181"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41398:183","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10126:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10126:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:123:1859":{"id":"0:123:1859","crate_id":0,"name":"parse_response","span":{"filename":"src/lib.rs","begin":[402,4],"end":[408,5]},"visibility":"public","docs":"Parses a response with the given config.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["response",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Response","id":"0:295:1861","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":"'buf","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:212","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12359:30511":{"id":"2:12359:30511","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12358:30502"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43643:8480","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12427:31915":{"id":"2:12427:31915","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12038:428","self::pattern":"2:12032:8440"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12037:8454","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12057:8455","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:154:1949":{"id":"0:154:1949","crate_id":0,"name":"EMPTY_HEADER","span":{"filename":"src/lib.rs","begin":[743,0],"end":[743,74]},"visibility":"public","docs":"An empty header, useful for constructing a `Header` array to pass in for\nparsing.\n\n# Example\n\n```\nlet headers = [httparse::EMPTY_HEADER; 64];\n```","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"2:12448:1919":{"id":"2:12448:1919","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11993:127","`FromStr`":"2:11992:8464"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41543:212","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11992:8464","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11992:8464","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12458:31921":{"id":"2:12458:31921","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4553:31921"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43677:8479","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:298:1621":{"id":"0:298:1621","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[604,4],"end":[604,27]},"visibility":"public","docs":"The response minor version, such as `1` for `HTTP/1.1`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41398:183","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}},"5:5526:32581":{"id":"5:5526:32581","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:7766","`String`":"5:7449:227"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:7766","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7182:8697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7449:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12426:31914":{"id":"2:12426:31914","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:276:1829":{"id":"0:276:1829","crate_id":0,"name":"headers","span":{"filename":"src/lib.rs","begin":[455,4],"end":[455,45]},"visibility":"public","docs":"The request headers.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'headers","mutable":true,"type":{"slice":{"resolved_path":{"name":"Header","id":"0:320:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}}}}},"0:267:689":{"id":"0:267:689","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[242,16],"end":[242,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9436:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9417:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,9],"end":[182,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9461:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1751","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:226:689"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:320:1830":{"id":"0:320:1830","crate_id":0,"name":"Header","span":{"filename":"src/lib.rs","begin":[710,0],"end":[720,1]},"visibility":"public","docs":"Represents a parsed header.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:322:942","0:323:1781"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2788:231-0:320:1830","a:2:2828:7760-0:320:1830","a:2:8557:7749-0:320:1830","a:2:8556:7750-0:320:1830","a:2:2771:223-0:320:1830","b:2:2566-0:320:1830","b:2:2572-0:320:1830","b:2:2259-0:320:1830","b:2:2562-0:320:1830","b:2:2256-0:320:1830","b:2:2577-0:320:1830","b:2:3407-0:320:1830","b:5:680-0:320:1830","0:334","0:331","0:324","0:151","0:326","0:329","0:336"]}}},"2:12351:31900":{"id":"2:12351:31900","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nunsafe {\n    assert_eq!(\"L√∂we ËÄÅËôé L√©opard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12044:1448","str::slice_mut_unchecked":"2:12352:31901","crate::ops::Index":"2:3068:13322"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12352:31901":{"id":"2:12352:31901","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12044:1448","crate::ops::IndexMut":"2:3072:13323","str::slice_unchecked":"2:12351:31900"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"6:4756:11353":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:40084:12741":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"1:10995:8587":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"2:41636:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:12051:764":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"16:6156:12080":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:12074:10259":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:40133:12197":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"16:5866:9378":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:43166:8079":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:4703:13477":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"17:10672:12598":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"6:5964:11648":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"6:7555:11909":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:14335:10837":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:2782:228":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:40202:12207":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:45494:9045":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:9169:12832":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"16:4497:9360":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"16:2766:9618":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"11:2168:10925":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:12052:8456":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"16:2881:9246":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:7397:13754":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"15:394:19578":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"1:12043:1418":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:40011:30254":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:10534:12770":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"5:3330:9926":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"5:4032:9898":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"6:4498:11273":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:40225:12211":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"6:1545:11035":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:13101:10464":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"15:306:13066":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:31957:8378":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"2:2943:13773":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:2875:13519":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:40164:12201":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"6:4330:11183":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:44294:197":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"16:7768:9567":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"16:7677:200":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:46531:8809":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:21447:13532":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:9531:33260":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:2171:13784":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"2:7430:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:9172:9635":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"16:4921:9179":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"6:6753:11811":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:8594:20523":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:14001:10730":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"6:4931:11446":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"16:2832:9193":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"16:4949:9628":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"5:1473:12149":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:45416:8951":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:31964:12187":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"1:12057:1549":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"5:5362:13646":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:6147:9969":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:14378:10853":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:11687:20548":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"18:707:8457":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"5:1011:9898":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:2909:13768":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:10126:225":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"9:330:10933":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:12970:10444":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"11:2060:12705":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:11244:9718":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"5:5318:9898":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:13611:10648":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:21199:13783":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"2:20863:30152":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:4909:13475":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:8390:7742":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:2855:9259":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:2836:7948":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"17:12373:10316":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:12059:1547":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:14100:10757":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:41831:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"6:1696:11137":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:40302:9277":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"16:2472:9180":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:4421:7680":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"14:165:19551":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"5:4348:248":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:1750:11928":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:1076:12708":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"6:4415:11237":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:46039:8941":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"6:1690:11134":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:13567:10617":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"0:197:128":{"crate_id":0,"path":["httparse","Error"],"kind":"enum"},"16:7436:9209":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:534:9972":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:9564:12555":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:13298:10502":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:3529:13401":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"16:4745:9486":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"6:5858:11586":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"16:2574:9323":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"6:4856:11400":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"1:6644:219":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:40234:12212":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"16:7474:12678":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:2409:2508":{"crate_id":1,"path":["std","io"],"kind":"module"},"1:589:13292":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:13906:10706":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"6:7472:11899":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"6:474:10938":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"16:2722:9191":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:6791:7986":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"6:4370:11216":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:2536:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:46685:8954":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:5872:11597":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"5:4393:9915":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"5:1118:33219":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:9127:689":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"6:4570:11312":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:11822:10009":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:10726:12605":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:41516:7747":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"6:6843:11870":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:2209:12549":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:14420:10859":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:8335:11769":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"5:3217:32909":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:9137:9762":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"6:5909:11611":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"5:5128:9921":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"6:4558:11303":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"6:1702:11138":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"11:447:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"16:2696:9229":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"16:8239:9237":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"6:4422:11241":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:8231:12816":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"16:6332:9563":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:9921:12562":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:46114:8960":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:8765:20536":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"5:3183:32908":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:42663:12236":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:41247:8724":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:22254:30259":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"6:4881:1027":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"17:9070:9234":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"6:6859:11876":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:14110:10760":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"5:7245:7978":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:11376:8585":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:45971:9068":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:20878:30154":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"5:6637:9898":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:30149:1701":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"5:7412:9085":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"18:538:10105":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"18:681:12022":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:10599:8072":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"6:482:10943":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:11327:12066":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:8242:13418":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:9328:1702":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:8498:13488":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"9:450:19468":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:8807:188":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:11788:1830":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:10977:25935":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:11951:10233":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:40714:11934":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"0:204:1733":{"crate_id":0,"path":["httparse","Error","Status"],"kind":"variant"},"0:238:1764":{"crate_id":0,"path":["httparse","Status","Partial"],"kind":"variant"},"2:31903:2650":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:44286:213":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:40666:12226":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:7886:8397":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"6:579:10997":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:12945:10441":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:8331:12820":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"16:5727:9188":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:10186:12036":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"6:506:10952":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:7638:8671":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"5:2966:33225":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:2325:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:12997:10447":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:7365:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"16:2864:9530":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:11987:8590":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"6:5838:11573":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:44111:8447":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"5:1672:9898":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"16:5634:12071":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"5:1482:12709":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"6:1569:11052":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:21014:13383":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"14:7:12691":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:47217:8706":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"0:270:1824":{"crate_id":0,"path":["httparse","Request"],"kind":"struct"},"2:45394:8985":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:1590:12153":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:12437:10345":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"16:6583:12098":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"16:8097:12132":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:43744:13660":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"6:4874:11411":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:3846:12779":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"6:5070:11511":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"16:7391:20483":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"5:2131:9909":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"5:7425:9089":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:45370:8975":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"11:1838:12150":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"11:1663:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:4622:13709":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"11:1027:19547":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:12136:10267":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"6:1681:11128":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:6680:11788":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:44087:8450":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"16:6960:12667":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"17:12452:10349":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"6:4889:11416":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"11:1121:12708":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:14308:10829":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:43360:8073":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:44367:8952":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"0:208:1737":{"crate_id":0,"path":["httparse","Error","TooManyHeaders"],"kind":"variant"},"17:11381:10198":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:9939:9964":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"5:7529:9926":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"6:1733:11150":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"6:6017:11673":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:13816:10683":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"17:12280:10308":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:1921:11931":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:31939:12738":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:10443:8091":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:8665:8454":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:3115:12768":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"1:6163:9985":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:8205:12222":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:14090:10754":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:3166:8063":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:12925:13311":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"17:10440:12586":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"1:7764:12738":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:43634:8468":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:13554:10610":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:11084:8088":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"5:3568:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:45462:8965":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"6:4965:11463":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:13758:10669":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:46063:8683":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:646:13295":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"9:486:19467":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:22177:30266":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"0:320:1830":{"crate_id":0,"path":["httparse","Header"],"kind":"struct"},"2:4830:818":{"crate_id":2,"path":["core","iter"],"kind":"module"},"11:2201:9079":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"5:3178:12151":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:2788:231":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:9445:12553":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:558:12749":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:40184:12204":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:41909:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:41483:7746":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"11:1068:12706":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:10250:13495":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"2:41586:8069":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:3303:12774":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"7:32:19454":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:14145:10768":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"16:2788:9332":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:43677:8479":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:12045:1532":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:8114:12810":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"2:22165:8984":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:12039:1567":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:5503:12790":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:12750:10394":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:42455:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"6:4537:11294":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"16:7792:20485":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:7760:12803":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:2539:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:22796:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:6928:13080":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:5995:9508":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:9711:33254":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:10012:10137":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"16:6545:9591":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"11:1818:8069":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:2250:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:2879:13764":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:10557:8075":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"6:4343:11193":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:8557:7749":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:5574:9564":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"6:7532:11903":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"1:12004:12952":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"5:4363:9917":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"6:7281:11886":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:7888:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:43330:8466":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"11:644:8070":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"16:6687:12102":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:9201:11961":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"16:2744:9328":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"13:110:8246":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"17:11086:12617":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:8794:20537":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"16:5403:9234":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:13922:10710":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"6:6598:11753":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:7023:9992":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:9152:12275":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"0:202:1731":{"crate_id":0,"path":["httparse","Error","NewLine"],"kind":"variant"},"16:3830:9362":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:45795:8700":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:43156:8067":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:21762:8064":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:853:8070":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:10840:28551":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"17:9617:33257":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"11:1611:9893":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:13244:10488":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:10520:12041":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:10447:12589":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:45524:8677":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:4264:209":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:7865:11952":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"6:4940:11452":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"0:164:1992":{"crate_id":0,"path":["httparse","parse_headers"],"kind":"function"},"2:43614:8467":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:9607:12556":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"11:1501:19548":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:5781:12795":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:505:9909":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"6:5784:11547":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:47467:9070":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:39245:9000":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:11719:20549":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"5:1374:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:9912:12561":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:45895:8997":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"18:766:24505":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:10831:11954":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"17:9051:20522":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"16:6467:9385":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:1579:12151":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:44099:8451":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:12044:1448":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"6:5845:11577":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:11626:12291":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:7893:13753":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"5:4426:9917":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:12870:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"16:6041:20477":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:5826:9980":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:1931:674":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"1:3679:13420":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"16:7597:33246":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"6:6165:11718":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:10547:12043":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:11547:9675":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"5:1138:13079":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"15:327:12928":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:8925:13512":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"5:2962:11925":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:11048:12611":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:2368:13368":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:11544:12779":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"5:7253:200":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:4801:9978":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:8567:8584":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"14:160:12691":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:43564:8472":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:9026:12830":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"1:3391:12230":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:14083:10753":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:25777:250":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:7726:13299":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:43659:8477":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"18:96:13055":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"5:1442:7978":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"6:1595:11068":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:13085:10460":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:12810:10402":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"6:5886:11598":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:6427:8036":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:40480:12224":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"5:6769:9924":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:9725:8698":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"16:7660:9387":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:1044:12120":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:9099:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:4019:12728":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:12422:10341":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"5:1102:13078":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:10475:9999":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"16:3600:10900":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"11:2194:10929":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:2781:229":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"17:9455:33253":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:1564:9910":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"6:4812:11382":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"6:6616:11760":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:13259:10492":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:3188:29682":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:43304:8463":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"18:481:12017":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:9685:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:39848:8962":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:907:9926":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"1:8458:11946":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:6979:13749":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:21238:13527":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"5:7221:9907":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:10747:12845":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"5:1273:12705":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:8550:8069":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"6:6003:11662":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"6:119:14142":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"17:582:9657":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:2783:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"16:3655:9734":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:21315:13383":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:3250:13691":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"11:723:12148":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"16:5939:9230":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:10420:9695":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:13792:10681":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:2914:9267":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"6:4628:11316":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:43087:12746":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"6:500:10949":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:863:7978":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:11761:9672":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:11389:12624":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:7567:11911":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"2:46719:8767":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:6188:12172":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:44350:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"16:8195:12139":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:12737:10392":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:1736:13794":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"6:4919:11437":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"6:6634:11769":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"16:7462:10909":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:2923:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:42157:8367":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"6:547:10981":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:39206:8061":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:44379:8976":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:641:12752":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:47724:7648":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:45647:9078":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"16:2284:19587":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:13710:10660":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"6:4403:11228":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:10766:12276":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"2:2845:13518":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:2638:12767":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:3935:9915":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"1:8819:8580":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"5:895:8069":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"6:7259:11885":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"7:0:1597":{"crate_id":7,"path":["unwind"],"kind":"module"},"6:6086:11692":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:10811:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:10298:8070":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:9114:8586":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:40466:12223":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"17:11872:10214":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:932:13310":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:5743:12077":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:40695:12230":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:22631:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:9481:12804":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"5:3735:12716":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:42150:8368":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:8218:8073":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:4154:8961":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:3019:7763":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:22141:9059":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"6:7304:11898":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:45350:8701":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:3244:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:955:12702":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"16:6901:9570":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"6:4589:11313":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:5027:11490":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"6:7608:11921":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:40174:12203":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:3514:9910":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"17:13739:10668":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:9104:220":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:1429:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:7999:12808":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:43482:8071":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:8895:20540":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:8871:7978":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:13546:10607":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"1:7848:9696":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"6:526:10969":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"5:6306:13613":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"6:4864:11405":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"16:7621:20484":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:7657:12801":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:3269:30737":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"16:5419:9627":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"6:4652:11318":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"18:599:33265":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:4051:13431":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:4638:11780":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:40267:12215":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:12061:1607":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"16:6513:12088":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"16:6261:12663":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"6:573:10994":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:11848:8090":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:1986:186":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:5976:11653":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:6250:8556":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"5:2461:9092":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:2598:12766":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:40456:12222":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:45702:8999":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"16:7128:8589":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"8:0:2494":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:12711:10389":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:10561:12044":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"2:21421:13523":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:8978:12824":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"1:483:9971":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:7711:13298":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:47689:7646":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:8195:12197":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:40689:12228":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"6:6805:11851":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"6:5929:11627":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:40326:12219":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"16:8154:12687":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:38979:8399":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"5:2141:12155":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:7929:8665":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"16:7582:10911":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"1:11319:12850":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"17:11448:20546":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"6:4465:11257":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"16:2618:9531":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"16:5798:9489":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"5:4985:9915":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:4037:13429":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:10274:8069":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:2840:13516":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:9039:8589":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:39920:8478":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:11587:1448":{"crate_id":2,"path":["core","str"],"kind":"module"},"17:12959:10443":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"11:1858:12153":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"17:10637:12051":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"1:1983:187":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:41207:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"17:1075:12543":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:12046:8457":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:11388:12288":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:4967:7738":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"5:2223:31767":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"11:793:12709":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:20880:30150":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:9474:8370":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"5:1523:12715":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:12698:10387":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:42164:8369":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:9945:10130":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:2012:12545":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"11:119:9888":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:12833:9969":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"6:5827:11565":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"16:7492:12121":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:4031:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:30243:30244":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"2:43346:1702":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"6:1709:11141":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:11507:20547":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:2494:2651":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:9896:20557":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"18:755:12033":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"17:9998:9700":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"16:2380:9505":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:11191:9763":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"1:7732:12270":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"1:10537:12772":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"5:1503:12695":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:1633:604":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:12056:1548":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:41549:127":{"crate_id":2,"path":["httparse","Result","Err"],"kind":"variant"},"1:12020:25927":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"6:4391:11224":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:22238:30248":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:11813:8485":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:6431:12797":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:400:12541":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:11313:12284":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:3185:28744":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:6981:12881":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:47669:2415":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:4766:11359":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:6596:13509":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"1:6540:12798":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:11337:20667":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"6:7561:11910":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"5:3800:9926":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"2:21016:13528":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"17:11639:9763":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"6:6180:11729":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:39980:8986":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:43336:8465":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"16:8294:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:7930:30720":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:4347:8378":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"6:1673:11127":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:12052:765":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:44115:8676":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:45440:8702":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:4401:8379":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"6:5017:11485":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:2159:605":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"17:0:2502":{"crate_id":17,"path":["object"],"kind":"module"},"17:14460:10870":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"16:6742:12103":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"5:7337:9079":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:47405:9003":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:7889:8398":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:12822:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:11281:10189":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:5747:12791":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:21884:13383":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:9521:12554":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"6:0:841":{"crate_id":6,"path":["libc"],"kind":"module"},"6:1557:11044":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:8174:13382":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"6:6139:11703":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:14156:10769":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:31943:9237":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"17:11661:9759":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:41675:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:13802:10682":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"16:7828:9394":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"18:515:10103":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:10750:10144":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:9133:8561":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"6:4850:11397":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:7209:8577":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"5:5954:9921":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:10478:8077":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:1561:7978":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"5:3142:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"16:4986:9393":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"6:6053:11683":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:7525:7764":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"9:177:12941":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"16:8115:12135":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"16:6243:12655":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"5:5839:9910":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:44079:8445":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"17:10661:12597":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"6:1500:11013":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"5:2170:12157":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"16:2670:9500":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"16:7782:12127":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:9019:12829":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:2888:9977":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:1779:12757":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:13040:10453":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:3321:13629":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:4804:30467":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:47529:9049":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"5:2970:33224":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"11:403:13072":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"16:7884:20486":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:43781:12252":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"6:4317:11173":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:10468:10143":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"6:4477:11262":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"16:7054:12116":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:14469:10874":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:10571:8071":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:47613:8992":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:622:8391":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"6:6037:11678":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:21185:13531":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:8896:8664":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:5131:193":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:2362:191":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:2920:9268":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:8004:12809":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:4320:12781":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:9277:9634":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:12032:8440":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"16:6929:10906":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"16:2359:9235":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"6:595:11007":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"6:6627:11765":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"6:4697:11328":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:12037:8454":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:2904:13767":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:4706:13450":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"16:6386:9390":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:47803:7653":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:12154:10275":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:3989:13426":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:46373:8678":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"17:11358:20668":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:1840:12760":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"17:11272:12063":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"7:79:19461":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:10323:8073":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"16:6818:9252":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:2542:241":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"0:235:1762":{"crate_id":0,"path":["httparse","Status","Complete"],"kind":"variant"},"5:1464:12148":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:39184:205":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:3256:13690":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"5:822:9903":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:40027:8955":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"18:80:13054":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:10540:12774":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"17:13228:10486":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"16:6696:9516":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:8996:25932":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"17:10383:12581":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:943:12699":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"11:844:12702":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:6298:208":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"1:8909:13513":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"16:4417:9388":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:4160:13082":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:44095:8453":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:9907:9958":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:41336:9043":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:12208:10281":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"16:5712:9526":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:12042:317":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:22664:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"6:4293:11156":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"18:660:12535":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:6071:9981":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"1:4642:11784":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"17:256:12539":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"5:3720:8665":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:1781:12758":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"18:614:33264":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:45625:8731":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:43226:8086":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:3072:13323":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"16:6456:12087":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"11:986:12703":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:40041:13352":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"2:41792:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:7875:8544":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:11346:8657":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"13:0:2492":{"crate_id":13,"path":["std_detect"],"kind":"module"},"17:12484:10356":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"6:4789:11373":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:44103:8452":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:11261:12062":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"2:43138:8068":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:42446:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"17:13685:10659":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"16:7722:9569":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"5:1257:12120":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:12058:1550":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"6:4986:11475":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"9:507:9128":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:45993:8953":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:11000:10182":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:39912:8479":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:11296:10004":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"17:14355:10840":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"6:554:10984":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:9242:9755":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"5:1776:9926":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:47773:7651":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:3744:12778":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:3975:13425":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:11482:12777":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:5754:12794":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:9972:12566":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:11393:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"17:12172:10276":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:43268:8083":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:10916:12608":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:4176:13448":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:40124:12742":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:12063:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"18:624:33263":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:8313:8552":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"16:2933:19614":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"6:1603:11073":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:14324:10833":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"1:918:12694":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"6:653:14500":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:40722:12231":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"5:7463:9098":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"5:5366:13647":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"17:11910:10229":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"16:6346:12666":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"5:2035:8665":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:21665:13529":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"17:13055:10457":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:49671:13539":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"17:10714:12604":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"6:6714:11794":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:43624:8469":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:12496:10358":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:14033:10738":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"16:5049:9210":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:10397:12582":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:5403:9915":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"16:2428:9206":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:11367:10195":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"16:5760:20475":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:416:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"14:202:13662":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:47735:7649":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:2921:212":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"6:4750:11352":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:41264:13419":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"0:295:1861":{"crate_id":0,"path":["httparse","Response"],"kind":"struct"},"16:5322:9506":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:10265:12577":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:13174:10480":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:5384:12784":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:2861:13762":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:14056:10746":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:9867:10127":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:8540:8651":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:20848:29994":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:21670:13537":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"17:14042:10739":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"6:4844:11396":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"6:4545:11299":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"16:2596:9324":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"1:8009:13409":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"11:399:13071":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:9053:25946":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:2779:7942":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:40104:8085":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:43258:8082":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"11:0:2497":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"2:21108:13535":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"2:2899:13766":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:11151:12622":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:12531:10362":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:10323:12789":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"6:4552:11301":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:21066:13783":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"0:210:1739":{"crate_id":0,"path":["httparse","Error","Version"],"kind":"variant"},"6:1663:11121":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:12060:812":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:10456:12592":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:6720:11796":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:42914:8099":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:8776:1194":{"crate_id":2,"path":["core","result"],"kind":"module"},"1:3348:13406":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"16:5435:10901":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"6:4718:11340":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"6:4680:11320":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:14221:10813":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:4138:13081":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:44083:8448":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"16:6189:12083":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"6:6850:11873":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"1:8964:8575":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:9086:9627":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:9461:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"16:5017:9619":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:4123:12729":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:41474:7978":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:2613:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"6:5076:11513":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:10929:10178":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:39120:201":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:9148:30719":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:44337:8966":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:12054:762":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"1:12062:1163":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:12778:10398":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:2771:223":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:3226:12771":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:10430:12585":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"16:4527:9507":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"5:7182:8697":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"16:6485:9566":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:2833:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:22730:180":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"6:6024:11674":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"6:5996:11661":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:9823:20555":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:4196:8377":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:10949:12610":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:4572:13468":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"18:727:10123":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:14522:10883":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:2394:13378":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"11:805:13310":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:8558:7748":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:39999:8721":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"6:4430:11243":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:14134:10764":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:22763:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"17:12513:10361":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:43510:8474":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:46655:9069":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"6:4820:11386":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:2850:9261":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:11098:12618":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:22565:179":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"17:12685:10386":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:8953:20542":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"17:13010:10448":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:5054:12783":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:6010:12167":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:22290:8956":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:9003:20544":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:13723:10665":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"5:782:9900":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:30171:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"16:2644:9347":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"11:2180:10927":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:10771:12278":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"17:12598:10373":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:45825:8989":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:47327:9072":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:2831:7946":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"1:1573:12150":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:2356:184":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:9472:8369":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:8941:13514":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"16:6268:33251":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:45941:8969":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:47788:7652":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:31950:12739":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"17:11473:9716":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:30185:30251":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"2:2546:240":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"16:3888:9499":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:2998:8400":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:43239:8081":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:7905:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:14499:10879":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:11137:12621":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"0:198:1727":{"crate_id":0,"path":["httparse","Error","HeaderName"],"kind":"variant"},"1:7921:12807":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"16:3049:19616":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:13989:10724":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:1631:11098":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:6195:12796":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:44155:8945":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:7913:12806":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:9436:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"16:2969:19615":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"11:2174:10926":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"0:101:212":{"crate_id":0,"path":["httparse","Result"],"kind":"type_alias"},"14:187:19558":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:41384:9046":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:14401:10854":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"9:237:11946":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"11:736:12149":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"2:47750:7650":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:2562:9975":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"17:10292:10137":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"16:5384:20473":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:8279:12273":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"5:5612:9924":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:4747:13442":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"16:3032:9346":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:2216:12764":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:12024:10250":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"16:4641:9400":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:41543:212":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:3016:7762":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"6:541:10978":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"1:10962:12790":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:3305:12775":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:1067:12705":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:10588:12046":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"6:7618:11923":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:5648:12627":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"17:10240:10130":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:12041:1078":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:13188:10481":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:7853:12804":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"16:4613:9487":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:8855:8069":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:47575:9071":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:11845:10206":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"11:2130:19542":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:20820:7961":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"11:760:9926":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"1:8877:8642":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:11992:8464":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:7662:8579":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:41611:185":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"17:10494:12038":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"16:6600:20479":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"6:587:11002":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:9478:8371":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"6:4306:11165":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:10023:12557":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"6:5891:11599":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:10036:10132":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:11394:12289":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"5:676:234":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:12628:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:13949:10714":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:0:508":{"crate_id":2,"path":["core"],"kind":"module"},"5:629:12712":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"6:5808:11563":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:9350:9671":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:10214:12575":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"16:4585:9620":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:14434:10861":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:3232:12550":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:10112:12571":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"16:2450:9221":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"16:6376:20478":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:9985:12567":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"6:568:10992":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:14478:10876":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:30719:185":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:4003:13428":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:47826:7654":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:39876:8699":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"6:4491:11270":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:2828:7760":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"5:6788:9934":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:10366:12579":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:11562:8057":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"5:4164:9915":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"17:12252:10298":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:0:1440":{"crate_id":1,"path":["std"],"kind":"module"},"17:12554:10365":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:7534:9575":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:727:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:40193:12206":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:12225:10289":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"5:7396:30254":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:21440:13383":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:9281:12760":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:9470:8368":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:13876:10700":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"15:0:2500":{"crate_id":15,"path":["addr2line"],"kind":"module"},"6:7514:11900":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"16:4774:9185":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:12103:13654":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:14013:10731":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"6:6574:11736":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"16:6893:10904":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:13632:10653":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"5:0:291":{"crate_id":5,"path":["alloc"],"kind":"module"},"16:6361:9181":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"5:1302:12708":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:13135:10477":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:22304:8811":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:3522:13381":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"17:11306:10190":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"6:532:10972":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:43812:12256":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:45847:8810":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:11586:9754":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:8833:8588":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"16:5612:9493":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"18:736:24504":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"17:13838:10687":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:39935:13715":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"17:10126:12034":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"17:14448:10868":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:41458:8069":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:42680:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:11578:8059":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:22192:11932":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"16:7708:9579":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:39018:13631":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"16:5121:9205":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"6:5814:11564":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:46419:8946":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:358:12747":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:8978:20543":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"6:4742:11348":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:11023:10183":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:8825:20538":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"11:365:9891":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:40680:8036":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"16:2406:9319":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"16:6531:12096":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:10227:12576":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"5:7290:7978":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"18:699:12026":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:3050:13630":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"6:4608:11314":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"5:2959:8028":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:10366:8090":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:39947:12191":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:11815:10202":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:44392:12268":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:43428:8470":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:1184:12544":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:39961:13716":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"17:13024:10451":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"5:35:9895":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"6:123:14143":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:2665:1824":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"2:9466:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"1:9486:9998":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:30115:2646":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:14126:10763":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:3565:12552":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"6:1590:11066":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:14514:10880":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:14269:10814":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:42495:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:11158:2371":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:8556:7750":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"17:11074:12616":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:9933:12563":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"5:685:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:3239:237":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:11150:8580":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"16:4557:9306":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:43860:12257":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"6:5010:11482":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:43959:12264":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:42671:12237":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:41714:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:43147:8066":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"16:3232:9401":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:4054:13627":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"16:7544:12126":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:10953:9124":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:22125:12180":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:2382:13372":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"6:4382:11219":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"18:671:12538":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:1557:8069":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"11:817:12699":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"18:644:10100":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"9:426:19470":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:45564:8766":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:42430:9317":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"6:6829:11861":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:1924:8390":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:10585:8076":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:39096:200":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:8801:12821":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:12055:1551":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:47678:7645":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:12765:10397":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:3009:2002":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:21886:13525":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"16:6753:9551":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"6:6045:11680":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:13202:10484":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:840:8069":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:2384:13373":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:12305:10312":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"6:4994:11477":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"11:1831:9926":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"2:20861:30155":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:11774:8486":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:39065:8942":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2:43213:8085":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:2883:13763":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:6880:13757":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"9:357:19483":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:9752:12558":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"15:288:13062":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:4007:12727":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:11162:10185":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:11059:10003":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"5:3171:8069":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:43652:8476":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"6:1495:11011":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:43248:8084":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:4824:13438":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"16:7269:33250":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"16:4862:9192":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"16:6968:20481":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"16:8181:9581":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:5633:8556":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"14:0:2499":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:10788:20642":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:43949:12260":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:12267:10304":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:45749:8990":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:12724:10390":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:1670:1116":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:4745:13441":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:10516:8078":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"5:6930:9936":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:2934:13771":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:13851:10692":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"17:12790:10399":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:42910:12240":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"16:0:2501":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:5085:12783":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:41293:11936":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:4047:13430":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:22928:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:30747:7961":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"16:5963:12629":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:12671:10151":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"5:3204:12152":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"16:6944:33247":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:40146:12198":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:9650:10137":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"18:491:12018":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:2150:20600":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:11164:8588":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"5:5923:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:10776:12272":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:2778:2645":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"5:6079:9915":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"18:574:10100":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"5:5769:235":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:2499:12765":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:2892:9263":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"5:878:9905":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"5:4002:9910":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:12009:13300":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"11:1048:33243":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:12049:663":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:9102:9723":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"16:6879:9494":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:8408:8547":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:9390:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"17:10478:1739":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"5:778:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:3741:12777":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:11934:10230":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:40316:12218":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"0:154:1949":{"crate_id":0,"path":["httparse","EMPTY_HEADER"],"kind":"constant"},"11:1103:12707":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"6:6784:11837":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"11:667:12694":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:12876:10427":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:8926:20541":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"6:1638:11102":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:10102:12835":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"2:21052:13530":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"2:44134:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:39928:8477":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:2493:13383":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"0:200:1729":{"crate_id":0,"path":["httparse","Error","HeaderValue"],"kind":"variant"},"17:13826:10684":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:12184:10279":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:13897:10705":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"16:7090:12119":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:12038:428":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"6:5988:11660":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:46017:8978":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:7149:8640":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:11062:12615":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"6:6031:11675":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"18:719:10120":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:41989:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:4640:11782":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"17:14296:10826":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"6:494:10948":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"6:4946:11455":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"2:5551:12165":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"11:798:12696":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:32051:7949":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"6:4520:11286":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:11042:10001":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"16:5696:20474":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:926:12696":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:5569:11690":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:14024:10735":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:1817:12759":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:39890:12189":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:7575:9994":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:4392:9945":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:21:702":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"5:6439:9910":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:2793:7943":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:9476:196":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:45684:8685":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:8291:13449":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:22829:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:2926:13769":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"6:5776:11545":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"11:1012:12705":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"17:13778:10677":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:10340:10142":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"17:9959:12565":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"11:2049:12703":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:3513:29289":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:11459:10006":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:30155:2647":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"16:5673:9220":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"16:7862:12128":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:2272:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"17:10603:12047":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"17:9574:33261":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"5:1514:200":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"16:4053:9224":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:261:12540":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"3:234:212":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"17:12465:10351":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:45546:8943":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:10316:10141":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:11573:12069":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:7637:13383":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"11:1845:12151":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:21337:8957":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:13575:10618":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"6:4783:11370":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:8848:20539":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:39860:30240":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"6:6877:11879":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:12048:661":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"6:7287:11888":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:13148:10478":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:10097:12570":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:4500:13451":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"5:6886:247":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"17:11407:20545":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"6:4438:11245":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:13215:10485":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:41372:8770":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"6:4666:11319":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"17:13693:9678":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:871:12148":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:42473:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"17:3441:12551":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:12702:12736":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:4240:12780":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:1058:12703":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"6:4910:11431":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"17:14118:10761":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"0:233:1733":{"crate_id":0,"path":["httparse","Status"],"kind":"enum"},"2:42710:12239":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:12057:8455":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"18:564:10107":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:41602:7978":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"6:4687:11321":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:47698:2472":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:8985:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:11617:9718":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"5:7231:31752":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:10160:12837":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"17:10278:12578":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:11612:28798":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:11221:8566":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:8556:11957":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:42895:11950":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:2253:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:6467:8576":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:1824:8944":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"18:652:10100":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:11215:12056":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:22109:9004":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:43668:8478":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"6:4526:11289":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"6:6729:11799":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:8305:12816":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:8142:8640":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"17:13868:10697":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:6358:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:13162:10479":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"5:207:9897":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:3419:9915":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:913:12709":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:43187:8087":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"11:836:12701":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:12846:10408":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:40704:9954":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:22697:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:43464:8075":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"5:6558:7978":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:9372:10125":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:8297:12819":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:11173:20666":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"16:6560:9887":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"2:1470:1700":{"crate_id":2,"path":["core","mem"],"kind":"module"},"17:12196:10280":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:10370:12580":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:39994:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:39238:12740":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:22283:12184":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:47865:7655":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:10165:20575":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"2:2887:13765":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:43795:12255":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:3939:13424":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"10:36:10931":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"1:9031:1735":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:43766:12246":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:2867:9262":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:5572:13493":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:9417:212":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"2:11592:1944":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"6:4731:11344":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:6610:9989":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:40216:12210":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:41466:8070":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:3266:12773":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:2871:13517":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:2178:12546":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:39140:204":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:9207:9726":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:43410:8471":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"5:2243:12160":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:1759:8804":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"16:4889:9529":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"6:5060:11510":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"16:5982:12078":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:41398:183":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:12473:10353":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"17:12658:10382":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:6569:9568":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"18:609:12534":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:11240:8586":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:21271:13522":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"16:8050:9300":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:8983:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"17:12293:10309":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:21064:30409":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"17:10575:12045":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"2:46161:8765":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:42400:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"16:3915:9498":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:11361:8545":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:43528:8475":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"6:1717:11145":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:3013:7761":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:8863:12823":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"18:531:12019":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:4168:13083":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:2530:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:7393:13755":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:43924:12259":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:7131:13085":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"1:2214:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"6:1513:11019":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:504:12542":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"16:5363:9504":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"6:6076:11689":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:39080:202":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"16:8281:9184":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"16:6844:9301":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"16:6318:9363":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:47075:8959":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:2320:190":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:9153:12950":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"5:7382:9082":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"5:7349:13309":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"5:5975:14062":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:41950:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"6:1536:11029":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"16:7513:12124":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"16:7568:9577":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:9790:33258":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:14316:10832":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:12098:10263":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"16:2321:9335":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"16:5830:9406":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:11351:10194":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"17:11235:12061":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"17:10059:10134":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:13676:10658":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"16:8072:10916":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:10410:12583":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:10616:12048":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"2:30349:30242":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"2:41449:2373":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:39833:8478":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"5:3594:8070":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:10139:20574":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"6:6582:11741":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:21255:13383":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"2:4:1040":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:10628:12050":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"2:41594:8070":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:11124:12620":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"0:223:1751":{"crate_id":0,"path":["httparse","InvalidChunkSize"],"kind":"struct"},"2:46295:8720":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:40254:12214":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"16:7613:12685":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"6:4951:11457":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:47709:7647":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:1640:2641":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:11053:10002":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:7744:13341":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"6:4826:11387":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:2366:11930":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:10738:12606":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"16:6499:9580":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"6:5082:11516":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:44329:8982":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:41753:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:13071:10458":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:5311:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"5:7545:8574":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:7858:12272":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:3504:8366":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:10821:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:884:12149":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"11:657:7978":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"16:6425:9403":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"16:4719:9222":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"17:10698:12602":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"17:9852:20556":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"1:8847:8587":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:7737:12271":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"16:7503:9574":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:10084:12569":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:22056:8705":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:13973:10722":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"1:8357:11955":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"16:4835:9227":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"6:1911:15491":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:44091:8449":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:21774:29999":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:1568:9926":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"16:7067:9243":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:11742:9724":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:9677:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"16:6204:12636":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"6:4618:11315":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:47651:8988":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"6:7526:11902":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"5:3669:9898":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:8162:11954":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"6:4725:11341":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:43938:13661":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"6:7520:11901":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"16:149:9496":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"18:507:10100":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:6199:9952":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"17:10903:12607":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"5:4074:8070":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"16:2548:9241":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"6:1649:11110":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:5449:12789":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:2624:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"17:11111:12619":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:46609:8808":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:22895:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:11203:8561":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"5:276:7766":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:2219:9940":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"5:6485:9898":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:3191:29683":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"0:0:2245":{"crate_id":0,"path":["httparse"],"kind":"module"},"1:5418:12787":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:43582:8473":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:2825:7944":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:43318:8462":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:12043:10255":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:1895:8389":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"1:949:12701":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:5398:12786":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:40245:12213":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"16:2810:9333":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:11710:10190":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"6:4957:11458":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:4337:9944":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:12007:10248":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"6:5746:11520":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"6:5046:11504":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"16:6279:9594":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"6:1575:11054":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:10116:13383":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:41870:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"16:7006:12668":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:12983:10446":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"1:12053:766":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"17:11316:10193":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"17:14282:10820":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:1585:12152":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"17:10197:12572":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:40074:9946":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:11737:8484":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"16:6017:20476":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"5:4846:206":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:2223:13365":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"1:9074:8565":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:44107:8446":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"11:2186:33242":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:5988:208":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:45595:8972":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"11:1538:12711":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"5:7211:9910":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:2930:13770":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"6:4796:11375":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:3648:7978":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:13667:10654":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"1:5640:12269":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"6:5899:11604":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"16:7360:33252":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:41526:8048":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:44276:207":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:11490:9674":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"17:9780:12559":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"6:7573:11912":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:3284:13628":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"5:1411:8069":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:7581:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:41546:182":{"crate_id":2,"path":["httparse","Result","Ok"],"kind":"variant"},"1:3264:12772":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"16:2907:9384":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:12830:10403":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"1:9977:9056":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:14068:10749":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"6:6657:11787":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"16:6792:9247":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"5:7199:12164":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:8237:12818":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:8286:12274":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:2533:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:23375:222":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"6:4802:11378":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:12062:10256":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"5:7282:7978":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:5243:192":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:4743:13439":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:44167:13864":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:12615:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"16:6915:9571":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"16:6352:12085":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:39432:26881":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:10081:12759":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"11:749:9910":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:12123:10266":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"6:4458:11254":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:8989:12826":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"5:6955:9939":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:9474:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"17:9488:33255":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"5:1288:12703":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"16:8205:20487":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:6194:12171":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"6:6145:11704":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:40155:12200":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:29923:13421":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"1:11600:11968":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:11971:10243":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"5:3212:12150":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:41349:12273":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"16:4344:9402":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"5:6798:9935":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"11:2033:12120":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:9720:13723":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"0:258:1774":{"crate_id":0,"path":["httparse","ParserConfig"],"kind":"struct"},"18:590:10108":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:9480:8372":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:42655:12234":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"6:4772:11362":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:11797:8483":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:7594:9996":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"16:5905:9582":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"6:4706:11333":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"16:536:9592":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:1764:628":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:9468:8367":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:20833:29994":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"14:215:12140":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:40673:12227":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"17:10507:12040":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"6:62:14088":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"16:4806:9240":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:3229:8062":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"18:113:13058":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:13914:10708":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"4:0:2493":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:42702:12238":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:8212:1702":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"11:1826:9910":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:41230:8977":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"0:206:1735":{"crate_id":0,"path":["httparse","Error","Token"],"kind":"variant"},"5:1426:8070":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"17:9886:12560":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:41313:30260":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"6:4448:11251":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:5626:208":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"6:4975:11469":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:1527:11024":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"6:7595:11917":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"1:9109:221":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"5:7438:9922":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"1:7683:8038":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:1547:9915":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"5:261:9898":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:45665:9066":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:42692:11946":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"6:4471:11259":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:5491:9915":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:12036:379":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:11991:10244":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:2938:13772":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"16:2526:9389":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:11201:12052":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"11:332:9889":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:43887:12258":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:10771:10146":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:364:12748":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:12037:961":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"6:6607:11759":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"5:7261:9097":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:11619:12291":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"18:636:10119":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:4392:12782":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:8980:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:8659:20521":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"19:0:1058":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:3068:13322":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:12050:767":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:10405:8074":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:11184:8676":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"17:13113:10466":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"17:14163:10771":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:12111:10265":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:13487:10555":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"17:11295:12064":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"16:3065:9729":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:7524:9657":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"9:0:2495":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:7375:25991":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"16:6415:12086":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:11523:12778":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:46869:8773":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:12237:10292":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"11:1517:12710":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:5972:8556":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"16:2504:9223":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:2169:13783":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"2:22316:13422":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"16:2305:19613":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"17:12621:10378":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"0:195:2032":{"crate_id":0,"path":["httparse","parse_chunk_size"],"kind":"function"},"1:3997:13427":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"17:9660:33259":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"5:2049:12716":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"11:311:12146":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:3405:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"5:7449:227":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:4268:12730":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:42171:8370":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"10:44:10932":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"17:8686:20534":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:11886:10215":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"5:4194:9915":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"17:12888:10429":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:922:12695":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"6:7538:11904":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:14173:10776":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:10962:10180":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"16:6401:9565":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:4918:13476":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"16:7342:33249":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"6:1506:11016":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"16:4462:9488":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:7443:7765":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:10340:29327":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:40277:12216":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"5:3581:8069":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"11:968:12120":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:7434:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"16:7102:20482":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:10980:10137":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:8225:8467":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"5:7191:7978":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:21323:13526":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"11:1852:12152":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"16:3797:9242":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:12677:194":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:2339:9621":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:8481:8660":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:22862:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:39259:11933":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"17:12086:10260":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:4628:13428":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:3224:12770":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"5:1492:12694":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:638:12750":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"6:6697:11789":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:9418:8366":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"16:8134:12138":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"11:285:12143":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"5:3238:12153":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"11:695:12695":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:10100:12836":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:43992:8459":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"6:7549:11908":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:12934:10439":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:42390:11937":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:40286:2403":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"18:0:2503":{"crate_id":18,"path":["memchr"],"kind":"module"},"6:4485:11267":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"6:5802:11560":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:9924:9959":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"17:13981:10723":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"11:1822:7978":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"17:13890:10703":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:11226:12060":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"16:6226:12651":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:3447:8658":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"18:582:7961":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"5:2960:33226":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"16:7523:12125":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"6:562:10989":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"17:12576:10372":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:6811:13520":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"5:2690:9090":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"16:7554:9576":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"18:690:12025":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:43972:8458":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"6:4397:11225":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:12911:10438":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"16:6083:19586":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:897:9910":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:3945:13423":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:46192:8684":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"16:7015:9590":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:9762:33256":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:13451:10524":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"6:4508:11280":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:14:2604":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:39954:12192":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:10685:12600":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:10580:8038":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:22598:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"2:2985:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:1842:12761":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:13966:10721":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:43378:8077":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:4448:8380":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:10849:28549":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"14:221:10922":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"5:4234:8069":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:10789:8563":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"5:7474:12726":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"16:7318:9194":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:5609:12166":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"17:13286:10495":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:42418:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:12258:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"11:97:12142":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:7535:12853":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"16:7651:12686":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:7472:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:9701:12557":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"16:7736:9361":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:6543:13507":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"6:6735:11800":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:14076:10752":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:46215:8732":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:10949:12803":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"13:226:10924":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:5434:12788":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:4273:12731":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"17:12645:10379":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"12:0:2498":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:4189:13084":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"16:6171:196":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:39162:203":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:13274:10190":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:39839:12188":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:22217:30245":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:21317:13524":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:22003:8768":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:434:9383":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"18:521:24506":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:10432:12821":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:13422:10504":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"14:40:10230":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"16:7041:12113":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:4059:13433":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:43643:8480":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"16:7284:7746":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"16:5588:9199":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"11:630:8069":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:42028:7657":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:4478:13450":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"6:4835:11390":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:10534:12042":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:21416:13383":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"3:0:453":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:43176:8080":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"6:4376:11217":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:4897:11421":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"9:52:12931":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:12650:30401":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:10801:11952":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"1:9191:26056":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"6:4640:11317":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:11176:28552":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"16:3315:10898":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"6:5053:11507":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:21152:13536":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"16:3461:10899":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"14:31:12691":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"9:393:19469":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"6:1520:11021":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:46449:9067":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"6:7584:11916":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"10:0:2496":{"crate_id":10,"path":["adler"],"kind":"module"},"2:21449:8957":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:8713:20535":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"6:488:10946":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"16:3764:9228":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"16:5816:9248":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"16:6721:20480":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:4783:397":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:11535:12068":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"16:5088:9178":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:12543:10364":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:14346:10838":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:2576:9959":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"1:6896:9991":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"1:8151:11953":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:39900:8812":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:22200:9037":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:41535:195":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"1:3465:12776":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"16:5661:12075":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:14536:10886":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"16:8167:12690":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:10646:9640":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:9841:9956":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"2:11117:8089":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"16:7694:9578":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"6:6814:11854":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:9787:1418":{"crate_id":2,"path":["core","slice"],"kind":"module"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":27}