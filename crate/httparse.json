{"root":"0:0:2160","crate_version":"1.8.0","includes_private":false,"index":{"0:231":{"id":"0:231","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,27],"end":[182,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11903:33866":{"id":"2:11903:33866","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"üóª‚ààüåè\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"üçî‚ààüåè\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2565-0:258:1687":{"id":"b:2:2565-0:258:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2524:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2534:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2568:127","2:2569:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2560-0:223:1664":{"id":"b:2:2560-0:223:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2534:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2530:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2563:127","2:2564:1450"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:275:1538":{"id":"0:275:1538","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[453,4],"end":[453,27]},"visibility":"public","docs":"The request minor version, such as `1` for `HTTP/1.1`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40637:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[615,0],"end":[706,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"items":["0:147:926","0:148:1832"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,0],"end":[419,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:109:1688","0:110:1690","0:111:1704","0:112:1691","0:113:1712","0:114:1689","0:115:1731","0:116:1733","0:119:1741","0:122:1692","0:123:1772","0:126:1776"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11973:33874":{"id":"2:11973:33874","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11595:8354","`DoubleEndedIterator`":"2:7203:120","prim@char":"1:11864:410","str::matches":"2:11970:2505"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:42856:8388","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11615:8371","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2261-0:295:1774":{"id":"b:2:2261-0:295:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2255:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2263:24142"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:214:414":{"id":"0:214:414","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[134,15],"end":[134,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:237:1576":{"id":"0:237:1576","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[206,13],"end":[206,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"2:11952:33870":{"id":"2:11952:33870","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11595:8354","str::split":"2:11943:27621","prim@char":"1:11864:410","`DoubleEndedIterator`":"2:7203:120","str::rsplit_terminator":"2:11955:33871"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:42684:8386","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,9],"end":[134,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2707:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:319:602":{"id":"0:319:602","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[601,20],"end":[601,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[211,0],"end":[239,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:105:1679","0:106:1681","0:107:1517"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3354-0:223:1664":{"id":"b:2:3354-0:223:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3352:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3356:1463"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:105:1679":{"id":"0:105:1679","crate_id":0,"name":"is_complete","span":{"filename":"src/lib.rs","begin":[214,4],"end":[219,5]},"visibility":"public","docs":"Convenience method to check if status is complete.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2709:225-0:258:1687":{"id":"a:2:2709:225-0:258:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2709:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:681-0:258:1687":{"id":"b:5:681-0:258:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2275:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:683:7936","5:684:7937","5:685:7938"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2261-0:197:127":{"id":"b:2:2261-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2255:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:24142"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:309":{"id":"0:309","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,16],"end":[601,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3354-0:320:1743":{"id":"b:2:3354-0:320:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3352:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3356:1463"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11905:27591":{"id":"2:11905:27591","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11881:1471"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11958:27627":{"id":"2:11958:27627","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11595:8354","str::rsplitn":"2:11961:27629"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:42738:7985","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2554-0:270:1737":{"id":"b:2:2554-0:270:1737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2527:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2556:683"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2554-0:320:1743":{"id":"b:2:2554-0:320:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2527:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2556:683"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12013:27289":{"id":"2:12013:27289","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:227":{"id":"0:227","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,16],"end":[182,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2705:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,22],"end":[203,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"2:2329:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:126:1776":{"id":"0:126:1776","crate_id":0,"name":"parse_response_with_uninit_headers","span":{"filename":"src/lib.rs","begin":[411,4],"end":[418,5]},"visibility":"public","docs":"Parses a response with the given config and buffer for headers","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["response",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["headers",{"kind":"borrowed_ref","inner":{"lifetime":"'headers","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"MaybeUninit","id":"2:29983:1614","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:101:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:302":{"id":"0:302","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,9],"end":[601,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9081:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:305:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2565-0:270:1737":{"id":"b:2:2565-0:270:1737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2524:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2534:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2568:127","2:2569:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2550-0:270:1737":{"id":"b:2:2550-0:270:1737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2527:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2524:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2553:7876"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:5599-0:197:127":{"id":"b:5:5599-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9086:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5597:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5601:1428"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:300:1103":{"id":"0:300:1103","crate_id":0,"name":"reason","span":{"filename":"src/lib.rs","begin":[610,4],"end":[610,33]},"visibility":"public","docs":"The response reason-phrase, such as `OK`.\n\nContains an empty string if the reason-phrase was missing or contained invalid characters.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40637:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"2:11899:33865":{"id":"2:11899:33865","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°üíõ\");\n```","links":{"str::floor_char_boundary":"2:11897:33864"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:684:7937":{"id":"5:684:7937","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:257:657":{"id":"0:257:657","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[203,37],"end":[203,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9040:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9029:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2554-0:258:1687":{"id":"b:2:2554-0:258:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2527:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:683"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11904:310":{"id":"2:11904:310","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:11905:27591","`u8`":"1:11881:1471"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11914:33867":{"id":"2:11914:33867","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nunsafe {\n    assert_eq!(\"L√∂we ËÄÅËôé L√©opard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11870:1374","str::slice_mut_unchecked":"2:11915:33868","crate::ops::Index":"2:3016:12998"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,15],"end":[203,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2275:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2275:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:244:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:299:1841":{"id":"0:299:1841","crate_id":0,"name":"code","span":{"filename":"src/lib.rs","begin":[606,4],"end":[606,25]},"visibility":"public","docs":"The response code, such as `200`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40637:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u16"}}],"bindings":[]}}}}},"2:2553:7876":{"id":"2:2553:7876","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2527:132"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:274:1024":{"id":"0:274:1024","crate_id":0,"name":"path","span":{"filename":"src/lib.rs","begin":[451,4],"end":[451,31]},"visibility":"public","docs":"The request path, such as `/about-us`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40637:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"0:98:1662":{"id":"0:98:1662","crate_id":0,"name":"description","span":{"filename":"src/lib.rs","begin":[175,4],"end":[177,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:265:414":{"id":"0:265:414","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[242,9],"end":[242,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:328:414":{"id":"0:328:414","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[709,15],"end":[709,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:221":{"id":"0:221","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,37],"end":[134,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9081:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:222:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:229:602":{"id":"0:229:602","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[182,16],"end":[182,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,22],"end":[203,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2706:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:99":{"id":"0:99","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[185,0],"end":[189,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9086:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:100:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2258-0:258:1687":{"id":"b:2:2258-0:258:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2252:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2260:2494"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2258-0:295:1774":{"id":"b:2:2258-0:295:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2252:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2260:2494"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:114:1689":{"id":"0:114:1689","crate_id":0,"name":"allow_obsolete_multiline_headers_in_responses","span":{"filename":"src/lib.rs","begin":[331,4],"end":[337,5]},"visibility":"public","docs":"Sets whether obsolete multiline headers should be allowed.\n\nThis is an obsolete part of HTTP/1. Use at your own risk. If you are\nbuilding an HTTP library, the newlines (`\\r` and `\\n`) should be\nreplaced by spaces before handing the header value to the user.\n\n# Example\n\n```rust\nlet buf = b\"HTTP/1.1 200 OK\\r\\nFolded-Header: hello\\r\\n there \\r\\n\\r\\n\";\nlet mut headers = [httparse::EMPTY_HEADER; 16];\nlet mut response = httparse::Response::new(&mut headers);\n\nlet res = httparse::ParserConfig::default()\n    .allow_obsolete_multiline_headers_in_responses(true)\n    .parse_response(&mut response, buf);\n\nassert_eq!(res, Ok(httparse::Status::Complete(buf.len())));\n\nassert_eq!(response.headers.len(), 1);\nassert_eq!(response.headers[0].name, \"Folded-Header\");\nassert_eq!(response.headers[0].value, b\"hello\\r\\n there\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2695:217-0:233:1646":{"id":"a:2:2695:217-0:233:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2695:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2695:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11916:27613":{"id":"2:11916:27613","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-L√∂f\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-L√∂f\", last);\n```","links":{"str::split_at_mut":"2:11917:27614"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:210:1652":{"id":"0:210:1652","crate_id":0,"name":"Version","span":{"filename":"src/lib.rs","begin":[149,4],"end":[149,11]},"visibility":"default","docs":"Invalid byte in HTTP version.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:2260:2494":{"id":"2:2260:2494","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2261-0:223:1664":{"id":"b:2:2261-0:223:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2255:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:24142"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:206:1648":{"id":"0:206:1648","crate_id":0,"name":"Token","span":{"filename":"src/lib.rs","begin":[145,4],"end":[145,9]},"visibility":"default","docs":"Invalid byte where token is required.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:2:2622-0:197:127":{"id":"b:2:2622-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2615:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3403:13315","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2624:8310"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"2:11896:33863":{"id":"2:11896:33863","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nassert!(s.is_char_boundary(0));\n// start of `ËÄÅ`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `√∂`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `ËÄÅ`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2759:7672-0:270:1737":{"id":"a:2:2759:7672-0:270:1737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'buf","bounds":[{"outlives":"'headers"}]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2759:7672","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:213":{"id":"0:213","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,15],"end":[134,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2275:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:214:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,9],"end":[446,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9081:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:280:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8216:7661-0:295:1774":{"id":"a:2:8216:7661-0:295:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8216:7661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:100:657":{"id":"0:100:657","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[186,4],"end":[188,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9040:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9029:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12017:33887":{"id":"2:12017:33887","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"‚ù§\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_debug().to_string(), \"‚ù§\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4541:33887"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:42933:8392","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:685:7938":{"id":"5:685:7938","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:132:926":{"id":"0:132:926","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[461,4],"end":[468,5]},"visibility":"public","docs":"Creates a new Request, using a slice of headers you allocate.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["headers",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:270:1737":{"id":"0:270:1737","crate_id":0,"name":"Request","span":{"filename":"src/lib.rs","begin":[447,0],"end":[456,1]},"visibility":"public","docs":"A parsed Request.\n\nThe optional values will be `None` if a parse was not complete, and did not\nparse the associated property. This allows you to inspect the parts that\ncould be parsed, before reading more, in case you wish to exit early.\n\n# Example\n\n```no_run\nlet buf = b\"GET /404 HTTP/1.1\\r\\nHost:\";\nlet mut headers = [httparse::EMPTY_HEADER; 16];\nlet mut req = httparse::Request::new(&mut headers);\nlet res = req.parse(buf).unwrap();\nif res.is_partial() {\n    match req.path {\n        Some(ref path) => {\n            // check router for path.\n            // /404 doesn't exist? we could stop parsing\n        },\n        None => {\n            // must read more and parse again\n        }\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:273:1797","0:274:1024","0:275:1538","0:276:1742"],"fields_stripped":false}},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:129","a:2:2709:225-0:270:1737","a:2:2759:7672-0:270:1737","a:2:8216:7661-0:270:1737","a:2:2695:217-0:270:1737","a:2:8217:7660-0:270:1737","b:2:3354-0:270:1737","b:2:2550-0:270:1737","b:2:2554-0:270:1737","b:2:2261-0:270:1737","b:2:2565-0:270:1737","b:2:2560-0:270:1737","b:2:2258-0:270:1737","0:284","0:277","0:288","0:281","0:291"]}},"a:2:2759:7672-0:320:1743":{"id":"a:2:2759:7672-0:320:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2759:7672","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11986:33879":{"id":"2:11986:33879","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,0],"end":[178,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","type_id","cause","description","provide"],"trait":{"name":"Error","id":"2:2615:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:98:1662"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11988:33880":{"id":"2:11988:33880","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™\";\nassert!(Some('◊¢') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11989:33881":{"id":"2:11989:33881","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:233:1646":{"id":"0:233:1646","crate_id":0,"name":"Status","span":{"filename":"src/lib.rs","begin":[204,0],"end":[209,1]},"visibility":"public","docs":"The result of a successful parse pass.\n\n`Complete` is used when the buffer contained the complete value.\n`Partial` is used when parsing did not reach the end of the expected value,\nbut no invalid data was found.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:235:1675","0:238:1677"],"impls":["0:103","a:2:2709:225-0:233:1646","a:2:2759:7672-0:233:1646","a:2:8216:7661-0:233:1646","a:2:2695:217-0:233:1646","a:2:8217:7660-0:233:1646","b:2:3354-0:233:1646","b:2:2550-0:233:1646","b:2:2554-0:233:1646","b:2:2261-0:233:1646","b:2:2565-0:233:1646","b:2:2560-0:233:1646","b:2:2258-0:233:1646","b:5:681-0:233:1646","0:240","0:247","0:255","0:250","0:245","0:242","0:252"]}},"b:2:2560-0:258:1687":{"id":"b:2:2560-0:258:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2534:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2530:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2563:127","2:2564:1450"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:82-0:73:2291":{"id":"0:82-0:73:2291","crate_id":0,"name":null,"span":{"filename":"src/simd/mod.rs","begin":[174,0],"end":[174,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(all(httparse_simd,\nnot(any(httparse_simd_target_feature_sse42,\nhttparse_simd_target_feature_avx2,)),\nany(target_arch = \"x86\", target_arch = \"x86_64\",),))]"],"deprecation":null,"kind":"import","inner":{"source":"self::runtime","name":"runtime","id":"0:73:2291","glob":true}},"a:2:8217:7660-0:295:1774":{"id":"a:2:8217:7660-0:295:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8217:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:197:127":{"id":"0:197:127","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[135,0],"end":[150,1]},"visibility":"public","docs":"An error in parsing.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:198:1640","0:200:1642","0:202:1644","0:204:1646","0:206:1648","0:208:1650","0:210:1652"],"impls":["a:2:2709:225-0:197:127","a:2:2759:7672-0:197:127","a:2:8216:7661-0:197:127","a:2:2695:217-0:197:127","a:2:8217:7660-0:197:127","b:2:3354-0:197:127","b:2:2622-0:197:127","b:2:2550-0:197:127","b:2:2554-0:197:127","b:2:2261-0:197:127","b:2:2565-0:197:127","b:2:2560-0:197:127","b:2:2258-0:197:127","b:5:5599-0:197:127","b:5:681-0:197:127","0:216","0:97","0:218","0:213","0:215","0:212","0:221","0:219","0:95"]}},"0:115:1731":{"id":"0:115:1731","crate_id":0,"name":"obsolete_multiline_headers_in_responses_are_allowed","span":{"filename":"src/lib.rs","begin":[340,4],"end":[342,5]},"visibility":"public","docs":"Whether obsolete multiline headers should be allowed.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:681-0:233:1646":{"id":"b:5:681-0:233:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2275:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:683:7936","5:684:7937","5:685:7938"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:334":{"id":"0:334","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,26],"end":[709,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2705:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:255":{"id":"0:255","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,37],"end":[203,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9081:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9081:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:257:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:96:657":{"id":"0:96:657","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[168,4],"end":[170,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9040:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9029:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2695:217-0:223:1664":{"id":"a:2:2695:217-0:223:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2695:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:238:1677":{"id":"0:238:1677","crate_id":0,"name":"Partial","span":{"filename":"src/lib.rs","begin":[208,4],"end":[208,11]},"visibility":"default","docs":"A partial result.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:2:2565-0:295:1774":{"id":"b:2:2565-0:295:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2524:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2534:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2568:127","2:2569:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2709:225-0:233:1646":{"id":"a:2:2709:225-0:233:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2709:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2709:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3354-0:270:1737":{"id":"b:2:3354-0:270:1737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3352:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:3356:1463"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:148:1832":{"id":"0:148:1832","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[628,4],"end":[630,5]},"visibility":"public","docs":"Try to parse a buffer of bytes into this `Response`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:101:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:195:1946":{"id":"0:195:1946","crate_id":0,"name":"parse_chunk_size","span":{"filename":"src/lib.rs","begin":[1203,0],"end":[1266,1]},"visibility":"public","docs":"Parse a buffer of bytes as a chunk size.\n\nThe return value, if complete and successful, includes the index of the\nbuffer that parsing stopped at, and the size of the following chunk.\n\n# Example\n\n```\nlet buf = b\"4\\r\\nRust\\r\\n0\\r\\n\\r\\n\";\nassert_eq!(httparse::parse_chunk_size(buf),\n           Ok(httparse::Status::Complete((3, 4))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"result::Result","id":"2:40781:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"u64"}]}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11917:27614":{"id":"2:11917:27614","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-L√∂f\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-L√∂f\", last);\n}\nassert_eq!(\"PER Martin-L√∂f\", s);\n```","links":{"str::split_at":"2:11916:27613"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,16],"end":[446,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3354-0:295:1774":{"id":"b:2:3354-0:295:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3352:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:3356:1463"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5341:34538":{"id":"5:5341:34538","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7210:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7210:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:139:1827":{"id":"0:139:1827","crate_id":0,"name":"parse_with_uninit_headers","span":{"filename":"src/lib.rs","begin":[523,4],"end":[529,5]},"visibility":"public","docs":"Try to parse a buffer of bytes into the Request,\nexcept use an uninitialized slice of `Header`s.\n\nFor more information, see `parse`","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["headers",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"MaybeUninit","id":"2:29983:1614","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:101:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:298:1538":{"id":"0:298:1538","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[604,4],"end":[604,27]},"visibility":"public","docs":"The response minor version, such as `1` for `HTTP/1.1`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40637:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}},"a:2:2695:217-0:320:1743":{"id":"a:2:2695:217-0:320:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2695:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:107:1517":{"id":"0:107:1517","crate_id":0,"name":"unwrap","span":{"filename":"src/lib.rs","begin":[233,4],"end":[238,5]},"visibility":"public","docs":"Convenience method to unwrap a Complete value. Panics if the status is\n`Partial`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3354-0:233:1646":{"id":"b:2:3354-0:233:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3352:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3356:1463"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11918:12013":{"id":"2:11918:12013","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"yÃÜ\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'yÃÜ'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11864:410"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:42604:8381","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2695:217-0:270:1737":{"id":"a:2:2695:217-0:270:1737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2695:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11961:27629":{"id":"2:11961:27629","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11864:410","str::splitn":"2:11958:27627","self::pattern":"2:11595:8354"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:42756:7981","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11615:8371","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2759:7672-0:197:127":{"id":"a:2:2759:7672-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2759:7672","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11976:33875":{"id":"2:11976:33875","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11595:8354","`DoubleEndedIterator`":"2:7203:120","prim@char":"1:11864:410","str::rmatch_indices":"2:11979:33876"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:42784:8389","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5354:13086":{"id":"5:5354:13086","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7210:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7210:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:73:2291":{"id":"0:73:2291","crate_id":0,"name":"runtime","span":{"filename":"src/simd/mod.rs","begin":[91,0],"end":[91,11]},"visibility":{"restricted":{"parent":"0:47:1270","path":"::simd"}},"docs":"Runtime detection of simd features. Used when the build script\ndoesn't notice any target features at build time.\n\nWhile `is_x86_feature_detected!` has it's own caching built-in,\nat least in 1.27.0, the functions don't inline, leaving using it\nactually *slower* than just using the scalar fallback.","links":{},"attrs":["#[cfg(all(httparse_simd,\nnot(any(httparse_simd_target_feature_sse42,\nhttparse_simd_target_feature_avx2,)),\nany(target_arch = \"x86\", target_arch = \"x86_64\",),))]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"0:154:1862":{"id":"0:154:1862","crate_id":0,"name":"EMPTY_HEADER","span":{"filename":"src/lib.rs","begin":[743,0],"end":[743,74]},"visibility":"public","docs":"An empty header, useful for constructing a `Header` array to pass in for\nparsing.\n\n# Example\n\n```\nlet headers = [httparse::EMPTY_HEADER; 64];\n```","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"b:2:2258-0:197:127":{"id":"b:2:2258-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2252:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2260:2494"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2568:127":{"id":"2:2568:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:31737:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:8216:7661-0:197:127":{"id":"a:2:8216:7661-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8216:7661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8217:7660-0:258:1687":{"id":"a:2:8217:7660-0:258:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8217:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2560-0:270:1737":{"id":"b:2:2560-0:270:1737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2534:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2530:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2563:127","2:2564:1450"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2569:1449":{"id":"2:2569:1449","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40781:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2534:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:322:905":{"id":"0:322:905","crate_id":0,"name":"name","span":{"filename":"src/lib.rs","begin":[714,4],"end":[714,21]},"visibility":"public","docs":"The name portion of a header.\n\nA header name must be valid ASCII-US, so it's safe to store as a `&str`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"b:2:2258-0:320:1743":{"id":"b:2:2258-0:320:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2252:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2260:2494"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11912:1916":{"id":"2:11912:1916","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"üóª‚ààüåè\");\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9776:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9776:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:2263:24142":{"id":"2:2263:24142","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2565-0:233:1646":{"id":"b:2:2565-0:233:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2524:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2534:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2568:127","2:2569:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11990:33882":{"id":"2:11990:33882","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11595:8354"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11620:8370","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,33],"end":[134,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2706:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2261-0:320:1743":{"id":"b:2:2261-0:320:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2255:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2263:24142"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2624:8310":{"id":"2:2624:8310","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["demand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:3415:12408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:320:1743":{"id":"0:320:1743","crate_id":0,"name":"Header","span":{"filename":"src/lib.rs","begin":[710,0],"end":[720,1]},"visibility":"public","docs":"Represents a parsed header.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:322:905","0:323:1694"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2709:225-0:320:1743","a:2:2759:7672-0:320:1743","a:2:8216:7661-0:320:1743","a:2:2695:217-0:320:1743","a:2:8217:7660-0:320:1743","b:2:3354-0:320:1743","b:2:2550-0:320:1743","b:2:2554-0:320:1743","b:2:2261-0:320:1743","b:2:2565-0:320:1743","b:2:2560-0:320:1743","b:2:2258-0:320:1743","b:5:681-0:320:1743","0:324","0:151","0:331","0:334","0:329","0:326","0:336"]}},"a:2:8217:7660-0:270:1737":{"id":"a:2:8217:7660-0:270:1737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8217:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2565-0:320:1743":{"id":"b:2:2565-0:320:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2524:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2534:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2568:127","2:2569:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3354-0:258:1687":{"id":"b:2:3354-0:258:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3352:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3356:1463"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,16],"end":[182,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:229:602"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:305:657":{"id":"0:305:657","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[601,9],"end":[601,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9040:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9029:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:240":{"id":"0:240","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,9],"end":[203,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:2707:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2707:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8217:7660-0:320:1743":{"id":"a:2:8217:7660-0:320:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8217:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:119:1741":{"id":"0:119:1741","crate_id":0,"name":"parse_request_with_uninit_headers","span":{"filename":"src/lib.rs","begin":[354,4],"end":[361,5]},"visibility":"public","docs":"Parses a request with the given config and buffer for headers","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["request",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["headers",{"kind":"borrowed_ref","inner":{"lifetime":"'headers","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"MaybeUninit","id":"2:29983:1614","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:101:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2709:225-0:223:1664":{"id":"a:2:2709:225-0:223:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2709:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8217:7660-0:233:1646":{"id":"a:2:8217:7660-0:233:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8217:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8217:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:336":{"id":"0:336","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,26],"end":[709,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:338:602"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:280:657":{"id":"0:280:657","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[446,9],"end":[446,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9040:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9029:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2550-0:295:1774":{"id":"b:2:2550-0:295:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2527:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2524:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2553:7876"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:123:1772":{"id":"0:123:1772","crate_id":0,"name":"parse_response","span":{"filename":"src/lib.rs","begin":[402,4],"end":[408,5]},"visibility":"public","docs":"Parses a response with the given config.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["response",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:101:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12014:27292":{"id":"2:12014:27292","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√∂S\"));\nassert!(!\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√ñS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3356:1463":{"id":"2:3356:1463","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:38976:8646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:683:7936":{"id":"5:683:7936","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"b:2:2560-0:320:1743":{"id":"b:2:2560-0:320:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2534:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2530:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2563:127","2:2564:1450"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2759:7672-0:223:1664":{"id":"a:2:2759:7672-0:223:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2759:7672","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11920:1806":{"id":"2:11920:1806","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:42620:1615","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11939:7882":{"id":"2:11939:7882","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('√©'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:40639:176","prim@char":"1:11864:410","self::pattern":"2:11595:8354"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40637:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11615:8371","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,20],"end":[446,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:294:602"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11919:12023":{"id":"2:11919:12023","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"yÃÜes\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'yÃÜ')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11864:410"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:42610:8380","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:244:414":{"id":"0:244:414","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[203,15],"end":[203,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:230":{"id":"0:230","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,27],"end":[182,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2706:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11982:33877":{"id":"2:11982:33877","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2258-0:233:1646":{"id":"b:2:2258-0:233:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2252:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2260:2494"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:313":{"id":"0:313","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,20],"end":[601,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2705:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2554-0:197:127":{"id":"b:2:2554-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2527:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:683"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11949:27625":{"id":"2:11949:27625","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11595:8354","`DoubleEndedIterator`":"2:7203:120","prim@char":"1:11864:410","str::split":"2:11943:27621"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:42652:7987","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11615:8371","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8216:7661-0:320:1743":{"id":"a:2:8216:7661-0:320:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8216:7661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:219":{"id":"0:219","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,33],"end":[134,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2556:683":{"id":"2:2556:683","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2550-0:197:127":{"id":"b:2:2550-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2527:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2524:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2553:7876"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5355:27290":{"id":"5:5355:27290","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12015:27293"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7210:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8216:7661-0:258:1687":{"id":"a:2:8216:7661-0:258:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8216:7661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:324":{"id":"0:324","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,9],"end":[709,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2707:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,22],"end":[134,31]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:217:602"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:316":{"id":"0:316","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,20],"end":[601,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:319:602"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:331":{"id":"0:331","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,22],"end":[709,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11923:12750":{"id":"2:11923:12750","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:42888:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5338:1828":{"id":"5:5338:1828","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7210:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7210:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:164:1905":{"id":"0:164:1905","crate_id":0,"name":"parse_headers","span":{"filename":"src/lib.rs","begin":[893,0],"end":[900,1]},"visibility":"public","docs":"Parse a buffer of bytes as headers.\n\nThe return value, if complete and successful, includes the index of the\nbuffer that parsing stopped at, and a sliced reference to the parsed\nheaders. The length of the slice will be equal to the number of properly\nparsed headers.\n\n# Example\n\n```\nlet buf = b\"Host: foo.bar\\nAccept: */*\\n\\nblah blah\";\nlet mut headers = [httparse::EMPTY_HEADER; 4];\nassert_eq!(httparse::parse_headers(buf, &mut headers),\n           Ok(httparse::Status::Complete((27, &[\n               httparse::Header { name: \"Host\", value: b\"foo.bar\" },\n               httparse::Header { name: \"Accept\", value: b\"*/*\" }\n           ][..]))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["src",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:101:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":["'h"]}}},{"name":"'h","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11897:33864":{"id":"2:11897:33864","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji üßë‚Äçüî¨ (scientist) could be split so that the string only\nincludes üßë (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2695:217-0:295:1774":{"id":"a:2:2695:217-0:295:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2695:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5337:34537":{"id":"5:5337:34537","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:7678","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6961:8858","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:7678","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6961:8858","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11935:7921":{"id":"2:11935:7921","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('√©'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:40639:176","prim@char":"1:11864:410","self::pattern":"2:11595:8354"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40637:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:226:657":{"id":"0:226:657","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[182,9],"end":[182,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9040:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9029:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:101:207":{"id":"0:101:207","crate_id":0,"name":"Result","span":{"filename":"src/lib.rs","begin":[196,0],"end":[196,54]},"visibility":"public","docs":"A Result of any parsing action.\n\nIf the input is invalid, an `Error` will be returned. Note that incomplete\ndata is not considered invalid, and so will not return an error, but rather\na `Ok(Status::Partial)`.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"result::Result","id":"2:40781:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"b:2:2554-0:233:1646":{"id":"b:2:2554-0:233:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2527:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2556:683"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:681-0:197:127":{"id":"b:5:681-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2275:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:683:7936","5:684:7937","5:685:7938"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2565-0:197:127":{"id":"b:2:2565-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2524:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2534:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2568:127","2:2569:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2759:7672-0:295:1774":{"id":"a:2:2759:7672-0:295:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'buf","bounds":[{"outlives":"'headers"}]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2759:7672","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:301:1742":{"id":"0:301:1742","crate_id":0,"name":"headers","span":{"filename":"src/lib.rs","begin":[612,4],"end":[612,45]},"visibility":"public","docs":"The response headers.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'headers","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}}}},"a:2:8216:7661-0:270:1737":{"id":"a:2:8216:7661-0:270:1737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8216:7661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:2550-0:223:1664":{"id":"b:2:2550-0:223:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2527:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2524:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2553:7876"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,26],"end":[203,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2705:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11908:12771":{"id":"2:11908:12771","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:40639:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40637:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9776:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9776:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2560-0:233:1646":{"id":"b:2:2560-0:233:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2534:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2530:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2563:127","2:2564:1450"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:129":{"id":"0:129","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[458,0],"end":[555,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"items":["0:132:926","0:139:1827","0:141:1832"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2709:225-0:197:127":{"id":"a:2:2709:225-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2709:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:106:1681":{"id":"0:106:1681","crate_id":0,"name":"is_partial","span":{"filename":"src/lib.rs","begin":[223,4],"end":[228,5]},"visibility":"public","docs":"Convenience method to check if status is partial.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:153:657":{"id":"0:153:657","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[723,4],"end":[732,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:9040:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:9029:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11926:1885":{"id":"2:11926:1885","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11595:8354"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11955:33871":{"id":"2:11955:33871","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11595:8354","str::split":"2:11943:27621","prim@char":"1:11864:410","str::split_terminator":"2:11952:33870"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:42702:8385","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11615:8371","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11979:33876":{"id":"2:11979:33876","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11595:8354","`DoubleEndedIterator`":"2:7203:120","prim@char":"1:11864:410","str::match_indices":"2:11976:33875"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:42802:8390","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11615:8371","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:95":{"id":"0:95","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[167,0],"end":[171,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9086:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:96:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:151":{"id":"0:151","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[722,0],"end":[733,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9081:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:153:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5601:1428":{"id":"5:5601:1428","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7210:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:113:1712":{"id":"0:113:1712","crate_id":0,"name":"multiple_spaces_in_response_status_delimiters_are_allowed","span":{"filename":"src/lib.rs","begin":[304,4],"end":[306,5]},"visibility":"public","docs":"Whether multiple spaces are allowed as delimiters in response status lines.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,22],"end":[134,31]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2705:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2554-0:223:1664":{"id":"b:2:2554-0:223:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2527:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:683"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11999:27633":{"id":"2:11999:27633","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11595:8354"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40637:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11615:8371","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12005:33885":{"id":"2:12005:33885","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11595:8354"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8217:7660-0:223:1664":{"id":"a:2:8217:7660-0:223:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8217:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2261-0:258:1687":{"id":"b:2:2261-0:258:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2255:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:24142"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2550-0:320:1743":{"id":"b:2:2550-0:320:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2527:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2524:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2553:7876"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11906:2264":{"id":"2:11906:2264","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"üóª‚ààüåè\");\n\nassert_eq!(Some(\"üóª\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:40639:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40637:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9776:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9776:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11984:33878":{"id":"2:11984:33878","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊¢') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11993:33883":{"id":"2:11993:33883","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11595:8354"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[242,9],"end":[242,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2275:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:265:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:12008:33886":{"id":"2:12008:33886","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11595:8354"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11615:8371","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:252":{"id":"0:252","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,26],"end":[203,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2324:185","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:254:602"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11943:27621":{"id":"2:11943:27621","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11595:8354","`DoubleEndedIterator`":"2:7203:120","prim@char":"1:11864:410","str::split_whitespace":"2:11921:30943","str::rsplit":"2:11949:27625"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:42634:7983","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12020:33888":{"id":"2:12020:33888","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4539:33888"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:42951:8394","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:273:1797":{"id":"0:273:1797","crate_id":0,"name":"method","span":{"filename":"src/lib.rs","begin":[449,4],"end":[449,33]},"visibility":"public","docs":"The request method, such as `GET`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40637:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"5:5344:34539":{"id":"5:5344:34539","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Œ£\";\n\nassert_eq!(\"œÉ\", sigma.to_lowercase());\n\n// but at the end of a word, it's œÇ, not œÉ:\nlet odysseus = \"·ΩàŒîŒ•Œ£Œ£ŒïŒéŒ£\";\n\nassert_eq!(\"·ΩÄŒ¥œÖœÉœÉŒµœçœÇ\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7210:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7210:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:217:602":{"id":"0:217:602","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[134,22],"end":[134,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11932:27632":{"id":"2:11932:27632","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11595:8354"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11615:8371","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5352:34540":{"id":"5:5352:34540","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tsch√º√ü\";\n\nassert_eq!(\"TSCH√úSS\", s.to_uppercase());\n```","links":{"`String`":"5:7210:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7210:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5356:27291":{"id":"5:5356:27291","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"gr√º√üe, j√ºrgen ‚ù§\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12016:27294"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7210:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:204:1646":{"id":"0:204:1646","crate_id":0,"name":"Status","span":{"filename":"src/lib.rs","begin":[143,4],"end":[143,10]},"visibility":"default","docs":"Invalid byte in Response status.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:338:602":{"id":"0:338:602","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[709,26],"end":[709,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:202:1644":{"id":"0:202:1644","crate_id":0,"name":"NewLine","span":{"filename":"src/lib.rs","begin":[141,4],"end":[141,11]},"visibility":"default","docs":"Invalid byte in new line.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:112:1691":{"id":"0:112:1691","crate_id":0,"name":"allow_multiple_spaces_in_response_status_delimiters","span":{"filename":"src/lib.rs","begin":[298,4],"end":[301,5]},"visibility":"public","docs":"Sets whether multiple spaces are allowed as delimiters in response status lines.\n\n# Background\n\nThe [latest version of the HTTP/1.1 spec][spec] allows implementations to parse multiple\nwhitespace characters in place of the `SP` delimiters in the response status line,\nincluding:\n\n> SP, HTAB, VT (%x0B), FF (%x0C), or bare CR\n\nThis option relaxes the parser to allow for multiple spaces, but does *not* allow the status\nline to contain the other mentioned whitespace characters.\n\n[spec]: https://httpwg.org/http-core/draft-ietf-httpbis-messaging-latest.html#rfc.section.4.p.3","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12011:1832":{"id":"2:12011:1832","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11557:126","`FromStr`":"2:11556:8379"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40781:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:11556:8379","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11556:8379","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11996:24724":{"id":"2:11996:24724","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11595:8354"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40637:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2261-0:233:1646":{"id":"b:2:2261-0:233:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2255:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2263:24142"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11970:2505":{"id":"2:11970:2505","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11595:8354","`DoubleEndedIterator`":"2:7203:120","prim@char":"1:11864:410","str::matches":"2:11970:2505"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:42838:8387","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2565-0:223:1664":{"id":"b:2:2565-0:223:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2524:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2534:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2568:127","2:2569:1449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2258-0:223:1664":{"id":"b:2:2258-0:223:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2252:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2260:2494"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:235:1675":{"id":"0:235:1675","crate_id":0,"name":"Complete","span":{"filename":"src/lib.rs","begin":[206,4],"end":[206,15]},"visibility":"default","docs":"The completed result.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:237:1576"]},"discriminant":null}},"2:11924:33869":{"id":"2:11924:33869","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:42898:8384","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12019:12970":{"id":"2:12019:12970","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4542:12970"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:42942:8393","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2564:1450":{"id":"2:2564:1450","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:40781:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2534:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:267:657":{"id":"0:267:657","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[242,16],"end":[242,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9040:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9029:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8217:7660-0:197:127":{"id":"a:2:8217:7660-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8217:7660","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[242,16],"end":[242,21]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9081:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2261-0:270:1737":{"id":"b:2:2261-0:270:1737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2255:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2263:24142"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11902:24395":{"id":"2:11902:24395","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11163:1857"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3354-0:197:127":{"id":"b:2:3354-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3352:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3356:1463"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:0:2160":{"id":"0:0:2160","crate_id":0,"name":"httparse","span":{"filename":"src/lib.rs","begin":[1,0],"end":[2236,1]},"visibility":"public","docs":"# httparse\n\nA push library for parsing HTTP/1.x requests and responses.\n\nThe focus is on speed and safety. Unsafe code is used to keep parsing fast,\nbut unsafety is contained in a submodule, with invariants enforced. The\nparsing internals use an `Iterator` instead of direct indexing, while\nskipping bounds checks.\n\nWith Rust 1.27.0 or later, support for SIMD is enabled automatically.\nIf building an executable to be run on multiple platforms, and thus\nnot passing `target_feature` or `target_cpu` flags to the compiler,\nruntime detection can still detect SSE4.2 or AVX2 support to provide\nmassive wins.\n\nIf compiling for a specific target, remembering to include\n`-C target_cpu=native` allows the detection to become compile time checks,\nmaking it *even* faster.","links":{},"attrs":["#![deny(missing_docs)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:197:127","0:223:1664","0:101:207","0:233:1646","0:258:1687","0:270:1737","0:295:1774","0:320:1743","0:154:1862","0:164:1905","0:195:1946"],"is_stripped":false}},"b:2:2550-0:233:1646":{"id":"b:2:2550-0:233:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2527:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2524:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2553:7876"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:223:1664":{"id":"0:223:1664","crate_id":0,"name":"InvalidChunkSize","span":{"filename":"src/lib.rs","begin":[183,0],"end":[183,28]},"visibility":"public","docs":"An error in parsing a chunk size.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":["a:2:2709:225-0:223:1664","a:2:2759:7672-0:223:1664","a:2:8216:7661-0:223:1664","a:2:2695:217-0:223:1664","a:2:8217:7660-0:223:1664","b:2:3354-0:223:1664","b:2:2550-0:223:1664","b:2:2554-0:223:1664","b:2:2261-0:223:1664","b:2:2565-0:223:1664","b:2:2560-0:223:1664","b:2:2258-0:223:1664","b:5:5599-0:223:1664","0:227","0:228","0:230","0:225","0:99","0:231"]}},"2:11946:27623":{"id":"2:11946:27623","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11595:8354"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:11419:8000","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12015:27293":{"id":"2:12015:27293","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Gr√º√üe, J√ºrgen ‚ù§\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12016:27294":{"id":"2:12016:27294","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GR√ú√üE, J√úRGEN ‚ù§\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"gr√ú√üe, j√úrgen ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2709:225-0:295:1774":{"id":"a:2:2709:225-0:295:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2709:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2759:7672-0:233:1646":{"id":"a:2:2759:7672-0:233:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2759:7672","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2759:7672","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:681-0:320:1743":{"id":"b:5:681-0:320:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2275:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:683:7936","5:684:7937","5:685:7938"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11894:799":{"id":"2:11894:799","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"∆íoo\".len(), 4); // fancy f!\nassert_eq!(\"∆íoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11864:410"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2560-0:197:127":{"id":"b:2:2560-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2534:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2530:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2563:127","2:2564:1450"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:254:602":{"id":"0:254:602","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[203,26],"end":[203,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2550-0:258:1687":{"id":"b:2:2550-0:258:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2527:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2524:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2553:7876"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[242,23],"end":[242,30]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2601:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:269:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:208:1650":{"id":"0:208:1650","crate_id":0,"name":"TooManyHeaders","span":{"filename":"src/lib.rs","begin":[147,4],"end":[147,18]},"visibility":"default","docs":"Parsed more headers than provided buffer can contain.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,20],"end":[446,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2705:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:147:926":{"id":"0:147:926","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[618,4],"end":[625,5]},"visibility":"public","docs":"Creates a new `Response` using a slice of `Header`s you have allocated.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["headers",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11910:2276":{"id":"2:11910:2276","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"üóª‚ààüåè\";\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9776:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9776:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:109:1688":{"id":"0:109:1688","crate_id":0,"name":"allow_spaces_after_header_name_in_responses","span":{"filename":"src/lib.rs","begin":[253,4],"end":[259,5]},"visibility":"public","docs":"Sets whether spaces and tabs should be allowed after header names in responses.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2563:127":{"id":"2:2563:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2534:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"2:11915:33868":{"id":"2:11915:33868","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11870:1374","crate::ops::IndexMut":"2:3020:12999","str::slice_unchecked":"2:11914:33867"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"5:5353:34541":{"id":"5:5353:34541","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:286:7678","`String`":"5:7210:221"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:7678","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6961:8858","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7210:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:116:1733":{"id":"0:116:1733","crate_id":0,"name":"parse_request","span":{"filename":"src/lib.rs","begin":[345,4],"end":[351,5]},"visibility":"public","docs":"Parses a request with the given config.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["request",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:101:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:258:1687":{"id":"0:258:1687","crate_id":0,"name":"ParserConfig","span":{"filename":"src/lib.rs","begin":[243,0],"end":[249,1]},"visibility":"public","docs":"Parser configuration.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:108","a:2:2709:225-0:258:1687","a:2:2759:7672-0:258:1687","a:2:8216:7661-0:258:1687","a:2:2695:217-0:258:1687","a:2:8217:7660-0:258:1687","b:2:3354-0:258:1687","b:2:2550-0:258:1687","b:2:2554-0:258:1687","b:2:2261-0:258:1687","b:2:2565-0:258:1687","b:2:2560-0:258:1687","b:2:2258-0:258:1687","b:5:681-0:258:1687","0:264","0:266","0:268"]}},"b:5:5599-0:223:1664":{"id":"b:5:5599-0:223:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9086:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5597:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5601:1428"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2709:225-0:270:1737":{"id":"a:2:2709:225-0:270:1737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2709:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11964:33872":{"id":"2:11964:33872","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40637:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:294:602":{"id":"0:294:602","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[446,20],"end":[446,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11922:30974":{"id":"2:11922:30974","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11921:30943"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:42917:8395","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8216:7661-0:233:1646":{"id":"a:2:8216:7661-0:233:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8216:7661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8216:7661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1646","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11925:30986":{"id":"2:11925:30986","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Za≈º√≥≈Çƒá gƒô≈õlƒÖ ja≈∫≈Ñ\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:42926:8391","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5336":{"id":"5:5336","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5247:1374","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5337:34537","5:5338:1828","5:5341:34538","5:5344:34539","5:5352:34540","5:5353:34541","5:5354:13086","5:5355:27290","5:5356:27291"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11921:30943":{"id":"2:11921:30943","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11922:30974"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:42908:8383","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8216:7661-0:223:1664":{"id":"a:2:8216:7661-0:223:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8216:7661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2560-0:295:1774":{"id":"b:2:2560-0:295:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2534:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2530:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2563:127","2:2564:1450"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2709:225-0:320:1743":{"id":"a:2:2709:225-0:320:1743","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2709:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:329":{"id":"0:329","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,22],"end":[709,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2706:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2695:217-0:197:127":{"id":"a:2:2695:217-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2695:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:198:1640":{"id":"0:198:1640","crate_id":0,"name":"HeaderName","span":{"filename":"src/lib.rs","begin":[137,4],"end":[137,14]},"visibility":"default","docs":"Invalid byte in header name.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:269:59":{"id":"0:269:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[242,23],"end":[242,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2695:217-0:258:1687":{"id":"a:2:2695:217-0:258:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2695:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2554-0:295:1774":{"id":"b:2:2554-0:295:1774","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2527:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2556:683"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:222:657":{"id":"0:222:657","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[134,37],"end":[134,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:9040:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:9029:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:323:1694":{"id":"0:323:1694","crate_id":0,"name":"value","span":{"filename":"src/lib.rs","begin":[719,4],"end":[719,23]},"visibility":"public","docs":"The value portion of a header.\n\nWhile headers **should** be ASCII-US, the specification allows for\nvalues that may not be, and so the value is stored as bytes.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},"b:2:2258-0:270:1737":{"id":"b:2:2258-0:270:1737","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2702:2548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2252:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2260:2494"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:306":{"id":"0:306","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,16],"end":[601,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2706:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1774","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:111:1704":{"id":"0:111:1704","crate_id":0,"name":"multiple_spaces_in_request_line_delimiters_are_allowed","span":{"filename":"src/lib.rs","begin":[280,4],"end":[282,5]},"visibility":"public","docs":"Whether multiple spaces are allowed as delimiters in request lines.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:122:1692":{"id":"0:122:1692","crate_id":0,"name":"ignore_invalid_headers_in_responses","span":{"filename":"src/lib.rs","begin":[393,4],"end":[399,5]},"visibility":"public","docs":"Sets whether invalid header lines should be silently ignored in responses.\n\nThis mimicks the behaviour of major browsers. You probably don't want this.\nYou should only want this if you are implementing a proxy whose main\npurpose is to sit in front of browsers whose users access arbitrary content\nwhich may be malformed, and they expect everything that works without\nthe proxy to keep working with the proxy.\n\nThis option will prevent `ParserConfig::parse_response` from returning\nan error encountered when parsing a header, except if the error was caused\nby the character NUL (ASCII code 0), as Chrome specifically always reject\nthose, or if the error was caused by a lone character `\\r`, as Firefox and\nChrome behave differently in that case.\n\nThe ignorable errors are:\n* empty header names;\n* characters that are not allowed in header names, except for `\\0` and `\\r`;\n* when `allow_spaces_after_header_name_in_responses` is not enabled,\n  spaces and tabs between the header name and the colon;\n* missing colon between header name and value;\n* when `allow_obsolete_multiline_headers_in_responses` is not enabled,\n  headers using obsolete line folding.\n* characters that are not allowed in header values except for `\\0` and `\\r`.\n\nIf an ignorable error is encountered, the parser tries to find the next\nline in the input to resume parsing the rest of the headers. As lines\ncontributing to a header using obsolete line folding always start\nwith whitespace, those will be ignored too. An error will be emitted\nnonetheless if it finds `\\0` or a lone `\\r` while looking for the\nnext line.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:281":{"id":"0:281","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,16],"end":[446,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2706:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1737","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:326":{"id":"0:326","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,15],"end":[709,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2275:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:328:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11895:7883":{"id":"2:11895:7883","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11929:27631":{"id":"2:11929:27631","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11595:8354"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12002:33884":{"id":"2:12002:33884","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11864:410","self::pattern":"2:11595:8354"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11615:8371","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11893":{"id":"2:11893","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:11158:1374","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11894:799","2:11895:7883","2:11896:33863","2:11897:33864","2:11899:33865","2:11902:24395","2:11903:33866","2:11904:310","2:11905:27591","2:11906:2264","2:11908:12771","2:11910:2276","2:11912:1916","2:11914:33867","2:11915:33868","2:11916:27613","2:11917:27614","2:11918:12013","2:11919:12023","2:11920:1806","2:11921:30943","2:11922:30974","2:11923:12750","2:11924:33869","2:11925:30986","2:11926:1885","2:11929:27631","2:11932:27632","2:11935:7921","2:11939:7882","2:11943:27621","2:11946:27623","2:11949:27625","2:11952:33870","2:11955:33871","2:11958:27627","2:11961:27629","2:11964:33872","2:11967:33873","2:11970:2505","2:11973:33874","2:11976:33875","2:11979:33876","2:11982:33877","2:11984:33878","2:11986:33879","2:11988:33880","2:11989:33881","2:11990:33882","2:11993:33883","2:11996:24724","2:11999:27633","2:12002:33884","2:12005:33885","2:12008:33886","2:12011:1832","2:12013:27289","2:12014:27292","2:12015:27293","2:12016:27294","2:12017:33887","2:12019:12970","2:12020:33888"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2759:7672-0:258:1687":{"id":"a:2:2759:7672-0:258:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2759:7672","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:110:1690":{"id":"0:110:1690","crate_id":0,"name":"allow_multiple_spaces_in_request_line_delimiters","span":{"filename":"src/lib.rs","begin":[274,4],"end":[277,5]},"visibility":"public","docs":"Sets whether multiple spaces are allowed as delimiters in request lines.\n\n# Background\n\nThe [latest version of the HTTP/1.1 spec][spec] allows implementations to parse multiple\nwhitespace characters in place of the `SP` delimiters in the request line, including:\n\n> SP, HTAB, VT (%x0B), FF (%x0C), or bare CR\n\nThis option relaxes the parser to allow for multiple spaces, but does *not* allow the\nrequest line to contain the other mentioned whitespace characters.\n\n[spec]: https://httpwg.org/http-core/draft-ietf-httpbis-messaging-latest.html#rfc.section.3.p.3","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11967:33873":{"id":"2:11967:33873","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:40637:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11600:8369","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11615:8371","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:141:1832":{"id":"0:141:1832","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[552,4],"end":[554,5]},"visibility":"public","docs":"Try to parse a buffer of bytes into the Request.\n\nReturns byte offset in `buf` to start of HTTP body.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:101:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,9],"end":[182,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9081:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1664","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:226:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:200:1642":{"id":"0:200:1642","crate_id":0,"name":"HeaderValue","span":{"filename":"src/lib.rs","begin":[139,4],"end":[139,15]},"visibility":"default","docs":"Invalid byte in header value.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:276:1742":{"id":"0:276:1742","crate_id":0,"name":"headers","span":{"filename":"src/lib.rs","begin":[455,4],"end":[455,45]},"visibility":"public","docs":"The request headers.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'headers","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1743","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}}}},"0:295:1774":{"id":"0:295:1774","crate_id":0,"name":"Response","span":{"filename":"src/lib.rs","begin":[602,0],"end":[613,1]},"visibility":"public","docs":"A parsed Response.\n\nSee `Request` docs for explanation of optional values.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:298:1538","0:299:1841","0:300:1103","0:301:1742"],"fields_stripped":false}},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:144","a:2:2709:225-0:295:1774","a:2:2759:7672-0:295:1774","a:2:8216:7661-0:295:1774","a:2:2695:217-0:295:1774","a:2:8217:7660-0:295:1774","b:2:3354-0:295:1774","b:2:2550-0:295:1774","b:2:2554-0:295:1774","b:2:2261-0:295:1774","b:2:2565-0:295:1774","b:2:2560-0:295:1774","b:2:2258-0:295:1774","0:302","0:313","0:309","0:306","0:316"]}}},"paths":{"6:4389:11057":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:12617:10405":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:50262:11749":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"18:614:34901":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:8926:106":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"17:11761:10182":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:39185:11952":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"18:80:12737":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:8441:20193":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"6:5772:11386":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:9897:12290":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:11149:7969":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"16:2557:8991":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:4414:7592":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:10704:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:41074:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:10506:10001":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"6:1747:10951":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:46209:8620":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:42412:7978":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:43055:12021":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:2964:7674":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:13327:10614":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:9061:9940":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:4748:12977":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:3177:7973":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:1065:12385":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"5:3519:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:8979:1648":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:39511:11968":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"16:5614:9188":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"16:2389:8984":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:44899:8731":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:22141:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:3199:12454":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"16:6059:34887":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"5:2906:33702":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:5495:13174":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"6:1541:10825":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:10088:9982":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"5:7058:7887":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:38958:12422":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"6:6059:11505":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:30581:7863":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"6:5945:11476":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:4629:13155":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"17:11515:10144":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"17:9021:12243":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:3352:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:2702:2548":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"6:5890:11453":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:10649:12043":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"0:270:1737":{"crate_id":0,"path":["httparse","Request"],"kind":"struct"},"2:7203:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:10138:13176":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"2:2891:13417":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:2998:13258":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"18:481:11799":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"18:0:2405":{"crate_id":18,"path":["memchr"],"kind":"module"},"16:2842:9373":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"16:2411:9383":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"14:202:13295":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"6:6728:11656":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"16:2868:9394":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:9073:8472":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:4004:12409":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:22075:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"5:1612:9703":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:20774:8783":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"16:7543:9322":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"5:5189:13274":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:44529:8741":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"5:630:12393":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:43018:13283":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"5:1197:11888":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"6:1509:10812":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"6:5843:11427":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:12087:10246":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:40914:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"6:4468:11097":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:1021:12231":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:9094:8283":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"16:5793:9081":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"16:6816:11881":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"11:44:10731":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"17:8981:12242":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:43069:12024":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:9658:12270":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:2255:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"5:1716:9696":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"0:154:1862":{"crate_id":0,"path":["httparse","EMPTY_HEADER"],"kind":"constant"},"16:2993:9015":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:39942:11999":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:2386:2410":{"crate_id":1,"path":["std","io"],"kind":"module"},"1:2869:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:11267:9811":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"1:4632:13130":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:42532:7992":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:43134:12026":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:21401:13206":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"6:1731:10946":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:3269:13257":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"6:1527:10820":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"12:98:11910":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:12177:135":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:11356:10103":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:22108:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"6:4962:11294":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"16:5949:11848":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:4426:13131":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:4795:783":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:21545:8778":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"12:2178:10725":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:9943:7980":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:8974:12515":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:4394:8296":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"6:1520:10817":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:11909:10203":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:40764:7956":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:2798:9124":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:44945:8860":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:39610:11982":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:41933:12003":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:3985:13110":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:8212:20185":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"16:3188:10698":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"6:4549:11118":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:4820:11220":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"17:10350:9521":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"16:4519:9035":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"17:12695:10448":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"6:5690:11345":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:12874:10483":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:40552:30985":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"17:9274:12249":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:1436:143":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:41699:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:8776:8482":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"16:6676:9325":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"6:7498:11718":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:5313:12466":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"16:5878:19238":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"18:548:140":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:10949:10008":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"1:5900:8464":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"17:12972:10508":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:11846:24738":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"18:755:11815":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"16:7637:11896":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"16:5122:9384":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:9446:12259":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"17:9303:9933":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"5:0:283":{"crate_id":5,"path":["alloc"],"kind":"module"},"5:6136:9735":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:2803:9122":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:8295:20188":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"6:6698:11639":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:41636:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"17:11271:10075":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"18:564:9914":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:9387:9803":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:12964:10506":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:11518:12058":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"12:1044:19207":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:39619:11983":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"18:609:12221":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"6:7386:11701":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:12022:10238":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:2530:235":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"10:0:2398":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:40994:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:39006:11731":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"17:11137:10053":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:9031:34895":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:6682:12762":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:2930:19266":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"6:6757:11672":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"5:217:9702":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"6:7201:11690":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"9:188:12616":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"16:3599:9034":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:41941:12005":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"6:4539:11117":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:44996:8640":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:9557:9762":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"1:3238:12456":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:43603:8647":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:12307:10283":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:9098:8284":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"12:1832:7979":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:46632:7553":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:21800:8821":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:42487:7995":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"0:202:1644":{"crate_id":0,"path":["httparse","Error","NewLine"],"kind":"variant"},"17:12148:10255":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"5:4269:242":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:43361:8362":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:11436:10110":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:11821:111":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"0:235:1675":{"crate_id":0,"path":["httparse","Status","Complete"],"kind":"variant"},"14:0:2401":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:2539:9780":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"16:7372:34883":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"16:7970:11907":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:21702:11730":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"5:3089:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:10875:9522":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:21598:8861":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:8168:8382":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:43568:192":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:7622:7950":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"6:4994:11313":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:9223:20203":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:10226:25223":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"1:7832:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:4835:13153":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:638:12432":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:967:12230":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:12781:10465":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"6:4571:11120":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:9318:144":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:10434:11832":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"14:40:10023":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:46655:7554":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:8774:9527":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"16:7135:34885":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"1:8185:13093":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:12816:10469":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"16:5761:12313":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:12387:106":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"6:540:10779":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:11853:10194":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:30011:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:39469:7995":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:7282:156":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"6:5752:11373":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:6781:12350":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:39581:11979":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"6:1583:10853":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:8434:1136":{"crate_id":2,"path":["core","result"],"kind":"module"},"2:4769:30883":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:9805:9447":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:5060:188":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:3963:13106":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:8274:12504":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"6:6094:11530":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:44777:8726":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:4983:12465":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:10762:7999":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:5378:12471":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"6:6548:11570":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"5:1422:12390":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:5327:12468":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:41757:8279":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"2:2831:13407":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:4750:13115":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:9350:9492":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:7555:8313":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:8643:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:10051:12518":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"16:2894:19265":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:21305:30867":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:9250:12247":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:38800:197":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:11125:10050":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:9185:12442":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:4404:13130":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"6:5931:11473":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:5477:11932":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"12:60:12754":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"16:7980:20135":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"16:7211:9077":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:7469:11711":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:45074:8765":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:8932:12510":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"1:8483:8564":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"16:2705:8996":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"17:12896:10487":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:420:9179":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:641:12434":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"6:1589:10855":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:621:8308":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:41721:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"6:4559:11119":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"16:2465:9039":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:39246:8594":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:21710:8752":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:12211:31462":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:8278:11570":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:2823:13200":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:6827:9811":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","fast","Key"],"kind":"struct"},"6:5722:11363":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:21293:7975":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:2345:13045":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"16:7497:9324":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:11885:1467":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:11606:10159":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:10670:11836":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"9:800:10734":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:38860:199":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"18:766:23938":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"5:1995:12397":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"6:6764:11675":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"16:5494:20122":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:588:12968":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:9420:1344":{"crate_id":2,"path":["core","slice"],"kind":"module"},"12:387:12755":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:11800:10187":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:11883:1469":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"6:4673:11152":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:9353:13367":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"0:238:1677":{"crate_id":0,"path":["httparse","Status","Partial"],"kind":"variant"},"18:727:9930":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"12:815:12378":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:12134:10253":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:11005:8473":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"6:6628:11596":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"16:8069:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"6:1695:10929":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:5813:11404":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:7802:12039":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:10159:9986":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:3123:30174":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"5:5753:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"6:4361:11045":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:1898:8306":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:10244:7982":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"6:4416:11070":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"16:2341:9413":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"16:4888:9397":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:9776:219":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"16:6186:9319":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"16:6719:34884":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"5:1366:7980":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:8229:12041":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:5556:8464":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:9063:215":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"18:636:9926":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:45413:8653":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"16:5981:11851":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"5:1228:12385":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:44853:8612":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:12361:10297":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"16:7319:11894":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"9:586:10732":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"0:320:1743":{"crate_id":0,"path":["httparse","Header"],"kind":"struct"},"5:4989:9730":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:386:12228":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:9382:12488":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"1:9092:8469":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:8806:32081":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:5554:11933":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"16:5664:9174":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:9553:9940":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:11830:12639":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:9700:12276":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:41396:8281":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:12980:10510":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:13203:10568":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"6:5805:11399":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:10476:20301":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:1638:578":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"6:6743:11663":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:8216:7661":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"6:4714:11174":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"14:215:11908":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"6:1645:10899":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:40637:178":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"5:6993:9712":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:0:487":{"crate_id":2,"path":["core"],"kind":"module"},"6:123:13809":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"12:697:12377":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:8666:9474":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:9165:34892":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"5:7150:8877":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:2709:225":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"16:7166:20131":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:11017:8482":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:21619:8824":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:46670:7555":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:44322:8789":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:11595:8354":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"5:6204:9719":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:39936:11997":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:42634:7983":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:4301:11018":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"4:0:2395":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"18:538:9912":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:11875:632":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:41980:12007":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:45491:8842":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:13478:10659":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:44823:8832":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:45567:8651":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:8217:7660":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:2487:9362":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:13413:10640":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:40469:8724":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:2521:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:10270:12303":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:2156:579":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:7522:9799":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"12:1872:11921":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"17:13031:10522":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"16:6330:9032":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:38976:8646":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:39439:9752":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"6:4429:11076":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:7123:13399":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:21675:8788":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"5:3277:9696":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"6:6521:11560":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:44566:8859":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:2746:7854":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"6:7434:11703":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:6879:8504":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"5:2189:11928":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:860:7980":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"9:592:19072":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"5:7052:7887":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:13082:10535":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:7173:7677":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:6178:8464":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:42942:8393":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"6:1716:10939":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"6:4775:11200":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:21141:13231":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"16:6171:9348":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"17:13436:10653":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"16:8014:9055":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:5916:203":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"17:3125:12238":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:9001:24722":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:43550:202":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:11037:8501":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"1:11170:12530":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"17:10207:12295":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:12850:10481":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:39289:13357":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"12:861:12384":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:2882:13415":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:1931:12233":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"16:7237:10709":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:13580:10683":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"6:4274:10995":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:9539:12266":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:11620:8370":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:44406:8742":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:10202:7985":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:44276:8827":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:39667:9140":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"6:4681:11156":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"6:5917:11462":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"16:4327:9168":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:3772:12461":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"6:5728:11364":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"5:3159:11918":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:45957:8829":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:41660:130":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"2:14:2508":{"crate_id":2,"path":["core","write"],"kind":"macro"},"1:1849:12443":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:11708:10174":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"6:4396:11060":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"12:2080:12386":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:46560:7548":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"5:5193:13275":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"9:111:12612":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"17:11684:10173":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:3923:13104":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:8638:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:11245:12055":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"9:977:8947":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:39651:2305":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"6:5660:11320":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"6:5741:11365":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:42784:8389":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"5:4115:9724":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"16:4144:9350":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"5:5597:229":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"12:2190:34881":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:39520:11969":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:11721:10177":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:8056:12494":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"16:5203:9344":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:950:12381":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:44252:8767":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"6:4877:11259":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"1:3201:12455":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:1739:13440":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"16:4441:9381":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:39913:11995":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"17:10296:12305":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"12:777:9697":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"16:6704:10706":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"5:7164:30960":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:9766:13117":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:3915:13103":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"16:5541:11845":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"16:7956:9336":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:12429:202":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"15:214:12606":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:5786:11397":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"16:2535:8990":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"17:13184:10563":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:11308:8399":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:8256:8505":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"1:0:1366":{"crate_id":1,"path":["std"],"kind":"module"},"1:2371:13055":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"17:8475:20171":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:13214:10569":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"19:0:1015":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"18:671:12225":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"5:3747:9703":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:9317:12253":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:2359:13049":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:10828:8946":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"1:8839:8483":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"6:4988:11311":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"16:6877:20130":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"6:6496:11542":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:4673:13120":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"12:1085:12387":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:1927:8307":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:3283:13082":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"16:2683:8995":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"6:4501:11115":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:933:12378":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"16:2605:9040":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"6:7521:11721":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:11871:1453":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:38738:13259":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:41949:12006":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:9885:12289":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:22273:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"5:2908:11723":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"5:1314:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:13039:10523":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"6:1663:10911":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:43441:13517":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"6:4952:11289":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:1645:2544":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"6:1652:10903":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"0:233:1646":{"crate_id":0,"path":["httparse","Status"],"kind":"enum"},"2:2759:7672":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:1771:599":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:46685:7556":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:39691:11988":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"5:3659:8510":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:39489:12425":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:8300:11754":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"12:2053:11888":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:38699:8314":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:10490:10000":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"9:382:12619":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"16:7343:9332":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:10123:7987":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"16:2433:9306":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"16:6865:11887":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"16:6790:9180":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:1476:1613":{"crate_id":2,"path":["core","mem"],"kind":"module"},"14:160:12373":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"14:221:10722":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"16:6241:11855":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:38985:9055":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"16:4217:9380":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:8138:11967":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:5363:12470":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"16:6284:9335":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"16:2793:9307":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:10088:8001":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:39406:13029":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"6:4850:11241":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"17:9183:12246":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:8117:13059":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"16:6619:9087":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"16:6034:12338":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:9030:8275":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"18:515:9910":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"6:505:10753":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"12:1534:12391":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:11536:10148":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"5:5663:9719":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"12:2205:8876":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"13:226:10724":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:10824:12487":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"5:6555:9741":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:8596:9488":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"16:5374:9318":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:6091:9791":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:11870:1374":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"6:4597:11122":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"12:444:141":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:10854:20198":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"12:119:9691":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:13374:10632":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:13594:10686":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:20477:31068":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:3977:13108":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"6:4812:986":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"17:12211:10273":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:10121:9984":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:20671:13213":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"17:8951:34893":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:8401:11743":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"17:11617:10160":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:7426:12368":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:9574:9763":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"17:12337:9996":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:42738:7985":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:11873:10197":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:1824:12441":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"5:3125:11919":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:10403:9459":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:43223:12029":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:40824:7979":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"6:6791:11681":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"18:699:11808":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"16:4721:9379":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"6:525:10770":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:9644:12269":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:2573:12448":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"5:2636:8869":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:12581:1588":{"crate_id":2,"path":["core","core_arch","arch","x86_64"],"kind":"module"},"17:11841:10193":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"5:6653:241":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"6:4828:11225":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:41194:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"6:5951:11479":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:9831:12282":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"6:4662:11147":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:39590:11980":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:1564:7979":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:10608:9428":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"16:534:9315":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:6730:13393":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:20608:13211":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"17:12926:10497":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:7809:11751":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:10011:8000":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:41410:8282":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:44428:8782":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"5:1056:33701":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:6075:9773":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"5:2116:11925":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:5679:12473":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"16:5963:191":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"5:4347:9726":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:45537:8595":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:4115:12766":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"12:1065:34882":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:39567:11976":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:9422:12257":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:20884:13209":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"16:6903:8481":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"6:4307:11019":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:11199:10061":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:2862:9130":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"9:956:19056":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"6:4649:11143":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"9:622:19073":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"1:3667:12459":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:9068:216":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:3217:31329":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:10466:11834":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"16:4849:9395":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:11161:10057":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:4259:204":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:3532:9719":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:39716:11992":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:41403:8280":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:11576:10156":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:8148:11991":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"3:229:207":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:39359:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:31737:2553":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:8499:11756":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:20886:8783":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:42500:7996":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:39236:11953":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:11787:10185":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:13091:10538":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"16:3566:9375":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:2361:13050":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:44446:8843":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:2868:9131":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"6:4697:11163":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:10921:1743":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"16:7309:9330":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"6:4483:11104":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:8852:13191":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:46606:7551":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"12:1866:11920":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:13148:10554":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"0:258:1687":{"crate_id":0,"path":["httparse","ParserConfig"],"kind":"struct"},"1:5686:12476":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:6542:9795":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:46287:8768":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:12046:10241":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:11951:10224":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"18:113:12741":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:12060:10242":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:2613:12449":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"3:0:434":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:44729:8835":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"16:2631:9051":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:12748:10454":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"5:7290:9696":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"16:4297:9048":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"16:6316:11864":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"6:5990:11490":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:9328:12254":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"5:3671:12397":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"6:4841:11235":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"6:4900:11272":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:9681:9471":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"6:481:10744":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"6:4218:10957":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"16:7388:12367":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:9488:12264":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:847:7979":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"17:13176:10561":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:2784:7860":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"2:43212:13288":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:11288:10083":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:4669:13116":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"6:1710:10938":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:13024:10521":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:4844:13154":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:11748:10181":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:13354:10626":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:10385:11830":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"17:13518:10670":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"5:7210:221":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"17:12934:10500":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:12674:10443":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:12860:10482":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:8871:12240":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:39179:8393":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"12:659:7887":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:3346:9724":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:13506:10668":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:5163:9173":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:7226:7676":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:6576:214":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:5347:12469":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:41417:8283":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"17:11259:10074":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:4086:12764":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:5948:11934":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"12:1852:11918":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:9293:12251":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"5:2912:33292":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:41654:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:10950:9808":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"6:6541:11566":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:44376:8776":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:11666:13285":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"9:33:12611":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"9:0:2397":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"5:7235:12407":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"16:2771:9001":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"16:6567:8970":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:12730:10449":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"1:11029:24736":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"0:206:1648":{"crate_id":0,"path":["httparse","Error","Token"],"kind":"variant"},"17:12756:10455":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"6:119:13808":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"17:11368:10106":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:5432:12472":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"1:4318:12464":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:10546:20194":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"5:5773:9730":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:10625:9417":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:40849:180":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:3871:13100":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"6:578:10798":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:11147:9809":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:21635:11944":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:29983:1614":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:2793:13199":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"0:197:127":{"crate_id":0,"path":["httparse","Error"],"kind":"enum"},"2:20696:13203":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"1:4564:11581":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"5:2905:7936":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:12909:10492":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"17:10822:20197":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:46533:8732":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:11882:1468":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"6:0:804":{"crate_id":6,"path":["libc"],"kind":"module"},"17:11149:10054":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:9857:12286":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:42188:12009":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:679:12975":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"1:7849:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:12225:10274":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:10708:11837":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"17:2916:12237":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"12:834:12381":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:42908:8383":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"6:1723:10942":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:10245:12301":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:13071:10531":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:10630:12526":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:10216:7981":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"6:5000:11316":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:13536:10676":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"16:5219:9399":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:13126:10549":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"18:507:9907":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"16:7659:20134":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:13100:10539":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:39632:11984":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:2772:7857":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"16:3263:10699":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:43233:12033":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"18:660:12222":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:11594:10157":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:8351:8555":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:2482:2554":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:40611:8587":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:43560:208":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:6747:13201":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:42684:8386":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"17:9764:11819":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:38904:200":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"16:7044:34886":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"5:813:9708":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"17:10283:12304":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:39283:8393":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"5:7031:8880":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"16:7435:9102":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"16:5996:12320":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"9:649:19074":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"2:4385:9751":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:4671:13119":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:12278:10280":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:4064:12763":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:10001:12769":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:40722:7657":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:2815:9125":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:11880:729":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:39681:11987":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"6:1550:10830":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:5999:9787":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:20853:13117":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:8814:7887":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:7671:12037":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"12:2198:10728":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:40713:7887":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"12:762:9696":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"1:8161:7983":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:40840:7887":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"16:5510:9337":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"5:3151:11920":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"6:4727:11179":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"6:6719:11653":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"6:7428:11702":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"16:6137:11853":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"6:6512:11554":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:12836:10477":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:11889:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:45097:8717":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:4805:11215":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"6:7195:11688":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:9118:34891":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"5:4284:9726":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"5:2407:8871":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:12073:10243":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:8174:12500":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:10314:12505":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"18:719:9927":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"16:7059:7657":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"6:4248:10975":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"5:4085:9724":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:42802:8390":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:2788:13197":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:11609:8372":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"0:164:1905":{"crate_id":0,"path":["httparse","parse_headers"],"kind":"function"},"2:43624:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:9577:9945":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:43377:8366":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"6:5878:11448":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"5:3953:9703":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:1921:11729":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:562:9476":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:11864:410":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:20456:31069":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"5:677:228":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:1989:181":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:2366:186":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:22240:7971":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:39730:11993":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:1962:12236":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"16:7909:11906":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:2481:13117":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:13492:10661":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"6:4929:11281":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:2252:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:39599:11981":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"16:5737:9309":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"16:6252:9169":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:9193:34890":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"5:3164:34810":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:1592:11920":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"16:7847:10716":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:39392:8652":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:2831:9782":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:8941:12241":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:12103:10248":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:2714:7853":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"12:0:2400":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"2:42173:11747":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"6:4795:11209":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:39326:13358":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:46457:8834":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"16:7825:9385":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:40532:11734":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:10520:10004":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:42951:8394":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:2967:7675":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:11877:731":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:9086:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"5:7105:8876":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"0:0:2160":{"crate_id":0,"path":["httparse"],"kind":"module"},"17:11186:10060":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"16:7452:195":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:8798:7979":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"1:10684:11751":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"16:5447:12311":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"16:4689:9376":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:413:162":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:1083:12389":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"16:2282:9003":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:2213:9746":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"17:13279:10613":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:20877:13117":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"12:822:12987":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:20645:13212":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"16:3010:19267":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:7665:12973":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:10357:9804":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"17:13168:10560":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:10420:9995":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"6:4237:10967":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:11835:12976":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"6:1704:10935":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:8790:8509":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"16:6359:11866":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:22339:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"12:810:12390":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"0:198:1640":{"crate_id":0,"path":["httparse","Error","HeaderName"],"kind":"variant"},"2:38816:195":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:4246:12463":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:10973:10022":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:553:10785":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"5:861:9710":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"6:1677:10922":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:44875:8848":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:11774:10184":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:10944:9807":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:9601:9946":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:40874:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:8218:7659":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"16:2261:19239":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:22306:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"16:6298:11856":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"1:5549:203":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"6:7452:11706":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"0:200:1642":{"crate_id":0,"path":["httparse","Error","HeaderValue"],"kind":"variant"},"17:9433:12258":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:8631:9418":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"6:4757:11191":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:8921:12508":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"1:7484:12531":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:10694:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:46099:8718":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:12630:10412":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"14:187:19217":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:11884:1470":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"16:4385:9172":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:20858:13204":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"17:487:12229":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:10139:9940":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"6:473:10739":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"16:2657:9031":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:2476:12447":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:4:998":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:9283:12250":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:8510:8484":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:6528:13190":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:44707:8764":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:42917:8395":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"9:505:12629":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"5:4868:9724":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:39376:30960":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"12:1029:12386":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:9358:8735":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:5755:9786":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:48552:13240":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"2:10050:7984":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:40588:12040":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"17:11070:10042":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:43353:8359":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:4268:12413":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"16:6472:9092":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:9738:11816":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"1:8441:13165":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:4498:13146":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"1:10462:7950":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"5:961:9703":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:10360:11822":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:20733:13207":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:3455:13077":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:2329:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:21727:30966":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:10796:9456":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:9071:34896":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:4330:9750":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:10721:9486":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:38785:8786":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2:48935:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:10182:9987":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:2706:222":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"16:4662:8972":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"6:1534:10822":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"16:6668:10704":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"16:5235:10701":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:44232:8736":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:46747:7558":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"16:7942:12372":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:5492:11491":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:8089:8504":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"0:195:1946":{"crate_id":0,"path":["httparse","parse_chunk_size"],"kind":"function"},"17:13393:10637":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:8393:20191":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:38840:196":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"18:652:9907":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"6:4328:11027":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:2933:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:484:9775":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"16:7872:11900":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:45751:8790":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:13382:10633":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"16:5411:9321":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:11350:12459":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"12:274:11911":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:2695:217":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"16:7249:12360":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"6:5759:11377":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"16:7890:11903":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:42620:1615":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:10528:12308":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:42192:8009":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:44677:8729":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:10419:12454":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"1:6359:7948":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"16:4357:9305":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:1554:9724":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:8811:12637":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"5:4155:7979":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:45601:8841":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:1674:1071":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:30025:30944":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"5:1981:8510":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"17:11639:10167":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:40954:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"6:6773:11678":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"5:1382:7887":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"6:1609:10869":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:11327:9813":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"6:4334:11030":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"12:2184:10726":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"6:7511:11719":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"9:920:19055":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:8339:20189":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"7:0:1514":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:8744:12505":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:10837:12472":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"6:7446:11705":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"5:3610:9703":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:41234:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"17:9475:12263":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:9401:9937":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:3391:12458":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:44584:8655":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"6:4408:11065":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"5:5441:9732":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"6:6634:11598":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:21687:30975":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"16:7511:9361":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:12398:9773":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"16:0:2403":{"crate_id":16,"path":["gimli"],"kind":"module"},"6:586:10803":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"17:10532:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:12190:13365":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:41154:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:11014:10027":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:3373:8488":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:4191:8294":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:11888:1108":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:39927:7948":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"14:165:19210":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:11391:12460":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"6:4369:11048":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:9791:11821":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:10849:24725":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:914:9696":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"2:4028:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"16:4921:9058":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:3240:12457":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"6:6530:11561":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:7704:12487":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:1074:12386":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"16:2509:9101":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"5:36:9700":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:8991:34897":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:3403:13315":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"2:29763:13097":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"6:7487:11714":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:43373:8365":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:11886:777":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"6:4981:11308":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"6:4781:11201":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"9:827:19145":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:10161:7988":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:42450:7990":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:11163:1857":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:11203:8478":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"16:6161:20126":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:12349:10290":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:2524:147":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"1:11486:11764":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:2827:13408":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"7:79:19047":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:11056:8469":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"16:3457:9507":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:44631:8654":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:46571:7549":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:9919:7979":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:11300:10086":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:13047:10524":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"12:393:12756":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:46495:8766":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:9108:12244":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:10933:9806":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:39969:12000":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:10445:9996":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:8967:12514":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:7708:12421":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"13:110:8155":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:39961:11732":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:43389:8501":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:11345:8401":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"16:7396:20132":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"16:5839:20125":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"16:6109:9412":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:3439:29714":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:2527:132":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:956:12383":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"12:1120:12388":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"0:223:1664":{"crate_id":0,"path":["httparse","InvalidChunkSize"],"kind":"struct"},"1:646:12974":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:43381:8367":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"5:1213:12386":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"16:6463:11870":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:5172:187":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:8234:13127":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"8:0:2396":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"6:4489:11106":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:8180:12502":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:8785:657":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"2:40755:7658":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:39702:11991":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:9947:20275":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"16:4262:9171":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:8868:13192":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:5563:9785":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"12:751:9719":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"18:690:11807":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:6635:13401":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"6:4322:11026":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:43385:8368":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:7275:27255":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:43641:8779":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"14:31:12373":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"12:1555:12392":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"5:7023:195":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"17:12768:10460":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:11879:733":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"5:778:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"5:6250:9703":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:1571:9719":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"5:1076:12761":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:21793:11948":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"15:0:2402":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:10997:10023":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:7819:8462":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:11868:308":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:25647:8722":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:9475:9760":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:10724:24740":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:3670:12460":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:10321:9989":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"0:295:1774":{"crate_id":0,"path":["httparse","Response"],"kind":"struct"},"17:13141:10553":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:39539:11972":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"5:1463:12396":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:5712:12477":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:21399:13117":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"16:6052:12346":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:7596:32082":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:7681:12038":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"1:11233:8493":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:3159:12452":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"16:3026:9503":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:6123:12478":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"1:9022:8579":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"1:3605:13096":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"6:561:10790":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"17:8561:9475":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"16:7483:9334":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"5:7001:34808":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"12:1003:12385":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:48948:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:42361:12428":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:3161:12453":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"5:7307:8585":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"17:9371:12244":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:9155:12245":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:9458:12260":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"6:1571:10845":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"6:7481:11713":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"2:42933:8392":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"5:7180:8865":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"16:6210:9363":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"12:1845:9696":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"2:1762:8615":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"5:7224:8884":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:8907:8468":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"1:4102:13126":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"5:6403:9703":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"16:6743:20129":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:2961:7673":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"5:1040:12760":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"6:4476:11102":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:45331:8716":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"12:1840:9719":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"16:2749:9000":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"16:6690:9326":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"1:3973:13107":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"5:1242:12389":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:9362:9940":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:13059:10530":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:9751:11818":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:4149:8750":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"6:4871:11256":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"0:210:1652":{"crate_id":0,"path":["httparse","Error","Version"],"kind":"variant"},"2:21:670":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"6:5902:11460":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:38992:12423":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:11164:12051":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:2208:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:7473:9476":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"5:6961:8858":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"18:574:9907":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:3192:134":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"17:13007:10514":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"16:7288:11892":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:10845:9996":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:40781:207":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:39642:11985":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:7541:9801":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"5:1413:11917":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:10682:9420":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:41114:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:10497:20302":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"2:40773:190":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:8137:20183":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:48974:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:2360:179":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"5:6536:9732":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:21814:8730":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:6939:8497":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"6:4890:11266":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:2874:13413":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:12263:12419":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:2809:13406":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:6884:12559":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:9589:9768":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"2:11600:8369":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"16:3689:9027":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:2946:8315":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"16:5460:11843":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:45177:8744":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"18:681:11804":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"6:6488:11537":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:10894:9477":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:11217:10069":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"12:632:7979":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:3959:9724":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"16:2825:9377":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:43357:8361":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"6:4379:11054":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:8881:34898":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:4554:13105":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:7601:8461":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"17:11106:10049":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:2324:185":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"16:7298:11893":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:39498:11967":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:45255:8740":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"6:7218:11700":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:6496:20128":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"9:676:19061":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"12:985:11888":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"6:7463:11710":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:9304:140":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:6363:12480":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:11615:8371":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:1786:12439":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"16:2727:9382":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:11734:9955":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"17:8494:9344":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"16:2579:9378":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:9029:207":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"18:707:8372":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:904:9719":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"16:5628:9366":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:2819:13198":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:2615:127":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:38926:7972":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"6:4637:11136":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:42578:8378":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"6:4628:11131":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:4893:7649":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:5240:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:8105:11753":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"5:1404:11916":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:44344:8787":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"5:878:7979":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"12:1628:9698":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:4263:12412":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"5:6985:9719":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"17:12237:10275":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:7552:8312":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"6:6611:11591":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"11:0:2399":{"crate_id":11,"path":["adler"],"kind":"module"},"1:11881:1471":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:20725:13117":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:6649:11602":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:1847:12442":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"1:8493:7979":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:11133:7967":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:41274:7560":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"5:271:9703":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"6:4583:11121":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:7948:12493":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:40503:13095":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"18:736:23937":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:5558:20123":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"12:738:11917":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"2:2601:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:13134:10552":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"5:3995:7980":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:962:12384":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:2210:12446":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"6:4733:11182":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:2343:11728":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"15:193:12749":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:11251:12056":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:10374:11826":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:39312:11961":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:6472:12481":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:7857:12490":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:8323:8369":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"5:3130:34811":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"6:4703:11166":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"12:669:12376":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"7:32:19040":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:42542:7993":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:43198:12028":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:20424:30864":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:8944:24729":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"6:4611:11123":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:939:12987":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:7596:12485":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"6:4687:11157":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:870:7887":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"5:7193:8883":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:9820:12281":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:7559:13397":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"16:5780:11846":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"6:5800:11398":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:3448:13058":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:42838:8387":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:242:12226":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"16:5472:9049":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:42421:7976":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:31786:7855":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:355:12429":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:46580:2374":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:10583:20195":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:13557:10679":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:3204:13333":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:31773:12421":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:38999:8295":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"6:6053:11504":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"14:7:12373":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:1771:12232":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:12322:10287":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"6:653:14166":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:11054:10038":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"16:7117:34888":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:1580:11918":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:3929:13105":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:42652:7987":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:11034:10037":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"16:5525:9166":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"9:19:12609":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"6:493:10749":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"5:6697:9735":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"18:531:11801":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:7943:12492":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:1559:10836":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"6:4224:10958":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"6:7475:11712":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"16:7357:10711":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:9382:9935":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:8096:11752":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"16:6270:9320":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:9090:8281":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"5:1454:195":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:7688:13008":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:39194:8723":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:42898:8384":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:13366:10629":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"5:6722:9745":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:13192:10564":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"5:7117:12986":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"16:5596:9352":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:40446:152":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"17:13231:10576":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"18:491:11800":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"9:863:19053":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:9909:9948":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:4119:12411":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:4094:12765":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:9119:25228":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","fast","DtorState"],"kind":"enum"},"16:4635:9396":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"5:3185:11921":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"18:521:23939":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:39951:9758":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:13340:10620":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:3051:12450":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"9:709:11743":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"12:320:9692":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:925:12376":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:42522:7994":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:20458:31066":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:20684:13117":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"1:8987:8481":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:10075:12292":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"17:3249:12239":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"16:7267:11889":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:42610:8380":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:48922:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:10714:11753":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:7792:9472":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:46551:2317":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:42702:8385":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:42888:8382":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"1:10654:12045":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"6:572:10795":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:9627:12267":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"18:624:34902":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:39558:11975":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"6:4451:11089":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:13158:10557":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"5:3118:7979":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:8248:12500":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:534:9776":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"6:4910:11273":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:1604:10867":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"16:3402:10700":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:9375:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"1:9877:8661":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:21651:8758":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:10455:9999":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"5:2077:9715":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"12:353:9694":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:9844:12284":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:21764:30951":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"1:11093:8472":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:45301:8725":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:21492:8830":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:12251:10276":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:43408:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"17:12485:10299":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:505:9715":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"5:2087:11923":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"16:5184:19237":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"17:10233:12300":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:2840:9126":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:11247:10073":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"1:1575:9696":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"11:36:10730":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"5:3923:9719":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:5014:12465":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:42430:7977":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:8418:20192":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:13114:10546":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"6:5967:11484":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:2518:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:22837:8751":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"16:7929:12369":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:2703:7852":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:734:141":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:42513:7991":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:9088:8280":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"6:4882:11261":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:8272:20187":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:9081:111":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:44477:8785":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"6:4261:10985":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:8056:9345":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"5:6565:9742":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"5:5862:9724":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:46708:7557":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"6:4422:11073":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:48987:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:6976:11931":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"6:4787:11204":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:3198:13334":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"6:4945:11286":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:12948:10503":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:10221:12299":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:12008:10236":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:43266:8374":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:3316:11999":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:42604:8381":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"6:6643:11601":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:11997:10234":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:5910:11461":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:41958:144":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"16:6070:9340":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"5:2916:33293":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:9096:191":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:6926:9797":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:9100:8285":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:7584:13117":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:2534:234":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"6:6079:11519":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:4568:11585":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"16:6593:9346":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"16:5388:9313":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"17:12955:10505":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:11867:1033":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"12:1859:11919":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:891:11917":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:41669:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"17:9671:12271":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"6:1687:10928":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:10416:12452":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:8110:20170":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"1:4166:12462":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"13:0:2394":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:39549:11973":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"17:8510:9399":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:43040:12015":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:12238:189":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:4340:8295":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"1:4566:11583":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"1:6286:163":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:7953:13085":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:10752:9459":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:11974:10233":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"16:6146:9028":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:2217:13042":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:247:12227":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"16:2300:9403":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"6:531:10773":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"5:2169:34872":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"6:5959:11481":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:44547:8619":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:48961:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:12638:10413":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:10672:8500":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"6:5823:11411":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:41034:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"5:4772:201":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"5:781:9705":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:43161:12027":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:1568:7887":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"5:5145:9703":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:13221:10571":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"16:7329:9331":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:42461:7997":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:9722:1652":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"12:853:12383":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:10642:20196":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"6:6000:11493":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:8701:9495":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:43086:12025":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"16:4574:9357":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:8162:20184":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:11876:734":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"5:6970:7887":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"17:11547:10151":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"16:7469:9333":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"16:5703:9181":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:11315:10092":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:7873:8510":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:1827:8773":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:40697:7979":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"6:567:10793":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:21826:13098":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:30189:30957":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"17:11661:10168":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"6:4346:11039":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:11074:8570":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:39345:8839":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:39258:8394":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:48909:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:12514:10319":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:12118:10252":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:11706:9816":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:46591:7550":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:39266:13356":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"2:6546:7895":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:9778:11820":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"0:204:1646":{"crate_id":0,"path":["httparse","Error","Status"],"kind":"variant"},"16:6017:12334":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"16:7093:9150":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"6:4439:11083":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:10332:20300":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"16:4413:9409":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:13572:10680":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:9712:9947":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:30564:180":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:3114:7974":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:11828:10192":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:11559:10153":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"16:4545:9402":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:2847:13410":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:9040:131":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"17:11500:10139":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:10230:7986":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:20727:13205":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"16:153:9355":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:41773:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:31777:11951":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"1:11511:12058":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"12:646:7980":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:11862:367":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:2705:223":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"17:12884:10484":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:11218:8470":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:2320:9052":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:12198:10272":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:40688:2275":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:8333:7650":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:2835:13409":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:46617:7552":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:22405:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:39319:11962":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:9691:12273":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:8241:20186":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:9052:164":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:7865:12491":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:10108:12294":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:7797:12488":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:39206:30934":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:30083:30977":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:10867:8509":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"5:7015:7887":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:43429:8586":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:2852:13411":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"6:4862:11250":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"1:10659:12039":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:7127:13398":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"16:7278:9329":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:2857:13412":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:9930:9950":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:11874:631":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"17:8822:34894":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"6:4720:11177":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:11887:1524":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:41970:11743":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:39920:11996":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:9092:8282":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:46411:8825":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:39364:8777":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:10257:12302":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:3865:13101":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"12:2069:12385":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"6:4618:11124":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:44298:8641":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:11235:10070":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"17:11087:10044":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:8911:34899":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:8796:9932":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"5:5789:13728":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"6:6594:11589":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"18:96:12738":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:11528:10146":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"17:13459:10654":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"9:896:19054":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"18:644:9907":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"17:12797:10468":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:2867:207":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"2:42926:8391":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"17:12550:10350":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"6:4457:11092":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:12164:10259":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"5:686:110":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:9631:12268":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:2886:13416":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:42856:8388":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:10209:12471":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:12455:139":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:11412:12461":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:6322:12479":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"1:11863:923":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:2275:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:3187:231":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"16:7567:20133":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"12:725:11916":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"17:13527:10674":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:22438:8763":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:8762:8473":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:43365:8363":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:7585:8503":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"6:594:10808":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:8750:183":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:8820:8569":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:1753:11726":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:10422:12456":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"6:4402:11062":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"6:1617:10874":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:42756:7981":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:42592:8377":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"16:7603:9041":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:3232:13256":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"16:4786:9080":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"18:590:9915":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"6:5716:11360":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"12:1836:7887":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"5:1443:12377":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:8806:12507":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"15:175:12745":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:4727:9783":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:10062:12291":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:11384:8400":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:11556:8379":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:11865:1487":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"16:7557:11895":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:2707:108":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:39222:8772":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"17:9501:9933":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"12:1518:19208":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:11939:10222":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:40623:8769":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"6:1899:15147":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:44507:8749":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:8055:20172":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:38882:198":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:12265:10279":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"16:4606:9398":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"16:6654:9036":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:21748:30954":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:9111:12042":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:7650:12971":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:4751:11190":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:13404:10638":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:10729:7998":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:7034:12767":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"1:929:12377":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:2957:1915":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"16:6528:9104":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"6:6571:11588":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"16:5433:11839":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:41988:12008":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:11893:10198":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"5:6051:13242":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:43246:8373":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"16:6517:11871":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"16:6376:20127":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:3430:8275":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"17:12609:10402":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"16:6123:9317":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"12:1138:12389":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:4604:13350":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:11468:11763":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:12739:10453":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:3901:13102":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:920:12390":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"1:6475:13188":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"16:6345:9323":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:50283:11750":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"2:29989:2550":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:558:12431":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"5:1432:12376":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:11158:1374":{"crate_id":2,"path":["core","str"],"kind":"module"},"1:6226:203":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"1:361:12430":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:11869:1344":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"5:3728:9696":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"2:11419:8000":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:22372:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:44921:8840":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:9263:12248":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:8752:1615":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"6:62:13754":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"1:878:11916":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"5:286:7678":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:29949:2549":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:12510:13000":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:1986:182":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"6:7173:11687":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:1597:11921":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:7164:149":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:43611:8719":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:1586:11919":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"16:4749:9393":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:10310:12306":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:6611:12479":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"5:6324:7887":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:12176:10261":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"16:2367:8983":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"12:1681:143":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:1051:11888":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:3126:30175":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:4051:13255":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"6:4766:11194":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:8424:8466":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"5:3543:7980":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:43369:8364":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:9982:12441":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"6:487:10747":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:9234:12417":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"6:4520:11116":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:5938:11475":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:7160:133":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"6:4313:11021":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"16:3716:9400":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:39449:12424":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"16:6735:12349":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"0:101:207":{"crate_id":0,"path":["httparse","Result"],"kind":"typedef"},"1:1788:12440":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"16:6829:11884":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"16:6200:11854":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:9873:12288":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:39529:11970":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:5724:31148":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"2:9968:7983":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:39305:8392":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"18:582:7863":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:0:2404":{"crate_id":17,"path":["object"],"kind":"module"},"1:8240:12503":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"6:6667:11613":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:2549:9763":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"16:4817:9351":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:21136:13208":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"16:3632:9308":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:11174:10059":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:11343:10102":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"5:7133:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"6:1514:10814":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:4743:11186":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"5:4314:9724":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"12:300:11914":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:20439:30864":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:40705:7980":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"6:4921:11279":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:3016:12998":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:41687:109":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"17:12291:10281":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:10394:11831":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"17:11330:10098":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:3020:12999":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:8884:13193":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:46349:8831":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:11813:10189":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:20479:31064":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:10774:9521":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:3120:25531":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:8222:12040":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"5:1351:7979":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:42440:7989":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"6:499:10750":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"6:546:10782":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"6:5698:11347":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"18:599:34900":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"6:7440:11704":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:11485:10135":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"17:8368:20190":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:12033:10239":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:3667:7887":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"16:5815:20124":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:4440:8297":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"0:208:1650":{"crate_id":0,"path":["httparse","Error","TooManyHeaders"],"kind":"variant"},"17:1903:20233":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:11368:8398":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"6:4353:11043":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"5:3530:7979":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:40832:7980":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:45043:8593":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:43653:8828":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"16:3854:9358":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:8526:9473":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:4016:12410":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:40486:8712":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"6:4656:11144":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:40575:8833":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"2:3415:12408":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"2:22207:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"17:8814:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:2878:13414":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"16:6842:9374":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:9526:12265":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:9339:12255":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:20411:7863":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:6399:8496":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:11878:732":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:22174:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:8155:1615":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}