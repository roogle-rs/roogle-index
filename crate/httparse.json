{"root":"0:0:2303","crate_version":"1.8.0","includes_private":false,"index":{"0:82-0:73:2447":{"id":"0:82-0:73:2447","crate_id":0,"name":null,"span":{"filename":"src/simd/mod.rs","begin":[174,0],"end":[174,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(all(httparse_simd,\nnot(any(httparse_simd_target_feature_sse42,\nhttparse_simd_target_feature_avx2,)),\nany(target_arch = \"x86\", target_arch = \"x86_64\",),))]"],"deprecation":null,"inner":{"import":{"source":"self::runtime","name":"runtime","id":"0:73:2447","glob":true}}},"0:231":{"id":"0:231","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,27],"end":[182,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3411-0:258:1832":{"id":"b:2:3411-0:258:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3413:1599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[615,0],"end":[706,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"items":["0:147:998","0:148:1977"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:96:715":{"id":"0:96:715","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[168,4],"end":[170,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9505:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12518:32579":{"id":"2:12518:32579","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:8496"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:8512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,0],"end":[419,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:109:1833","0:110:1835","0:111:1849","0:112:1836","0:113:1857","0:114:1834","0:115:1876","0:116:1878","0:119:1886","0:122:1837","0:123:1917","0:126:1921"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8606:7808-0:295:1919":{"id":"a:2:8606:7808-0:295:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8606:7808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:294:657":{"id":"0:294:657","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[446,20],"end":[446,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,9],"end":[134,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2787:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:116:1878":{"id":"0:116:1878","crate_id":0,"name":"parse_request","span":{"filename":"src/lib.rs","begin":[345,4],"end":[351,5]},"visibility":"public","docs":"Parses a request with the given config.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["request",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":"'buf","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:229","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12471:26875":{"id":"2:12471:26875","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12066:447","str::splitn":"2:12468:26873","self::pattern":"2:12105:8496"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43641:8130","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:8512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:680-0:258:1832":{"id":"b:5:680-0:258:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:8087","5:683:8088","5:684:8089"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:265:451":{"id":"0:265:451","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[242,9],"end":[242,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParserConfig","id":"0:258:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[211,0],"end":[239,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:105:1824","0:106:1826","0:107:1657"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2576-0:270:1882":{"id":"b:2:2576-0:270:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2579:132","2:2580:1586"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2260-0:320:1888":{"id":"b:2:2260-0:320:1888","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2262:2649"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12413:32561":{"id":"2:12413:32561","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12500:32575":{"id":"2:12500:32575","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:8496"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12130:8511","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:111:1849":{"id":"0:111:1849","crate_id":0,"name":"multiple_spaces_in_request_line_delimiters_are_allowed","span":{"filename":"src/lib.rs","begin":[280,4],"end":[282,5]},"visibility":"public","docs":"Whether multiple spaces are allowed as delimiters in request lines.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:309":{"id":"0:309","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,16],"end":[601,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2576-0:320:1888":{"id":"b:2:2576-0:320:1888","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2579:132","2:2580:1586"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8606:7808-0:258:1832":{"id":"a:2:8606:7808-0:258:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8606:7808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12530:13353":{"id":"2:12530:13353","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4573:13353"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43827:8534","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2570-0:270:1882":{"id":"b:2:2570-0:270:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2572:741"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:237:1720":{"id":"0:237:1720","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[206,13],"end":[206,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"0:299:1986":{"id":"0:299:1986","crate_id":0,"name":"code","span":{"filename":"src/lib.rs","begin":[606,4],"end":[606,25]},"visibility":"public","docs":"The response code, such as `200`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u16"}}],"bindings":[]}}}}}},"2:2569:8026":{"id":"2:2569:8026","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2543:137"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:227":{"id":"0:227","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,16],"end":[182,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2785:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,22],"end":[203,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"2:2329:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8605:7809-0:223:1809":{"id":"a:2:8605:7809-0:223:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8605:7809","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:302":{"id":"0:302","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,9],"end":[601,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9530:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:305:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2581-0:197:132":{"id":"b:2:2581-0:197:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2584:132","2:2585:1584"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:233:1791":{"id":"0:233:1791","crate_id":0,"name":"Status","span":{"filename":"src/lib.rs","begin":[204,0],"end":[209,1]},"visibility":"public","docs":"The result of a successful parse pass.\n\n`Complete` is used when the buffer contained the complete value.\n`Partial` is used when parsing did not reach the end of the expected value,\nbut no invalid data was found.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:235:1820","0:238:1822"],"impls":["0:103","a:2:2775:240-0:233:1791","a:2:8605:7809-0:233:1791","a:2:2832:7820-0:233:1791","a:2:2792:250-0:233:1791","a:2:8606:7808-0:233:1791","b:2:2566-0:233:1791","b:2:2260-0:233:1791","b:2:2576-0:233:1791","b:2:2570-0:233:1791","b:2:2263-0:233:1791","b:2:3411-0:233:1791","b:2:2581-0:233:1791","b:5:680-0:233:1791","0:240","0:250","0:252","0:242","0:245","0:255","0:247"]}}},"5:5516":{"id":"5:5516","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5517:33239","5:5518:1973","5:5521:33240","5:5524:33241","5:5532:33242","5:5533:33243","5:5534:13473","5:5535:26252","5:5536:26251"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:280:715":{"id":"0:280:715","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[446,9],"end":[446,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9505:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:2090":{"id":"0:195:2090","crate_id":0,"name":"parse_chunk_size","span":{"filename":"src/lib.rs","begin":[1203,0],"end":[1266,1]},"visibility":"public","docs":"Parse a buffer of bytes as a chunk size.\n\nThe return value, if complete and successful, includes the index of the\nbuffer that parsing stopped at, and the size of the following chunk.\n\n# Example\n\n```\nlet buf = b\"4\\r\\nRust\\r\\n0\\r\\n\\r\\n\";\nassert_eq!(httparse::parse_chunk_size(buf),\n           Ok(httparse::Status::Complete((3, 4))));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"result::Result","id":"2:41702:229","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"primitive":"usize"},{"primitive":"u64"}]}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,15],"end":[203,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:244:451"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:323:1839":{"id":"0:323:1839","crate_id":0,"name":"value","span":{"filename":"src/lib.rs","begin":[719,4],"end":[719,23]},"visibility":"public","docs":"The value portion of a header.\n\nWhile headers **should** be ASCII-US, the specification allows for\nvalues that may not be, and so the value is stored as bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}}},"2:12439:26403":{"id":"2:12439:26403","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:8496"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8606:7808-0:197:132":{"id":"a:2:8606:7808-0:197:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8606:7808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:244:451":{"id":"0:244:451","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[203,15],"end":[203,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12459:26871":{"id":"2:12459:26871","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12105:8496","`DoubleEndedIterator`":"2:7517:125","prim@char":"1:12066:447","str::split":"2:12453:26867"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43537:8136","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:8512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5518:1973":{"id":"5:5518:1973","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7487:246"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2260-0:197:132":{"id":"b:2:2260-0:197:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2649"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:221":{"id":"0:221","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,37],"end":[134,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9530:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:222:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,22],"end":[203,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2786:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2260-0:270:1882":{"id":"b:2:2260-0:270:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2262:2649"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2580:1586":{"id":"2:2580:1586","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41702:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3411-0:270:1882":{"id":"b:2:3411-0:270:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:3413:1599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:147:998":{"id":"0:147:998","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[618,4],"end":[625,5]},"visibility":"public","docs":"Creates a new `Response` using a slice of `Header`s you have allocated.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["headers",{"borrowed_ref":{"lifetime":"'h","mutable":true,"type":{"slice":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12404:868":{"id":"2:12404:868","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12066:447"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:99":{"id":"0:99","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[185,0],"end":[189,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9535:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:100:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:0:2303":{"id":"0:0:2303","crate_id":0,"name":"httparse","span":{"filename":"src/lib.rs","begin":[1,0],"end":[2236,1]},"visibility":"public","docs":"# httparse\n\nA push library for parsing HTTP/1.x requests and responses.\n\nThe focus is on speed and safety. Unsafe code is used to keep parsing fast,\nbut unsafety is contained in a submodule, with invariants enforced. The\nparsing internals use an `Iterator` instead of direct indexing, while\nskipping bounds checks.\n\nWith Rust 1.27.0 or later, support for SIMD is enabled automatically.\nIf building an executable to be run on multiple platforms, and thus\nnot passing `target_feature` or `target_cpu` flags to the compiler,\nruntime detection can still detect SSE4.2 or AVX2 support to provide\nmassive wins.\n\nIf compiling for a specific target, remembering to include\n`-C target_cpu=native` allows the detection to become compile time checks,\nmaking it *even* faster.","links":{},"attrs":["#![deny(missing_docs)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:197:132","0:223:1809","0:101:229","0:233:1791","0:258:1832","0:270:1882","0:295:1919","0:320:1888","0:154:2007","0:164:2050","0:195:2090"],"is_stripped":false}}},"2:2265:24933":{"id":"2:2265:24933","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:223:1809":{"id":"0:223:1809","crate_id":0,"name":"InvalidChunkSize","span":{"filename":"src/lib.rs","begin":[183,0],"end":[183,28]},"visibility":"public","docs":"An error in parsing a chunk size.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":["a:2:2775:240-0:223:1809","a:2:8605:7809-0:223:1809","a:2:2832:7820-0:223:1809","a:2:2792:250-0:223:1809","a:2:8606:7808-0:223:1809","b:2:2566-0:223:1809","b:2:2260-0:223:1809","b:2:2576-0:223:1809","b:2:2570-0:223:1809","b:2:2263-0:223:1809","b:2:3411-0:223:1809","b:2:2581-0:223:1809","b:5:5790-0:223:1809","0:225","0:99","0:228","0:230","0:227","0:231"]}}},"0:267:715":{"id":"0:267:715","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[242,16],"end":[242,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9505:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:273:1942":{"id":"0:273:1942","crate_id":0,"name":"method","span":{"filename":"src/lib.rs","begin":[449,4],"end":[449,33]},"visibility":"public","docs":"The request method, such as `GET`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'buf","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}},"a:2:8605:7809-0:270:1882":{"id":"a:2:8605:7809-0:270:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8605:7809","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:154:2007":{"id":"0:154:2007","crate_id":0,"name":"EMPTY_HEADER","span":{"filename":"src/lib.rs","begin":[743,0],"end":[743,74]},"visibility":"public","docs":"An empty header, useful for constructing a `Header` array to pass in for\nparsing.\n\n# Example\n\n```\nlet headers = [httparse::EMPTY_HEADER; 64];\n```","links":{},"attrs":[],"deprecation":null,"inner":{"constant":{"type":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}}},"0:106:1826":{"id":"0:106:1826","crate_id":0,"name":"is_partial","span":{"filename":"src/lib.rs","begin":[223,4],"end":[228,5]},"visibility":"public","docs":"Convenience method to check if status is partial.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3411-0:295:1919":{"id":"b:2:3411-0:295:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:3413:1599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:206:1793":{"id":"0:206:1793","crate_id":0,"name":"Token","span":{"filename":"src/lib.rs","begin":[145,4],"end":[145,9]},"visibility":"default","docs":"Invalid byte where token is required.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2775:240-0:258:1832":{"id":"a:2:2775:240-0:258:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:322:976":{"id":"0:322:976","crate_id":0,"name":"name","span":{"filename":"src/lib.rs","begin":[714,4],"end":[714,21]},"visibility":"public","docs":"The name portion of a header.\n\nA header name must be valid ASCII-US, so it's safe to store as a `&str`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}},"2:12531:32581":{"id":"2:12531:32581","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4570:32581"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43836:8535","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:197:132":{"id":"b:2:2566-0:197:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:8026"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2263-0:295:1919":{"id":"b:2:2263-0:295:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2265:24933"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:213":{"id":"0:213","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,15],"end":[134,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:214:451"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,9],"end":[446,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9530:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:280:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12405:8033":{"id":"2:12405:8033","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:109:1833":{"id":"0:109:1833","crate_id":0,"name":"allow_spaces_after_header_name_in_responses","span":{"filename":"src/lib.rs","begin":[253,4],"end":[259,5]},"visibility":"public","docs":"Sets whether spaces and tabs should be allowed after header names in responses.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12509:26879":{"id":"2:12509:26879","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:8496"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:8512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12477:26878":{"id":"2:12477:26878","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:8512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12416:2420":{"id":"2:12416:2420","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41559:194"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10195:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10195:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,0],"end":[178,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","description","type_id","cause","provide"],"trait":{"name":"Error","id":"2:2628:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:98:1807"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2572:741":{"id":"2:2572:741","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:275:1678":{"id":"0:275:1678","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[453,4],"end":[453,27]},"visibility":"public","docs":"The request minor version, such as `1` for `HTTP/1.1`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}},"0:320:1888":{"id":"0:320:1888","crate_id":0,"name":"Header","span":{"filename":"src/lib.rs","begin":[710,0],"end":[720,1]},"visibility":"public","docs":"Represents a parsed header.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:322:976","0:323:1839"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2775:240-0:320:1888","a:2:8605:7809-0:320:1888","a:2:2832:7820-0:320:1888","a:2:2792:250-0:320:1888","a:2:8606:7808-0:320:1888","b:2:2566-0:320:1888","b:2:2260-0:320:1888","b:2:2576-0:320:1888","b:2:2570-0:320:1888","b:2:2263-0:320:1888","b:2:3411-0:320:1888","b:2:2581-0:320:1888","b:5:680-0:320:1888","0:331","0:151","0:329","0:326","0:324","0:334","0:336"]}}},"b:5:5790-0:197:132":{"id":"b:5:5790-0:197:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9535:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5788:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5792:1561"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12426:26859":{"id":"2:12426:26859","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12427:26860"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:132:998":{"id":"0:132:998","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[461,4],"end":[468,5]},"visibility":"public","docs":"Creates a new Request, using a slice of headers you allocate.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["headers",{"borrowed_ref":{"lifetime":"'h","mutable":true,"type":{"slice":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:334":{"id":"0:334","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,26],"end":[709,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2785:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5790-0:223:1809":{"id":"b:5:5790-0:223:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9535:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5788:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5792:1561"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12527:26249":{"id":"2:12527:26249","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:255":{"id":"0:255","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,37],"end":[203,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9530:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9530:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:257:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2260-0:223:1809":{"id":"b:2:2260-0:223:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2649"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:113:1857":{"id":"0:113:1857","crate_id":0,"name":"multiple_spaces_in_response_status_delimiters_are_allowed","span":{"filename":"src/lib.rs","begin":[304,4],"end":[306,5]},"visibility":"public","docs":"Whether multiple spaces are allowed as delimiters in response status lines.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12422:2061":{"id":"2:12422:2061","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10195:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10195:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12453:26867":{"id":"2:12453:26867","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12105:8496","`DoubleEndedIterator`":"2:7517:125","prim@char":"1:12066:447","str::split_whitespace":"2:12431:30566","str::rsplit":"2:12459:26871"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43519:8132","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:680-0:233:1791":{"id":"b:5:680-0:233:1791","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["5:682:8087","5:683:8088","5:684:8089"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:210:1797":{"id":"0:210:1797","crate_id":0,"name":"Version","span":{"filename":"src/lib.rs","begin":[149,4],"end":[149,11]},"visibility":"default","docs":"Invalid byte in HTTP version.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:2579:132":{"id":"2:2579:132","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"a:2:8606:7808-0:233:1791":{"id":"a:2:8606:7808-0:233:1791","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8606:7808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8606:7808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,16],"end":[446,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:204:1791":{"id":"0:204:1791","crate_id":0,"name":"Status","span":{"filename":"src/lib.rs","begin":[143,4],"end":[143,10]},"visibility":"default","docs":"Invalid byte in Response status.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:8606:7808-0:223:1809":{"id":"a:2:8606:7808-0:223:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8606:7808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:682:8087":{"id":"5:682:8087","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"5:5521:33240":{"id":"5:5521:33240","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7487:246"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7487:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12430:1951":{"id":"2:12430:1951","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43505:1760","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12427:26860":{"id":"2:12427:26860","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12426:26859"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2792:250-0:258:1832":{"id":"a:2:2792:250-0:258:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:254:657":{"id":"0:254:657","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[203,26],"end":[203,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:164:2050":{"id":"0:164:2050","crate_id":0,"name":"parse_headers","span":{"filename":"src/lib.rs","begin":[893,0],"end":[900,1]},"visibility":"public","docs":"Parse a buffer of bytes as headers.\n\nThe return value, if complete and successful, includes the index of the\nbuffer that parsing stopped at, and a sliced reference to the parsed\nheaders. The length of the slice will be equal to the number of properly\nparsed headers.\n\n# Example\n\n```\nlet buf = b\"Host: foo.bar\\nAccept: */*\\n\\nblah blah\";\nlet mut headers = [httparse::EMPTY_HEADER; 4];\nassert_eq!(httparse::parse_headers(buf, &mut headers),\n           Ok(httparse::Status::Complete((27, &[\n               httparse::Header { name: \"Host\", value: b\"foo.bar\" },\n               httparse::Header { name: \"Accept\", value: b\"*/*\" }\n           ][..]))));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["src",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":"'h","mutable":true,"type":{"slice":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:229","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"primitive":"usize"},{"borrowed_ref":{"lifetime":"'h","mutable":false,"type":{"slice":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":["'h"]}}},{"name":"'h","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2570-0:197:132":{"id":"b:2:2570-0:197:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2572:741"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:98:1807":{"id":"0:98:1807","crate_id":0,"name":"description","span":{"filename":"src/lib.rs","begin":[175,4],"end":[177,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12429:12309":{"id":"2:12429:12309","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12066:447"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43495:8521","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2792:250-0:295:1919":{"id":"a:2:2792:250-0:295:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12474:26877":{"id":"2:12474:26877","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12486:32568":{"id":"2:12486:32568","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12105:8496","`DoubleEndedIterator`":"2:7517:125","prim@char":"1:12066:447","str::rmatch_indices":"2:12489:32569"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43669:8530","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2775:240-0:197:132":{"id":"a:2:2775:240-0:197:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2832:7820-0:258:1832":{"id":"a:2:2832:7820-0:258:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:7820","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:238:1822":{"id":"0:238:1822","crate_id":0,"name":"Partial","span":{"filename":"src/lib.rs","begin":[208,4],"end":[208,11]},"visibility":"default","docs":"A partial result.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12442:26405":{"id":"2:12442:26405","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:8496"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:8512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5534:13473":{"id":"5:5534:13473","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7487:246"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7487:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2792:250-0:223:1809":{"id":"a:2:2792:250-0:223:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,33],"end":[134,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2786:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2584:132":{"id":"2:2584:132","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:31984:2709","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"5:5792:1561":{"id":"5:5792:1561","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8605:7809-0:233:1791":{"id":"a:2:8605:7809-0:233:1791","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8605:7809","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8605:7809","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2576-0:295:1919":{"id":"b:2:2576-0:295:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2579:132","2:2580:1586"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12435:30562":{"id":"2:12435:30562","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43811:8532","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12449:8032":{"id":"2:12449:8032","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41559:194","prim@char":"1:12066:447","self::pattern":"2:12105:8496"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:8512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2570-0:223:1809":{"id":"b:2:2570-0:223:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2572:741"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3411-0:233:1791":{"id":"b:2:3411-0:233:1791","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3413:1599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12528:32580":{"id":"2:12528:32580","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4572:32580"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43818:8533","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:270:1882":{"id":"0:270:1882","crate_id":0,"name":"Request","span":{"filename":"src/lib.rs","begin":[447,0],"end":[456,1]},"visibility":"public","docs":"A parsed Request.\n\nThe optional values will be `None` if a parse was not complete, and did not\nparse the associated property. This allows you to inspect the parts that\ncould be parsed, before reading more, in case you wish to exit early.\n\n# Example\n\n```no_run\nlet buf = b\"GET /404 HTTP/1.1\\r\\nHost:\";\nlet mut headers = [httparse::EMPTY_HEADER; 16];\nlet mut req = httparse::Request::new(&mut headers);\nlet res = req.parse(buf).unwrap();\nif res.is_partial() {\n    match req.path {\n        Some(ref path) => {\n            // check router for path.\n            // /404 doesn't exist? we could stop parsing\n        },\n        None => {\n            // must read more and parse again\n        }\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:273:1942","0:274:1101","0:275:1678","0:276:1887"],"fields_stripped":false}},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:129","a:2:2775:240-0:270:1882","a:2:8605:7809-0:270:1882","a:2:2832:7820-0:270:1882","a:2:2792:250-0:270:1882","a:2:8606:7808-0:270:1882","b:2:2566-0:270:1882","b:2:2260-0:270:1882","b:2:2576-0:270:1882","b:2:2570-0:270:1882","b:2:2263-0:270:1882","b:2:3411-0:270:1882","b:2:2581-0:270:1882","0:284","0:281","0:277","0:288","0:291"]}}},"0:295:1919":{"id":"0:295:1919","crate_id":0,"name":"Response","span":{"filename":"src/lib.rs","begin":[602,0],"end":[613,1]},"visibility":"public","docs":"A parsed Response.\n\nSee `Request` docs for explanation of optional values.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:298:1678","0:299:1986","0:300:1206","0:301:1887"],"fields_stripped":false}},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:144","a:2:2775:240-0:295:1919","a:2:8605:7809-0:295:1919","a:2:2832:7820-0:295:1919","a:2:2792:250-0:295:1919","a:2:8606:7808-0:295:1919","b:2:2566-0:295:1919","b:2:2260-0:295:1919","b:2:2576-0:295:1919","b:2:2570-0:295:1919","b:2:2263-0:295:1919","b:2:3411-0:295:1919","b:2:2581-0:295:1919","0:313","0:302","0:316","0:306","0:309"]}}},"0:328:451":{"id":"0:328:451","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[709,15],"end":[709,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12409:32560":{"id":"2:12409:32560","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12407:32559"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12468:26873":{"id":"2:12468:26873","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:8496","str::rsplitn":"2:12471:26875"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43623:8134","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2260-0:233:1791":{"id":"b:2:2260-0:233:1791","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2262:2649"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:301:1887":{"id":"0:301:1887","crate_id":0,"name":"headers","span":{"filename":"src/lib.rs","begin":[612,4],"end":[612,45]},"visibility":"public","docs":"The response headers.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'headers","mutable":true,"type":{"slice":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}}}}},"a:2:2832:7820-0:270:1882":{"id":"a:2:2832:7820-0:270:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:7820","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2570-0:233:1791":{"id":"b:2:2570-0:233:1791","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2572:741"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,16],"end":[182,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:203","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:229:657"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:114:1834":{"id":"0:114:1834","crate_id":0,"name":"allow_obsolete_multiline_headers_in_responses","span":{"filename":"src/lib.rs","begin":[331,4],"end":[337,5]},"visibility":"public","docs":"Sets whether obsolete multiline headers should be allowed.\n\nThis is an obsolete part of HTTP/1. Use at your own risk. If you are\nbuilding an HTTP library, the newlines (`\\r` and `\\n`) should be\nreplaced by spaces before handing the header value to the user.\n\n# Example\n\n```rust\nlet buf = b\"HTTP/1.1 200 OK\\r\\nFolded-Header: hello\\r\\n there \\r\\n\\r\\n\";\nlet mut headers = [httparse::EMPTY_HEADER; 16];\nlet mut response = httparse::Response::new(&mut headers);\n\nlet res = httparse::ParserConfig::default()\n    .allow_obsolete_multiline_headers_in_responses(true)\n    .parse_response(&mut response, buf);\n\nassert_eq!(res, Ok(httparse::Status::Complete(buf.len())));\n\nassert_eq!(response.headers.len(), 1);\nassert_eq!(response.headers[0].name, \"Folded-Header\");\nassert_eq!(response.headers[0].value, b\"hello\\r\\n there\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:139:1972":{"id":"0:139:1972","crate_id":0,"name":"parse_with_uninit_headers","span":{"filename":"src/lib.rs","begin":[523,4],"end":[529,5]},"visibility":"public","docs":"Try to parse a buffer of bytes into the Request,\nexcept use an uninitialized slice of `Header`s.\n\nFor more information, see `parse`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["headers",{"borrowed_ref":{"lifetime":"'h","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30230:1759","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:229","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:240":{"id":"0:240","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,9],"end":[203,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:2787:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2787:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:680-0:197:132":{"id":"b:5:680-0:197:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:682:8087","5:683:8088","5:684:8089"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12499:32574":{"id":"2:12499:32574","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2576-0:197:132":{"id":"b:2:2576-0:197:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:132","2:2580:1586"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3411-0:320:1888":{"id":"b:2:3411-0:320:1888","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3413:1599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2263-0:270:1882":{"id":"b:2:2263-0:270:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2265:24933"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2570-0:258:1832":{"id":"b:2:2570-0:258:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2572:741"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:336":{"id":"0:336","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,26],"end":[709,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:203","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:338:657"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8605:7809-0:258:1832":{"id":"a:2:8605:7809-0:258:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8605:7809","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2792:250-0:233:1791":{"id":"a:2:2792:250-0:233:1791","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2792:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2775:240-0:223:1809":{"id":"a:2:2775:240-0:223:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2832:7820-0:197:132":{"id":"a:2:2832:7820-0:197:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:7820","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5517:33239":{"id":"5:5517:33239","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:7826","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7220:9112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:7826","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:7220:9112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5536:26251":{"id":"5:5536:26251","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12527:26249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3411-0:223:1809":{"id":"b:2:3411-0:223:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3413:1599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:115:1876":{"id":"0:115:1876","crate_id":0,"name":"obsolete_multiline_headers_in_responses_are_allowed","span":{"filename":"src/lib.rs","begin":[340,4],"end":[342,5]},"visibility":"public","docs":"Whether obsolete multiline headers should be allowed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,20],"end":[446,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:203","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:294:657"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2260-0:295:1919":{"id":"b:2:2260-0:295:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2262:2649"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:230":{"id":"0:230","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,27],"end":[182,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2786:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:313":{"id":"0:313","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,20],"end":[601,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2785:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12465:32566":{"id":"2:12465:32566","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12105:8496","str::split":"2:12453:26867","prim@char":"1:12066:447","str::split_terminator":"2:12462:32565"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43587:8526","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:8512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2263-0:197:132":{"id":"b:2:2263-0:197:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:24933"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:222:715":{"id":"0:222:715","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[134,37],"end":[134,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9505:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:100:715":{"id":"0:100:715","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[186,4],"end":[188,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9505:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5524:33241":{"id":"5:5524:33241","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7487:246"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:219":{"id":"0:219","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,33],"end":[134,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2775:240-0:233:1791":{"id":"a:2:2775:240-0:233:1791","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:110:1835":{"id":"0:110:1835","crate_id":0,"name":"allow_multiple_spaces_in_request_line_delimiters","span":{"filename":"src/lib.rs","begin":[274,4],"end":[277,5]},"visibility":"public","docs":"Sets whether multiple spaces are allowed as delimiters in request lines.\n\n# Background\n\nThe [latest version of the HTTP/1.1 spec][spec] allows implementations to parse multiple\nwhitespace characters in place of the `SP` delimiters in the request line, including:\n\n> SP, HTAB, VT (%x0B), FF (%x0C), or bare CR\n\nThis option relaxes the parser to allow for multiple spaces, but does *not* allow the\nrequest line to contain the other mentioned whitespace characters.\n\n[spec]: https://httpwg.org/http-core/draft-ietf-httpbis-messaging-latest.html#rfc.section.3.p.3","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8606:7808-0:270:1882":{"id":"a:2:8606:7808-0:270:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8606:7808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3411-0:197:132":{"id":"b:2:3411-0:197:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3409:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3413:1599"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2581-0:270:1882":{"id":"b:2:2581-0:270:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2584:132","2:2585:1584"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2570-0:295:1919":{"id":"b:2:2570-0:295:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2572:741"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2581-0:223:1809":{"id":"b:2:2581-0:223:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2584:132","2:2585:1584"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12496:32572":{"id":"2:12496:32572","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2263-0:233:1791":{"id":"b:2:2263-0:233:1791","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2265:24933"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:197:132":{"id":"0:197:132","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[135,0],"end":[150,1]},"visibility":"public","docs":"An error in parsing.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:198:1785","0:200:1787","0:202:1789","0:204:1791","0:206:1793","0:208:1795","0:210:1797"],"impls":["a:2:2775:240-0:197:132","a:2:8605:7809-0:197:132","a:2:2832:7820-0:197:132","a:2:2792:250-0:197:132","a:2:8606:7808-0:197:132","b:2:2566-0:197:132","b:2:2260-0:197:132","b:2:2576-0:197:132","b:2:2570-0:197:132","b:2:2263-0:197:132","b:2:3411-0:197:132","b:2:2581-0:197:132","b:5:680-0:197:132","b:5:5790-0:197:132","0:219","0:221","0:218","0:95","0:213","0:97","0:216","0:215","0:212"]}}},"0:257:715":{"id":"0:257:715","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[203,37],"end":[203,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9505:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:324":{"id":"0:324","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,9],"end":[709,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2787:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,22],"end":[134,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:203","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:217:657"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12425:32563":{"id":"2:12425:32563","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12072:1502","crate::ops::IndexMut":"2:3076:13383","str::slice_unchecked":"2:12424:32562"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12494:32571":{"id":"2:12494:32571","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:223:1809":{"id":"b:2:2566-0:223:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:8026"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:316":{"id":"0:316","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,20],"end":[601,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:203","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:319:657"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:331":{"id":"0:331","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,22],"end":[709,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2329:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2832:7820-0:320:1888":{"id":"a:2:2832:7820-0:320:1888","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:7820","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12524:26779":{"id":"2:12524:26779","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39513:26772","Self::is_ascii":"2:12523:26253"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39513:26772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2576-0:233:1791":{"id":"b:2:2576-0:233:1791","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2579:132","2:2580:1586"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2566-0:270:1882":{"id":"b:2:2566-0:270:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2569:8026"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:319:657":{"id":"0:319:657","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[601,20],"end":[601,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2581-0:258:1832":{"id":"b:2:2581-0:258:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2584:132","2:2585:1584"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:112:1836":{"id":"0:112:1836","crate_id":0,"name":"allow_multiple_spaces_in_response_status_delimiters","span":{"filename":"src/lib.rs","begin":[298,4],"end":[301,5]},"visibility":"public","docs":"Sets whether multiple spaces are allowed as delimiters in response status lines.\n\n# Background\n\nThe [latest version of the HTTP/1.1 spec][spec] allows implementations to parse multiple\nwhitespace characters in place of the `SP` delimiters in the response status line,\nincluding:\n\n> SP, HTAB, VT (%x0B), FF (%x0C), or bare CR\n\nThis option relaxes the parser to allow for multiple spaces, but does *not* allow the status\nline to contain the other mentioned whitespace characters.\n\n[spec]: https://httpwg.org/http-core/draft-ietf-httpbis-messaging-latest.html#rfc.section.4.p.3","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5533:33243":{"id":"5:5533:33243","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:7826","`String`":"5:7487:246"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:7826","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7220:9112","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:123:1917":{"id":"0:123:1917","crate_id":0,"name":"parse_response","span":{"filename":"src/lib.rs","begin":[402,4],"end":[408,5]},"visibility":"public","docs":"Parses a response with the given config.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["response",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":"'buf","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:229","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12424:32562":{"id":"2:12424:32562","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12072:1502","str::slice_mut_unchecked":"2:12425:32563","crate::ops::Index":"2:3072:13382"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12498:32573":{"id":"2:12498:32573","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:233:1791":{"id":"b:2:2566-0:233:1791","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2569:8026"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:683:8088":{"id":"5:683:8088","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12403":{"id":"2:12403","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12404:868","2:12405:8033","2:12406:32558","2:12407:32559","2:12409:32560","2:12412:25827","2:12413:32561","2:12414:339","2:12415:338","2:12416:2420","2:12418:13149","2:12420:2432","2:12422:2061","2:12424:32562","2:12425:32563","2:12426:26859","2:12427:26860","2:12428:12299","2:12429:12309","2:12430:1951","2:12431:30566","2:12432:30569","2:12433:13126","2:12434:32564","2:12435:30562","2:12436:2030","2:12439:26403","2:12442:26405","2:12445:8072","2:12449:8032","2:12453:26867","2:12456:26869","2:12459:26871","2:12462:32565","2:12465:32566","2:12468:26873","2:12471:26875","2:12474:26877","2:12477:26878","2:12480:2659","2:12483:32567","2:12486:32568","2:12489:32569","2:12492:32570","2:12494:32571","2:12496:32572","2:12498:32573","2:12499:32574","2:12500:32575","2:12503:32576","2:12506:25041","2:12509:26879","2:12512:32577","2:12515:32578","2:12518:32579","2:12521:1977","2:12523:26253","2:12524:26779","2:12525:26254","2:12526:26250","2:12527:26249","2:12528:32580","2:12530:13353","2:12531:32581"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,26],"end":[203,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2785:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:235:1820":{"id":"0:235:1820","crate_id":0,"name":"Complete","span":{"filename":"src/lib.rs","begin":[206,4],"end":[206,15]},"visibility":"default","docs":"The completed result.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:237:1720"]},"discriminant":null}}},"2:12406:32558":{"id":"2:12406:32558","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8605:7809-0:197:132":{"id":"a:2:8605:7809-0:197:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8605:7809","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2570-0:320:1888":{"id":"b:2:2570-0:320:1888","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2572:741"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12412:25827":{"id":"2:12412:25827","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11665:2002"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:129":{"id":"0:129","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[458,0],"end":[555,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"items":["0:132:998","0:139:1972","0:141:1977"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12428:12299":{"id":"2:12428:12299","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12066:447"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43489:8522","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12526:26250":{"id":"2:12526:26250","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:338:657":{"id":"0:338:657","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[709,26],"end":[709,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2792:250-0:320:1888":{"id":"a:2:2792:250-0:320:1888","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:95":{"id":"0:95","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[167,0],"end":[171,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9535:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:96:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:126:1921":{"id":"0:126:1921","crate_id":0,"name":"parse_response_with_uninit_headers","span":{"filename":"src/lib.rs","begin":[411,4],"end":[418,5]},"visibility":"public","docs":"Parses a response with the given config and buffer for headers","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["response",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":"'buf","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["headers",{"borrowed_ref":{"lifetime":"'headers","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30230:1759","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:229","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:107:1657":{"id":"0:107:1657","crate_id":0,"name":"unwrap","span":{"filename":"src/lib.rs","begin":[233,4],"end":[238,5]},"visibility":"public","docs":"Convenience method to unwrap a Complete value. Panics if the status is\n`Partial`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:258:1832":{"id":"b:2:2566-0:258:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2569:8026"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,22],"end":[134,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2785:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:269:60":{"id":"0:269:60","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[242,23],"end":[242,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ParserConfig","id":"0:258:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208:1795":{"id":"0:208:1795","crate_id":0,"name":"TooManyHeaders","span":{"filename":"src/lib.rs","begin":[147,4],"end":[147,18]},"visibility":"default","docs":"Parsed more headers than provided buffer can contain.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:8605:7809-0:320:1888":{"id":"a:2:8605:7809-0:320:1888","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8605:7809","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8606:7808-0:320:1888":{"id":"a:2:8606:7808-0:320:1888","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8606:7808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:151":{"id":"0:151","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[722,0],"end":[733,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9530:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:153:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:200:1787":{"id":"0:200:1787","crate_id":0,"name":"HeaderValue","span":{"filename":"src/lib.rs","begin":[139,4],"end":[139,15]},"visibility":"default","docs":"Invalid byte in header value.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12445:8072":{"id":"2:12445:8072","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41559:194","prim@char":"1:12066:447","self::pattern":"2:12105:8496"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12456:26869":{"id":"2:12456:26869","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:8496"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11921:8149","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12462:32565":{"id":"2:12462:32565","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12105:8496","str::split":"2:12453:26867","prim@char":"1:12066:447","`DoubleEndedIterator`":"2:7517:125","str::rsplit_terminator":"2:12465:32566"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43569:8527","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5532:33242":{"id":"5:5532:33242","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7487:246"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:105:1824":{"id":"0:105:1824","crate_id":0,"name":"is_complete","span":{"filename":"src/lib.rs","begin":[214,4],"end":[219,5]},"visibility":"public","docs":"Convenience method to check if status is complete.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148:1977":{"id":"0:148:1977","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[628,4],"end":[630,5]},"visibility":"public","docs":"Try to parse a buffer of bytes into this `Response`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:229","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:229:657":{"id":"0:229:657","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[182,16],"end":[182,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[242,9],"end":[242,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:265:451"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12418:13149":{"id":"2:12418:13149","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41559:194"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10195:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10195:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:680-0:320:1888":{"id":"b:5:680-0:320:1888","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:676:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:682:8087","5:683:8088","5:684:8089"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2775:240-0:320:1888":{"id":"a:2:2775:240-0:320:1888","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12414:339":{"id":"2:12414:339","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12415:338","`u8`":"1:12083:1608"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:252":{"id":"0:252","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,26],"end":[203,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2324:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2324:203","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:254:657"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12503:32576":{"id":"2:12503:32576","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:8496"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12521:1977":{"id":"2:12521:1977","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12066:131","`FromStr`":"2:12065:8520"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41702:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12065:8520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12065:8520","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2262:2649":{"id":"2:2262:2649","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2775:240-0:270:1882":{"id":"a:2:2775:240-0:270:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2263-0:258:1832":{"id":"b:2:2263-0:258:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:24933"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2263-0:223:1809":{"id":"b:2:2263-0:223:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2265:24933"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3413:1599":{"id":"2:3413:1599","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39326:8772","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:198:1785":{"id":"0:198:1785","crate_id":0,"name":"HeaderName","span":{"filename":"src/lib.rs","begin":[137,4],"end":[137,14]},"visibility":"default","docs":"Invalid byte in header name.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12492:32570":{"id":"2:12492:32570","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12431:30566":{"id":"2:12431:30566","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12432:30569"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43793:8524","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2832:7820-0:223:1809":{"id":"a:2:2832:7820-0:223:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:7820","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2581-0:320:1888":{"id":"b:2:2581-0:320:1888","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2584:132","2:2585:1584"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12512:32577":{"id":"2:12512:32577","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:8496"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:8512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2585:1584":{"id":"2:2585:1584","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41702:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:276:1887":{"id":"0:276:1887","crate_id":0,"name":"headers","span":{"filename":"src/lib.rs","begin":[455,4],"end":[455,45]},"visibility":"public","docs":"The request headers.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'headers","mutable":true,"type":{"slice":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}}}}},"b:2:2260-0:258:1832":{"id":"b:2:2260-0:258:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2254:99","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2262:2649"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[242,16],"end":[242,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9530:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12483:32567":{"id":"2:12483:32567","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12105:8496","`DoubleEndedIterator`":"2:7517:125","prim@char":"1:12066:447","str::matches":"2:12480:2659"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43741:8529","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:8512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12515:32578":{"id":"2:12515:32578","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:8496"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2263-0:320:1888":{"id":"b:2:2263-0:320:1888","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2782:2704","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2257:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2265:24933"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2832:7820-0:295:1919":{"id":"a:2:2832:7820-0:295:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:7820","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12434:32564":{"id":"2:12434:32564","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43783:8525","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8605:7809-0:295:1919":{"id":"a:2:8605:7809-0:295:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8605:7809","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:202:1789":{"id":"0:202:1789","crate_id":0,"name":"NewLine","span":{"filename":"src/lib.rs","begin":[141,4],"end":[141,11]},"visibility":"default","docs":"Invalid byte in new line.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:12420:2432":{"id":"2:12420:2432","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10195:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10195:242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:101:229":{"id":"0:101:229","crate_id":0,"name":"Result","span":{"filename":"src/lib.rs","begin":[196,0],"end":[196,54]},"visibility":"public","docs":"A Result of any parsing action.\n\nIf the input is invalid, an `Error` will be returned. Note that incomplete\ndata is not considered invalid, and so will not return an error, but rather\na `Ok(Status::Partial)`.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"result::Result","id":"2:41702:229","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"a:2:2792:250-0:197:132":{"id":"a:2:2792:250-0:197:132","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12489:32569":{"id":"2:12489:32569","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12105:8496","`DoubleEndedIterator`":"2:7517:125","prim@char":"1:12066:447","str::match_indices":"2:12486:32568"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43687:8531","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12125:8512","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5535:26252":{"id":"5:5535:26252","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12526:26250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12407:32559":{"id":"2:12407:32559","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,20],"end":[446,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2785:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[242,23],"end":[242,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2617:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:269:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:298:1678":{"id":"0:298:1678","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[604,4],"end":[604,27]},"visibility":"public","docs":"The response minor version, such as `1` for `HTTP/1.1`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}},"0:119:1886":{"id":"0:119:1886","crate_id":0,"name":"parse_request_with_uninit_headers","span":{"filename":"src/lib.rs","begin":[354,4],"end":[361,5]},"visibility":"public","docs":"Parses a request with the given config and buffer for headers","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["request",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":"'buf","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["headers",{"borrowed_ref":{"lifetime":"'headers","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30230:1759","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:229","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:217:657":{"id":"0:217:657","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[134,22],"end":[134,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:274:1101":{"id":"0:274:1101","crate_id":0,"name":"path","span":{"filename":"src/lib.rs","begin":[451,4],"end":[451,31]},"visibility":"public","docs":"The request path, such as `/about-us`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'buf","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}},"0:214:451":{"id":"0:214:451","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[134,15],"end":[134,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Error","id":"0:197:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12433:13126":{"id":"2:12433:13126","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43773:8523","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2581-0:295:1919":{"id":"b:2:2581-0:295:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2584:132","2:2585:1584"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2581-0:233:1791":{"id":"b:2:2581-0:233:1791","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2584:132","2:2585:1584"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:73:2447":{"id":"0:73:2447","crate_id":0,"name":"runtime","span":{"filename":"src/simd/mod.rs","begin":[91,0],"end":[91,11]},"visibility":{"restricted":{"parent":"0:47:1391","path":"::simd"}},"docs":"Runtime detection of simd features. Used when the build script\ndoesn't notice any target features at build time.\n\nWhile `is_x86_feature_detected!` has it's own caching built-in,\nat least in 1.27.0, the functions don't inline, leaving using it\nactually *slower* than just using the scalar fallback.","links":{},"attrs":["#[cfg(all(httparse_simd,\nnot(any(httparse_simd_target_feature_sse42,\nhttparse_simd_target_feature_avx2,)),\nany(target_arch = \"x86\", target_arch = \"x86_64\",),))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":true}}},"a:2:2832:7820-0:233:1791":{"id":"a:2:2832:7820-0:233:1791","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2832:7820","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2832:7820","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Status","id":"0:233:1791","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:258:1832":{"id":"0:258:1832","crate_id":0,"name":"ParserConfig","span":{"filename":"src/lib.rs","begin":[243,0],"end":[249,1]},"visibility":"public","docs":"Parser configuration.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:108","a:2:2775:240-0:258:1832","a:2:8605:7809-0:258:1832","a:2:2832:7820-0:258:1832","a:2:2792:250-0:258:1832","a:2:8606:7808-0:258:1832","b:2:2566-0:258:1832","b:2:2260-0:258:1832","b:2:2576-0:258:1832","b:2:2570-0:258:1832","b:2:2263-0:258:1832","b:2:3411-0:258:1832","b:2:2581-0:258:1832","b:5:680-0:258:1832","0:264","0:266","0:268"]}}},"b:2:2576-0:223:1809":{"id":"b:2:2576-0:223:1809","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:132","2:2580:1586"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12415:338":{"id":"2:12415:338","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12083:1608"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:300:1206":{"id":"0:300:1206","crate_id":0,"name":"reason","span":{"filename":"src/lib.rs","begin":[610,4],"end":[610,33]},"visibility":"public","docs":"The response reason-phrase, such as `OK`.\n\nContains an empty string if the reason-phrase was missing or contained invalid characters.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'buf","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}},"0:329":{"id":"0:329","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,22],"end":[709,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2786:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12436:2030":{"id":"2:12436:2030","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:8496"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12432:30569":{"id":"2:12432:30569","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12431:30566"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43802:8536","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2775:240-0:295:1919":{"id":"a:2:2775:240-0:295:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2775:240","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:305:715":{"id":"0:305:715","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[601,9],"end":[601,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9505:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:326":{"id":"0:326","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,15],"end":[709,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2276:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:328:451"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:306":{"id":"0:306","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,16],"end":[601,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2786:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:281":{"id":"0:281","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,16],"end":[446,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2786:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2576-0:258:1832":{"id":"b:2:2576-0:258:1832","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2550:259","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2546:260","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParserConfig","id":"0:258:1832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2579:132","2:2580:1586"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2566-0:320:1888":{"id":"b:2:2566-0:320:1888","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Header","id":"0:320:1888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2569:8026"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12523:26253":{"id":"2:12523:26253","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12525:26254":{"id":"2:12525:26254","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:122:1837":{"id":"0:122:1837","crate_id":0,"name":"ignore_invalid_headers_in_responses","span":{"filename":"src/lib.rs","begin":[393,4],"end":[399,5]},"visibility":"public","docs":"Sets whether invalid header lines should be silently ignored in responses.\n\nThis mimicks the behaviour of major browsers. You probably don't want this.\nYou should only want this if you are implementing a proxy whose main\npurpose is to sit in front of browsers whose users access arbitrary content\nwhich may be malformed, and they expect everything that works without\nthe proxy to keep working with the proxy.\n\nThis option will prevent `ParserConfig::parse_response` from returning\nan error encountered when parsing a header, except if the error was caused\nby the character NUL (ASCII code 0), as Chrome specifically always reject\nthose, or if the error was caused by a lone character `\\r`, as Firefox and\nChrome behave differently in that case.\n\nThe ignorable errors are:\n* empty header names;\n* characters that are not allowed in header names, except for `\\0` and `\\r`;\n* when `allow_spaces_after_header_name_in_responses` is not enabled,\n  spaces and tabs between the header name and the colon;\n* missing colon between header name and value;\n* when `allow_obsolete_multiline_headers_in_responses` is not enabled,\n  headers using obsolete line folding.\n* characters that are not allowed in header values except for `\\0` and `\\r`.\n\nIf an ignorable error is encountered, the parser tries to find the next\nline in the input to resume parsing the rest of the headers. As lines\ncontributing to a header using obsolete line folding always start\nwith whitespace, those will be ignored too. An error will be emitted\nnonetheless if it finds `\\0` or a lone `\\r` while looking for the\nnext line.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["value",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2792:250-0:270:1882":{"id":"a:2:2792:250-0:270:1882","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2792:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Request","id":"0:270:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12506:25041":{"id":"2:12506:25041","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12066:447","self::pattern":"2:12105:8496"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41557:196","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:141:1977":{"id":"0:141:1977","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[552,4],"end":[554,5]},"visibility":"public","docs":"Try to parse a buffer of bytes into the Request.\n\nReturns byte offset in `buf` to start of HTTP body.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["buf",{"borrowed_ref":{"lifetime":"'b","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:101:229","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2566-0:295:1919":{"id":"b:2:2566-0:295:1919","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2543:137","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2540:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Response","id":"0:295:1919","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2569:8026"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:226:715":{"id":"0:226:715","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[182,9],"end":[182,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9505:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12480:2659":{"id":"2:12480:2659","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12105:8496","`DoubleEndedIterator`":"2:7517:125","prim@char":"1:12066:447","str::rmatches":"2:12483:32567"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43723:8528","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12110:8510","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:153:715":{"id":"0:153:715","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[723,4],"end":[732,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9505:136","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9486:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,9],"end":[182,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9530:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InvalidChunkSize","id":"0:223:1809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:226:715"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:684:8089":{"id":"5:684:8089","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"1:11193:8680":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:6027:12222":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:9549:8429":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:40245:12256":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:11921:8149":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"11:2394:9980":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"2:47887:7707":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"17:9998:9710":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:46058:9061":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:12130:8511":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"6:7579:11966":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:46156:8745":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:4800:416":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:9505:136":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"6:6686:11842":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:8978:20610":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:10929:10232":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"6:4847:11450":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:11635:8117":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"6:4949:11509":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"1:8031:12871":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"11:0:2555":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"2:4282:12794":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:9207:9769":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:41517:8828":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"16:6156:12134":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:43407:8143":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:1076:12769":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"6:4655:11372":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:13148:10532":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:2844:13579":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:8227:12252":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:14499:10933":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"5:7299:9152":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:10285:13558":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"1:7920:134":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:12970:10498":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:21055:13443":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"6:6640:11823":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"6:6051:11734":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:40326:12268":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:22869:184":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"14:40:10284":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"16:3600:10954":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"5:3735:12780":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:5443:12851":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:4136:12793":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:10343:8128":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:9607:12618":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"16:5866:9605":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"16:6204:12697":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"6:542:11032":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:39287:8121":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:30236:2706":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"6:4425:11295":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"11:2058:12174":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"16:8294:132":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:10588:12100":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"6:4829:11441":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:41642:7805":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:6211:12226":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"5:7420:9147":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:10410:12645":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:5474:108":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"6:1639:11156":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:42029:85":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:7670:8681":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"11:483:148":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:2604:12830":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:12089:1664":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"5:3183:33527":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:9505:133":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"16:6545:9277":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:22704:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"2:45788:8886":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:3865:12843":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"16:2670:9472":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:46134:9060":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:13162:10533":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"5:1257:12174":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"6:7532:11956":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:4611:11368":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:44492:8781":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:22:728":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:1779:12821":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"5:6511:9952":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:8194:12008":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:2497:13443":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:9028:25038":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:6624:13572":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"6:1674:11181":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:1641:2700":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:9933:12625":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:9242:9688":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:10008:10018":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"17:13135:10531":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"11:731:12756":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"6:1591:11120":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:13215:10539":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:46772:8884":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:14355:10894":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:46277:8869":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:12032:13015":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"16:0:2559":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:11244:9741":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"16:4497:9403":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:853:8129":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"16:3032:9394":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"11:1092:12767":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"18:652:10154":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:12196:10334":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:41795:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:10139:20641":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"1:9136:237":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"9:357:19550":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:13868:10751":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"5:0:310":{"crate_id":5,"path":["alloc"],"kind":"module"},"5:5631:9978":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:9277:9790":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"6:7310:11952":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:2865:13824":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:2918:9511":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"5:676:253":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:5079:12847":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:10685:12661":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:40205:12806":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:14448:10922":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:13228:10540":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"6:4468:11311":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:6568:12861":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:41951:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:40075:103":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:39971:12244":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:10097:12632":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:4022:13491":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"16:4889:9402":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"1:8422:7801":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:5409:12848":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:4992:7797":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"6:4555:11355":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:10788:20709":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:12701:158":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:4379:11271":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:12373:10370":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:30800:198":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"16:6425:9591":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:8146:12873":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"17:11573:12123":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:40785:10008":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:3288:13691":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:2366:204":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"16:6560:9941":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"1:6638:10043":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"6:6865:11930":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"6:6720:11848":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:9959:12627":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"8:0:2552":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:3072:13382":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:42068:92":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:3358:13469":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"11:357:9943":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:3248:139":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"17:12172:10330":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:39319:12804":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"16:8154:12748":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:13792:10735":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"18:609:12596":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:13202:10538":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"5:3800:9980":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"2:7488:7825":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"17:9650:10191":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"18:590:10162":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:5999:8720":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"17:13851:10746":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"17:12934:10493":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:12079:791":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:39221:218":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:11342:12339":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:11647:12346":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:12943:146":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:39993:8535":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"14:0:2557":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:31984:2709":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:22096:8774":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:9531:33661":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"0:208:1795":{"crate_id":0,"path":["httparse","Error","TooManyHeaders"],"kind":"variant"},"1:8530:13551":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:9085:25415":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"18:614:33667":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:14100:10811":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"5:4074:8129":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"6:4989:11529":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:8903:8037":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:8713:20602":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:46202:8883":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:2840:8007":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"16:2864:9610":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:9137:9705":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:41617:8128":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:12252:10352":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:14042:10793":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:9222:13013":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:39265:219":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:3234:12834":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"6:6849:11924":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:10126:12088":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"6:1697:11191":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"5:4363:9971":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:47814:9027":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:40108:8866":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:9172:9815":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:4066:13493":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:4167:8775":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:5648:12688":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:45603:8818":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:42577:113":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:44293:126":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"6:5851:11631":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:12959:10497":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:2887:13825":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:5568:12220":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:43073:8158":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"5:3178:12205":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:41633:8037":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:9543:8427":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:9823:20622":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:6808:8045":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"6:4451:11305":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"16:8115:12189":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"16:6376:20545":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"6:5020:11539":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:43306:8125":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"16:3797:9623":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:8588:12011":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"6:4540:11348":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:10135:12898":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"1:6385:178":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:9217:31813":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"16:8167:12751":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"6:548:11035":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:40348:12270":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:22770:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:13973:10776":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"16:149:9250":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"1:2501:12829":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:11023:10237":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:11407:20612":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"6:6588:11795":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:5079:11567":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:47692:9031":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"6:4734:11398":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:11639:9695":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:10292:10191":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:43246:12810":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:11162:10239":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:5660:8720":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"11:703:12755":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:21226:13594":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"16:7492:12175":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:11213:8715":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"16:8050:9558":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"18:574:10154":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:41705:195":{"crate_id":2,"path":["httparse","Result","Ok"],"kind":"variant"},"1:5156:206":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"16:7503:9657":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:45865:9121":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:8513:8604":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"17:13010:10502":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:12184:10333":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:8605:7809":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"14:187:19625":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:46848:8827":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"18:96:13114":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:40367:2461":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"16:7523:12179":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"6:5897:11653":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"6:4892:11470":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:22257:30960":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:12671:10205":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"17:13113:10520":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:4070:13494":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"5:7403:104":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:40016:13777":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:4849:13501":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:11227:2429":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:2360:197":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"16:3830:9624":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:2891:13827":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"11:1876:12206":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:12071:1470":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:11250:8690":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:8269:12881":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:43427:8142":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:21312:13585":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"11:2423:19610":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"5:4032:9952":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"17:10750:10198":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"6:4815:11436":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"9:450:19535":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:2875:13580":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"14:160:12752":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:14296:10880":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"6:5833:11619":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:41873:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:32020:12802":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"16:7768:9650":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"5:4194:9969":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:1751:11982":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:8174:8717":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:11390:8667":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:7067:9482":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:11628:12022":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:8244:1760":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:1671:1151":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"6:7526:11955":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:11111:12680":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:44439:222":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"16:2596:9412":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:11651:8119":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"18:719:10174":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:10962:10234":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:2582:10013":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"1:10850:123":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"16:7474:12739":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"14:202:13725":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:1986:199":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:5790:11601":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:4494:11324":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"11:2467:10980":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"16:4774:9404":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:43519:8132":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"16:4613:9471":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"5:3142:97":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:42309:8425":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:43587:8526":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:1590:12207":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:10726:12666":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:11535:12122":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:40227:12253":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:6973:13141":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:49852:13602":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"11:1850:9964":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"17:14282:10874":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:14134:10818":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"16:6346:12727":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"2:42632:132":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:9517:10052":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:45847:8887":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:40383:9521":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"17:12576:10426":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"11:1846:8037":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:943:12760":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:11124:12681":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:40537:12277":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:434:9495":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"5:3212:12204":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"16:2696:9414":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:13778:10731":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:21815:32003":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"6:4488:11321":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:13575:10672":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:7796:12802":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"17:11098:12679":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:3760:12841":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"16:2644:9546":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:3523:25076":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"16:6386:9572":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"17:13667:10708":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:12830:10457":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"6:6856:11927":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:14346:10892":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:1561:8037":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:9856:1470":{"crate_id":2,"path":["core","slice"],"kind":"module"},"1:1568:9980":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"6:123:14204":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:9976:10012":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"5:2959:8087":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:4067:13690":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"15:288:13121":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:10478:1797":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"6:6151:11758":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:3429:9969":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"16:7090:12173":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:4753:11406":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:7743:13358":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:47568:9132":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"16:6268:33653":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"6:7573:11965":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"5:822:9957":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:4462:8437":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:12091:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"5:1442:8037":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"5:1118:32553":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:41557:196":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:12778:10452":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"5:5135:9975":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"1:4665:11836":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"17:8825:20605":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"16:6415:12140":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:10805:12327":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"1:4179:13143":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"6:1703:11192":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:40185:8144":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:41481:9039":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"2:22205:9125":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:39099:13693":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"17:14420:10913":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:13632:10707":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:14013:10785":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:10059:10188":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"16:4557:9601":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"5:5369:13709":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"17:13298:10556":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"6:527:11023":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:13024:10505":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"16:3065:9793":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:43793:8524":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:5110:12847":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:13567:10671":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:1682:11182":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:483:10997":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"13:110:8305":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"16:5939:9575":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:7479:159":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:40297:12265":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:10023:12619":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:13101:10518":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:40274:12261":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:1924:8446":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:3698:13483":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:14378:10907":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:2214:133":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:8879:8670":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:43802:8536":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:39177:213":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"16:7884:20553":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:12067:1624":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:8582:8128":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"18:481:12071":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:1576:11108":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"6:7561:11963":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"6:1537:11083":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"5:1514:213":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:11660:1502":{"crate_id":2,"path":["core","str"],"kind":"module"},"17:2150:20667":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:3276:12837":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:44500:9067":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:7011:12944":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"17:10420:9781":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:41745:8128":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:4032:12792":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:9102:9735":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:40155:10000":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:2534:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:10570:12834":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"1:10840:134":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:2938:13833":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"16:2504:9570":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:40035:12247":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:3254:13753":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:7517:125":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:10435:8149":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"17:14324:10887":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"9:237:12000":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"6:6092:11746":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:4986:9555":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:0:528":{"crate_id":2,"path":["core"],"kind":"module"},"6:4954:11511":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:4877:11465":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"6:4997:11531":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:22737:188":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:22330:8867":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:4195:13511":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"16:5419:9393":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:7885:12867":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"5:5973:9975":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:10949:12671":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:2797:8002":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:13685:10713":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"6:4943:11506":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:43398:8140":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:47776:8754":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:4480:11316":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"9:52:12994":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:9754:151":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:6277:8720":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:41761:8037":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:7475:138":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:10561:12098":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"1:3532:13441":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"14:215:12194":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"16:5588:9255":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"5:3238:12207":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"6:7544:11958":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:14118:10815":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:2219:9994":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"6:7478:11953":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:40335:12269":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"16:5017:9496":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"16:6818:9565":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:39513:26772":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:5653:223":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"16:7651:12747":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"17:11337:20734":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:7938:13815":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:32031:12803":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"11:2286:12766":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"2:47861:2530":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"16:6696:9453":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"18:707:8513":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:2257:100":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:10366:12641":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"5:5858:9964":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"16:3315:10952":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"16:7828:9279":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:4:1075":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"5:2035:8669":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"17:10456:12653":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:46355:8829":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:13451:10578":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:483:10025":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:3040:7822":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:12208:10335":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"16:7513:12178":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:22181:9114":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:46324:9124":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:11348:12913":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:12119:8513":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:2908:13829":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"6:7555:11962":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:2782:2704":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"11:1010:12764":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:13611:10702":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:5459:12852":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:11201:12106":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"16:5384:20540":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"6:4406:11282":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"16:6721:20547":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:14068:10803":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:40761:8095":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:14221:10867":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"11:1145:12769":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:10468:12884":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:41608:2431":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"6:1528:11078":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:5528:12853":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"6:4859:11454":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:21240:13845":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"1:10133:12899":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"16:2406:9425":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:11179:8611":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"6:654:14562":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:7934:8454":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:2409:2566":{"crate_id":1,"path":["std","io"],"kind":"module"},"17:10186:12090":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"2:41990:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"11:1127:12768":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"17:12737:10446":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:11235:12115":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:46536:8780":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:47630:8732":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:0:1494":{"crate_id":1,"path":["std"],"kind":"module"},"5:2690:9138":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:9564:12617":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:400:12603":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:9146:155":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:12621:10432":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:41685:8108":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:13966:10775":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:8606:7808":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:3964:13486":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:21803:8123":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:6571:13570":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:1817:12823":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"17:11086:12678":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"18:690:12079":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:955:12763":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"17:13758:10723":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:8367:11823":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:13838:10741":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:41912:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"5:1011:9952":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:11810:8540":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:14308:10883":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"5:276:7826":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:932:13370":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:13554:10664":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:43623:8134":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:8659:20588":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"6:6633:11819":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:11661:9756":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"16:6171:209":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:12080:792":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:12911:10492":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:2546:260":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"11:2260:12764":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"1:9184:12330":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:2644:12831":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:9921:12624":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"16:2284:19654":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"11:298:12197":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:1922:11985":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:7669:13443":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"17:12765:10451":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"5:4426:9971":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:11640:28454":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"5:778:98":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:11000:10236":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:10800:12333":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"1:922:12756":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:9141:238":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:22605:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"17:13897:10759":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"11:680:8129":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:2382:13432":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:3260:13752":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:4287:12795":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:12084:1605":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"1:8036:12872":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:43903:13723":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"6:1521:11075":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"18:582:8020":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:40122:13412":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"17:11971:10297":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"16:8281:9604":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"6:6790:11891":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:10511:10053":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"5:4985:9969":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:13422:10558":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:43836:8535":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:10494:12092":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"6:5864:11640":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:42589:9423":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:13949:10768":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:12906:10023":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"1:913:12770":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:41288:164":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"18:755:12087":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"17:10520:12095":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:10012:10191":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"13:0:2550":{"crate_id":13,"path":["std_detect"],"kind":"module"},"5:4846:220":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:22278:30968":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:11269:155":{"crate_id":1,"path":["std","sys","unix","time","Instant"],"kind":"struct"},"16:7342:33654":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:23415:239":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:47032:8830":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:10698:12663":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:6216:10006":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"17:10468:10197":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"16:5963:12690":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"5:4234:8128":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:42109:87":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"6:4400:11279":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:12136:10321":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"6:4621:11369":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:13710:10714":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:13922:10764":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:10991:12853":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:30828:8020":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"17:12062:10310":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"16:4949:9625":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:6672:236":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"5:1464:12202":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:42559:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:5423:12850":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:44046:12313":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"16:5982:12132":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:12983:10500":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:2942:13834":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:21927:13588":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:11417:12343":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"6:4799:11429":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"5:2223:33558":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"11:2074:12764":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:40165:12805":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:43773:8523":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:42323:8426":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:4821:31397":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:11423:12344":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"16:8134:12192":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:4016:13490":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:30230:1759":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"5:7587:8694":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:42605:72":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"16:5816:9244":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"17:11617:9741":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:40547:12278":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:10009:9050":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:13906:10760":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:14090:10808":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"6:1507:11070":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:43069:12295":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:12123:10320":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:13876:10754":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:22323:12239":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"6:4775:11416":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:8848:20606":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:8072:10970":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:4772:13505":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:44258:8507":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"0:202:1789":{"crate_id":0,"path":["httparse","Error","NewLine"],"kind":"variant"},"2:12176:13717":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:12598:10427":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:22671:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"14:221:10976":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:43641:8130":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"5:7249:9964":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:2829:8003":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:2837:109":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"1:4597:13531":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:9867:10181":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:43925:12301":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:8274:13481":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:39981:9129":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"18:564:10161":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:9051:12892":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"6:4573:11366":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:12810:10456":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:47490:9046":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:42316:8424":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:12496:10412":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"5:1503:12756":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"6:1596:11122":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:42839:151":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:9535:124":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"1:1573:12204":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:12088:843":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:4259:12844":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"16:8195:12193":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"5:2966:32549":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"5:2131:9963":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"9:330:10987":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:11886:8541":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:43537:8136":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"16:6944:33649":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"6:1632:11152":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"5:1776:9980":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"11:1525:19615":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:45912:8864":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:14145:10822":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"17:13244:10542":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:3273:32002":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:9789:13785":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"11:2165:12208":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"11:1541:12771":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:21356:13443":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"17:12043:10309":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:6098:10035":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"17:11507:20614":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:44019:12312":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"6:6059:11737":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"6:1664:11175":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:39060:8455":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:11473:9731":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:12090:1211":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:12077:689":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:12888:10483":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:3233:8122":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:41753:8129":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:504:12604":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"5:2243:12215":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"6:4669:11373":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:1842:12825":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"1:9165:8603":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:30324:30958":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"17:10903:12668":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"16:7102:20549":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:25817:269":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"11:1855:9980":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"17:9711:33656":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"0:195:2090":{"crate_id":0,"path":["httparse","parse_chunk_size"],"kind":"function"},"2:21296:13443":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"16:2618:9603":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:21057:13591":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"6:4900:11475":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"11:101:12196":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"16:4585:9248":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:44274:8715":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:11088:10057":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:41536:8747":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"5:3594:8129":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"6:6759:11865":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:44151:8515":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:40028:12246":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:2883:13826":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:7769:12326":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"17:8594:20590":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"0:223:1809":{"crate_id":0,"path":["httparse","InvalidChunkSize"],"kind":"struct"},"17:3441:12613":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"5:1288:12764":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:45810:9037":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"16:8097:12186":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:8389:12009":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"5:7269:33524":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:7897:12006":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"1:6458:12860":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"5:1138:13140":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:12543:10418":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:10359:108":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:42549:11991":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"6:4922:11491":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"6:4700:11382":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"11:423:13133":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:7406:25193":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:2832:7820":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"11:2238:12174":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"2:10626:8134":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:12098:10317":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:558:12813":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:12110:8510":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:45657:8885":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"16:4053:9564":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:8311:12328":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"16:2339:9594":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"6:4978:11523":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:40265:12259":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"16:6960:12728":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"17:9617:33657":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:11847:8542":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"16:8205:20554":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"11:1842:8128":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"16:7677:213":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"16:2907:9275":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"16:2969:19682":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"0:210:1797":{"crate_id":0,"path":["httparse","Error","Version"],"kind":"variant"},"11:2494:9133":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:3994:13488":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"6:5915:11665":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:21149:13598":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"2:9794:9025":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:40236:12255":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:22165:12235":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:8183:12007":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:9312:12824":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"17:10628:12104":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"3:0:472":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"1:3539:13461":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:7162:13146":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"6:4867:11459":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"6:5844:11627":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:4296:11210":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:22935:182":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"0:238:1822":{"crate_id":0,"path":["httparse","Status","Partial"],"kind":"variant"},"16:2321:9442":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:2929:132":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:8909:8614":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:45625:8875":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:45958:9038":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:47872:7706":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:11870:8539":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"6:4838:11444":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:10980:10191":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:22232:11986":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:14083:10807":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:10640:8130":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:4020:12791":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:7890:12327":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:9328:1760":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"16:6189:12137":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"16:7360:33651":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:12331:115":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"11:324:12200":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:40407:12274":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:40770:12283":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:9985:12629":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"16:7862:12182":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:12945:10495":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:12078:794":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"6:6726:11850":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:40061:8783":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"6:119:14203":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:45828:9066":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:3409:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"1:10830:12006":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:9746:147":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"6:5820:11618":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"9:486:19534":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:43569:8527":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:2254:99":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"16:5049:9278":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"6:569:11046":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:2366:11984":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"1:7764:12325":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:12105:8496":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:39929:8873":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:21105:31113":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"2:2537:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:8826:1242":{"crate_id":2,"path":["core","result"],"kind":"module"},"5:7387:13369":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"17:14110:10814":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:2178:12608":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"1:9106:8615":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"16:6318:9682":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:32024:9622":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"17:14024:10789":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:10547:8136":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:20874:32005":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:7194:8717":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:9030:81":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:12154:10329":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"6:4960:11512":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"16:6742:12157":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:14522:10937":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"16:6499:9663":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"17:14173:10830":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"18:531:12073":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:4770:13504":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:3033:2060":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:9972:12628":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"16:3888:9545":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"6:7624:11977":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"5:7463:9136":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:589:13352":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:41675:7806":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"0:200:1787":{"crate_id":0,"path":["httparse","Error","HeaderValue"],"kind":"variant"},"5:1482:12770":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"5:782:9954":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:43495:8521":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"18:766:24572":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:11226:12114":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"17:10112:12633":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:8957:13575":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:32045:12242":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:43783:8525":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:13816:10737":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:3653:8037":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:44449:230":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:42330:8427":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:8973:13577":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"16:4835:9481":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"6:4592:11367":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:10978:12866":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"12:0:2556":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"11:829:13370":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:21093:13593":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"5:2461:9140":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:11367:10249":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:46818:8865":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:21378:9029":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:11850:10063":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:11295:12118":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:5596:11744":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"18:736:24571":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:6226:12712":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"17:14001:10784":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:22638:189":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"16:2810:9440":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"1:9010:12887":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"11:817:12770":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:3763:12842":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:12073:1589":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"18:507:10154":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"11:759:12202":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:2170:13845":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"2:43818:8533":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:13676:10712":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"16:6531:12150":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"1:12037:13360":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:45709:9065":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"16:6456:12141":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"10:0:2554":{"crate_id":10,"path":["adler"],"kind":"module"},"2:40009:8533":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"6:6023:11727":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"16:6513:12142":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"5:261:9952":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"1:2384:13433":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"6:7538:11957":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:40754:12282":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:41702:229":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"5:7476:9976":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"17:12531:10416":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"16:2428:9426":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:21711:13600":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"2:47238:8861":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:10672:12659":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"16:4462:9243":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:40283:12262":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:10616:12102":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"17:11389:12685":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:22294:30953":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"5:7220:9112":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"16:5574:9647":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:9223:30021":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"16:7708:9662":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:40306:12266":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:11788:1888":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"17:11173:20733":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"2:2835:8005":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:43385:8145":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:5667:12324":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"11:785:9964":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:40795:11988":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:12688:142":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"1:11232:8603":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"1:12087:1604":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"5:1426:8129":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"5:2970:32550":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:10603:12101":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"2:44108:12315":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"16:6893:10958":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:6924:10045":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"1:2927:229":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"1:11024:8670":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"2:2628:132":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"6:1718:11199":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"6:4759:11407":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"18:113:13117":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:8953:20609":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"16:4641:9554":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:42614:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"0:233:1791":{"crate_id":0,"path":["httparse","Status"],"kind":"enum"},"5:5788:254":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:40803:12286":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"16:4344:9602":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:10507:12094":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:12698:10441":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:32132:8008":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:7024:13811":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:4731:13513":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"5:1411:8128":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:3948:9969":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:20889:32005":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:43054:12004":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:1764:654":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:1564:9964":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:14076:10806":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:41374:11990":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:11488:10060":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"0:154:2007":{"crate_id":0,"path":["httparse","EMPTY_HEADER"],"kind":"constant"},"5:3581:8128":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"0:206:1793":{"crate_id":0,"path":["httparse","Error","Token"],"kind":"variant"},"17:11281:10243":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"16:5403:9473":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:43723:8528":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:12790:10453":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:1931:700":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"1:3315:12839":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"5:7571:9980":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"2:22217:31675":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:2896:9507":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"11:1036:12766":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"16:4806:9600":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:2012:12607":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:9660:33662":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"5:6814:9988":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:7570:7824":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"16:6915:9654":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:45557:8773":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:8337:12879":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"6:563:11043":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:2894:10031":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:4078:13496":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:32038:8435":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"2:8715:8510":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:5420:9969":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"16:2450:9406":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:10193:12900":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:46104:9131":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:9131:179":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"6:5752:11574":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:12074:10313":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:2394:13438":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"17:9852:20623":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"1:10114:12823":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:1585:12206":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:2991:13692":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"17:8765:20603":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:9445:12615":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:4943:13539":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"16:5696:20541":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:10197:12634":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:42861:12293":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"0:164:2050":{"crate_id":0,"path":["httparse","parse_headers"],"kind":"function"},"2:10474:8133":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:10392:8132":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:42148:94":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"17:10370:12642":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:11511:12841":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"11:860:12762":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"16:7621:20551":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:11006:25418":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"16:3049:19683":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"6:7601:11971":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"6:6009:11716":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:44530:9032":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"6:5935:11681":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"6:1912:15553":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:5808:12858":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:3958:13487":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:4519:13514":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:10869:25419":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"2:43325:8138":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:9896:20624":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"1:12015:8621":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"6:5063:11564":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:2924:9512":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:10575:12099":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"1:12082:789":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:41311:8744":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:1760:8819":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"16:7128:8703":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:7953:12870":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:43335:8139":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:12064:398":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:13085:10514":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:13040:10507":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:41694:208":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"16:7582:10965":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:2913:13830":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:12484:10410":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:42187:7716":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:2324:203":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:44318:8878":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:8041:13472":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:4847:849":{"crate_id":2,"path":["core","iter"],"kind":"module"},"16:5121:9401":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:45513:9033":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:20861:8020":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:12473:10407":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:2172:13846":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"5:5942:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"6:507:11006":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"6:4523:11340":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:47989:7713":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"11:666:8128":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"18:521:24573":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"5:1302:12769":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:10195:242":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:47898:7708":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:13914:10762":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"16:7318:9484":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"5:7501:9137":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:41708:131":{"crate_id":2,"path":["httparse","Result","Err"],"kind":"variant"},"6:6145:11757":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:11272:12117":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"1:907:9980":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"2:2540:156":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"5:3720:8669":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:7254:8678":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"16:6467:9409":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:2947:13835":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"5:685:114":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:9196:715":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"17:13174:10534":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"5:3669:9952":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:6604:11807":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"18:599:33665":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"6:4683:11374":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:13188:10535":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"16:5798:9477":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:44270:8503":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:21358:13587":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:41494:12328":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:6222:12859":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:12998:13371":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:41345:13482":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:10512:8150":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"5:7283:8037":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"5:3204:12206":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"16:7015:9563":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:12723:31950":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:7625:10050":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:21193:13599":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"16:4862:9488":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"18:538:10159":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:11082:10056":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"6:4433:11297":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:5336:124":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:43741:8529":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"17:9350:9736":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:43811:8532":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"17:13890:10757":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"5:1273:12766":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:7792:12866":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"16:6583:12152":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"6:7265:11939":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:11215:12110":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"14:7:12752":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:30430:30959":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"6:4474:11313":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"16:6401:9648":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"6:4529:11343":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:44083:12314":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:2329:129":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:29981:13484":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:5508:9969":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"16:7284:7805":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:1044:12174":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"6:4561:11357":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:44246:8506":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:11325:10058":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"13:226:10978":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:21457:13443":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:21925:13443":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:22356:13485":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"16:3461:10953":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"7:0:1654":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:14163:10825":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:2785:248":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:9541:8426":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"5:1672:9952":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:2934:13832":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:46378:8881":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:11551:12842":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"16:6361:9559":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:3401:12285":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"1:7606:10048":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"5:7450:9150":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"15:306:13125":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:4663:11834":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"1:9015:110":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:41625:8129":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"16:6017:20543":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"5:6332:13676":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:3043:7823":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"16:5435:10955":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:3022:8456":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"18:80:13113":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"16:6083:19653":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:10227:12638":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:9780:12621":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"16:7597:33650":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:1184:12606":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"6:4548:11353":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:11687:20615":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:11306:10244":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:2859:9503":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:4056:13492":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:43505:1760":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:2543:137":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:44238:8501":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"6:5808:11614":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:14056:10800":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:4435:7739":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:3236:12835":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:10916:12669":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"5:7512:12790":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:3565:12614":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:47832:2473":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"16:7554:9659":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:8572:8709":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:9487:8423":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"16:6929:10960":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"18:548:147":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"6:555:11038":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:10316:10195":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:11048:12672":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"11:1051:19614":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"6:574:11048":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"11:2317:8128":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"1:2568:10029":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:47380:9062":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:4361:8435":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"17:9390:133":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"6:5085:11570":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:21107:13845":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"2:22149:9123":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"6:7287:11940":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:5673:9609":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:10185:13443":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:2550:259":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:47913:7709":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:43489:8522":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"16:2832:9474":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"16:7436:9385":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:14335:10891":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:11381:10252":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"16:2933:19681":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:358:12811":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:261:12602":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:45758:8737":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"11:2085:12766":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:11490:9817":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"5:6981:9993":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:10397:12644":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:3518:9964":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"16:2722:9436":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:1557:8128":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:9063:1793":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"17:10440:12648":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"2:30252:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"17:8686:20601":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"9:426:19537":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:8851:8611":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:22902:185":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:8928:8602":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:13286:10549":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:12645:10433":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:41770:198":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"17:10738:12667":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"6:4631:11370":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:9035:88":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"5:6956:9990":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:3125:12832":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"1:1895:8445":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"6:4721:11394":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"16:7269:33652":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"16:7391:20550":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"6:5994:11714":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"16:7544:12180":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:10547:12097":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"16:2744:9364":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:47936:7710":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"6:5782:11599":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"6:580:11051":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"6:6186:11783":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"6:6883:11933":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:10637:12105":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"11:841:12760":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"17:13693:9706":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:9539:8425":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:1570:11106":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:4406:9999":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:505:9963":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:43971:12311":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:8839:201":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:10573:12836":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:2783:8001":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:7880:9782":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:42654:74":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"17:10240:10184":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"16:7722:9652":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"18:515:10157":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:9701:12619":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:13071:10512":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"6:7293:11942":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:46180:8882":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"16:5760:20542":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:12685:10440":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:9233:12015":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:45687:9041":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"6:6735:11853":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:43315:8126":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"5:6465:9964":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:11654:12346":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:46010:9122":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"6:6622:11814":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:9521:12616":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:43417:8141":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:871:12202":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:46582:9028":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"6:4728:11395":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"6:6037:11729":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:9086:9393":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"6:1710:11195":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"3:234:229":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:4461:11308":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"11:1635:9947":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:7438:13817":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"16:2359:9382":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"16:3232:9249":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"16:7568:9660":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"6:4394:11278":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"16:7462:10963":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:47738:9024":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"0:197:132":{"crate_id":0,"path":["httparse","Error"],"kind":"enum"},"1:7689:12864":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:9512:12867":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"6:5030:11544":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"16:3764:9411":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:2160:631":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:20902:30517":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:42851:12000":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:39920:12243":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:44330:13925":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:40747:12281":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"5:6824:9989":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"16:2472:9620":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"6:4511:11334":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"16:5088:9666":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"11:427:13134":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"16:4921:9230":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:10654:8135":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:884:12203":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"6:4690:11375":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"6:4805:11432":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:10795:12331":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"17:11991:10298":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"16:6844:9465":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"0:235:1820":{"crate_id":0,"path":["httparse","Status","Complete"],"kind":"variant"},"17:11710:10244":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:10646:9747":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:9945:10184":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"16:4719:9405":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"16:5322:9276":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:44542:9063":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"17:13546:10661":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"17:8895:20607":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:40397:12273":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:11886:10269":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:9070:9473":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:15:2662":{"crate_id":2,"path":["core","write"],"kind":"macro"},"5:895:8128":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"9:177:13004":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"11:796:9980":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"16:6600:20546":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:256:12601":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"17:12846:10462":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:4667:11838":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"17:11393:132":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"17:12024:10304":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"11:2334:8129":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"5:1523:12779":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"5:2960:32552":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"5:7259:9961":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"1:4187:13144":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:44262:8508":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:21364:13589":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"16:6261:12724":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"17:10278:12640":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:10818:8722":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"6:4968:11517":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"6:4823:11440":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"5:4393:9969":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2:12750:207":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"6:5013:11536":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:40001:8534":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"6:4643:11371":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"11:822:12757":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:47841:7704":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:475:10992":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:11327:12120":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:12422:10395":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"17:9912:12623":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:9752:12620":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:8257:8523":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:6190:10039":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"17:11815:10256":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"16:7041:12167":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:12072:1502":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"9:507:9170":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"18:660:12597":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:40255:12258":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"17:9762:33660":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:9071:8703":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"1:12076:687":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"6:5073:11565":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:11872:10268":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"6:5905:11658":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:12225:10343":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:3514:8423":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:9058:12893":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:2871:9506":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:2854:9505":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"15:394:19645":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"2:3325:13694":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"6:6082:11743":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:10383:12643":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:12065:8520":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"16:7792:20552":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:8323:13512":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:10661:12658":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:20904:30520":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:11448:20613":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"5:7229:8037":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"16:4417:9362":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"5:5373:13710":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:7931:8453":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:44555:12323":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1:12065:995":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:7555:9717":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:8263:12879":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:8318:12329":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:4157:13142":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"6:489:11000":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:40561:12279":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"16:5727:9612":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:20919:30514":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:7614:11975":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:11071:10055":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:12048:25414":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"16:6332:9646":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:7715:8097":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"16:7782:12181":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:42822:12291":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:44513:173":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:10771:10200":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:41458:31671":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"17:14469:10928":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"6:5049:11558":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:47951:7711":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:10367:8129":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"6:4373:11270":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:3170:214":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:13055:10511":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:22968:187":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:39914:8534":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"16:4527:9673":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"6:4709:11387":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"5:7375:9133":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"6:0:873":{"crate_id":6,"path":["libc"],"kind":"module"},"17:11261:12116":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"17:12305:10366":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:12066:447":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:1825:181":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:8794:20604":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"0:0:2303":{"crate_id":0,"path":["httparse"],"kind":"module"},"2:21481:13443":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"18:681:12076":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:12293:10363":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:10376:26088":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"17:11586:9816":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:2903:13828":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:14401:10908":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:11191:9695":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"1:7053:10046":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"11:693:8037":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:14434:10915":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"5:5994:14123":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:13981:10777":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:12081:793":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:8329:12882":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:11951:10287":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"5:7328:8037":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:12876:10481":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:11405:8716":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:6174:10023":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:14316:10886":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"0:320:1888":{"crate_id":0,"path":["httparse","Header"],"kind":"struct"},"2:43346:8146":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:4934:13538":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:4351:9998":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:40080:9053":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:9051:20589":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:6205:12227":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"6:1691:11188":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:22344:8868":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:43954:12310":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:897:9964":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"5:2962:11979":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"6:4934:11500":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"6:6171:11772":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:5853:10034":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"16:6041:20544":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:3076:13383":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:840:8128":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"5:7320:8037":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:40358:12271":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"6:4441:11299":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:44457:210":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:12237:10346":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"6:1546:11089":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:44254:8509":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:7961:8669":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"16:5830:9614":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:2849:13581":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:8865:8680":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"17:10534:12096":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:918:12755":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"11:1882:12207":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"2:22043:9130":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"5:1492:12755":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"17:11845:10260":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:2498:2710":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"6:6043:11732":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"15:0:2558":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:6325:223":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"17:11719:20616":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"18:624:33668":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:45727:8776":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:5774:12854":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:46226:9059":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:6494:8677":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:9910:10010":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"2:40042:13778":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:21488:13595":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"5:7434:31674":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:4497:13513":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:41328:8742":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:3195:25395":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:11153:8147":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"6:6820:11908":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:12280:10362":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:4339:12845":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:12070:336":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:641:12816":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:4639:13771":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:44250:8505":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:5599:13556":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"17:9488:33664":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:8996:8704":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"5:878:9959":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"5:3217:33528":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"16:6485:9649":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:7442:13816":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:8345:8671":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"18:727:10177":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:43477:8518":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:949:12762":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"5:7487:246":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:3475:12840":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"16:2881:9363":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"16:5612:9556":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:8237:12277":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"6:6030:11728":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"6:4913:11485":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"1:534:10026":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:3313:12838":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:30196:2705":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:7566:12916":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:45988:9064":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:11358:20735":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"5:6098:9969":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:4208:13145":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:4411:12846":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:22240:8888":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:10616:8097":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:44242:8504":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"17:12513:10415":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:10430:12647":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"17:2209:12611":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"6:4385:11273":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:3274:12836":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:2775:240":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:2792:250":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"6:4309:11219":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"16:6968:20548":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:7937:123":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:5781:12857":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"5:35:9949":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:10084:12631":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"6:7590:11970":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"11:2473:10981":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"5:4002:9964":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:21706:13592":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"17:12750:10448":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:646:13355":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:44266:8502":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"17:9574:33658":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"5:7237:12219":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"16:8239:9622":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"4:0:2551":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:10860:12008":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"16:5743:12131":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:11205:25416":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"18:491:12072":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:622:8447":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:10668:8131":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:727:148":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:47966:7712":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:2930:13831":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"16:6279:9566":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"16:2788:9242":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"5:5325:9952":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:4826:10032":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:13723:10719":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"16:2548:9400":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"5:2141:12210":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"16:6753:9260":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:11761:9718":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"6:6835:11915":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:39340:11987":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"6:6613:11813":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:4728:13540":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:8887:8128":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:13989:10778":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:43463:8519":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:11151:12683":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:44118:12319":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"16:6792:9483":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:12007:10302":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"16:5995:9667":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"5:4164:9969":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:3037:7821":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:9201:12895":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"16:6569:9651":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:39941:30956":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"11:1687:150":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"6:7520:11954":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"9:393:19536":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:10714:12665":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"11:2461:10979":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"18:0:2561":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:12125:8512":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:1604:11127":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"0:101:229":{"crate_id":0,"path":["httparse","Result"],"kind":"type_alias"},"2:40776:12285":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:2669:1882":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"11:2368:9964":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"6:6580:11790":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"6:5056:11561":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"10:36:10985":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"16:6352:12139":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"5:6663:9952":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"10:44:10986":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"9:0:2553":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:4008:13489":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:1781:12822":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:6909:13819":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:638:12814":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:13826:10738":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:12086:1607":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"6:6663:11841":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:1075:12605":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:11351:10248":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:3198:26211":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"16:7660:9571":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:39201:215":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:863:8037":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:926:12757":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:9993:10013":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"6:6002:11715":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:7776:13401":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:9530:115":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"6:5814:11617":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:536:9680":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:10214:12637":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:21462:13586":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:7975:31811":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:39146:9034":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:416:177":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:9021:12889":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"6:1650:11164":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"5:6912:266":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:22836:183":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:9486:229":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"17:12554:10419":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:11910:10283":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:6811:11905":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:12111:10319":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:7736:9470":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:2216:12828":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"15:327:12991":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:1514:11073":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"16:5661:12129":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:12711:10443":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"16:7534:9658":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:13802:10736":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:43827:8534":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:43297:8127":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:4768:13502":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"5:2049:12780":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:40315:12267":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:14536:10940":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:46612:8769":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"6:1496:11065":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:44131:8514":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:11547:9743":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:8895:12886":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:43687:8531":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:13274:10244":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"6:596:11061":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:47852:7705":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:1634:630":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"16:7613:12746":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:46882:8872":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:11316:10247":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"17:11137:12682":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"16:5905:9674":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:10776:12908":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"17:14156:10823":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"14:31:12752":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:10878:25411":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"17:14460:10924":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:11742:9685":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:7907:8682":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:8363:12883":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"17:12465:10405":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:2223:13425":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"1:1579:12205":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"11:2487:10983":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"6:4346:11247":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:9003:20611":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"11:1072:33646":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:44097:13724":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:46458:9070":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"6:4501:11327":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:22803:186":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"5:2170:12212":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:1471:1758":{"crate_id":2,"path":["core","mem"],"kind":"module"},"17:11062:12676":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:8926:20608":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"6:4884:1061":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"17:9372:10179":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"18:699:12080":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:7694:8600":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:12085:1606":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:45579:8778":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"6:4320:11227":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:5626:12221":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:43372:8144":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:4278:224":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:12437:10399":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:3457:8695":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"11:772:12203":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"1:12069:1112":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"1:12083:1608":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"18:671:12600":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"6:5970:11702":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"0:204:1791":{"crate_id":0,"path":["httparse","Error","Status"],"kind":"variant"},"5:1102:13139":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:14269:10868":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:8206:13442":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:14514:10934":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:495:11002":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"2:12775:12800":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"11:2479:33645":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:42830:12292":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:14478:10930":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"17:14126:10817":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"1:8490:12000":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:7626:171":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"11:1869:12205":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:10982:9223":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:30266:30955":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"16:6687:12156":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"5:3568:175":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:1983:200":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:41834:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:2787:112":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"16:6879:9489":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"6:1501:11067":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"16:2380:9284":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:3201:26214":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"16:3915:9254":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:2617:120":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"16:2526:9621":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:8599:8721":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"17:10447:12208":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"6:62:14149":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"1:8440:8683":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"0:270:1882":{"crate_id":0,"path":["httparse","Request"],"kind":"struct"},"0:295:1919":{"crate_id":0,"path":["httparse","Response"],"kind":"struct"},"6:6741:11854":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:2368:13428":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:3009:121":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:2879:13582":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"16:2766:9665":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"6:5982:11707":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:39243:217":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"6:1558:11098":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:11572:12843":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"7:31:19521":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:40214:12252":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"5:207:9951":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"5:4348:267":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"18:644:10154":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:8833:12884":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"6:501:11003":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:43940:12307":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"16:7006:12729":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:14033:10792":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"6:4745:11402":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"16:4745:9574":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:4210:8434":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:9545:209":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:42869:12294":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:48028:7714":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"11:122:9942":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"16:3655:9798":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:12658:10436":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:42814:12289":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"16:5712:9359":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:8250:8132":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:3243:256":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:11934:10284":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"11:868:12763":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"16:6901:9653":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:4653:13491":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"11:2303:12775":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"11:344:13130":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"14:165:19618":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:9790:33659":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:7758:13359":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:1067:12766":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"5:6795:9978":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"16:8181:9664":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"16:5363:9399":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:12267:10358":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:1734:11204":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"5:7291:213":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:11375:8620":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"16:7054:12170":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"18:636:10173":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:10585:8137":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"16:6243:12716":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:1429:150":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:9537:8424":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"5:3330:9980":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"6:7567:11964":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:20921:30519":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"16:7694:9661":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:39326:8772":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"11:992:12174":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:9455:33663":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:364:12812":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:0:2560":{"crate_id":17,"path":["object"],"kind":"module"},"2:43669:8530":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"17:12997:10501":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"17:13259:10546":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:7945:12869":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"6:5892:11652":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:1840:12824":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"6:4792:11427":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"11:1862:12204":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:39161:216":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"19:0:1092":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:12086:10314":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:12452:10403":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"17:3232:12612":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:11186:8148":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:45533:9054":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:582:9717":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"6:4786:11424":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"11:389:9945":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:5268:205":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:4415:8436":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"5:629:12776":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:21279:13590":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"6:4853:11451":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:11665:2002":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:6839:13583":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:6015:223":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"16:2574:9432":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"6:6703:11843":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:2786:247":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:13487:10609":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:8941:13576":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:6454:8095":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"17:13739:10722":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:12724:10444":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:10036:10186":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"0:198:1785":{"crate_id":0,"path":["httparse","Error","HeaderName"],"kind":"variant"},"17:9886:12622":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:10265:12639":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:40092:31674":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:11074:12677":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"16:5634:12125":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:10340:10196":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:8607:7807":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"6:588:11056":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:1548:9969":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"6:4333:11237":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:46694:8755":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"5:6584:8037":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:21490:9029":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:1737:13855":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:9547:8428":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:10576:12838":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"2:12895:110":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"6:4418:11291":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"6:5878:11651":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"0:258:1832":{"crate_id":0,"path":["httparse","ParserConfig"],"kind":"struct"},"2:2276:107":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"6:4769:11413":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"11:2351:8037":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"17:10165:20642":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"16:2305:19680":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"7:78:19528":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"5:1473:12203":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:4044:105":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"5:3171:8128":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"6:533:11026":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:39957:8863":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"11:1562:12772":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"5:1374:96":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:1058:12764":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"}},"external_crates":{"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":27}