{"root":"0:0:2062","crate_version":"1.7.1","includes_private":false,"index":{"b:2:2853-0:261:1604":{"id":"b:2:2853-0:261:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:2855:2400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13471:59946":{"id":"2:13471:59946","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3721:8877":{"id":"2:3721:8877","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3723:57145"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:22799:9114":{"id":"2:22799:9114","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22800:58819","2:22801:1220","2:22802:1221","2:22803:58820","2:22804:58821","2:22805:58822","2:22806:58823","2:22807:58824","2:22808:58825","2:22809:58826"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22812:8435","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:175":{"id":"0:175","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[668,0],"end":[679,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:177:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:323:907":{"id":"0:323:907","crate_id":0,"name":"ne","span":{"filename":"src/lib.rs","begin":[409,20],"end":[409,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:171:920":{"id":"0:171:920","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[564,4],"end":[571,5]},"visibility":"public","docs":"Creates a new `Response` using a slice of `Header`s you have allocated.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["headers",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3291:7648-0:225:127":{"id":"a:2:3291:7648-0:225:127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:7648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:232:1604":{"id":"0:232:1604","crate_id":0,"name":"Status","span":{"filename":"src/lib.rs","begin":[145,4],"end":[145,10]},"visibility":"default","docs":"Invalid byte in Response status.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13405:1738":{"id":"2:13405:1738","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49387:1573","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3262:220-0:324:1706":{"id":"a:2:3262:220-0:324:1706","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13446:55366":{"id":"2:13446:55366","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"2:13015:8335","str::splitn":"1:15916:2335","prim@char":"1:15910:2330"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49523:7942","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:8332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3194-0:225:127":{"id":"b:2:3194-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3197:127","2:3198:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:163:1752":{"id":"0:163:1752","crate_id":0,"name":"parse_with_uninit_headers","span":{"filename":"src/lib.rs","begin":[469,4],"end":[475,5]},"visibility":"public","docs":"Try to parse a buffer of bytes into the Request,\nexcept use an uninitialized slice of `Header`s.\n\nFor more information, see `parse`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["headers",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"MaybeUninit","id":"2:32293:1572","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:131:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9237:7631-0:261:1604":{"id":"a:2:9237:7631-0:261:1604","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:7631","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:7631","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:242:408":{"id":"0:242:408","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[136,15],"end":[136,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:226:1598":{"id":"0:226:1598","crate_id":0,"name":"HeaderName","span":{"filename":"src/lib.rs","begin":[139,4],"end":[139,14]},"visibility":"default","docs":"Invalid byte in header name.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3710:224":{"id":"2:3710:224","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3711:181","2:3712:8877","2:3713:686","2:3714:369"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"2:3715:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3710:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3392:8957":{"id":"2:3392:8957","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3394:181","2:3395:1226"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10288:8237":{"id":"2:10288:8237","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10289:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:127":{"id":"0:127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[176,0],"end":[180,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","source","backtrace","description","provide","cause"],"trait":{"kind":"resolved_path","inner":{"name":"Error","id":"1:2576:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:128:1620"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3179-0:225:127":{"id":"b:2:3179-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:7824"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:125":{"id":"0:125","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[169,0],"end":[173,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10276:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:126:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10269:109":{"id":"2:10269:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10270:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3194-0:298:1695":{"id":"b:2:3194-0:298:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":["2:3197:127","2:3198:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9237:7631-0:350:1701":{"id":"a:2:9237:7631-0:350:1701","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:7631","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3179-0:350:1701":{"id":"b:2:3179-0:350:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:7824"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:305":{"id":"0:305","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[409,9],"end":[409,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":["0:308:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:338":{"id":"0:338","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[547,16],"end":[547,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3416:8951":{"id":"2:3416:8951","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3418:1227"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3291:7648-0:324:1706":{"id":"a:2:3291:7648-0:324:1706","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'buf","bounds":[{"outlives":"'headers"}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:7648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6411:223":{"id":"5:6411:223","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6412:1390"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:257:604":{"id":"0:257:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[184,16],"end":[184,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3983-0:261:1604":{"id":"b:2:3983-0:261:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3981:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3985:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:309":{"id":"0:309","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[409,16],"end":[409,18]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3259:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:177:660":{"id":"0:177:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[669,4],"end":[678,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13505:59955":{"id":"2:13505:59955","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15910:2330"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49718:8346","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:137:1475":{"id":"0:137:1475","crate_id":0,"name":"unwrap","span":{"filename":"src/lib.rs","begin":[235,4],"end":[240,5]},"visibility":"public","docs":"Convenience method to unwrap a Complete value. Panics if the status is\n`Partial`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:168":{"id":"0:168","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[561,0],"end":[652,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":["0:171:920","0:172:1757"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:366":{"id":"0:366","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[655,26],"end":[655,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:368:604","0:369:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:4764:8911":{"id":"2:4764:8911","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4765:2173","2:4766:58910","2:4767:7837"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3349:8569":{"id":"2:3349:8569","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3351:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4032:8276":{"id":"2:4032:8276","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4033:8284"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13400:59935":{"id":"2:13400:59935","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:15916:2335","str::slice_unchecked":"1:15916:2335","crate::ops::IndexMut":"2:3562:9118"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:3262:220":{"id":"2:3262:220","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3291:7648-0:298:1695":{"id":"a:2:3291:7648-0:298:1695","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'buf","bounds":[{"outlives":"'headers"}]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:7648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:6413-0:251:1622":{"id":"b:5:6413-0:251:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10276:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6415:1390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13414:54998":{"id":"2:13414:54998","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:13015:8335","prim@char":"1:15910:2330"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3183-0:225:127":{"id":"b:2:3183-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3185:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:254:660":{"id":"0:254:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[184,9],"end":[184,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13440:59938":{"id":"2:13440:59938","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split":"1:15916:2335","prim@char":"1:15910:2330","self::pattern":"2:13015:8335","str::split_terminator":"1:15916:2335"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49469:8355","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:8332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13478:59950":{"id":"2:13478:59950","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13015:8335","prim@char":"1:15910:2330"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13469:59945":{"id":"2:13469:59945","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:234:1606":{"id":"0:234:1606","crate_id":0,"name":"Token","span":{"filename":"src/lib.rs","begin":[147,4],"end":[147,9]},"visibility":"default","docs":"Invalid byte where token is required.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:23733:8867":{"id":"2:23733:8867","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23734:9052"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23729:8435","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3189-0:350:1701":{"id":"b:2:3189-0:350:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3159:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3192:127","2:3193:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13458:59941":{"id":"2:13458:59941","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"prim@char":"1:15910:2330","self::pattern":"2:13015:8335","`DoubleEndedIterator`":"2:8425:120","str::matches":"1:15916:2335"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49623:8354","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:8332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2856-0:287:1646":{"id":"b:2:2856-0:287:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:7912","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:287:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2858:53566"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13487:59951":{"id":"2:13487:59951","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13015:8335","prim@char":"1:15910:2330"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:8332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3357:8992":{"id":"2:3357:8992","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3359:893"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:133":{"id":"0:133","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[213,0],"end":[241,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:135:1638","0:136:1640","0:137:1475"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13387:54083":{"id":"2:13387:54083","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12486:1783"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6964:8430":{"id":"1:6964:8430","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6965:54452"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13500:53592":{"id":"2:13500:53592","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2855:2400":{"id":"2:2855:2400","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3983-0:251:1622":{"id":"b:2:3983-0:251:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3981:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3985:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3500:130":{"id":"2:3500:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3502:376"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3503:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10284:8236":{"id":"2:10284:8236","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10285:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13449:59939":{"id":"2:13449:59939","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:225:127":{"id":"b:5:787-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:7884","5:790:7885","5:791:7886"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:215:1874":{"id":"0:215:1874","crate_id":0,"name":"parse_chunk_size","span":{"filename":"src/lib.rs","begin":[1135,0],"end":[1198,1]},"visibility":"public","docs":"Parse a buffer of bytes as a chunk size.\n\nThe return value, if complete and successful, includes the index of the\nbuffer that parsing stopped at, and the size of the following chunk.\n\n# Example\n\n```\nlet buf = b\"4\\r\\nRust\\r\\n0\\r\\n\\r\\n\";\nassert_eq!(httparse::parse_chunk_size(buf),\n           Ok(httparse::Status::Complete((3, 4))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"result::Result","id":"2:47564:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"u64"}]}}],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:349:907":{"id":"0:349:907","crate_id":0,"name":"ne","span":{"filename":"src/lib.rs","begin":[547,20],"end":[547,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:225:127":{"id":"0:225:127","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[137,0],"end":[152,1]},"visibility":"public","docs":"An error in parsing.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:226:1598","0:228:1600","0:230:1602","0:232:1604","0:234:1606","0:236:1608","0:238:1610"],"impls":["a:2:3291:7648-0:225:127","a:2:9237:7631-0:225:127","a:2:3262:220-0:225:127","a:2:3250:211-0:225:127","a:2:9236:7632-0:225:127","b:2:3179-0:225:127","b:2:2856-0:225:127","b:2:2853-0:225:127","b:2:3983-0:225:127","b:2:3183-0:225:127","b:2:3189-0:225:127","b:2:3194-0:225:127","b:5:6413-0:225:127","b:5:787-0:225:127","0:240","0:241","0:243","0:244","0:246","0:247","0:249","0:125","0:127"]}},"0:348:604":{"id":"0:348:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[547,20],"end":[547,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3421:8971":{"id":"2:3421:8971","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3423:1230"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:245:604":{"id":"0:245:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[136,22],"end":[136,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:152:1704":{"id":"0:152:1704","crate_id":0,"name":"parse_response","span":{"filename":"src/lib.rs","begin":[365,4],"end":[371,5]},"visibility":"public","docs":"Parses a response with the given config.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["response",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:131:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13502:59954":{"id":"2:13502:59954","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15910:2330"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49700:8344","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:2062":{"id":"0:0:2062","crate_id":0,"name":"httparse","span":{"filename":"src/lib.rs","begin":[1,0],"end":[1917,1]},"visibility":"public","docs":"# httparse\n\nA push library for parsing HTTP/1.x requests and responses.\n\nThe focus is on speed and safety. Unsafe code is used to keep parsing fast,\nbut unsafety is contained in a submodule, with invariants enforced. The\nparsing internals use an `Iterator` instead of direct indexing, while\nskipping bounds checks.\n\nWith Rust 1.27.0 or later, support for SIMD is enabled automatically.\nIf building an executable to be run on multiple platforms, and thus\nnot passing `target_feature` or `target_cpu` flags to the compiler,\nruntime detection can still detect SSE4.2 or AVX2 support to provide\nmassive wins.\n\nIf compiling for a specific target, remembering to include\n`-C target_cpu=native` allows the detection to become compile time checks,\nmaking it *even* faster.","links":{},"attrs":["#![deny(missing_docs)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:225:127","0:251:1622","0:131:205","0:261:1604","0:287:1646","0:298:1695","0:324:1706","0:350:1701","0:178:1787","0:187:1837","0:215:1874"],"is_stripped":false}},"b:2:3194-0:324:1706":{"id":"b:2:3194-0:324:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":["2:3197:127","2:3198:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13461:59942":{"id":"2:13461:59942","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"`DoubleEndedIterator`":"2:8425:120","self::pattern":"2:13015:8335","prim@char":"1:15910:2330","str::rmatch_indices":"1:15916:2335"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49551:8351","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3377:8587":{"id":"2:3377:8587","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3379:181","2:3380:351"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13389:304":{"id":"2:13389:304","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:15916:2335","`u8`":"1:15927:2344"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13382:59932":{"id":"2:13382:59932","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4631:8436":{"id":"1:4631:8436","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4632:8736","1:4633:57730","1:4635:57731","1:4636:57732","1:4637:8502","1:4638:13776","1:4639:13775","1:4641:57733","1:4642:7858","1:4643:1738","1:4644:7842","1:4646:2445"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3291:7648-0:350:1701":{"id":"a:2:3291:7648-0:350:1701","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:7648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:296":{"id":"0:296","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[244,23],"end":[244,30]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"2:3228:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:287:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:297:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3179-0:261:1604":{"id":"b:2:3179-0:261:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3182:7824"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:345":{"id":"0:345","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[547,20],"end":[547,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":["0:348:604","0:349:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9237:7631":{"id":"2:9237:7631","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:143:1670":{"id":"0:143:1670","crate_id":0,"name":"multiple_spaces_in_response_status_delimiters_are_allowed","span":{"filename":"src/lib.rs","begin":[305,4],"end":[307,5]},"visibility":"public","docs":"Whether multiple spaces are allowed as delimiters in response status lines.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13434:55362":{"id":"2:13434:55362","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"`DoubleEndedIterator`":"2:8425:120","prim@char":"1:15910:2330","self::pattern":"2:13015:8335","str::split":"1:15916:2335"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49419:7940","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:8332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:135:1638":{"id":"0:135:1638","crate_id":0,"name":"is_complete","span":{"filename":"src/lib.rs","begin":[216,4],"end":[221,5]},"visibility":"public","docs":"Convenience method to check if status is complete.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:112":{"id":"0:112","crate_id":0,"name":null,"span":{"filename":"src/simd/mod.rs","begin":[167,0],"end":[167,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(all(httparse_simd,\nnot(any(httparse_simd_target_feature_sse42,\nhttparse_simd_target_feature_avx2,)),\nany(target_arch = \"x86\", target_arch = \"x86_64\",),))]"],"deprecation":null,"kind":"import","inner":{"source":"self::runtime","name":"runtime","id":"0:99:2197","glob":true}},"2:3486:8289":{"id":"2:3486:8289","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3487:545"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"2:3473:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3387:8589":{"id":"2:3387:8589","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3389:181","2:3390:356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[136,15],"end":[136,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:242:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13378":{"id":"2:13378","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12475:1333","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13379:793","2:13380:7831","2:13381:14213","2:13382:59932","2:13384:59933","2:13387:54083","2:13388:59934","2:13389:304","2:13390:13382","2:13391:2161","2:13393:13370","2:13395:2174","2:13397:1848","2:13399:8556","2:13400:59935","2:13401:55352","2:13402:55353","2:13403:8359","2:13404:8938","2:13405:1738","2:13406:14424","2:13407:14422","2:13408:9690","2:13409:59936","2:13410:14163","2:13411:1817","2:13414:54998","2:13417:55000","2:13420:7869","2:13424:7830","2:13428:53956","2:13431:14423","2:13434:55362","2:13437:59937","2:13440:59938","2:13443:55364","2:13446:55366","2:13449:59939","2:13452:59940","2:13455:2411","2:13458:59941","2:13461:59942","2:13464:59943","2:13467:59944","2:13469:59945","2:13471:59946","2:13473:59947","2:13474:59948","2:13475:59949","2:13478:59950","2:13481:13817","2:13484:55368","2:13487:59951","2:13490:59952","2:13493:59953","2:13496:1757","2:13498:9347","2:13499:53591","2:13500:53592","2:13501:53593","2:13502:59954","2:13504:8441","2:13505:59955"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:303:1495":{"id":"0:303:1495","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[416,4],"end":[416,27]},"visibility":"public","docs":"The request version, such as `HTTP/1.1`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}},"2:13390:13382":{"id":"2:13390:13382","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15927:2344"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9342:8460":{"id":"1:9342:8460","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9343:56417","1:9344:56418","1:9345:56419","1:9346:56420","1:9347:56421","1:9348:39904","1:9349:56416"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:8435","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3497:1847":{"id":"2:3497:1847","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3498:578"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13388:59934":{"id":"2:13388:59934","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:178:1787":{"id":"0:178:1787","crate_id":0,"name":"EMPTY_HEADER","span":{"filename":"src/lib.rs","begin":[689,0],"end":[689,74]},"visibility":"public","docs":"An empty header, useful for constructing a `Header` array to pass in for\nparsing.\n\n# Example\n\n```\nlet headers = [httparse::EMPTY_HEADER; 64];\n```","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}},"param_names":[]}},"expr":"_","value":null,"is_literal":false}},"0:258":{"id":"0:258","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[184,27],"end":[184,29]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3259:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2858:53566":{"id":"2:2858:53566","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:295:660":{"id":"0:295:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[244,16],"end":[244,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3150:74":{"id":"2:3150:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3152:7823"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:9237:7631-0:324:1706":{"id":"a:2:9237:7631-0:324:1706","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:7631","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6088:60580":{"id":"5:6088:60580","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8359:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3291:7648-0:261:1604":{"id":"a:2:3291:7648-0:261:1604","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:7648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:7648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3194-0:350:1701":{"id":"b:2:3194-0:350:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3197:127","2:3198:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:253":{"id":"0:253","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[184,9],"end":[184,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:254:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3183-0:261:1604":{"id":"b:2:3183-0:261:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3185:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23096:9065":{"id":"2:23096:9065","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"2:23733:8867","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23087:8435","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2853-0:251:1622":{"id":"b:2:2853-0:251:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2855:2400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13402:55353":{"id":"2:13402:55353","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:15916:2335"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:272:408":{"id":"0:272:408","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[205,15],"end":[205,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13481:13817":{"id":"2:13481:13817","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13015:8335","prim@char":"1:15910:2330"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13034:8333":{"id":"2:13034:8333","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13036:8931","2:13037:922","2:13038:58389","2:13039:58390"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6085:1753":{"id":"5:6085:1753","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8359:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13407:14422":{"id":"2:13407:14422","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15916:2335"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49684:8337","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:334:660":{"id":"0:334:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[547,9],"end":[547,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2856-0:225:127":{"id":"b:2:2856-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:7912","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2858:53566"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2856-0:350:1701":{"id":"b:2:2856-0:350:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:7912","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2858:53566"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8340:8976":{"id":"2:8340:8976","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8342:7875"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3179-0:287:1646":{"id":"b:2:3179-0:287:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:287:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:7824"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12462:9354":{"id":"2:12462:9354","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12463:2173","2:12464:58477"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3398:8960":{"id":"2:3398:8960","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3400:181","2:3401:1229"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13474:59948":{"id":"2:13474:59948","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6792:8484":{"id":"1:6792:8484","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6793:53950","1:6794:54139"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:8435","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:243":{"id":"0:243","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[136,22],"end":[136,31]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3258:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:273":{"id":"0:273","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[205,22],"end":[205,24]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3259:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:230:1602":{"id":"0:230:1602","crate_id":0,"name":"NewLine","span":{"filename":"src/lib.rs","begin":[143,4],"end":[143,11]},"visibility":"default","docs":"Invalid byte in new line.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:3323:8570":{"id":"2:3323:8570","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3325:181","2:3326:1348"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23424:9053":{"id":"2:23424:9053","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23425:1263","2:23426:1262","2:23427:1260","2:23428:1259"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdPartialEq","id":"2:22836:9116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3183-0:287:1646":{"id":"b:2:3183-0:287:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:287:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3185:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5794:8421":{"id":"1:5794:8421","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5795:54468"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:8435","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:342":{"id":"0:342","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[547,20],"end":[547,29]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3258:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3318:8568":{"id":"2:3318:8568","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3320:181","2:3321:265"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13443:55364":{"id":"2:13443:55364","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"str::rsplitn":"1:15916:2335","self::pattern":"2:13015:8335","prim@char":"1:15910:2330"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49505:7944","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3250:211-0:298:1695":{"id":"a:2:3250:211-0:298:1695","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13391:2161":{"id":"2:13391:2161","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47437:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:22899:8463":{"id":"2:22899:8463","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22889:8435","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:4991:8442":{"id":"1:4991:8442","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4992:7934","1:4993:57932"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4706:8505":{"id":"1:4706:8505","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4707:53623","1:4708:40298","1:4709:53624","1:4710:53625"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3983-0:350:1701":{"id":"b:2:3983-0:350:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3981:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3985:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[205,37],"end":[205,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:286:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6690:8415":{"id":"1:6690:8415","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6691:54485","1:6692:12572","1:6693:12573","1:6694:12575","1:6695:12574","1:6696:12576","1:6697:12577","1:6698:12579","1:6699:11167","1:6700:12582","1:6701:12583","1:6702:12584","1:6703:12585","1:6704:12586","1:6705:12587","1:6706:12580","1:6707:12581"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3153:149":{"id":"2:3153:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3155:7824"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3262:220-0:287:1646":{"id":"a:2:3262:220-0:287:1646","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:287:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13475:59949":{"id":"2:13475:59949","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:13015:8335","prim@char":"1:15910:2330"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"2:13045:8330","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8377:136":{"id":"2:8377:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8379:684"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3192:127":{"id":"2:3192:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}},"2:13393:13370":{"id":"2:13393:13370","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47437:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:266:1636":{"id":"0:266:1636","crate_id":0,"name":"Partial","span":{"filename":"src/lib.rs","begin":[210,4],"end":[210,11]},"visibility":"default","docs":"A partial result.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"1:6868:8472":{"id":"1:6868:8472","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6869:57710"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:139:1647":{"id":"0:139:1647","crate_id":0,"name":"allow_spaces_after_header_name_in_responses","span":{"filename":"src/lib.rs","begin":[254,4],"end":[260,5]},"visibility":"public","docs":"Sets whether spaces should be allowed after header name.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:1079:8439":{"id":"1:1079:8439","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1080:7884","1:1081:9347","1:1082:53589","1:1083:53590","1:1084:53591","1:1085:53592","1:1086:53593"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:138":{"id":"0:138","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[252,0],"end":[382,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:287:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:139:1647","0:140:1649","0:141:1662","0:142:1650","0:143:1670","0:144:1648","0:145:1689","0:146:1691","0:149:1699","0:152:1704","0:155:1708"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:280":{"id":"0:280","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[205,26],"end":[205,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::cmp::PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:282:604","0:283:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13403:8359":{"id":"2:13403:8359","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15910:2330"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49371:8341","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2856-0:261:1604":{"id":"b:2:2856-0:261:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:7912","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:2858:53566"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:140:1649":{"id":"0:140:1649","crate_id":0,"name":"allow_multiple_spaces_in_request_line_delimiters","span":{"filename":"src/lib.rs","begin":[275,4],"end":[278,5]},"visibility":"public","docs":"Sets whether multiple spaces are allowed as delimiters in request lines.\n\n# Background\n\nThe [latest version of the HTTP/1.1 spec][spec] allows implementations to parse multiple\nwhitespace characters in place of the `SP` delimiters in the request line, including:\n\n> SP, HTAB, VT (%x0B), FF (%x0C), or bare CR\n\nThis option relaxes the parser to allow for multiple spaces, but does *not* allow the\nrequest line to contain the other mentioned whitespace characters.\n\n[spec]: https://httpwg.org/http-core/draft-ietf-httpbis-messaging-latest.html#rfc.section.3.p.3","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9237:7631-0:225:127":{"id":"a:2:9237:7631-0:225:127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:7631","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13496:1757":{"id":"2:13496:1757","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:12954:8347","FromStr::Err":"2:12954:8347"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47564:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12954:8347","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12954:8347","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5732:8417":{"id":"1:5732:8417","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5733:10250","1:5734:54281","1:5735:54282"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6442:8468":{"id":"1:6442:8468","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6443:8802","1:6444:8803","1:6445:13209","1:6446:57977","1:6448:57981","1:6450:57978","1:6451:57979","1:6453:57980"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:8435","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3159:228":{"id":"2:3159:228","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3161:127","2:3162:1409"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13437:59937":{"id":"2:13437:59937","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"str::split":"1:15916:2335","`DoubleEndedIterator`":"2:8425:120","str::rsplit_terminator":"1:15916:2335","self::pattern":"2:13015:8335","prim@char":"1:15910:2330"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49451:8356","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:353:1652":{"id":"0:353:1652","crate_id":0,"name":"value","span":{"filename":"src/lib.rs","begin":[665,4],"end":[665,23]},"visibility":"public","docs":"The value portion of a header.\n\nWhile headers **should** be ASCII-US, the specification allows for\nvalues that may not be, and so the value is stored as bytes.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},"2:10278:8233":{"id":"2:10278:8233","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10279:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5652:8482":{"id":"1:5652:8482","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5653:54150","1:5654:9434"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:8435","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13406:14424":{"id":"2:13406:14424","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15916:2335"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49675:8338","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:352:899":{"id":"0:352:899","crate_id":0,"name":"name","span":{"filename":"src/lib.rs","begin":[660,4],"end":[660,21]},"visibility":"public","docs":"The name portion of a header.\n\nA header name must be valid ASCII-US, so it's safe to store as a `&str`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"2:13464:59943":{"id":"2:13464:59943","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:13015:8335","prim@char":"1:15910:2330","`DoubleEndedIterator`":"2:8425:120","str::match_indices":"1:15916:2335"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49569:8352","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:8332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3147:75":{"id":"2:3147:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3149:305"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:354":{"id":"0:354","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[655,9],"end":[655,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9236:7632":{"id":"2:9236:7632","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[205,9],"end":[205,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::marker::Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3085:9003":{"id":"2:3085:9003","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:3084:8435","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:304:1700":{"id":"0:304:1700","crate_id":0,"name":"headers","span":{"filename":"src/lib.rs","begin":[418,4],"end":[418,45]},"visibility":"public","docs":"The request headers.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'headers","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}}}}}},"0:161:920":{"id":"0:161:920","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[424,4],"end":[431,5]},"visibility":"public","docs":"Creates a new Request, using a slice of headers you allocate.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["headers",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13420:7869":{"id":"2:13420:7869","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"2:13015:8335","prim@char":"1:15910:2330","`None`":"2:47437:176"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10286:189":{"id":"2:10286:189","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10287:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8579:157":{"id":"2:8579:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8580:2173","2:8581:922","2:8582:7836","2:8585:7837","2:8586:495","2:8588:7838","2:8591:7839","2:8592:7840","2:8593:7841","2:8594:7842","2:8596:7843","2:8598:7844","2:8599:7845","2:8601:841","2:8604:7846","2:8611:7847","2:8613:7848","2:8616:2271","2:8617:7849","2:8618:7850","2:8620:7851","2:8622:7852","2:8625:1301","2:8626:2445","2:8627:7853","2:8631:7854","2:8634:7855","2:8635:7856","2:8636:7857","2:8638:7858","2:8639:7656","2:8641:7859","2:8644:7860","2:8646:7861","2:8656:7862","2:8671:7863","2:8673:7864","2:8677:7865","2:8686:7866","2:8689:7867","2:8691:7868","2:8694:276","2:8701:294","2:8708:7869","2:8715:7870","2:8724:7871","2:8734:1014","2:8741:1868","2:8748:7816","2:8749:7813","2:8750:7818","2:8762:7817","2:8769:7815","2:8781:7814","2:8788:2268","2:8789:7872","2:8794:7873","2:8797:2162","2:8800:7874","2:8801:7875","2:8803:7876","2:8805:415","2:8808:7877","2:8811:997","2:8814:7878","2:8817:604","2:8820:7879","2:8823:907","2:8825:826","2:8827:792","2:8829:713","2:8831:696","2:8833:7880","2:8834:7881","2:8842:7882"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5724:8416":{"id":"1:5724:8416","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5725:53711","1:5726:53713","1:5727:53712","1:5728:53714"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3353:8571":{"id":"2:3353:8571","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3355:1349"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3260:106":{"id":"2:3260:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:129":{"id":"0:129","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[187,0],"end":[191,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10276:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:130:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:783:222":{"id":"5:783:222","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:7884","5:785:7885","5:786:7886"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:126:660":{"id":"0:126:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[170,4],"end":[172,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3382:8588":{"id":"2:3382:8588","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3384:181","2:3385:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3198:1408":{"id":"2:3198:1408","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47564:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3194-0:251:1622":{"id":"b:2:3194-0:251:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3197:127","2:3198:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:236:1608":{"id":"0:236:1608","crate_id":0,"name":"TooManyHeaders","span":{"filename":"src/lib.rs","begin":[149,4],"end":[149,18]},"visibility":"default","docs":"Parsed more headers than provided buffer can contain.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13395:2174":{"id":"2:13395:2174","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:3562:9118":{"id":"2:3562:9118","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3564:754"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3558:8645","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:287:1646":{"id":"0:287:1646","crate_id":0,"name":"ParserConfig","span":{"filename":"src/lib.rs","begin":[245,0],"end":[250,1]},"visibility":"public","docs":"Parser configuration.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:138","a:2:3291:7648-0:287:1646","a:2:9237:7631-0:287:1646","a:2:3262:220-0:287:1646","a:2:3250:211-0:287:1646","a:2:9236:7632-0:287:1646","b:2:3179-0:287:1646","b:2:2856-0:287:1646","b:2:2853-0:287:1646","b:2:3983-0:287:1646","b:2:3183-0:287:1646","b:2:3189-0:287:1646","b:2:3194-0:287:1646","b:5:787-0:287:1646","0:292","0:294","0:296"]}},"a:2:3262:220-0:251:1622":{"id":"a:2:3262:220-0:251:1622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9236:7632-0:350:1701":{"id":"a:2:9236:7632-0:350:1701","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:7632","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2872:104":{"id":"2:2872:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2873:408","2:2874:410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9237:7631-0:298:1695":{"id":"a:2:9237:7631-0:298:1695","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:7631","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3715:137":{"id":"2:3715:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3717:687"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3710:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:142:1650":{"id":"0:142:1650","crate_id":0,"name":"allow_multiple_spaces_in_response_status_delimiters","span":{"filename":"src/lib.rs","begin":[299,4],"end":[302,5]},"visibility":"public","docs":"Sets whether multiple spaces are allowed as delimiters in response status lines.\n\n# Background\n\nThe [latest version of the HTTP/1.1 spec][spec] allows implementations to parse multiple\nwhitespace characters in place of the `SP` delimiters in the response status line,\nincluding:\n\n> SP, HTAB, VT (%x0B), FF (%x0C), or bare CR\n\nThis option relaxes the parser to allow for multiple spaces, but does *not* allow the status\nline to contain the other mentioned whitespace characters.\n\n[spec]: https://httpwg.org/http-core/draft-ietf-httpbis-messaging-latest.html#rfc.section.4.p.3","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3183-0:350:1701":{"id":"b:2:3183-0:350:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:3185:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3983-0:298:1695":{"id":"b:2:3983-0:298:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3981:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":["2:3985:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8381:151":{"id":"2:8381:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8382:2173","2:8383:7835","2:8384:768"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8860:8287":{"id":"2:8860:8287","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:131:205":{"id":"0:131:205","crate_id":0,"name":"Result","span":{"filename":"src/lib.rs","begin":[198,0],"end":[198,54]},"visibility":"public","docs":"A Result of any parsing action.\n\nIf the input is invalid, an `Error` will be returned. Note that incomplete\ndata is not considered invalid, and so will not return an error, but rather\na `Ok(Status::Partial)`.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"result::Result","id":"2:47564:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"5:6415:1390":{"id":"5:6415:1390","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13040:8332":{"id":"2:13040:8332","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13042:7825","2:13043:58806","2:13044:58807"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"2:13034:8333","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8864:9058":{"id":"2:8864:9058","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"2:7905:9059","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:324:1706":{"id":"0:324:1706","crate_id":0,"name":"Response","span":{"filename":"src/lib.rs","begin":[548,0],"end":[559,1]},"visibility":"public","docs":"A parsed Response.\n\nSee `Request` docs for explanation of optional values.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:327:1495","0:328:1767","0:329:1080","0:330:1700"],"impls":["0:168","a:2:3291:7648-0:324:1706","a:2:9237:7631-0:324:1706","a:2:3262:220-0:324:1706","a:2:3250:211-0:324:1706","a:2:9236:7632-0:324:1706","b:2:3179-0:324:1706","b:2:2856-0:324:1706","b:2:2853-0:324:1706","b:2:3983-0:324:1706","b:2:3183-0:324:1706","b:2:3189-0:324:1706","b:2:3194-0:324:1706","0:331","0:335","0:338","0:342","0:345"]}},"5:6103:60582":{"id":"5:6103:60582","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8359:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:130:660":{"id":"0:130:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[188,4],"end":[190,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3189-0:251:1622":{"id":"b:2:3189-0:251:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3159:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3192:127","2:3193:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13399:8556":{"id":"2:13399:8556","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"str::slice_mut_unchecked":"1:15916:2335","`str`":"1:15916:2335","crate::ops::Index":"2:3558:8645"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:350:1701":{"id":"0:350:1701","crate_id":0,"name":"Header","span":{"filename":"src/lib.rs","begin":[656,0],"end":[666,1]},"visibility":"public","docs":"Represents a parsed header.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:352:899","0:353:1652"],"impls":["a:2:3291:7648-0:350:1701","a:2:9237:7631-0:350:1701","a:2:3262:220-0:350:1701","a:2:3250:211-0:350:1701","a:2:9236:7632-0:350:1701","b:2:3179-0:350:1701","b:2:2856-0:350:1701","b:2:2853-0:350:1701","b:2:3983-0:350:1701","b:2:3183-0:350:1701","b:2:3189-0:350:1701","b:2:3194-0:350:1701","b:5:787-0:350:1701","0:354","0:356","0:359","0:361","0:364","0:366","0:175"]}},"a:2:3250:211-0:324:1706":{"id":"a:2:3250:211-0:324:1706","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3179-0:324:1706":{"id":"b:2:3179-0:324:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:7824"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:330:1700":{"id":"0:330:1700","crate_id":0,"name":"headers","span":{"filename":"src/lib.rs","begin":[558,4],"end":[558,45]},"visibility":"public","docs":"The response headers.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'headers","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}}}}}},"a:2:3291:7648-0:287:1646":{"id":"a:2:3291:7648-0:287:1646","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:7648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:287:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10507:142":{"id":"2:10507:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10508:715","2:10510:14192"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13728:138":{"id":"2:13728:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13729:181","2:13730:1013"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13404:8938":{"id":"2:13404:8938","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15910:2330"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49377:8340","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10280:8234":{"id":"2:10280:8234","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10281:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13473:59947":{"id":"2:13473:59947","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:238:1610":{"id":"0:238:1610","crate_id":0,"name":"Version","span":{"filename":"src/lib.rs","begin":[151,4],"end":[151,11]},"visibility":"default","docs":"Invalid byte in HTTP version.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:10219:8228":{"id":"2:10219:8228","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10220:1524","2:10221:54647","2:10223:53828"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:358:408":{"id":"0:358:408","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[655,15],"end":[655,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:146:1691":{"id":"0:146:1691","crate_id":0,"name":"parse_request","span":{"filename":"src/lib.rs","begin":[346,4],"end":[352,5]},"visibility":"public","docs":"Parses a request with the given config.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["request",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:131:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6864:8431":{"id":"1:6864:8431","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6865:53783"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3163:227":{"id":"2:3163:227","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3165:127","2:3166:1408"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:149:1699":{"id":"0:149:1699","crate_id":0,"name":"parse_request_with_uninit_headers","span":{"filename":"src/lib.rs","begin":[355,4],"end":[362,5]},"visibility":"public","docs":"Parses a request with the given config and buffer for headers","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["request",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["headers",{"kind":"borrowed_ref","inner":{"lifetime":"'headers","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"MaybeUninit","id":"2:32293:1572","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:131:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2850:7912":{"id":"2:2850:7912","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2852:53566"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3793:9016":{"id":"2:3793:9016","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:263:1634":{"id":"0:263:1634","crate_id":0,"name":"Complete","span":{"filename":"src/lib.rs","begin":[208,4],"end":[208,15]},"visibility":"default","docs":"The completed result.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"generic","inner":"T"}]}},"1:5802:8423":{"id":"1:5802:8423","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5803:10250"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:359":{"id":"0:359","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[655,22],"end":[655,24]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3259:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10282:8235":{"id":"2:10282:8235","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10283:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:6413-0:225:127":{"id":"b:5:6413-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10276:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:6415:1390"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6562:8476":{"id":"1:6562:8476","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6563:54461","1:6564:54462"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9236:7632-0:287:1646":{"id":"a:2:9236:7632-0:287:1646","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:7632","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:287:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5790:8420":{"id":"1:5790:8420","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5791:56441"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:155:1708":{"id":"0:155:1708","crate_id":0,"name":"parse_response_with_uninit_headers","span":{"filename":"src/lib.rs","begin":[374,4],"end":[381,5]},"visibility":"public","docs":"Parses a response with the given config and buffer for headers","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["response",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["headers",{"kind":"borrowed_ref","inner":{"lifetime":"'headers","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"MaybeUninit","id":"2:32293:1572","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:131:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3558:8645":{"id":"2:3558:8645","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3560:181","2:3561:753"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:9236:7632-0:225:127":{"id":"a:2:9236:7632-0:225:127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:7632","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13431:14423":{"id":"2:13431:14423","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:13015:8335","prim@char":"1:15910:2330"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12807:7946","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6091:60581":{"id":"5:6091:60581","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8359:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3404:8963":{"id":"2:3404:8963","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3406:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:256":{"id":"0:256","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[184,16],"end":[184,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:257:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8450:7649":{"id":"2:8450:7649","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8451:793","2:8452:7831"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:790:7885":{"id":"5:790:7885","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:261:1604":{"id":"0:261:1604","crate_id":0,"name":"Status","span":{"filename":"src/lib.rs","begin":[206,0],"end":[211,1]},"visibility":"public","docs":"The result of a successful parse pass.\n\n`Complete` is used when the buffer contained the complete value.\n`Partial` is used when parsing did not reach the end of the expected value,\nbut no invalid data was found.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:263:1634","0:266:1636"],"impls":["0:133","a:2:3291:7648-0:261:1604","a:2:9237:7631-0:261:1604","a:2:3262:220-0:261:1604","a:2:3250:211-0:261:1604","a:2:9236:7632-0:261:1604","b:2:3179-0:261:1604","b:2:2856-0:261:1604","b:2:2853-0:261:1604","b:2:3983-0:261:1604","b:2:3183-0:261:1604","b:2:3189-0:261:1604","b:2:3194-0:261:1604","b:5:787-0:261:1604","0:268","0:270","0:273","0:275","0:278","0:280","0:284"]}},"2:3370:8952":{"id":"2:3370:8952","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3371:181","2:3372:952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:255":{"id":"0:255","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[184,16],"end":[184,25]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3258:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10290:8238":{"id":"2:10290:8238","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10291:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3291:7648-0:251:1622":{"id":"a:2:3291:7648-0:251:1622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3291:7648","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:316":{"id":"0:316","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[409,20],"end":[409,29]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3258:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:187:1837":{"id":"0:187:1837","crate_id":0,"name":"parse_headers","span":{"filename":"src/lib.rs","begin":[846,0],"end":[853,1]},"visibility":"public","docs":"Parse a buffer of bytes as headers.\n\nThe return value, if complete and successful, includes the index of the\nbuffer that parsing stopped at, and a sliced reference to the parsed\nheaders. The length of the slice will be equal to the number of properly\nparsed headers.\n\n# Example\n\n```\nlet buf = b\"Host: foo.bar\\nAccept: */*\\n\\nblah blah\";\nlet mut headers = [httparse::EMPTY_HEADER; 4];\nassert_eq!(httparse::parse_headers(buf, &mut headers),\n           Ok(httparse::Status::Complete((27, &[\n               httparse::Header { name: \"Host\", value: b\"foo.bar\" },\n               httparse::Header { name: \"Accept\", value: b\"*/*\" }\n           ][..]))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["src",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:131:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}}}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":["'h"]}}},{"name":"'h","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3182:7824":{"id":"2:3182:7824","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3156:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:244":{"id":"0:244","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[136,22],"end":[136,31]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:245:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5837:7908":{"id":"5:5837:7908","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5839:181","5:5840:33872"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6866:8471":{"id":"1:6866:8471","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6867:54330"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4688:8228":{"id":"1:4688:8228","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4689:2414","1:4690:53825","1:4692:53826","1:4693:9613","1:4694:53827","1:4695:13862","1:4696:53828","1:4705:7858"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8857:8286":{"id":"2:8857:8286","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3194-0:261:1604":{"id":"b:2:3194-0:261:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3197:127","2:3198:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13493:59953":{"id":"2:13493:59953","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15910:2330","self::pattern":"2:13015:8335"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:8332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:7905:9059":{"id":"2:7905:9059","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7906:59339","2:7907:59340","2:7908:59337","2:7909:59335","2:7910:59341","2:7911:59338","2:7912:59336"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2948:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9236:7632-0:251:1622":{"id":"a:2:9236:7632-0:251:1622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:7632","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:294":{"id":"0:294","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[244,16],"end":[244,21]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:287:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:295:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3983-0:324:1706":{"id":"b:2:3983-0:324:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3981:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":["2:3985:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3193:1409":{"id":"2:3193:1409","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47564:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:251:1622":{"id":"0:251:1622","crate_id":0,"name":"InvalidChunkSize","span":{"filename":"src/lib.rs","begin":[185,0],"end":[185,28]},"visibility":"public","docs":"An error in parsing a chunk size.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"unit","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":[],"impls":["a:2:3291:7648-0:251:1622","a:2:9237:7631-0:251:1622","a:2:3262:220-0:251:1622","a:2:3250:211-0:251:1622","a:2:9236:7632-0:251:1622","b:2:3179-0:251:1622","b:2:2856-0:251:1622","b:2:2853-0:251:1622","b:2:3983-0:251:1622","b:2:3183-0:251:1622","b:2:3189-0:251:1622","b:2:3194-0:251:1622","b:5:6413-0:251:1622","0:253","0:255","0:256","0:258","0:259","0:129"]}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[136,33],"end":[136,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:297:59":{"id":"0:297:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[244,23],"end":[244,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:287:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:144:1648":{"id":"0:144:1648","crate_id":0,"name":"allow_obsolete_multiline_headers_in_responses","span":{"filename":"src/lib.rs","begin":[332,4],"end":[338,5]},"visibility":"public","docs":"Sets whether obsolete multiline headers should be allowed.\n\nThis is an obsolete part of HTTP/1. Use at your own risk. If you are\nbuilding an HTTP library, the newlines (`\\r` and `\\n`) should be\nreplaced by spaces before handing the header value to the user.\n\n# Example\n\n```rust\nlet buf = b\"HTTP/1.1 200 OK\\r\\nFolded-Header: hello\\r\\n there \\r\\n\\r\\n\";\nlet mut headers = [httparse::EMPTY_HEADER; 16];\nlet mut response = httparse::Response::new(&mut headers);\n\nlet res = httparse::ParserConfig::default()\n    .allow_obsolete_multiline_headers_in_responses(true)\n    .parse_response(&mut response, buf);\n\nassert_eq!(res, Ok(httparse::Status::Complete(buf.len())));\n\nassert_eq!(response.headers.len(), 1);\nassert_eq!(response.headers[0].name, \"Folded-Header\");\nassert_eq!(response.headers[0].value, b\"hello\\r\\n there\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9236:7632-0:298:1695":{"id":"a:2:9236:7632-0:298:1695","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:7632","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:9237:7631-0:287:1646":{"id":"a:2:9237:7631-0:287:1646","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:7631","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:287:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3250:211-0:261:1604":{"id":"a:2:3250:211-0:261:1604","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3258:218":{"id":"2:3258:218","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:369:907":{"id":"0:369:907","crate_id":0,"name":"ne","span":{"filename":"src/lib.rs","begin":[655,26],"end":[655,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6083":{"id":"5:6083","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5903:1333","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6084:60579","5:6085:1753","5:6088:60580","5:6091:60581","5:6103:60582","5:6104:60583","5:6105:8531","5:6106:53589","5:6107:53590"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3262:220-0:261:1604":{"id":"a:2:3262:220-0:261:1604","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2847:97":{"id":"2:2847:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2849:2400"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:5658:8480":{"id":"1:5658:8480","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5659:10064","1:5660:54083"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:8435","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3189-0:324:1706":{"id":"b:2:3189-0:324:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3159:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":["2:3192:127","2:3193:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:270":{"id":"0:270","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[205,15],"end":[205,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::clone::Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:272:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3250:211":{"id":"2:3250:211","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13467:59944":{"id":"2:13467:59944","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3345:8988":{"id":"2:3345:8988","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3346:181","2:3347:913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13409:59936":{"id":"2:13409:59936","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49665:8350","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:261:1604":{"id":"b:5:787-0:261:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["5:789:7884","5:790:7885","5:791:7886"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13379:793":{"id":"2:13379:793","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15910:2330"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:301:1729":{"id":"0:301:1729","crate_id":0,"name":"method","span":{"filename":"src/lib.rs","begin":[412,4],"end":[412,33]},"visibility":"public","docs":"The request method, such as `GET`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}}},"b:2:2853-0:287:1646":{"id":"b:2:2853-0:287:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:287:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2855:2400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:787-0:350:1701":{"id":"b:5:787-0:350:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["5:789:7884","5:790:7885","5:791:7886"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3250:211-0:251:1622":{"id":"a:2:3250:211-0:251:1622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:328:1767":{"id":"0:328:1767","crate_id":0,"name":"code","span":{"filename":"src/lib.rs","begin":[552,4],"end":[552,25]},"visibility":"public","docs":"The response code, such as `200`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u16"}}],"bindings":[]}},"param_names":[]}}},"1:5780:8419":{"id":"1:5780:8419","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5781:54121","1:5782:54122","1:5783:54123","1:5784:54124"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2856-0:251:1622":{"id":"b:2:2856-0:251:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:7912","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2858:53566"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3473:116":{"id":"2:3473:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3474:221","2:3475:543"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:128:1620":{"id":"0:128:1620","crate_id":0,"name":"description","span":{"filename":"src/lib.rs","begin":[177,4],"end":[179,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10911:214":{"id":"2:10911:214","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:10913:181","2:10914:2161","2:10915:13370","2:10916:2174","2:10917:1848","2:10918:753","2:10919:754"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:10902:8435","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13025:8331":{"id":"2:13025:8331","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13027:8333","2:13028:59301","2:13029:59302","2:13030:59303","2:13031:59305","2:13032:59304","2:13033:59306"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3629:9265":{"id":"2:3629:9265","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3631:58372","2:3632:58373","2:3633:1817"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:282:604":{"id":"0:282:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[205,26],"end":[205,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:249":{"id":"0:249","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[136,37],"end":[136,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:250:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9236:7632-0:261:1604":{"id":"a:2:9236:7632-0:261:1604","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:7632","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:7632","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:69:1231":{"id":"0:69:1231","crate_id":0,"name":"simd","span":{"filename":"src/simd/mod.rs","begin":[1,0],"end":[284,35]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:112"],"is_stripped":true}},"2:13490:59952":{"id":"2:13490:59952","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15910:2330","self::pattern":"2:13015:8335"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10552:8586":{"id":"2:10552:8586","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10553:146","2:10554:13914","2:10555:58095"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:298:1695":{"id":"0:298:1695","crate_id":0,"name":"Request","span":{"filename":"src/lib.rs","begin":[410,0],"end":[419,1]},"visibility":"public","docs":"A parsed Request.\n\nThe optional values will be `None` if a parse was not complete, and did not\nparse the associated property. This allows you to inspect the parts that\ncould be parsed, before reading more, in case you wish to exit early.\n\n# Example\n\n```no_run\nlet buf = b\"GET /404 HTTP/1.1\\r\\nHost:\";\nlet mut headers = [httparse::EMPTY_HEADER; 16];\nlet mut req = httparse::Request::new(&mut headers);\nlet res = req.parse(buf).unwrap();\nif res.is_partial() {\n    match req.path {\n        Some(ref path) => {\n            // check router for path.\n            // /404 doesn't exist? we could stop parsing\n        },\n        None => {\n            // must read more and parse again\n        }\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:301:1729","0:302:1002","0:303:1495","0:304:1700"],"impls":["0:158","a:2:3291:7648-0:298:1695","a:2:9237:7631-0:298:1695","a:2:3262:220-0:298:1695","a:2:3250:211-0:298:1695","a:2:9236:7632-0:298:1695","b:2:3179-0:298:1695","b:2:2856-0:298:1695","b:2:2853-0:298:1695","b:2:3983-0:298:1695","b:2:3183-0:298:1695","b:2:3189-0:298:1695","b:2:3194-0:298:1695","0:305","0:309","0:312","0:316","0:319"]}},"2:10517:146":{"id":"2:10517:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10518:652","2:10519:2414","2:10520:54162","2:10521:54163","2:10522:54164","2:10523:54165","2:10524:54166","2:10525:54167","2:10526:54168","2:10527:54169","2:10528:54170","2:10529:54171","2:10530:54172","2:10531:54173","2:10532:54174","2:10533:1524"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6107:53590":{"id":"5:6107:53590","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15916:2335"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13424:7830":{"id":"2:13424:7830","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"self::pattern":"2:13015:8335","prim@char":"1:15910:2330","`None`":"2:47437:176"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:8332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:278":{"id":"0:278","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[205,26],"end":[205,35]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3258:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23048:22293":{"id":"2:23048:22293","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23049:11809","2:23050:58750","2:23051:58751"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23041:8435","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3189-0:225:127":{"id":"b:2:3189-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3159:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3192:127","2:3193:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:331":{"id":"0:331","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[547,9],"end":[547,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":["0:334:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13401:55352":{"id":"2:13401:55352","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:15916:2335"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3250:211-0:350:1701":{"id":"a:2:3250:211-0:350:1701","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13411:1817":{"id":"2:13411:1817","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:15910:2330","self::pattern":"2:13015:8335"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8425:120":{"id":"2:8425:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8426:7825","2:8427:7826","2:8428:7827","2:8429:7828","2:8433:7829","2:8436:7830"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13428:53956":{"id":"2:13428:53956","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::rsplit":"1:15916:2335","prim@char":"1:15910:2330","`DoubleEndedIterator`":"2:8425:120","self::pattern":"2:13015:8335","str::split_whitespace":"1:15916:2335"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49401:7930","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6084:60579":{"id":"5:6084:60579","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:7651","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8097:7914","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:7651","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8097:7914","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5833:7907":{"id":"5:5833:7907","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5835:181","5:5836:432"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:3189-0:287:1646":{"id":"b:2:3189-0:287:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3159:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:287:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3192:127","2:3193:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3262:220-0:225:127":{"id":"a:2:3262:220-0:225:127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:145:1689":{"id":"0:145:1689","crate_id":0,"name":"obsolete_multiline_headers_in_responses_are_allowed","span":{"filename":"src/lib.rs","begin":[341,4],"end":[343,5]},"visibility":"public","docs":"Whether obsolete multiline headers should be allowed.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6464:8465":{"id":"1:6464:8465","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6465:54380","1:6466:12649","1:6467:54381","1:6468:54382","1:6469:54383","1:6470:54384"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:8435","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5740:8418":{"id":"1:5740:8418","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5741:10250","1:5742:12895"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:259":{"id":"0:259","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[184,27],"end":[184,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2853-0:298:1695":{"id":"b:2:2853-0:298:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":["2:2855:2400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3228:115":{"id":"2:3228:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3229:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:7800:8663":{"id":"1:7800:8663","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7801:56489"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3291:7648":{"id":"2:3291:7648","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3197:127":{"id":"2:3197:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38750:8272","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"0:327:1495":{"id":"0:327:1495","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[550,4],"end":[550,27]},"visibility":"public","docs":"The response version, such as `HTTP/1.1`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}},"param_names":[]}}},"2:13397:1848":{"id":"2:13397:1848","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:302:1002":{"id":"0:302:1002","crate_id":0,"name":"path","span":{"filename":"src/lib.rs","begin":[414,4],"end":[414,31]},"visibility":"public","docs":"The request path, such as `/about-us`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}}},"0:364":{"id":"0:364","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[655,26],"end":[655,35]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralPartialEq","id":"2:3258:218","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13455:2411":{"id":"2:13455:2411","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"str::matches":"1:15916:2335","self::pattern":"2:13015:8335","`DoubleEndedIterator`":"2:8425:120","prim@char":"1:15910:2330"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49605:8353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13408:9690":{"id":"2:13408:9690","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49655:8349","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9237:7631-0:251:1622":{"id":"a:2:9237:7631-0:251:1622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9237:7631","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3361:8994":{"id":"2:3361:8994","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3363:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3179-0:251:1622":{"id":"b:2:3179-0:251:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:7824"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:22763:9048":{"id":"2:22763:9048","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22764:9052","2:22765:58819","2:22766:1220","2:22767:1221","2:22768:43271","2:22769:58856","2:22770:14381","2:22771:58857","2:22772:58858","2:22773:58859","2:22774:58820","2:22775:58821","2:22776:58822","2:22777:58823","2:22778:58824","2:22779:58825","2:22780:58826"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22812:8435","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3262:220-0:350:1701":{"id":"a:2:3262:220-0:350:1701","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:322:604":{"id":"0:322:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[409,20],"end":[409,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:275":{"id":"0:275","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[205,22],"end":[205,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2853-0:350:1701":{"id":"b:2:2853-0:350:1701","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["2:2855:2400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:12954:8347":{"id":"2:12954:8347","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12955:126","2:12956:57961"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3250:211-0:225:127":{"id":"a:2:3250:211-0:225:127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:791:7886":{"id":"5:791:7886","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3262:220-0:298:1695":{"id":"a:2:3262:220-0:298:1695","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3262:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3503:131":{"id":"2:3503:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3505:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3506:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13484:55368":{"id":"2:13484:55368","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15910:2330","self::pattern":"2:13015:8335"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:8332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:368:604":{"id":"0:368:604","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[655,26],"end":[655,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:356":{"id":"0:356","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[655,15],"end":[655,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":["0:358:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:312":{"id":"0:312","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[409,16],"end":[409,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2853-0:225:127":{"id":"b:2:2853-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2855:2400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3540:9062":{"id":"2:3540:9062","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3542:237","2:3543:206","2:3544:58528"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6105:8531":{"id":"5:6105:8531","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8359:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3412:8967":{"id":"2:3412:8967","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3414:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:335":{"id":"0:335","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[547,16],"end":[547,18]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3259:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2948:184":{"id":"2:2948:184","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2950:997","2:2951:826","2:2952:792","2:2953:713","2:2954:696"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3328:8981":{"id":"2:3328:8981","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3330:181","2:3331:892"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:329:1080":{"id":"0:329:1080","crate_id":0,"name":"reason","span":{"filename":"src/lib.rs","begin":[556,4],"end":[556,33]},"visibility":"public","docs":"The response reason-phrase, such as `OK`.\n\nContains an empty string if the reason-phrase was missing or contained invalid characters.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}}},"2:8390:7650":{"id":"2:8390:7650","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8392:7832","2:8394:7833","2:8395:7834"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:240":{"id":"0:240","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[136,9],"end":[136,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:141:1662":{"id":"0:141:1662","crate_id":0,"name":"multiple_spaces_in_request_line_delimiters_are_allowed","span":{"filename":"src/lib.rs","begin":[281,4],"end":[283,5]},"visibility":"public","docs":"Whether multiple spaces are allowed as delimiters in request lines.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:298:1695":{"id":"b:2:3179-0:298:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":["2:3182:7824"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13384:59933":{"id":"2:13384:59933","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:15916:2335"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:265:1533":{"id":"0:265:1533","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[208,13],"end":[208,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"b:2:3189-0:298:1695":{"id":"b:2:3189-0:298:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3159:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":["2:3192:127","2:3193:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:158":{"id":"0:158","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[421,0],"end":[501,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}},"param_names":[]}},"items":["0:161:920","0:163:1752","0:165:1757"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6795:8468":{"id":"1:6795:8468","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6796:13210"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10564:8435","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3185:681":{"id":"2:3185:681","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13452:59940":{"id":"2:13452:59940","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:8332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:789:7884":{"id":"5:789:7884","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"a:2:3250:211-0:287:1646":{"id":"a:2:3250:211-0:287:1646","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3250:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:287:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:286:660":{"id":"0:286:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[205,37],"end":[205,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:22836:9116":{"id":"2:22836:9116","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22837:9052","2:22838:1240","2:22839:1265"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:172:1757":{"id":"0:172:1757","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[574,4],"end":[576,5]},"visibility":"public","docs":"Try to parse a buffer of bytes into this `Response`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:131:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:246":{"id":"0:246","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[136,33],"end":[136,35]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"StructuralEq","id":"2:3259:217","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13381:14213":{"id":"2:13381:14213","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3698:9266":{"id":"2:3698:9266","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"2:3629:9265","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2853-0:324:1706":{"id":"b:2:2853-0:324:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":["2:2855:2400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3756:9015":{"id":"2:3756:9015","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13501:53593":{"id":"2:13501:53593","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13743:150":{"id":"2:13743:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13744:181","2:13745:150","2:13746:767"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6104:60583":{"id":"5:6104:60583","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:8359:216","`Box<str>`":"5:432:7651"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:7651","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8097:7914","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3255:2450":{"id":"2:3255:2450","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13417:55000":{"id":"2:13417:55000","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:15910:2330","self::pattern":"2:13015:8335"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13025:8331","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:8332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3983-0:225:127":{"id":"b:2:3983-0:225:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3981:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:225:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3985:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:165:1757":{"id":"0:165:1757","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[498,4],"end":[500,5]},"visibility":"public","docs":"Try to parse a buffer of bytes into the Request.\n\nReturns byte offset in `buf` to start of HTTP body.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:131:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13498:9347":{"id":"2:13498:9347","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3983-0:287:1646":{"id":"b:2:3983-0:287:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3981:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:287:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3985:1421"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:4713:8508":{"id":"1:4713:8508","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4714:53952","1:4715:53953","1:4716:53954","1:4718:8507","1:4719:53955","1:4721:53956","1:4722:9690"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"1:4631:8436","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3183-0:251:1622":{"id":"b:2:3183-0:251:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:251:1622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3185:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3189-0:261:1604":{"id":"b:2:3189-0:261:1604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3159:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3192:127","2:3193:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:308:660":{"id":"0:308:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[409,9],"end":[409,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3339:8978":{"id":"2:3339:8978","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3341:181","2:3342:1102"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3365:8996":{"id":"2:3365:8996","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3367:1103"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3183-0:298:1695":{"id":"b:2:3183-0:298:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":["2:3185:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:136:1640":{"id":"0:136:1640","crate_id":0,"name":"is_partial","span":{"filename":"src/lib.rs","begin":[225,4],"end":[230,5]},"visibility":"public","docs":"Convenience method to check if status is partial.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3194-0:287:1646":{"id":"b:2:3194-0:287:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3153:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3163:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:287:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3197:127","2:3198:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13380:7831":{"id":"2:13380:7831","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14201:7913":{"id":"2:14201:7913","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14202:54535","2:14203:54536","2:14204:54537","2:14205:54538","2:14206:54539","2:14207:54540","2:14208:7858"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:293:408":{"id":"0:293:408","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[244,9],"end":[244,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:287:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13499:53591":{"id":"2:13499:53591","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13045:8330":{"id":"2:13045:8330","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13040:8332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:23429:22312":{"id":"2:23429:22312","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23430:58594","2:23431:58595","2:23432:58596"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdPartialOrd","id":"2:23424:9053","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9236:7632-0:324:1706":{"id":"a:2:9236:7632-0:324:1706","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9236:7632","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:319":{"id":"0:319","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[409,20],"end":[409,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":["'headers"]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":["0:322:604","0:323:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:361":{"id":"0:361","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[655,22],"end":[655,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:350:1701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3259:217":{"id":"2:3259:217","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2938:177":{"id":"2:2938:177","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2939:415","2:2940:7816","2:2941:7813","2:2942:7822"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2948:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3408:8965":{"id":"2:3408:8965","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3410:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2856-0:324:1706":{"id":"b:2:2856-0:324:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:7912","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":["2:2858:53566"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2902:183":{"id":"2:2902:183","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2904:604","2:2905:907"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3985:1421":{"id":"2:3985:1421","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:45973:8277","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:228:1600":{"id":"0:228:1600","crate_id":0,"name":"HeaderValue","span":{"filename":"src/lib.rs","begin":[141,4],"end":[141,15]},"visibility":"default","docs":"Invalid byte in header value.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:22710:9115":{"id":"2:22710:9115","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22711:9052","2:22712:58819","2:22713:59236","2:22714:59237","2:22715:59238","2:22716:43271","2:22717:59239","2:22718:59240","2:22719:59241","2:22720:59242","2:22721:59243","2:22722:59244","2:22723:59245","2:22724:59246","2:22725:14215","2:22726:59247","2:22727:58859","2:22728:13553","2:22729:58595","2:22730:58594","2:22731:58596","2:22732:58820","2:22733:58821","2:22734:58822","2:22735:58823"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22812:8435","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2907:124":{"id":"2:2907:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3183-0:324:1706":{"id":"b:2:3183-0:324:1706","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:324:1706","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":["2:3185:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:14127:141":{"id":"2:14127:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14128:277","2:14129:518","2:14130:280","2:14131:1079"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3506:132":{"id":"2:3506:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3508:181","2:3509:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3156:135":{"id":"2:3156:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3158:681"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:2576:127":{"id":"1:2576:127","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2577:8282","1:2579:2314","1:2580:1620","1:2581:8283","1:2582:8284"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10276:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13504:8441":{"id":"2:13504:8441","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15910:2330"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49709:8345","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13410:14163":{"id":"2:13410:14163","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49693:8336","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:283:907":{"id":"0:283:907","crate_id":0,"name":"ne","span":{"filename":"src/lib.rs","begin":[205,26],"end":[205,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Status","id":"0:261:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8344:8975":{"id":"2:8344:8975","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8346:7876"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3333:8983":{"id":"2:3333:8983","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3335:181","2:3336:558"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5746:8415":{"id":"1:5746:8415","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5747:12227","1:5748:56441","1:5749:10250","1:5750:56442","1:5751:8802","1:5752:8803","1:5753:56443","1:5754:1297","1:5755:56444","1:5756:56445","1:5757:56446","1:5758:56447","1:5759:56448","1:5760:56449","1:5761:56450","1:5762:56451"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10276:119":{"id":"2:10276:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10277:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2856-0:298:1695":{"id":"b:2:2856-0:298:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3255:2450","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:7912","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:298:1695","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}},"param_names":[]}},"items":["2:2858:53566"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3981:68":{"id":"2:3981:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3982:1421"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"b:5:787-0:287:1646":{"id":"b:5:787-0:287:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"kind":"resolved_path","inner":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:287:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["5:789:7884","5:790:7885","5:791:7886"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:250:660":{"id":"0:250:660","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[136,37],"end":[136,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10229:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10218:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6106:53589":{"id":"5:6106:53589","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15916:2335"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:292":{"id":"0:292","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[244,9],"end":[244,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:287:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:293:408"],"negative":false,"synthetic":false,"blanket_impl":null}}},"paths":{"2:24798:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"17:12247:11291":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:3939:10720":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"5:3951:8579":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"2:46369:9340":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:23041:8435":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"5:7815:10934":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:46583:8880":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:6864:8431":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"6:1547:11903":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"5:1674:8630":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:15908:2328":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:15925:2342":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"17:12408:11338":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"12:160:9644":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"16:4704:10622":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"16:5456:9724":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:8344:8975":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:1623:8636":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:5146:8250":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"6:599:11871":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:2276:9008":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:13240:11574":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"16:4230:10699":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"6:4325:12235":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:24174:12863":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:47504:7628":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"17:10584:10164":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:49833:8920":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"5:8112:9476":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:10696:9466":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"17:10864:11122":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:4511:12315":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:1419:7934":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:4419:12278":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:8695:7500":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:48221:8236":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"6:531:11830":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"6:670:40590":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:12118:11274":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:11349:8792":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:13370:11608":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"16:6691:9888":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:6868:8472":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:1476:8578":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:3727:8876":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:5137:9190":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:12053:8686":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"0:228:1600":{"crate_id":0,"path":["httparse","Error","HeaderValue"],"kind":"variant"},"16:6413:9659":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"18:829:10190":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"6:6091:12599":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:6795:8468":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:46339:9338":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"2:48988:7919":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:49962:8924":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"1:10365:10797":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:11246:53583":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"1:7654:8653":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"1:10426:10968":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:45726:8288":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:7446:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:2934:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"6:1602:11936":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:47624:7835":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:1236:13112":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:5780:8419":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:24181:9299":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"12:1118:8637":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:46744:8891":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"5:3370:8580":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"5:8241:8561":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:11519:11157":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:10376:13212":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"5:8097:7914":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"16:6366:9660":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"5:1653:8628":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:2166:8578":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:6415:8882":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:11001:13153":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:49279:7917":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:10788:13140":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:9769:60872":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:10448:10100":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"6:1665:11984":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:11026:13155":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:4033:12137":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:49655:8349":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:49693:8336":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:3200:8502":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:9162:10126":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:13574:11663":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:15881:17088":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:11434:11127":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"1:9770:10966":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"17:10117:10171":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:12040:11257":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:9799:13117":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:46633:8897":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:2462:13199":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"11:0:2306":{"crate_id":11,"path":["adler"],"kind":"module"},"17:13394:11613":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"16:6591:9886":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"6:5274:12402":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"12:396:9646":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:8930:8814":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"2:51808:10362":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:15909:2329":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"6:4164:12196":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"16:3488:10010":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"0:232:1604":{"crate_id":0,"path":["httparse","Error","Status"],"kind":"variant"},"2:51086:9076":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:3408:8965":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:15924:2341":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"5:8129:9477":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"5:1685:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"5:8194:7835":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"12:925:8628":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"5:5903:1333":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"2:51945:9111":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"6:6644:12688":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:13497:11641":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"5:8106:7835":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"5:7111:10934":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:49675:8338":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:10637:17083":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:23429:22312":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"2:5166:7558":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"5:1607:7935":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:51317:9066":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:37569:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"9:0:2304":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:11091:7934":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:46734:8890":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:4317:12231":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:11328:11394":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:46724:8509":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:53442:7461":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:53241:9087":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"6:1729:8793":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"6:4046:12142":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"5:2200:10923":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:11277:10754":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"5:3748:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:46355:8344":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:46624:8884":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:46226:8345":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"17:9961:13120":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:10266:10136":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"6:5953:12543":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"5:6688:9369":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:6442:8468":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:11947:11239":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"6:1527:11895":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:50167:8572":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"6:4241:12202":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:45973:8277":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:11994:54158":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"6:4203:12199":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"18:712:7812":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"16:3800:10715":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:14520:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"16:6136:9867":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"16:7453:9829":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:15916:2335":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"7:0:1472":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:6870:8898":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:4946:8247":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"16:4386:10751":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"18:857:10192":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:11597:7934":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"1:1492:8628":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:9971:60866":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:12045:7934":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"16:7279:10047":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"5:374:9430":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:4721:8999":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:12632:11378":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"16:5505:9729":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"0:187:1837":{"crate_id":0,"path":["httparse","parse_headers"],"kind":"function"},"16:6780:9889":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"5:4628:235":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:47658:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"6:6614:12685":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"5:3772:7935":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"0:215:1874":{"crate_id":0,"path":["httparse","parse_chunk_size"],"kind":"function"},"6:4060:12150":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"16:3118:10013":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"9:692:9509":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"1:11386:12571":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"16:7928:8858":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:12155:11279":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"18:729:60876":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:4697:54646":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"6:6812:12689":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:50360:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"16:7216:9899":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:13854:13186":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:3881:12047":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:9236:7632":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:52528:9092":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"6:0:798":{"crate_id":6,"path":["libc"],"kind":"module"},"1:10576:54533":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"2:3756:9015":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:8450:7649":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"12:784:8629":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:15404:9671":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"16:7185:9896":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"12:2323:11811":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"16:7856:9907":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:12327:11303":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"5:8121:8578":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:11967:8659":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"1:14983:10241":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:49781:8913":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"18:644:10199":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:11111:8509":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"5:8454:9407":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"16:7378:9833":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:10278:8233":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"6:1908:41561":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"18:677:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:11587:8610":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:5740:8418":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:1450:8626":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:10701:8269":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"1:2751:8270":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"6:5428:12484":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"6:3951:12099":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"0:230:1602":{"crate_id":0,"path":["httparse","Error","NewLine"],"kind":"variant"},"2:9237:7631":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:6464:9841":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"16:3064:10059":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:2907:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:49320:7938":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"5:8382:9363":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:49240:7918":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:8486:8687":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"16:5941:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"5:7212:8578":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"16:5330:10593":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"0:131:205":{"crate_id":0,"path":["httparse","Result"],"kind":"typedef"},"2:7647:7843":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:1497:8629":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:47437:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:9659:60868":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:823:10967":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"16:7786:9839":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:3353:8571":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"12:2331:8561":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:15112:8551":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:47616:7935":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"12:2315:60860":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:32258:2451":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:8579:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:4157:10165":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:51581:9078":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:4651:8494":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"12:112:13360":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"5:8359:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:10564:8435":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"16:5360:9719":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:5965:8835":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:11555:11162":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"6:4425:12279":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:4478:12302":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"16:2794:9757":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:51708:9071":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"6:6887:12698":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:13837:8655":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"12:1100:8636":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:1637:8637":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:7668:8654":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:46295:9343":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:12221:11287":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:11231:10127":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"6:6870:12693":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:11962:11244":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"16:7406:9832":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:3084:8435":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:11030:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:10269:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"6:4183:12197":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:11406:1701":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:2181:8581":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:13386:11611":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:12783:11397":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:10179:11086":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"12:2009:7835":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"1:2399:13195":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:53131:9104":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:11222:7931":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:11614:8613":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:12191:8564":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"1:5863:8829":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"6:4281:12215":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:13948:8656":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:47742:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:22836:9116":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:24128:39628":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"12:2018:8579":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"1:12671:8734":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"5:8151:7835":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:11726:11194":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"1:5935:8832":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:8808:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"16:4922:10595":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"0:178:1787":{"crate_id":0,"path":["httparse","EMPTY_HEADER"],"kind":"constant"},"5:994:9475":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:12696:9208":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"5:7373:7835":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:12087:8690":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"5:3759:7934":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:12807:7946":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"16:7477:9850":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:52071:9103":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"5:5093:660":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"12:1855:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"12:976:8635":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"9:234:9534":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"5:3970:10921":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:22799:9114":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"2:47633:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"1:15927:2344":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"6:6636:12686":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"6:4145:12195":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:10071:10175":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:15127:8552":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:12171:7502":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:38750:8272":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:32307:58605":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"6:5436:12486":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:11504:8607":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:46493:10940":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:2492:8912":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:9034:47115":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"16:3218:10005":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"1:10790:8487":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:10502:12835":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"18:754:60873":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:11603:8612":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"12:937:8632":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"16:6269:9878":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:11738:11195":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"16:3365:9755":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"5:2330:9459":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:10656:11089":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:13933:11777":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:1511:8632":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"9:749:9511":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"2:46949:12777":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"17:12385:11329":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:49665:8350":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:46376:9341":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"6:5414:12479":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"16:6577:9885":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:15033:12896":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"6:4341:12242":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"14:216:45467":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:48464:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"1:6704:12586":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"16:5753:9743":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"12:556:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:4359:7835":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"16:4790:10721":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"18:790:10186":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"6:6910:12704":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:14964:8565":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:51384:9110":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:49523:7942":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:5379:8780":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:47608:7934":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:11435:7621":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"6:4523:12320":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"16:3172:10003":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:10801:13142":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"5:6652:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"1:4436:8528":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:2366:600":{"crate_id":1,"path":["std","env"],"kind":"module"},"5:7840:10938":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"12:1762:10919":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:9765:10965":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"1:11226:12794":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"1:11067:8504":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"16:7738:9904":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:12671:11381":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"16:7250:9902":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:49987:8926":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:10938:8675":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"6:4040:12140":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:10668:8640":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"6:6893:12699":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:2576:127":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:47952:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:14847:10974":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"12:1144:8638":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:48440:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"17:13582:11664":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"16:7360:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"17:10140:10102":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:50990:10380":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"16:7195:9897":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:10565:8700":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"6:88:40192":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:3328:8981":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:15267:8779":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"10:0:2305":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"18:636:11072":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"16:4734:10600":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:14030:8853":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:10926:13147":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"2:11295:7940":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:22508:58247":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"12:2045:8583":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"5:8271:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:10943:8520":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:11357:8781":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:12733:9209":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:12552:11358":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:607:13111":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:50390:8273":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"12:877:8579":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"6:5400:12476":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:9839:10102":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:48762:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:10304:10078":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:897:8703":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:9440:10846":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"6:4083:12163":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"5:8304:9272":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:13898:11764":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:46703:8889":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:4572:8534":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"5:5875:10930":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"5:1663:8629":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:24662:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:8644:7498":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"5:3894:9483":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"16:5595:9734":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"12:761:7935":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"16:2991:10011":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"6:4127:12184":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:10692:13205":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"5:1486:8639":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:38813:7808":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"16:5295:45538":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"12:1180:9641":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:9951:9192":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:10552:8586":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:4359:8764":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:52342:9086":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:3333:8983":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"16:5580:9733":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"16:5975:9869":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"17:13205:11570":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"5:7771:234":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:15932:2349":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:10507:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:51038:9096":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"16:5790:9745":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:49505:7944":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"16:4762:10719":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:22495:7812":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:3377:8587":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:51255:9077":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"5:1441:8636":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"16:5472:9727":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"5:5415:8494":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:3147:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:10855:8517":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:3500:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:9068:7508":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:50969:10381":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:46532:8269":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:15923:2340":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"6:4517:12317":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:23424:9053":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"2:51431:9098":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:11970:11246":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"5:1635:8626":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:49569:8352":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:49193:7926":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"6:5312:12430":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"6:4095:12169":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:24730:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:11137:8444":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"2:2203:1050":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:15096:8550":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"17:10975:13151":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"6:4293:12222":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:13015:8335":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:50117:9220":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:53194:9069":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:11640:11177":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:9732:8774":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:12018:10946":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"6:3862:12037":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:14494:8428":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"17:9245:10082":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:11915:11229":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:48473:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"6:3972:12107":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:32299:2452":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"18:837:8333":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"5:69:9406":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:10844:10102":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"6:4364:12256":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:11665:11180":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:8032:8724":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"16:6238:9831":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:2460:13198":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:23733:8867":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:10435:13129":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"18:650:10196":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"6:5386:12465":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:9600:60865":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"6:519:11825":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"16:7342:9861":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:15930:2347":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:8857:8286":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:3250:211":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:46445:9273":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"5:8335:9433":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:11993:11251":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"16:7870:9835":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:12664:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:52377:9068":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:11572:11164":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"6:6005:12571":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:49819:8917":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"5:6954:9356":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:46285:9342":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:12456:11343":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:49359:8343":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:13429:11619":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"6:543:11834":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:14544:8504":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"16:6014:9871":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:11388:7942":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:13780:11735":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"6:5563:12531":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:13819:11743":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:13045:8330":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"16:2912:9999":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"5:3038:7884":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"1:8198:10949":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"17:13978:11783":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:8425:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:11588:11169":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:47994:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:5973:8837":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:47784:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:3156:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"6:4431:12282":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:10962:13150":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:23994:9156":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"16:5561:9732":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"17:13296:11589":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"16:3429:9758":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:3981:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:13819:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"5:3039:60827":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"6:632:11889":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:14507:10310":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:2847:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:15380:12797":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:11194:8452":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"2:5189:8251":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"12:463:13361":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:3150:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:3361:8994":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:8860:8287":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:12307:11302":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"17:12373:11327":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:57638:12790":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"15:248:9663":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"6:5522:12505":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:48525:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:15892:54159":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:11363:8801":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"5:5609:1302":{"crate_id":5,"path":["alloc","slice"],"kind":"module"},"2:24011:12860":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:11358:10085":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"5:3329:7934":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"5:8289:9431":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:49804:8914":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"5:5833:7907":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:10424:13184":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:11124:7930":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:12028:11255":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:3192:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"12:866:8578":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"6:3990:12119":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"12:2025:8580":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:13192:11565":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:24088:10395":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:14863:10975":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:22893:8461":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"5:8167:9361":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:13700:8665":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"17:10224:13128":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:13091:8916":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:10317:10081":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"16:3714:10707":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:4671:10747":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:11140:7930":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"17:9133:47118":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"5:432:7651":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:3349:8569":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:3387:8589":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"6:3892:12055":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"6:1690:12003":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:51660:9067":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:9238:7630":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:3540:9062":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:46395:9170":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"5:5315:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:7620:8651":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:13446:11626":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:24209:9256":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"12:2039:8582":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:15933:2350":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"17:12182:11283":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:47868:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"6:6100:12602":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:4365:8766":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"6:4395:12268":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"12:0:2307":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"1:6702:12584":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:46601:12875":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"16:6636:9845":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"17:9574:10093":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"16:5488:9728":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"6:1563:11911":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"5:1618:7835":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:7634:8652":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:11408:8470":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:3194:8735":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:12756:9210":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:23623:8462":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:11343:8836":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:49377:8340":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:10229:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:11990:12887":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"17:13733:11717":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:3365:8996":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:3558:8645":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:7291:13201":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:3318:8568":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:13453:11627":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:12116:8692":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:47538:7629":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"12:354:12854":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:48561:8232":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:11118:1573":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:10933:8674":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:47564:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:1045:8479":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:7797:8661":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:48503:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:11289:8782":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"5:1235:9458":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:8381:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"6:1540:11901":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:48078:7497":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:4438:8529":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:15326:8787":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:3278:7807":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"9:809:8607":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:11918:7933":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"17:13810:11741":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"5:4699:10926":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:6464:8465":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"16:7392:9834":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"6:4133:12186":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:32293:1572":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"6:6852:12690":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:10061:13124":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:299:13109":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:11079:8506":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:3382:8588":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:45994:8858":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"17:10200:13126":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:12234:11289":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:13041:11509":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:11653:11179":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:48577:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"17:10827:10162":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:10839:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:51840:10391":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"6:1522:11893":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:15926:2343":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:4032:8276":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"1:5957:8834":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:48774:8607":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:9065:7507":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:14732:8660":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"17:10477:10098":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:10821:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:11982:8660":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:46270:9168":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:3339:8978":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:9404:10826":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:10558:13133":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:50121:9219":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"0:324:1706":{"crate_id":0,"path":["httparse","Response"],"kind":"struct"},"2:14091:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"1:10807:8429":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"6:6214:12673":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:12795:11404":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:12208:11286":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:51173:9101":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:47700:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"17:13620:11672":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:13098:11548":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:4362:8765":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:10586:8708":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"6:4227:12201":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:23048:22293":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"18:766:11083":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:3291:7648":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"6:4306:12226":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:4902:9182":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:5029:10580":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"5:1091:10921":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:8390:7650":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:22561:58279":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"5:7257:10921":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"18:849:10191":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:699:8699":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:9740:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:8377:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"9:900:11814":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:15910:2330":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"16:7226:9900":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:49387:1573":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"6:4449:12293":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:4397:8526":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:2381:8678":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:11458:11141":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:12142:11276":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:11191:8451":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"17:13842:11756":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:11416:7943":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"5:1644:8627":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"6:3957:12101":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:9065:47116":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"12:2032:8581":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"5:8188:7835":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:2187:8582":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"12:853:8627":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"2:53358:7456":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:10673:47304":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:53419:7460":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:12275:11295":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"16:7514:9848":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:13520:11649":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:9186:10090":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:11045:47120":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:11147:12837":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"5:1215:9457":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"12:812:8630":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"16:3041:10002":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:51462:9102":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:9528:1573":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:22889:8435":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:49898:8922":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:13540:11655":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:6792:8484":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"6:3905:12065":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"18:739:13107":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:49684:8337":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:1194:17087":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"12:930:8631":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"5:6257:9411":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:12051:11258":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:46545:8893":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:52185:9091":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:2267:9007":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:3710:224":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:10591:8722":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:22763:9048":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:5986:8838":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"6:5255:12400":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"6:569:11854":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:5998:12567":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:13875:8657":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:46554:8896":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:14160:8524":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"9:686:9507":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"2:23729:8435":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:11933:8656":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:49925:8923":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:8084:8533":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:10272:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"14:0:2308":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"16:4641:10694":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:14537:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"6:1744:12026":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"16:3506:10009":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"0:238:1610":{"crate_id":0,"path":["httparse","Error","Version"],"kind":"variant"},"16:6021:9996":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:10814:10161":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:13924:58333":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"1:8393:8607":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"17:1311:10176":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:24080:12712":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:45933:9264":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:51864:10363":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:51119:9109":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"5:5536:7496":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"9:1020:9576":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:3647:8511":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"6:3945:12098":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"5:3362:8582":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"17:12598:11365":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:5608:779":{"crate_id":2,"path":["core","iter"],"kind":"module"},"7:38:45092":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"6:6068:12592":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:3256:7804":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"5:4242:10921":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"17:9088:47117":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:7835:8872":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"6:4300:12223":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:8294:8724":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"1:12132:8693":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:46503:13187":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:50337:9227":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"6:4410:12272":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:12287:11296":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:51485:9105":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"6:5945:12538":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"12:1235:9643":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:3323:8570":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"16:7571:9825":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"6:4401:12269":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:11402:7945":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:10887:11123":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:15415:9671":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"17:10489:10103":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:2314:10139":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"16:7823:9840":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:13306:11590":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:50293:12788":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"6:5379:12464":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"16:3091:10060":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:46592:8881":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:11604:11170":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:28013:9057":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:24065:9152":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:14715:13205":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"16:6357:9879":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:13743:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:4066:12153":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:52102:9106":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:2178:2447":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:10571:13135":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"6:5420:12482":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:14040:9229":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:4764:8911":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:9551:10124":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:2872:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:46931:12880":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:1156:13190":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"16:2816:10016":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:22899:8463":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"6:1617:11948":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:8929:47113":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:51150:9097":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"18:782:11072":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:5011:8249":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:5658:8480":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"0:0:2062":{"crate_id":0,"path":["httparse"],"kind":"module"},"6:1723:12019":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"5:1472:8637":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"6:3868:12038":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:12645:11379":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:46232:12866":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:22952:9052":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:5746:8415":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:57617:12789":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"2:3159:228":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:1501:8630":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:12725:11387":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"16:6807:9890":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"6:161:40259":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"9:963:9574":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:15146:8559":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:12010:11254":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"16:6166:9873":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:2175:8580":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"17:9729:60863":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:7733:8901":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:22563:58277":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:50346:9228":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:47479:7934":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"1:13853:54091":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"17:10279:10075":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"6:5159:12348":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:4475:8524":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:8743:7513":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"6:5269:12401":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"16:2889:10017":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:49310:7937":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:49419:7940":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"6:1676:11992":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:1306:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:3398:8960":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"6:1622:11950":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:53393:7458":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:24594:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:6087:8789":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:46008:8248":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"17:11847:11227":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"9:722:9510":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"17:9264:10702":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"6:6899:12700":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:2793:8271":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"16:2968:10000":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:13627:11674":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:13547:11656":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:12156:7501":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:4733:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"17:13465:11633":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:13488:11638":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:9593:10963":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"6:6028:12589":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"12:2005:7934":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"5:2310:9492":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:2171:578":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:6964:8430":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:49551:8351":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"17:10635:11087":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:10800:8428":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"6:5292:12414":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:578:11860":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:14127:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"16:3604:10813":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:52264:9079":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:47556:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:13986:11786":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:51612:9082":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"6:5407:12478":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"16:7073:9892":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:49220:7927":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:51635:9085":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:52878:9080":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:2850:7912":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"16:7333:9847":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"16:4477:10748":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:3259:217":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:15913:2332":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"6:537:11831":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"6:5185:12363":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:49344:8348":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:1442:7835":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:2753:579":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:46653:8899":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"5:1195:13366":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"6:1658:11980":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:9860:10967":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"1:15003:8564":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:9495:1112":{"crate_id":2,"path":["core","result"],"kind":"module"},"13:120:8100":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"16:5273:9760":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"16:2733:9714":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:10286:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:6866:8471":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"16:5927:9750":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"5:4515:9444":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"1:9626:54092":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"2:3739:9023":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"16:7761:9905":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:13356:11606":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:10902:8435":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:4477:8525":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:45887:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"14:244:12852":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:48984:9345":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:50180:9282":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"2:3404:8963":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"5:1939:8579":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"2:22540:58276":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:50301:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:46615:8883":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"6:5528:12506":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:49371:8341":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"6:525:11828":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"1:11294:8783":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"6:3966:12106":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:4866:9181":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"16:4417:10740":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"6:6864:12692":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"16:6518:9883":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:46960:12882":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"7:85:45099":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:10403:10101":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:15660:10977":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:10106:10170":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"0:226:1598":{"crate_id":0,"path":["httparse","Error","HeaderName"],"kind":"variant"},"16:6391:9880":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:10420:10133":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"16:5231:10693":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"6:4101:12172":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"14:250:11805":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:7800:8663":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"19:0:994":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:15929:2346":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:3793:9016":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:14154:8526":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"17:13637:11679":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"16:5421:9722":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"0:266:1636":{"crate_id":0,"path":["httparse","Status","Partial"],"kind":"variant"},"5:5788:10921":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:3260:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"17:12568:11359":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"12:1159:9640":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"16:7174:9895":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"9:927:45196":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:10284:8236":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:45802:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:8157:7492":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"16:5960:9752":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"0:236:1608":{"crate_id":0,"path":["httparse","Error","TooManyHeaders"],"kind":"variant"},"17:13912:11771":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:510:13110":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:12262:11294":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:53347:7455":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:5082:9189":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:13154:11554":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:13240:13185":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"16:5672:9736":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:1528:8634":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:12480:11346":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"16:6731:10035":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:11304:47122":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:1136:8278":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:8844:13202":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"6:3997:12123":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"6:4215:12200":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:3345:8750":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"16:6605:9843":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"17:11794:11213":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"6:1700:12009":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"12:1688:9655":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:8137:8724":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"1:15911:2331":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"6:4013:12128":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:1153:13188":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:13532:11652":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:3317:8739":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:10028:13121":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"16:7205:9898":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"6:6106:12603":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"5:1457:8638":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:7512:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"17:12095:11268":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:15922:2339":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"4:0:2302":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"14:11:13170":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"5:2777:9462":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"5:6475:8578":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"6:5978:12561":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"11:46:11813":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"18:136:13354":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:2902:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:3421:8971":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:46333:8345":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:5015:9183":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:10675:18073":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"16:5384:9720":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:53068:9084":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:11885:7932":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"6:6185:12657":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"12:1200:9642":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:51683:9070":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:47547:7901":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:12946:11426":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:52311:9083":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:47487:7935":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"16:4852:10716":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:46573:8879":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"6:5167:12350":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"1:6562:8476":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:11378:10084":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:12168:11094":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:4005:12125":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:13119:11553":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:13331:11598":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:21:672":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"17:11159:10759":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:13040:8332":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:10253:10137":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:9809:60864":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:7337:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"5:7611:9411":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"16:547:9741":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:12982:11457":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:11183:7946":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:12673:10972":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:24196:9257":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"18:866:10193":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"6:5130:12324":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"0:263:1634":{"crate_id":0,"path":["httparse","Status","Complete"],"kind":"variant"},"16:6554:9884":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:49202:7925":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"6:4459:12294":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:46940:8534":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:10288:8237":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:10516:10104":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:584:11863":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"5:6411:223":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:10377:10138":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"16:6569:10031":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:13942:11779":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"12:2303:11808":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:10847:8757":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:50129:9221":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:4713:8508":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:23972:10367":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"16:7971:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"18:885:10194":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"18:811:10188":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:7932:8723":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"18:660:10200":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:3473:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:12431:11339":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"5:4215:8578":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"6:1572:11917":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:11539:11158":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:9943:60871":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:53280:9107":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:0:1324":{"crate_id":1,"path":["std"],"kind":"module"},"12:429:9645":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:56342:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:5191:12366":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:45910:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"12:181:9648":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"16:5736:9740":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:11981:11249":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:13884:11762":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:22710:9115":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"16:3522:10809":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:13772:11732":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"12:949:8633":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"17:13172:11559":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:46563:8878":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"17:13318:11593":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:46410:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"17:8849:10123":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:11118:47121":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:10543:10775":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:12917:11406":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:15915:2334":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"5:3040:12709":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:14869:10976":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:9476:10844":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:24144:39637":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"1:9633:10964":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"19:117:11068":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"2:11115:7935":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:14021:10973":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"5:5837:7908":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"16:2843:9997":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"5:6672:7496":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"16:4955:10718":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:13402:11615":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:13760:11729":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:23087:8435":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"16:4823:10596":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"16:4506:10749":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:2543:10096":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:23635:58251":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:9719:13115":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"16:2945:10022":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:903:8704":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:3743:10158":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"12:1667:9654":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:10623:13139":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:4:979":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"6:6923:12705":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:15305:8780":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:3392:8957":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"16:4890:10706":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:47495:7835":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:2159:7934":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:13245:13368":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"2:48745:12884":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"18:667:10201":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:24832:9243":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"9:27:9558":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"2:3258:218":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"12:1651:9653":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:3997:8677":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:15934:2351":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:10353:10140":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:49292:7936":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:11161:8445":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"2:48458:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"6:4501:12310":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"18:169:13358":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:1522:8633":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"6:1584:11926":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"18:152:13355":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:11164:8446":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"6:1708:12010":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:3701:8518":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:9466:13233":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:11051:8533":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:12462:9354":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:12186:7512":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:2031:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:9956:9193":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:14484:12888":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"17:12195:11284":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"13:232:11807":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:4008:13113":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:10950:13149":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"18:720:11074":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:10160:11084":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"0:261:1604":{"crate_id":0,"path":["httparse","Status"],"kind":"enum"},"17:12343:11308":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:12712:11386":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"16:5996:9870":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:5020:9184":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"18:620:12830":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:13746:11723":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:14930:8658":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"17:13609:11671":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:8415:9482":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"17:11714:11191":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"17:11750:11196":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:12756:11393":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:6488:8895":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:8913:7503":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"18:694:10202":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"17:11779:11207":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:10557:8949":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:2437:13197":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"9:1056:9569":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:24458:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:22523:58247":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"17:10529:12836":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"12:840:8626":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:11338:8833":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"5:3839:10921":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:4304:10701":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:9649:13114":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:2948:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:11058:8535":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"17:10988:13152":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"5:3044:60770":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"6:5241:12389":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"5:2262:9460":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"6:4193:12198":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"16:6424:9881":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:4706:8505":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:8141:13367":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:13778:58335":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"16:6152:9828":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:3085:9003":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"6:5969:12555":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:12685:11382":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:9332:10083":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:10863:8519":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"17:10041:13122":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"16:3195:10004":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"6:4494:12307":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"16:7158:9894":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:56303:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"14:189:13170":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:5389:9334":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:47910:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"16:5522:9730":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:5724:8416":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:50145:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:9342:8460":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:12012:10269":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"1:3197:8736":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"17:10149:13118":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:3228:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"18:704:11072":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:46001:8859":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"2:48036:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:50125:9223":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"17:13564:11660":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:11254:10125":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:3497:1847":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:12494:11348":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"6:511:11820":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:50109:9215":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"16:6744:10036":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:50378:8274":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:5503:8787":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"6:5347:12451":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:6700:12582":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:6611:58935":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:8651:7499":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:48214:8235":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"6:1554:11906":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:46662:8886":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"16:6072:9712":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:1432:7935":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:10282:8235":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:56277:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:45843:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"17:9280:10593":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"16:6252:9877":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:56329:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"9:776:9556":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"1:15914:2333":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"16:5632:9735":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:5561:17089":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:1655:8639":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:9886:13118":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:3629:9265":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"6:6221:12676":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:2253:9004":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"16:7119:9762":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:50283:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:11082:10091":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:13963:11782":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"16:4535:10601":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"16:5346:9827":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"6:4112:12177":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:49700:8344":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"16:7884:9836":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:1534:8635":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:14:2414":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:46254:9166":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:22542:58274":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"6:157:40258":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"1:13336:8794":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:11015:13154":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:24106:39636":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:11616:11173":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:7260:13201":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:46713:8894":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:8954:10092":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:1079:8439":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:13054:11516":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"9:996:9575":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:3268:7806":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:46644:8885":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:0:2311":{"crate_id":17,"path":["object"],"kind":"module"},"1:5652:8482":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"11:54:9630":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"17:13506:11642":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:2163:7835":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:24526:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:681:10797":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:9368:10843":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"16:6491:9882":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"16:6644:9887":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:46415:9271":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:11197:8595":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"16:4995:10752":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:12537:11354":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:50141:9217":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:9358:8331":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"16:7894:9864":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"1:4631:8436":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:3412:8967":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"16:7024:10045":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:5790:8420":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:2598:13200":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"1:7980:10949":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"2:3486:8289":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:10236:10095":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"5:3488:8579":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"16:6208:9875":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:10276:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"17:11809:11219":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"5:2218:9425":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:13272:11587":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"5:8353:12710":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"1:14235:7896":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"1:3333:8744":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"17:8902:47112":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:49997:8927":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"5:8321:9432":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:52024:9099":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"16:6101:9824":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"16:6999:9891":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:15917:2336":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:53472:7463":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"16:5707:9737":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"1:15931:2348":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"1:12061:7835":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:15920:2337":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"16:6219:9876":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"6:5459:12492":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:7937:54087":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"1:11283:8781":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:53338:2223":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:4358:12253":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"12:774:7835":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"6:5469:12494":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:13025:8331":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:9179:13202":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"1:12176:7504":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"16:5433:9723":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:12486:1783":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:15928:2345":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"6:4377:12261":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"5:1843:10921":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:8385:8724":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"6:3978:12110":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"16:3264:10007":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:9592:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"17:9933:13119":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:3416:8951":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:11952:8658":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"16:6718:10034":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"6:6085:12597":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:11767:11204":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:52735:9112":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:4604:8494":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"9:469:13280":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"5:1597:7934":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:11131:8349":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"6:616:11879":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:13258:11582":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"6:5548:12520":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:49976:8925":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"6:4470:12300":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:13034:8333":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:51015:9108":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:13590:11666":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:14201:7913":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:1646:8638":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:4047:8275":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"2:24492:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:11382:8485":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:15245:8454":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:51192:10394":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:4991:8442":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"2:10280:8234":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:53495:7464":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"16:5855:9747":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:23098:9052":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:8978:7514":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"17:11482:11142":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:55906:8863":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"2:51336:10393":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"16:6964:7628":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"17:12507:11349":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"16:7303:9903":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"6:1630:11955":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:13598:11667":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:49142:9206":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:9144:7510":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:46053:9135":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:12211:8565":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:32359:58604":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"16:3287:10008":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"6:624:11884":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"6:5987:12562":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"0:225:127":{"crate_id":0,"path":["httparse","Error"],"kind":"enum"},"1:1486:8579":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"2:24696:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"16:5815:9746":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:3153:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"5:2553:9463":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:51224:9089":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"16:4614:10568":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:48491:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"2:46362:9339":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:10911:214":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:9896:60867":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"16:2773:10023":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"6:6200:12664":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"12:968:8634":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:3319:8740":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:2170:8579":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"17:13282:11588":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"16:7420:9849":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"1:6204:8798":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:11199:10758":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:56290:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:7905:9059":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"0:298:1695":{"crate_id":0,"path":["httparse","Request"],"kind":"struct"},"17:12771:11394":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"18:896:10195":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:49605:8353":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:6690:8415":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:3335:8745":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:46241:9165":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"17:12610:11367":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:3623:10948":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:49211:7929":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"16:7146:9893":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:786:10967":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"17:13163:11558":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:12442:11341":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"6:6935:12707":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:45818:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:11499:11147":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"9:603:13290":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:53367:2280":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:47826:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"6:6155:12640":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:10211:13127":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:13180:11560":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:12181:7511":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"17:11932:11235":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:15140:8558":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"6:6176:12654":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:12067:8689":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:13377:11610":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:48753:8950":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:15389:54534":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:12231:8566":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"6:1717:12016":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:46672:8887":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:10652:17085":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:2484:47204":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:11696:11190":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"13:0:2301":{"crate_id":13,"path":["std_detect"],"kind":"module"},"14:56:11142":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"16:6032:9761":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:5732:8417":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:11337:10086":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:46922:7503":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:51534:9090":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"16:3549:11801":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:49266:7916":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:6942:8473":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"5:5889:10932":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"6:5221:12376":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:11101:8269":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"5:8437:8579":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"17:13799:11740":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"6:1596:11934":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:5794:8421":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"5:3300:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:12741:11389":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:12521:11352":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:1463:8627":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"6:6239:12679":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:48200:8234":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:10912:13143":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"0:234:1606":{"crate_id":0,"path":["httparse","Error","Token"],"kind":"variant"},"2:11333:7941":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:8864:9058":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:24052:9151":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:48784:12885":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:46681:2211":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:13501:13369":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:4043:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"17:13788:11736":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:11260:7947":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:8340:8976":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:12334:13198":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:46316:9337":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"9:157:9526":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"2:49301:7939":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:2192:8583":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"6:4371:12258":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:11374:7944":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:47470:2173":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"17:13062:11518":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"12:1253:8639":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:2401:13196":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"1:4045:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"3:300:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:46693:8888":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"16:5407:9721":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"16:5766:9744":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:53404:7459":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:15041:8667":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:13573:8625":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"15:269:9667":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"12:2013:8578":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:49401:7930":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"17:2512:10135":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:13685:11716":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:11628:11174":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"16:3018:10001":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:3345:8988":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"16:7843:9906":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:48792:12886":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"9:1075:9577":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"17:10128:10172":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"5:923:9474":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:51297:10377":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:11167:8450":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"2:24764:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:4399:8527":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:11100:10129":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:50133:9222":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:37593:7812":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:11544:8609":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:2938:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:15935:2352":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"6:1736:12022":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:53319:9072":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:3721:8877":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:10938:13148":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:51278:9081":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:50113:9218":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"12:2309:11809":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:49718:8346":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"16:6126:9872":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:11453:8597":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"0:287:1646":{"crate_id":0,"path":["httparse","ParserConfig"],"kind":"struct"},"17:542:9763":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:13728:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"16:4350:10703":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:23901:9240":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"5:3048:60769":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"6:4347:12245":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:7737:8657":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"16:3145:10012":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:11331:8444":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:14157:8528":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:49469:8355":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"5:7444:10921":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"16:3320:10061":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:3562:9118":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"5:3882:8519":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"16:2754:9756":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:56316:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:9005:47114":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"6:4387:12264":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:9638:54088":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"2:5092:8248":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"16:6087:9826":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:13554:11657":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:10458:10794":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:53534:7465":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:8479:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:24628:8727":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"16:7467:9830":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"14:194:45461":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:11269:10246":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"0:350:1701":{"crate_id":0,"path":["httparse","Header"],"kind":"struct"},"12:747:7934":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"5:4443:7934":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:12005:53584":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"2:3163:227":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"6:4331:12236":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:48737:8644":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"6:5282:12407":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:49850:8921":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"17:12582:11361":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:11186:12838":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:14719:8483":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"18:610:10197":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:3357:8992":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"16:3392:10014":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:10795:8734":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"18:820:10189":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:23830:9239":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:45754:9063":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:14469:8486":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"1:14489:12890":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"6:591:11866":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:10290:8238":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"5:1694:9455":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:3506:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"5:3396:8583":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"0:251:1622":{"crate_id":0,"path":["httparse","InvalidChunkSize"],"kind":"struct"},"5:8370:9362":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:10219:8228":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"15:0:2309":{"crate_id":15,"path":["addr2line"],"kind":"module"},"6:1533:11898":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"16:3338:9754":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"6:6881:12697":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:12467:11344":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"6:610:11876":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"6:1760:12031":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"6:5228:12380":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"16:7549:9837":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:22812:8435":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"2:3503:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"5:4306:7935":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"9:41:9559":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"17:9759:13116":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:10218:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:49709:8345":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"14:231:9365":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"16:2866:9998":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"16:0:2310":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:10611:13138":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"12:469:13362":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:1505:8631":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"6:563:11851":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:11678:11181":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"15:230:9662":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:5314:10702":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:14554:54156":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:3524:8515":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:2062:8494":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:3613:8516":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"12:892:9632":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"2:3370:8952":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"6:4023:12134":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:4439:12287":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:12100:8691":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:56264:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:1944:1571":{"crate_id":2,"path":["core","mem"],"kind":"module"},"2:46428:9272":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:4688:8228":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"3:0:430":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:3698:9266":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:1021:8724":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:46915:12879":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"16:6110:9866":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"6:4052:12145":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"12:377:9647":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"16:6768:10038":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"16:5717:9739":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:46523:8892":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:14956:54160":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:49230:7928":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:14943:8659":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:10407:10134":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"14:47:13170":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"6:4255:8800":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:13348:11603":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"5:8137:59525":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:46308:8346":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"5:1011:7934":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:24027:10357":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:9717:8773":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"2:10517:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"5:4643:10926":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"5:3336:8581":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"1:15876:13298":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"16:7295:9846":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:23096:9065":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:10658:8591":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"16:4448:10750":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:4649:8503":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"5:3375:9423":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"5:4599:10924":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"17:10001:47166":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:4265:8536":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"5:8254:8643":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"6:3918:12075":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"16:3241:10006":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"5:0:277":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:53378:7457":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"8:0:2303":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:52989:9100":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:4709:8998":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:51760:10392":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"6:6124:12614":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"16:7804:9838":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"5:8159:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"6:605:11874":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"5:7633:9412":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:0:488":{"crate_id":2,"path":["core"],"kind":"module"},"17:10331:10102":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:10609:7896":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"5:6764:8494":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:2937:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:50010:10369":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"1:5802:8423":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"6:5359:12456":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:10095:10169":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:11822:11223":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:5582:9060":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"18:774:11072":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"17:10599:13137":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:45864:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:10052:13123":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"6:5371:12463":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"16:6176:9874":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:10451:10970":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:12954:8347":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:48207:8233":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:3715:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"17:12699:11385":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:11835:11224":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:11527:8608":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"16:6620:10029":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:7122:7620":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:5376:8779":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:11939:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:10081:10075":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"16:6682:9842":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"18:801:10187":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:12772:9211":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:9849:60869":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:32459:58606":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"6:4073:12156":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:45966:9024":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"18:744:60874":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"18:0:2312":{"crate_id":18,"path":["memchr"],"kind":"module"},"6:4120:12182":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:5197:12367":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:294:13108":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"5:3341:9422":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:51063:9088":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:3255:2450":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:9745:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:3262:220":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:14000:11789":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"6:6051:12590":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:49451:8356":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"17:12659:11380":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"6:4262:12203":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"16:7236:9901":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"5:783:222":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:25202:9172":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:1161:17086":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:13482:13197":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"2:50137:9216":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"17:9689:60870":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:53457:7462":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"17:13221:11573":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:49623:8354":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"6:4272:12210":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:9210:47119":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"16:7264:9844":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"16:7042:10046":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"1:7682:8655":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:32118:9294":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:13865:11757":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"6:6858:12691":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"6:5210:12368":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:15921:2338":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"16:6949:10042":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:24560:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"16:3772:10597":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:13924:11773":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:9296:10827":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:6324:8799":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:10468:10099":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:8493:8688":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"17:13477:11634":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:12073:11267":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"}},"external_crates":{"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":16}