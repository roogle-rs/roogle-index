{"root":"0:0:2138","crate_version":"1.8.0","includes_private":false,"index":{"b:2:2517-0:197:127":{"id":"b:2:2517-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:126:1754":{"id":"0:126:1754","crate_id":0,"name":"parse_response_with_uninit_headers","span":{"filename":"src/lib.rs","begin":[411,4],"end":[418,5]},"visibility":"public","docs":"Parses a response with the given config and buffer for headers","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["response",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["headers",{"kind":"borrowed_ref","inner":{"lifetime":"'headers","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"MaybeUninit","id":"2:29541:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:101:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:217-0:270:1715":{"id":"a:2:2662:217-0:270:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3321-0:223:1642":{"id":"b:2:3321-0:223:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5123:53841":{"id":"5:5123:53841","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:11456:53844"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6994:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11454:9405":{"id":"2:11454:9405","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:233:1624":{"id":"b:2:2523-0:233:1624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11358:56614":{"id":"2:11358:56614","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:11357:56613"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11411:2481":{"id":"2:11411:2481","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"prim@char":"1:12300:408","`DoubleEndedIterator`":"2:7079:120","self::pattern":"2:11036:8367","str::matches":"2:11411:2481"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:50226:8400","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:82":{"id":"0:82","crate_id":0,"name":null,"span":{"filename":"src/simd/mod.rs","begin":[174,0],"end":[174,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(all(httparse_simd,\nnot(any(httparse_simd_target_feature_sse42,\nhttparse_simd_target_feature_avx2,)),\nany(target_arch = \"x86\", target_arch = \"x86_64\",),))]"],"deprecation":null,"kind":"import","inner":{"source":"self::runtime","name":"runtime","id":"0:73:2267","glob":true}},"0:110:1668":{"id":"0:110:1668","crate_id":0,"name":"allow_multiple_spaces_in_request_line_delimiters","span":{"filename":"src/lib.rs","begin":[274,4],"end":[277,5]},"visibility":"public","docs":"Sets whether multiple spaces are allowed as delimiters in request lines.\n\n# Background\n\nThe [latest version of the HTTP/1.1 spec][spec] allows implementations to parse multiple\nwhitespace characters in place of the `SP` delimiters in the request line, including:\n\n> SP, HTAB, VT (%x0B), FF (%x0C), or bare CR\n\nThis option relaxes the parser to allow for multiple spaces, but does *not* allow the\nrequest line to contain the other mentioned whitespace characters.\n\n[spec]: https://httpwg.org/http-core/draft-ietf-httpbis-messaging-latest.html#rfc.section.3.p.3","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:7662-0:233:1624":{"id":"a:2:7735:7662-0:233:1624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:7735:7662","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:7662","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11349:13653":{"id":"2:11349:13653","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:48056:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9138:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9138:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:336":{"id":"0:336","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,26],"end":[709,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:338:600"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2513-0:270:1715":{"id":"b:2:2513-0:270:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2516:7870"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11440:56633":{"id":"2:11440:56633","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:11036:8367","prim@char":"1:12300:408"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:8384","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11356:60592":{"id":"2:11356:60592","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"str::slice_unchecked":"2:11355:60591","crate::ops::IndexMut":"2:2991:8638","`str`":"1:12306:1352"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:320:1721":{"id":"b:2:3321-0:320:1721","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:319:600":{"id":"0:319:600","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[601,20],"end":[601,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:197:127":{"id":"b:2:2528-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7736:7661-0:197:127":{"id":"a:2:7736:7661-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:7661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:313":{"id":"0:313","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,20],"end":[601,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2672:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2517-0:223:1642":{"id":"b:2:2517-0:223:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:219":{"id":"0:219","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,33],"end":[134,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2513-0:197:127":{"id":"b:2:2513-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:7870"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:233:1624":{"id":"0:233:1624","crate_id":0,"name":"Status","span":{"filename":"src/lib.rs","begin":[204,0],"end":[209,1]},"visibility":"public","docs":"The result of a successful parse pass.\n\n`Complete` is used when the buffer contained the complete value.\n`Partial` is used when parsing did not reach the end of the expected value,\nbut no invalid data was found.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:235:1653","0:238:1655"],"impls":["0:103","a:2:2676:225-0:233:1624","a:2:7736:7661-0:233:1624","a:2:2662:217-0:233:1624","a:2:2726:7678-0:233:1624","a:2:7735:7662-0:233:1624","b:2:2523-0:233:1624","b:2:2513-0:233:1624","b:2:2241-0:233:1624","b:2:2517-0:233:1624","b:2:2528-0:233:1624","b:2:3321-0:233:1624","b:2:2238-0:233:1624","b:5:681-0:233:1624","0:240","0:242","0:245","0:247","0:250","0:252","0:255"]}},"2:11405:60596":{"id":"2:11405:60596","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:147:915":{"id":"0:147:915","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[618,4],"end":[625,5]},"visibility":"public","docs":"Creates a new `Response` using a slice of `Header`s you have allocated.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["headers",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11417:60599":{"id":"2:11417:60599","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"str::rmatch_indices":"2:11420:60600","self::pattern":"2:11036:8367","prim@char":"1:12300:408","`DoubleEndedIterator`":"2:7079:120"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:50172:8402","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,33],"end":[134,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2673:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,22],"end":[134,31]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:217:600"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3321-0:258:1665":{"id":"b:2:3321-0:258:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:204:1624":{"id":"0:204:1624","crate_id":0,"name":"Status","span":{"filename":"src/lib.rs","begin":[143,4],"end":[143,10]},"visibility":"default","docs":"Invalid byte in Response status.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:208:1628":{"id":"0:208:1628","crate_id":0,"name":"TooManyHeaders","span":{"filename":"src/lib.rs","begin":[147,4],"end":[147,18]},"visibility":"default","docs":"Parsed more headers than provided buffer can contain.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:294:600":{"id":"0:294:600","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[446,20],"end":[446,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2240:2470":{"id":"2:2240:2470","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11359:8421":{"id":"2:11359:8421","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49992:8394","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11457:53845":{"id":"2:11457:53845","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11337:60587":{"id":"2:11337:60587","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11370:56631":{"id":"2:11370:56631","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:11036:8367","prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11430:60605":{"id":"2:11430:60605","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:119:1719":{"id":"0:119:1719","crate_id":0,"name":"parse_request_with_uninit_headers","span":{"filename":"src/lib.rs","begin":[354,4],"end":[361,5]},"visibility":"public","docs":"Parses a request with the given config and buffer for headers","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["request",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["headers",{"kind":"borrowed_ref","inner":{"lifetime":"'headers","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"MaybeUninit","id":"2:29541:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:101:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,9],"end":[134,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2674:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:281":{"id":"0:281","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,16],"end":[446,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2673:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,15],"end":[203,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:244:412"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,22],"end":[203,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2673:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5120:61248":{"id":"5:5120:61248","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:6994:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6994:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11402:56629":{"id":"2:11402:56629","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"str::splitn":"2:11399:56627","prim@char":"1:12300:408","self::pattern":"2:11036:8367"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:50144:7975","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:8384","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:217-0:233:1624":{"id":"a:2:2662:217-0:233:1624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,22],"end":[203,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"2:2290:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2726:7678-0:197:127":{"id":"a:2:2726:7678-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:7678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5124:53842":{"id":"5:5124:53842","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:11457:53845"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6994:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:255":{"id":"0:255","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,37],"end":[203,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:257:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2726:7678-0:233:1624":{"id":"a:2:2726:7678-0:233:1624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2726:7678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:7678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11458:60611":{"id":"2:11458:60611","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4467:60611"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50321:8405","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2527:1427":{"id":"2:2527:1427","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48198:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:101:207":{"id":"0:101:207","crate_id":0,"name":"Result","span":{"filename":"src/lib.rs","begin":[196,0],"end":[196,54]},"visibility":"public","docs":"A Result of any parsing action.\n\nIf the input is invalid, an `Error` will be returned. Note that incomplete\ndata is not considered invalid, and so will not return an error, but rather\na `Ok(Status::Partial)`.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"result::Result","id":"2:48198:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"5:683:7930":{"id":"5:683:7930","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"a:2:2662:217-0:295:1752":{"id":"a:2:2662:217-0:295:1752","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2676:225-0:233:1624":{"id":"a:2:2676:225-0:233:1624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:295:1752":{"id":"0:295:1752","crate_id":0,"name":"Response","span":{"filename":"src/lib.rs","begin":[602,0],"end":[613,1]},"visibility":"public","docs":"A parsed Response.\n\nSee `Request` docs for explanation of optional values.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:298:1515","0:299:1819","0:300:1086","0:301:1720"],"fields_stripped":false}},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:144","a:2:2676:225-0:295:1752","a:2:7736:7661-0:295:1752","a:2:2662:217-0:295:1752","a:2:2726:7678-0:295:1752","a:2:7735:7662-0:295:1752","b:2:2523-0:295:1752","b:2:2513-0:295:1752","b:2:2241-0:295:1752","b:2:2517-0:295:1752","b:2:2528-0:295:1752","b:2:3321-0:295:1752","b:2:2238-0:295:1752","0:302","0:306","0:309","0:313","0:316"]}},"0:73:2267":{"id":"0:73:2267","crate_id":0,"name":"runtime","span":{"filename":"src/simd/mod.rs","begin":[91,0],"end":[91,11]},"visibility":{"restricted":{"parent":"0:47:1248","path":"::simd"}},"docs":"Runtime detection of simd features. Used when the build script\ndoesn't notice any target features at build time.\n\nWhile `is_x86_feature_detected!` has it's own caching built-in,\nat least in 1.27.0, the functions don't inline, leaving using it\nactually *slower* than just using the scalar fallback.","links":{},"attrs":["#[cfg(all(httparse_simd,\nnot(any(httparse_simd_target_feature_sse42,\nhttparse_simd_target_feature_avx2,)),\nany(target_arch = \"x86\", target_arch = \"x86_64\",),))]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"0:275:1515":{"id":"0:275:1515","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[453,4],"end":[453,27]},"visibility":"public","docs":"The request minor version, such as `1` for `HTTP/1.1`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}},"0:324":{"id":"0:324","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,9],"end":[709,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2674:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2513-0:233:1624":{"id":"b:2:2513-0:233:1624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2516:7870"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11452:1810":{"id":"2:11452:1810","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:10997:8392","FromStr::Err":"2:10998:126"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48198:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:10997:8392","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:10997:8392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2726:7678-0:295:1752":{"id":"a:2:2726:7678-0:295:1752","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'buf","bounds":[{"outlives":"'headers"}]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:7678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:326":{"id":"0:326","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,15],"end":[709,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:328:412"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2523-0:320:1721":{"id":"b:2:2523-0:320:1721","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:95":{"id":"0:95","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[167,0],"end":[171,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8601:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:96:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7736:7661-0:258:1665":{"id":"a:2:7736:7661-0:258:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:7661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11353:1894":{"id":"2:11353:1894","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9138:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9138:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2726:7678-0:258:1665":{"id":"a:2:2726:7678-0:258:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:7678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:129":{"id":"0:129","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[458,0],"end":[555,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"items":["0:132:915","0:139:1805","0:141:1810"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:210:1630":{"id":"0:210:1630","crate_id":0,"name":"Version","span":{"filename":"src/lib.rs","begin":[149,4],"end":[149,11]},"visibility":"default","docs":"Invalid byte in HTTP version.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:2532:1426":{"id":"2:2532:1426","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48198:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:132:915":{"id":"0:132:915","crate_id":0,"name":"new","span":{"filename":"src/lib.rs","begin":[461,4],"end":[468,5]},"visibility":"public","docs":"Creates a new Request, using a slice of headers you allocate.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["headers",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2676:225-0:197:127":{"id":"a:2:2676:225-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11345:309":{"id":"2:11345:309","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:12317:1448","str::as_mut_ptr":"2:11346:13667"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:217-0:258:1665":{"id":"a:2:2662:217-0:258:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:202:1622":{"id":"0:202:1622","crate_id":0,"name":"NewLine","span":{"filename":"src/lib.rs","begin":[141,4],"end":[141,11]},"visibility":"default","docs":"Invalid byte in new line.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:2:2523-0:197:127":{"id":"b:2:2523-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:112:1669":{"id":"0:112:1669","crate_id":0,"name":"allow_multiple_spaces_in_response_status_delimiters","span":{"filename":"src/lib.rs","begin":[298,4],"end":[301,5]},"visibility":"public","docs":"Sets whether multiple spaces are allowed as delimiters in response status lines.\n\n# Background\n\nThe [latest version of the HTTP/1.1 spec][spec] allows implementations to parse multiple\nwhitespace characters in place of the `SP` delimiters in the response status line,\nincluding:\n\n> SP, HTAB, VT (%x0B), FF (%x0C), or bare CR\n\nThis option relaxes the parser to allow for multiple spaces, but does *not* allow the status\nline to contain the other mentioned whitespace characters.\n\n[spec]: https://httpwg.org/http-core/draft-ietf-httpbis-messaging-latest.html#rfc.section.4.p.3","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:7662-0:320:1721":{"id":"a:2:7735:7662-0:320:1721","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:7662","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:299:1819":{"id":"0:299:1819","crate_id":0,"name":"code","span":{"filename":"src/lib.rs","begin":[606,4],"end":[606,25]},"visibility":"public","docs":"The response code, such as `200`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u16"}}],"bindings":[]}}}}},"0:284":{"id":"0:284","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,16],"end":[446,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:277":{"id":"0:277","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,9],"end":[446,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:280:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5112:61247":{"id":"5:5112:61247","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:6994:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6994:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2726:7678-0:320:1721":{"id":"a:2:2726:7678-0:320:1721","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:7678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:154:1840":{"id":"0:154:1840","crate_id":0,"name":"EMPTY_HEADER","span":{"filename":"src/lib.rs","begin":[743,0],"end":[743,74]},"visibility":"public","docs":"An empty header, useful for constructing a `Header` array to pass in for\nparsing.\n\n# Example\n\n```\nlet headers = [httparse::EMPTY_HEADER; 64];\n```","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'static"}],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"5:5122:8727":{"id":"5:5122:8727","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:6994:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6994:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:323:1672":{"id":"0:323:1672","crate_id":0,"name":"value","span":{"filename":"src/lib.rs","begin":[719,4],"end":[719,23]},"visibility":"public","docs":"The value portion of a header.\n\nWhile headers **should** be ASCII-US, the specification allows for\nvalues that may not be, and so the value is stored as bytes.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},"a:2:7735:7662-0:197:127":{"id":"a:2:7735:7662-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:7662","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11384:56621":{"id":"2:11384:56621","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11036:8367","prim@char":"1:12300:408","`DoubleEndedIterator`":"2:7079:120","str::split_whitespace":"2:11362:58696","str::rsplit":"2:11390:56625"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:50022:7977","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11434:60607":{"id":"2:11434:60607","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11036:8367"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:270:1715":{"id":"b:2:2517-0:270:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:291":{"id":"0:291","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,20],"end":[446,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:294:600"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11363:58711":{"id":"2:11363:58711","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11362:58696"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:50305:8408","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11396:60595":{"id":"2:11396:60595","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split_terminator":"2:11393:60594","prim@char":"1:12300:408","self::pattern":"2:11036:8367","str::split":"2:11384:56621"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:50090:8398","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:8384","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11361:1784":{"id":"2:11361:1784","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:50008:1593","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11347:2240":{"id":"2:11347:2240","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:48056:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9138:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9138:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7735:7662-0:258:1665":{"id":"a:2:7735:7662-0:258:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:7662","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11355:60591":{"id":"2:11355:60591","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"str::slice_mut_unchecked":"2:11356:60592","crate::ops::Index":"2:2987:8637","`str`":"1:12306:1352"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:329":{"id":"0:329","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,22],"end":[709,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2673:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3321-0:233:1624":{"id":"b:2:3321-0:233:1624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5106:1806":{"id":"5:5106:1806","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:6994:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6994:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:258:1665":{"id":"0:258:1665","crate_id":0,"name":"ParserConfig","span":{"filename":"src/lib.rs","begin":[243,0],"end":[249,1]},"visibility":"public","docs":"Parser configuration.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:108","a:2:2676:225-0:258:1665","a:2:7736:7661-0:258:1665","a:2:2662:217-0:258:1665","a:2:2726:7678-0:258:1665","a:2:7735:7662-0:258:1665","b:2:2523-0:258:1665","b:2:2513-0:258:1665","b:2:2241-0:258:1665","b:2:2517-0:258:1665","b:2:2528-0:258:1665","b:2:3321-0:258:1665","b:2:2238-0:258:1665","b:5:681-0:258:1665","0:264","0:266","0:268"]}},"0:265:412":{"id":"0:265:412","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[242,9],"end":[242,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:233:1624":{"id":"b:2:2528-0:233:1624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2676:225-0:320:1721":{"id":"a:2:2676:225-0:320:1721","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2241-0:223:1642":{"id":"b:2:2241-0:223:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:53810"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11420:60600":{"id":"2:11420:60600","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"str::match_indices":"2:11417:60599","self::pattern":"2:11036:8367","prim@char":"1:12300:408","`DoubleEndedIterator`":"2:7079:120"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:50190:8403","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:8384","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:7661-0:223:1642":{"id":"a:2:7736:7661-0:223:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:7661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2513-0:320:1721":{"id":"b:2:2513-0:320:1721","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2516:7870"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:273:1775":{"id":"0:273:1775","crate_id":0,"name":"method","span":{"filename":"src/lib.rs","begin":[449,4],"end":[449,33]},"visibility":"public","docs":"The request method, such as `GET`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"0:111:1682":{"id":"0:111:1682","crate_id":0,"name":"multiple_spaces_in_request_line_delimiters_are_allowed","span":{"filename":"src/lib.rs","begin":[280,4],"end":[282,5]},"visibility":"public","docs":"Whether multiple spaces are allowed as delimiters in request lines.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:2138":{"id":"0:0:2138","crate_id":0,"name":"httparse","span":{"filename":"src/lib.rs","begin":[1,0],"end":[2236,1]},"visibility":"public","docs":"# httparse\n\nA push library for parsing HTTP/1.x requests and responses.\n\nThe focus is on speed and safety. Unsafe code is used to keep parsing fast,\nbut unsafety is contained in a submodule, with invariants enforced. The\nparsing internals use an `Iterator` instead of direct indexing, while\nskipping bounds checks.\n\nWith Rust 1.27.0 or later, support for SIMD is enabled automatically.\nIf building an executable to be run on multiple platforms, and thus\nnot passing `target_feature` or `target_cpu` flags to the compiler,\nruntime detection can still detect SSE4.2 or AVX2 support to provide\nmassive wins.\n\nIf compiling for a specific target, remembering to include\n`-C target_cpu=native` allows the detection to become compile time checks,\nmaking it *even* faster.","links":{},"attrs":["#![deny(missing_docs)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:197:127","0:223:1642","0:101:207","0:233:1624","0:258:1665","0:270:1715","0:295:1752","0:320:1721","0:154:1840","0:164:1883","0:195:1924"],"is_stripped":false}},"a:2:7735:7662-0:270:1715":{"id":"a:2:7735:7662-0:270:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:7662","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:197:127":{"id":"0:197:127","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[135,0],"end":[150,1]},"visibility":"public","docs":"An error in parsing.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:198:1618","0:200:1620","0:202:1622","0:204:1624","0:206:1626","0:208:1628","0:210:1630"],"impls":["a:2:2676:225-0:197:127","a:2:7736:7661-0:197:127","a:2:2662:217-0:197:127","a:2:2726:7678-0:197:127","a:2:7735:7662-0:197:127","b:2:2523-0:197:127","b:2:2585-0:197:127","b:2:2513-0:197:127","b:2:2241-0:197:127","b:2:2517-0:197:127","b:2:2528-0:197:127","b:2:3321-0:197:127","b:2:2238-0:197:127","b:5:5373-0:197:127","b:5:681-0:197:127","0:212","0:213","0:215","0:216","0:218","0:219","0:221","0:95","0:97"]}},"2:11360:9079":{"id":"2:11360:9079","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49998:8393","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11387:56623":{"id":"2:11387:56623","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:11036:8367","prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:10860:7994","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:316":{"id":"0:316","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,20],"end":[601,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:319:600"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2241-0:270:1715":{"id":"b:2:2241-0:270:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2243:53810"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2523-0:295:1752":{"id":"b:2:2523-0:295:1752","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3323:1440":{"id":"2:3323:1440","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46537:8520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:685:7932":{"id":"5:685:7932","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:109:1666":{"id":"0:109:1666","crate_id":0,"name":"allow_spaces_after_header_name_in_responses","span":{"filename":"src/lib.rs","begin":[253,4],"end":[259,5]},"visibility":"public","docs":"Sets whether spaces and tabs should be allowed after header names in responses.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:100:655":{"id":"0:100:655","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[186,4],"end":[188,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:148:1810":{"id":"0:148:1810","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[628,4],"end":[630,5]},"visibility":"public","docs":"Try to parse a buffer of bytes into this `Response`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:101:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:195:1924":{"id":"0:195:1924","crate_id":0,"name":"parse_chunk_size","span":{"filename":"src/lib.rs","begin":[1203,0],"end":[1266,1]},"visibility":"public","docs":"Parse a buffer of bytes as a chunk size.\n\nThe return value, if complete and successful, includes the index of the\nbuffer that parsing stopped at, and the size of the following chunk.\n\n# Example\n\n```\nlet buf = b\"4\\r\\nRust\\r\\n0\\r\\n\\r\\n\";\nassert_eq!(httparse::parse_chunk_size(buf),\n           Ok(httparse::Status::Complete((3, 4))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"result::Result","id":"2:48198:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"u64"}]}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:164:1883":{"id":"0:164:1883","crate_id":0,"name":"parse_headers","span":{"filename":"src/lib.rs","begin":[893,0],"end":[900,1]},"visibility":"public","docs":"Parse a buffer of bytes as headers.\n\nThe return value, if complete and successful, includes the index of the\nbuffer that parsing stopped at, and a sliced reference to the parsed\nheaders. The length of the slice will be equal to the number of properly\nparsed headers.\n\n# Example\n\n```\nlet buf = b\"Host: foo.bar\\nAccept: */*\\n\\nblah blah\";\nlet mut headers = [httparse::EMPTY_HEADER; 4];\nassert_eq!(httparse::parse_headers(buf, &mut headers),\n           Ok(httparse::Status::Complete((27, &[\n               httparse::Header { name: \"Host\", value: b\"foo.bar\" },\n               httparse::Header { name: \"Accept\", value: b\"*/*\" }\n           ][..]))));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["src",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:101:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'b","kind":{"lifetime":{"outlives":["'h"]}}},{"name":"'h","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:114:1667":{"id":"0:114:1667","crate_id":0,"name":"allow_obsolete_multiline_headers_in_responses","span":{"filename":"src/lib.rs","begin":[331,4],"end":[337,5]},"visibility":"public","docs":"Sets whether obsolete multiline headers should be allowed.\n\nThis is an obsolete part of HTTP/1. Use at your own risk. If you are\nbuilding an HTTP library, the newlines (`\\r` and `\\n`) should be\nreplaced by spaces before handing the header value to the user.\n\n# Example\n\n```rust\nlet buf = b\"HTTP/1.1 200 OK\\r\\nFolded-Header: hello\\r\\n there \\r\\n\\r\\n\";\nlet mut headers = [httparse::EMPTY_HEADER; 16];\nlet mut response = httparse::Response::new(&mut headers);\n\nlet res = httparse::ParserConfig::default()\n    .allow_obsolete_multiline_headers_in_responses(true)\n    .parse_response(&mut response, buf);\n\nassert_eq!(res, Ok(httparse::Status::Complete(buf.len())));\n\nassert_eq!(response.headers.len(), 1);\nassert_eq!(response.headers[0].name, \"Folded-Header\");\nassert_eq!(response.headers[0].value, b\"hello\\r\\n there\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:7661-0:295:1752":{"id":"a:2:7736:7661-0:295:1752","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:7661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3321-0:270:1715":{"id":"b:2:3321-0:270:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11393:60594":{"id":"2:11393:60594","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11036:8367","str::split":"2:11384:56621","`DoubleEndedIterator`":"2:7079:120","str::rsplit_terminator":"2:11396:60595"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:50072:8399","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[615,0],"end":[706,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'h","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'h"},{"lifetime":"'b"}],"bindings":[]}}}},"items":["0:147:915","0:148:1810"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,0],"end":[178,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","description","cause","provide","source"],"trait":{"name":"Error","id":"2:2578:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:98:1640"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:320:1721":{"id":"0:320:1721","crate_id":0,"name":"Header","span":{"filename":"src/lib.rs","begin":[710,0],"end":[720,1]},"visibility":"public","docs":"Represents a parsed header.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:322:894","0:323:1672"],"fields_stripped":false}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2676:225-0:320:1721","a:2:7736:7661-0:320:1721","a:2:2662:217-0:320:1721","a:2:2726:7678-0:320:1721","a:2:7735:7662-0:320:1721","b:2:2523-0:320:1721","b:2:2513-0:320:1721","b:2:2241-0:320:1721","b:2:2517-0:320:1721","b:2:2528-0:320:1721","b:2:3321-0:320:1721","b:2:2238-0:320:1721","b:5:681-0:320:1721","0:324","0:326","0:329","0:331","0:334","0:336","0:151"]}},"0:99":{"id":"0:99","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[185,0],"end":[189,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:8601:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:100:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2662:217-0:223:1642":{"id":"a:2:2662:217-0:223:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:214:412":{"id":"0:214:412","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[134,15],"end":[134,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:106:1659":{"id":"0:106:1659","crate_id":0,"name":"is_partial","span":{"filename":"src/lib.rs","begin":[223,4],"end":[228,5]},"visibility":"public","docs":"Convenience method to check if status is partial.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:107:1494":{"id":"0:107:1494","crate_id":0,"name":"unwrap","span":{"filename":"src/lib.rs","begin":[233,4],"end":[238,5]},"visibility":"public","docs":"Convenience method to unwrap a Complete value. Panics if the status is\n`Partial`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:684:7931":{"id":"5:684:7931","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5109:61246":{"id":"5:5109:61246","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:6994:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6994:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:7736:7661-0:320:1721":{"id":"a:2:7736:7661-0:320:1721","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:7661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5104":{"id":"5:5104","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5015:1352","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5105:61245","5:5106:1806","5:5109:61246","5:5112:61247","5:5120:61248","5:5121:61249","5:5122:8727","5:5123:53841","5:5124:53842"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:139:1805":{"id":"0:139:1805","crate_id":0,"name":"parse_with_uninit_headers","span":{"filename":"src/lib.rs","begin":[523,4],"end":[529,5]},"visibility":"public","docs":"Try to parse a buffer of bytes into the Request,\nexcept use an uninitialized slice of `Header`s.\n\nFor more information, see `parse`","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["headers",{"kind":"borrowed_ref","inner":{"lifetime":"'h","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"MaybeUninit","id":"2:29541:1592","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:101:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:280:655":{"id":"0:280:655","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[446,9],"end":[446,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11443:60608":{"id":"2:11443:60608","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:11036:8367","prim@char":"1:12300:408"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:8384","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11340:60589":{"id":"2:11340:60589","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:11338:60588"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:270:1715":{"id":"b:2:2528-0:270:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:151":{"id":"0:151","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[722,0],"end":[733,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:153:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5105:61245":{"id":"5:5105:61245","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:7684","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6739:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:7684","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6739:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:300:1086":{"id":"0:300:1086","crate_id":0,"name":"reason","span":{"filename":"src/lib.rs","begin":[610,4],"end":[610,33]},"visibility":"public","docs":"The response reason-phrase, such as `OK`.\n\nContains an empty string if the reason-phrase was missing or contained invalid characters.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"b:2:2241-0:295:1752":{"id":"b:2:2241-0:295:1752","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2243:53810"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11449:60610":{"id":"2:11449:60610","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:11036:8367","prim@char":"1:12300:408"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:8384","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2519:673":{"id":"2:2519:673","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2528-0:295:1752":{"id":"b:2:2528-0:295:1752","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:331":{"id":"0:331","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,22],"end":[709,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2676:225-0:270:1715":{"id":"a:2:2676:225-0:270:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2526:127":{"id":"2:2526:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"b:2:2523-0:270:1715":{"id":"b:2:2523-0:270:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11343:56473":{"id":"2:11343:56473","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:10604:1835"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:252":{"id":"0:252","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,26],"end":[203,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"2:2285:185","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:254:600"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7735:7662-0:295:1752":{"id":"a:2:7735:7662-0:295:1752","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:7662","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:113:1690":{"id":"0:113:1690","crate_id":0,"name":"multiple_spaces_in_response_status_delimiters_are_allowed","span":{"filename":"src/lib.rs","begin":[304,4],"end":[306,5]},"visibility":"public","docs":"Whether multiple spaces are allowed as delimiters in response status lines.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:122:1670":{"id":"0:122:1670","crate_id":0,"name":"ignore_invalid_headers_in_responses","span":{"filename":"src/lib.rs","begin":[393,4],"end":[399,5]},"visibility":"public","docs":"Sets whether invalid header lines should be silently ignored in responses.\n\nThis mimicks the behaviour of major browsers. You probably don't want this.\nYou should only want this if you are implementing a proxy whose main\npurpose is to sit in front of browsers whose users access arbitrary content\nwhich may be malformed, and they expect everything that works without\nthe proxy to keep working with the proxy.\n\nThis option will prevent `ParserConfig::parse_response` from returning\nan error encountered when parsing a header, except if the error was caused\nby the character NUL (ASCII code 0), as Chrome specifically always reject\nthose, or if the error was caused by a lone character `\\r`, as Firefox and\nChrome behave differently in that case.\n\nThe ignorable errors are:\n* empty header names;\n* characters that are not allowed in header names, except for `\\0` and `\\r`;\n* when `allow_spaces_after_header_name_in_responses` is not enabled,\n  spaces and tabs between the header name and the colon;\n* missing colon between header name and value;\n* when `allow_obsolete_multiline_headers_in_responses` is not enabled,\n  headers using obsolete line folding.\n* characters that are not allowed in header values except for `\\0` and `\\r`.\n\nIf an ignorable error is encountered, the parser tries to find the next\nline in the input to resume parsing the rest of the headers. As lines\ncontributing to a header using obsolete line folding always start\nwith whitespace, those will be ignored too. An error will be emitted\nnonetheless if it finds `\\0` or a lone `\\r` while looking for the\nnext line.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11362:58696":{"id":"2:11362:58696","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11363:58711"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:50296:8396","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11446:60609":{"id":"2:11446:60609","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:11036:8367","prim@char":"1:12300:408"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:322:894":{"id":"0:322:894","crate_id":0,"name":"name","span":{"filename":"src/lib.rs","begin":[714,4],"end":[714,21]},"visibility":"public","docs":"The name portion of a header.\n\nA header name must be valid ASCII-US, so it's safe to store as a `&str`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"b:2:2238-0:197:127":{"id":"b:2:2238-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11408:60597":{"id":"2:11408:60597","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:8384","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:268":{"id":"0:268","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[242,23],"end":[242,30]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2564:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:269:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11367:1863":{"id":"2:11367:1863","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11036:8367"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:217:600":{"id":"0:217:600","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[134,22],"end":[134,31]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2587:8324":{"id":"2:2587:8324","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["demand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:3382:8518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2243:53810":{"id":"2:2243:53810","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:306":{"id":"0:306","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,16],"end":[601,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2673:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2676:225-0:223:1642":{"id":"a:2:2676:225-0:223:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:254:600":{"id":"0:254:600","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[203,26],"end":[203,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11461:60612":{"id":"2:11461:60612","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4465:60612"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50339:8407","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2662:217-0:320:1721":{"id":"a:2:2662:217-0:320:1721","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:7736:7661-0:233:1624":{"id":"a:2:7736:7661-0:233:1624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:7736:7661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:7661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2238-0:233:1624":{"id":"b:2:2238-0:233:1624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2240:2470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:305:655":{"id":"0:305:655","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[601,9],"end":[601,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:233:1624":{"id":"b:2:2517-0:233:1624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:681-0:320:1721":{"id":"b:5:681-0:320:1721","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:683:7930","5:684:7931","5:685:7932"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[446,20],"end":[446,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2672:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11335:789":{"id":"2:11335:789","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12300:408"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:334":{"id":"0:334","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[709,26],"end":[709,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2672:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2513-0:223:1642":{"id":"b:2:2513-0:223:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:7870"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:225":{"id":"0:225","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,9],"end":[182,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:226:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:198:1618":{"id":"0:198:1618","crate_id":0,"name":"HeaderName","span":{"filename":"src/lib.rs","begin":[137,4],"end":[137,14]},"visibility":"default","docs":"Invalid byte in header name.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:11423:60601":{"id":"2:11423:60601","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:96:655":{"id":"0:96:655","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[168,4],"end":[170,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:257:655":{"id":"0:257:655","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[203,37],"end":[203,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11390:56625":{"id":"2:11390:56625","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11036:8367","prim@char":"1:12300:408","str::split":"2:11384:56621","`DoubleEndedIterator`":"2:7079:120"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:50040:7981","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:8384","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:98:1640":{"id":"0:98:1640","crate_id":0,"name":"description","span":{"filename":"src/lib.rs","begin":[175,4],"end":[177,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11431:60606":{"id":"2:11431:60606","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11036:8367"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11061:8383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:681-0:233:1624":{"id":"b:5:681-0:233:1624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["5:683:7930","5:684:7931","5:685:7932"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11429:60604":{"id":"2:11429:60604","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:221":{"id":"0:221","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,37],"end":[134,42]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:222:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2513-0:295:1752":{"id":"b:2:2513-0:295:1752","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2516:7870"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2241-0:258:1665":{"id":"b:2:2241-0:258:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:53810"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:298:1515":{"id":"0:298:1515","crate_id":0,"name":"version","span":{"filename":"src/lib.rs","begin":[604,4],"end":[604,27]},"visibility":"public","docs":"The response minor version, such as `1` for `HTTP/1.1`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}},"b:2:2528-0:223:1642":{"id":"b:2:2528-0:223:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:295:1752":{"id":"b:2:2238-0:295:1752","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2240:2470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11414:60598":{"id":"2:11414:60598","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"prim@char":"1:12300:408","str::matches":"2:11411:2481","self::pattern":"2:11036:8367","`DoubleEndedIterator`":"2:7079:120"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50244:8401","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:8384","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:230":{"id":"0:230","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,27],"end":[182,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2673:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2528-0:258:1665":{"id":"b:2:2528-0:258:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2662:217-0:197:127":{"id":"a:2:2662:217-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2662:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:250":{"id":"0:250","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,26],"end":[203,35]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2672:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:123:1750":{"id":"0:123:1750","crate_id":0,"name":"parse_response","span":{"filename":"src/lib.rs","begin":[402,4],"end":[408,5]},"visibility":"public","docs":"Parses a response with the given config.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["response",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:101:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:231":{"id":"0:231","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,27],"end":[182,29]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:141:1810":{"id":"0:141:1810","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[552,4],"end":[554,5]},"visibility":"public","docs":"Try to parse a buffer of bytes into the Request.\n\nReturns byte offset in `buf` to start of HTTP body.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'b","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:101:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2531:127":{"id":"2:2531:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39298:2531","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:200:1620":{"id":"0:200:1620","crate_id":0,"name":"HeaderValue","span":{"filename":"src/lib.rs","begin":[139,4],"end":[139,15]},"visibility":"default","docs":"Invalid byte in header value.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:2:2241-0:197:127":{"id":"b:2:2241-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2243:53810"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2241-0:320:1721":{"id":"b:2:2241-0:320:1721","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2243:53810"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:7735:7662-0:223:1642":{"id":"a:2:7735:7662-0:223:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:7735:7662","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11366:58722":{"id":"2:11366:58722","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50314:8404","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11399:56627":{"id":"2:11399:56627","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"str::rsplitn":"2:11402:56629","prim@char":"1:12300:408","self::pattern":"2:11036:8367"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:50126:7979","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2513-0:258:1665":{"id":"b:2:2513-0:258:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2516:7870"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2585-0:197:127":{"id":"b:2:2585-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2578:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3370:8519","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2587:8324"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"0:229:600":{"id":"0:229:600","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[182,16],"end":[182,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2516:7870":{"id":"2:2516:7870","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2490:132"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5375:1406":{"id":"5:5375:1406","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6994:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:681-0:258:1665":{"id":"b:5:681-0:258:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:683:7930","5:684:7931","5:685:7932"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11365:60593":{"id":"2:11365:60593","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50286:8397","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:240":{"id":"0:240","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[203,9],"end":[203,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"2:2674:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2674:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2517-0:320:1721":{"id":"b:2:2517-0:320:1721","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11425:60602":{"id":"2:11425:60602","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2241-0:233:1624":{"id":"b:2:2241-0:233:1624","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2235:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["2:2243:53810"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:227":{"id":"0:227","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,16],"end":[182,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2672:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[182,16],"end":[182,25]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2285:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:229:600"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11346:13667":{"id":"2:11346:13667","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12317:1448"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11338:60588":{"id":"2:11338:60588","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:270:1715":{"id":"b:2:2238-0:270:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2240:2470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2676:225-0:295:1752":{"id":"a:2:2676:225-0:295:1752","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2676:225-0:258:1665":{"id":"a:2:2676:225-0:258:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2676:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11456:53844":{"id":"2:11456:53844","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,22],"end":[134,31]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2672:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5121:61249":{"id":"5:5121:61249","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:286:7684","`String`":"5:6994:221"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:286:7684","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6739:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:6994:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:269:59":{"id":"0:269:59","crate_id":0,"name":"default","span":{"filename":"src/lib.rs","begin":[242,23],"end":[242,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:258:1665":{"id":"b:2:2238-0:258:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2726:7678-0:270:1715":{"id":"a:2:2726:7678-0:270:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'buf","bounds":[{"outlives":"'headers"}]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:7678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:235:1653":{"id":"0:235:1653","crate_id":0,"name":"Complete","span":{"filename":"src/lib.rs","begin":[206,4],"end":[206,15]},"visibility":"default","docs":"The completed result.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:237:1553"]},"discriminant":null}},"0:338:600":{"id":"0:338:600","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[709,26],"end":[709,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:213":{"id":"0:213","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,15],"end":[134,20]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:214:412"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:5373-0:197:127":{"id":"b:5:5373-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8601:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5371:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5375:1406"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:223:1642":{"id":"b:2:2238-0:223:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:2470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2528-0:320:1721":{"id":"b:2:2528-0:320:1721","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2487:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2531:127","2:2532:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11455:53843":{"id":"2:11455:53843","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2517-0:295:1752":{"id":"b:2:2517-0:295:1752","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11357:56613":{"id":"2:11357:56613","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:11358:56614"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:258:1665":{"id":"b:2:2523-0:258:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3321-0:197:127":{"id":"b:2:3321-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11364:9766":{"id":"2:11364:9766","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50276:8395","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:206:1626":{"id":"0:206:1626","crate_id":0,"name":"Token","span":{"filename":"src/lib.rs","begin":[145,4],"end":[145,9]},"visibility":"default","docs":"Invalid byte where token is required.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:11373:56632":{"id":"2:11373:56632","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12300:408","self::pattern":"2:11036:8367"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:8384","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:320:1721":{"id":"b:2:2238-0:320:1721","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2232:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2240:2470"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[242,9],"end":[242,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:265:412"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:328:412":{"id":"0:328:412","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[709,15],"end":[709,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:223:1642":{"id":"0:223:1642","crate_id":0,"name":"InvalidChunkSize","span":{"filename":"src/lib.rs","begin":[183,0],"end":[183,28]},"visibility":"public","docs":"An error in parsing a chunk size.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":"unit","generics":{"params":[],"where_predicates":[]},"impls":["a:2:2676:225-0:223:1642","a:2:7736:7661-0:223:1642","a:2:2662:217-0:223:1642","a:2:2726:7678-0:223:1642","a:2:7735:7662-0:223:1642","b:2:2523-0:223:1642","b:2:2513-0:223:1642","b:2:2241-0:223:1642","b:2:2517-0:223:1642","b:2:2528-0:223:1642","b:2:3321-0:223:1642","b:2:2238-0:223:1642","b:5:5373-0:223:1642","0:225","0:227","0:228","0:230","0:231","0:99"]}},"0:301:1720":{"id":"0:301:1720","crate_id":0,"name":"headers","span":{"filename":"src/lib.rs","begin":[612,4],"end":[612,45]},"visibility":"public","docs":"The response headers.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'headers","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}}}},"0:267:655":{"id":"0:267:655","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[242,16],"end":[242,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11437:54295":{"id":"2:11437:54295","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:11036:8367","prim@char":"1:12300:408"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11460:8524":{"id":"2:11460:8524","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4468:8524"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50330:8406","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11336:7877":{"id":"2:11336:7877","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11427:60603":{"id":"2:11427:60603","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3321-0:295:1752":{"id":"b:2:3321-0:295:1752","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3319:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["2:3323:1440"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11380:7876":{"id":"2:11380:7876","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:48056:176","self::pattern":"2:11036:8367","prim@char":"1:12300:408"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11056:8384","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:222:655":{"id":"0:222:655","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[134,37],"end":[134,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:116:1711":{"id":"0:116:1711","crate_id":0,"name":"parse_request","span":{"filename":"src/lib.rs","begin":[345,4],"end":[351,5]},"visibility":"public","docs":"Parses a request with the given config.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["request",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"0:101:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:108":{"id":"0:108","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[251,0],"end":[419,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:109:1666","0:110:1668","0:111:1682","0:112:1669","0:113:1690","0:114:1667","0:115:1709","0:116:1711","0:119:1719","0:122:1670","0:123:1750","0:126:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11351:2252":{"id":"2:11351:2252","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9138:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9138:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:274:1008":{"id":"0:274:1008","crate_id":0,"name":"path","span":{"filename":"src/lib.rs","begin":[451,4],"end":[451,31]},"visibility":"public","docs":"The request path, such as `/about-us`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'buf","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[242,16],"end":[242,21]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:267:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11344:60590":{"id":"2:11344:60590","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:115:1709":{"id":"0:115:1709","crate_id":0,"name":"obsolete_multiline_headers_in_responses_are_allowed","span":{"filename":"src/lib.rs","begin":[340,4],"end":[342,5]},"visibility":"public","docs":"Whether obsolete multiline headers should be allowed.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[211,0],"end":[239,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:105:1657","0:106:1659","0:107:1494"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2517-0:258:1665":{"id":"b:2:2517-0:258:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2490:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParserConfig","id":"0:258:1665","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2519:673"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2726:7678-0:223:1642":{"id":"a:2:2726:7678-0:223:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2726:7678","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:238:1655":{"id":"0:238:1655","crate_id":0,"name":"Partial","span":{"filename":"src/lib.rs","begin":[208,4],"end":[208,11]},"visibility":"default","docs":"A partial result.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:11334":{"id":"2:11334","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:10599:1352","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11335:789","2:11336:7877","2:11337:60587","2:11338:60588","2:11340:60589","2:11343:56473","2:11344:60590","2:11345:309","2:11346:13667","2:11347:2240","2:11349:13653","2:11351:2252","2:11353:1894","2:11355:60591","2:11356:60592","2:11357:56613","2:11358:56614","2:11359:8421","2:11360:9079","2:11361:1784","2:11362:58696","2:11363:58711","2:11364:9766","2:11365:60593","2:11366:58722","2:11367:1863","2:11370:56631","2:11373:56632","2:11376:7915","2:11380:7876","2:11384:56621","2:11387:56623","2:11390:56625","2:11393:60594","2:11396:60595","2:11399:56627","2:11402:56629","2:11405:60596","2:11408:60597","2:11411:2481","2:11414:60598","2:11417:60599","2:11420:60600","2:11423:60601","2:11425:60602","2:11427:60603","2:11429:60604","2:11430:60605","2:11431:60606","2:11434:60607","2:11437:54295","2:11440:56633","2:11443:60608","2:11446:60609","2:11449:60610","2:11452:1810","2:11454:9405","2:11455:53843","2:11456:53844","2:11457:53845","2:11458:60611","2:11460:8524","2:11461:60612"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:5373-0:223:1642":{"id":"b:5:5373-0:223:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:8601:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2669:2525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5371:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5375:1406"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:105:1657":{"id":"0:105:1657","crate_id":0,"name":"is_complete","span":{"filename":"src/lib.rs","begin":[214,4],"end":[219,5]},"visibility":"public","docs":"Convenience method to check if status is complete.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:681-0:197:127":{"id":"b:5:681-0:197:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2255:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:677:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:197:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:683:7930","5:684:7931","5:685:7932"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:309":{"id":"0:309","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,16],"end":[601,18]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2290:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:7736:7661-0:270:1715":{"id":"a:2:7736:7661-0:270:1715","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:7736:7661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Request","id":"0:270:1715","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:276:1720":{"id":"0:276:1720","crate_id":0,"name":"headers","span":{"filename":"src/lib.rs","begin":[455,4],"end":[455,45]},"visibility":"public","docs":"The request headers.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'headers","mutable":true,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Header","id":"0:320:1721","args":{"angle_bracketed":{"args":[{"lifetime":"'buf"}],"bindings":[]}}}}}}}},"0:302":{"id":"0:302","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[601,9],"end":[601,14]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:8596:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Response","id":"0:295:1752","args":{"angle_bracketed":{"args":[{"lifetime":"'headers"},{"lifetime":"'buf"}],"bindings":[]}}}},"items":["0:305:655"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11376:7915":{"id":"2:11376:7915","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"2:11036:8367","prim@char":"1:12300:408","`None`":"2:48056:176"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48054:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11041:8382","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2523-0:223:1642":{"id":"b:2:2523-0:223:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2497:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2493:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InvalidChunkSize","id":"0:223:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2526:127","2:2527:1427"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:244:412":{"id":"0:244:412","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[203,15],"end":[203,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Status","id":"0:233:1624","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:270:1715":{"id":"0:270:1715","crate_id":0,"name":"Request","span":{"filename":"src/lib.rs","begin":[447,0],"end":[456,1]},"visibility":"public","docs":"A parsed Request.\n\nThe optional values will be `None` if a parse was not complete, and did not\nparse the associated property. This allows you to inspect the parts that\ncould be parsed, before reading more, in case you wish to exit early.\n\n# Example\n\n```no_run\nlet buf = b\"GET /404 HTTP/1.1\\r\\nHost:\";\nlet mut headers = [httparse::EMPTY_HEADER; 16];\nlet mut req = httparse::Request::new(&mut headers);\nlet res = req.parse(buf).unwrap();\nif res.is_partial() {\n    match req.path {\n        Some(ref path) => {\n            // check router for path.\n            // /404 doesn't exist? we could stop parsing\n        },\n        None => {\n            // must read more and parse again\n        }\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:273:1775","0:274:1008","0:275:1515","0:276:1720"],"fields_stripped":false}},"generics":{"params":[{"name":"'headers","kind":{"lifetime":{"outlives":[]}}},{"name":"'buf","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:129","a:2:2676:225-0:270:1715","a:2:7736:7661-0:270:1715","a:2:2662:217-0:270:1715","a:2:2726:7678-0:270:1715","a:2:7735:7662-0:270:1715","b:2:2523-0:270:1715","b:2:2513-0:270:1715","b:2:2241-0:270:1715","b:2:2517-0:270:1715","b:2:2528-0:270:1715","b:2:3321-0:270:1715","b:2:2238-0:270:1715","0:277","0:281","0:284","0:288","0:291"]}},"0:153:655":{"id":"0:153:655","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[723,4],"end":[732,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:226:655":{"id":"0:226:655","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[182,9],"end":[182,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8556:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8545:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:237:1553":{"id":"0:237:1553","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[206,13],"end":[206,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}}},"paths":{"2:25212:9051":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:7426:8326":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"16:6161:9986":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:9475:10186":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"6:1695:12347":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:38141:7856":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:4210:8856":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:54179:7535":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:1105:8788":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"5:6739:8677":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:49890:7990":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:10520:11445":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:46553:13428":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:8422:8503":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"1:2578:8715":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:8873:8532":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:7848:8529":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:50190:8403":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:990:8784":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:11734:11404":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:6509:13021":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:46443:198":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"16:5793:9860":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"5:6836:7881":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"12:1845:8564":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"17:10682:10292":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"5:5977:8563":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:46346:9185":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"6:513:12162":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"6:7208:13066":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:9362:10198":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"18:599:61548":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:48105:2251":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"16:3457:10998":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:50757:8378":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:13478:12095":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:20964:8529":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:420:9875":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:7870:8880":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"18:113:13641":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"16:6829:10137":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:9339:10303":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:4969:8665":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:9531:216":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:12303:1017":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"16:2579:10155":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"17:9263:13372":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"16:0:2379":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:56946:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:967:13362":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:954:8564":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"6:62:39614":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:2578:127":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:9577:7975":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:12850:11918":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"6:0:794":{"crate_id":6,"path":["libc"],"kind":"module"},"17:11761:11619":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"6:501:12159":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:47243:8499":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"16:2868:9871":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:2327:186":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"16:7237:9799":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"12:60:13643":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"16:7511:9811":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"17:9627:10194":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:9269:8757":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:2248:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:54156:7534":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:52726:9228":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:8556:131":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:8864:8818":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"16:4849:10745":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"6:4706:12634":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"16:2411:10120":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:9407:54278":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:3314:8711":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"16:2535:10103":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"5:3015:8568":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"0:198:1618":{"crate_id":0,"path":["httparse","Error","HeaderName"],"kind":"variant"},"17:10310:13398":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:6838:8948":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"17:12617:11842":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:12730:11886":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:10075:13386":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"16:5963:191":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:4346:7592":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"18:736:10346":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"5:6748:7881":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"17:10721:11057":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"5:4987:11249":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"2:29747:9322":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"2:48557:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:13141:11989":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"5:1944:8895":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:10506:11442":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"1:8577:9010":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"5:5909:11253":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"6:1532:12237":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"12:725:8777":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:49932:7987":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:54022:2293":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:9329:7977":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:11889:202":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"17:12265:11716":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"6:5733:12846":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:12315:722":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:49367:8818":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:11384:11285":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:9831:8908":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"6:4300:12484":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"16:7557:9937":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"9:592:9594":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"2:22402:9037":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:53882:9198":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:11684:11610":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:6677:7942":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:8603:8282":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"6:4461:12532":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:20004:60009":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"17:13114:11982":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:9401:11395":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:9681:11071":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"6:4274:12471":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:9449:7995":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"5:3107:8564":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"17:12797:11905":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:48139:7658":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:7982:9524":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:2154:577":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"17:10546:47251":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:47120:8482":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:8607:8284":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"18:681:10341":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"6:4716:12640":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:11087:11484":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"1:3157:8939":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:10182:11434":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:4216:8855":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:2487:147":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"6:608:12220":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"6:554:12191":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"1:979:8783":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"6:5727:12843":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:48190:190":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"16:4262:10851":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"16:3188:12134":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"1:11514:10459":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"17:10528:10284":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:47129:8483":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"6:1550:12248":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:3147:7967":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"16:153:9802":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:10350:10164":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"16:6252:9990":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:2739:7851":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:48181:7950":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:50749:8376":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"5:6171:11241":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:3616:7881":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:13203:12004":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:29507:2526":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:11756:58896":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"6:4683:12624":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:52467:10604":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"12:810:8779":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:46991:9329":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"14:160:13411":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:5880:203":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:9539:10183":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:12674:11880":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:52055:10623":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"12:2069:8788":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:2676:225":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:9225:8646":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"18:574:11381":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:8956:7973":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:46465:200":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"9:896:9555":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:56985:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:9712:11396":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:6233:203":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:11618:135":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:9873:13382":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"1:10495:8806":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"6:6329:12935":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:46925:9397":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"10:0:2374":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"16:6059:10100":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"16:8014:9812":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:1760:9358":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:39347:7849":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:9485:10374":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"1:3486:8658":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:48481:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"6:4635:12600":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:4246:8587":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:8613:8286":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:8699:9017":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:11445:8646":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"17:11774:11621":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"16:2657:10115":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"6:6572:13046":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:9844:10312":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:11124:8910":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"6:5595:12771":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:10581:8655":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"2:9304:7974":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:10497:47512":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:12322:767":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"9:586:9592":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"17:3125:13363":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:11547:11589":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:8324:9257":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"6:4745:12649":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:8418:10233":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:12022:11675":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"16:5163:9873":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"16:7956:9946":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:7150:13492":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"18:507:11381":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:48291:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:10426:13439":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:13134:11988":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:8935:1322":{"crate_id":2,"path":["core","slice"],"kind":"module"},"17:13184:11999":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:9601:10187":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:11903:13112":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"6:4665:12613":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:12768:11897":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:9644:10180":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:8796:10172":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:10756:8644":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"1:6017:8982":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"18:481:10350":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"16:6359:9992":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:12926:11934":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:6375:12954":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:12860:11919":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"6:6981:13055":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:47521:13198":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"6:4185:12430":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:11186:11500":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"12:2205:8571":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:5011:8609":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:9484:7981":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:53758:9213":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:11655:10450":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:13506:12104":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:13393:12073":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:5009:8602":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:11682:13219":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:6316:11268":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"16:5949:9866":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:12300:408":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"1:2257:8704":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"16:6877:9789":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"6:4200:12437":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:8615:8287":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:1887:13440":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"13:108:8157":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"12:861:8786":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"0:0:2138":{"crate_id":0,"path":["httparse"],"kind":"module"},"2:50737:8372":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:3980:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"1:8363:8729":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"12:1138:8790":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:50596:9064":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"12:1872:8568":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"1:4972:8667":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:3154:8938":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:11390:11286":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:49355:144":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"6:5876:12895":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"6:4559:12566":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:51000:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"16:2705:10106":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"17:12948:11939":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"6:4598:12587":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"5:1396:8778":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"16:3632:10835":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"0:204:1624":{"crate_id":0,"path":["httparse","Error","Status"],"kind":"variant"},"2:53680:9229":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:4200:9249":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:50979:9276":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:11041:8382":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:10583:10168":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:29547:2527":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"5:3734:8563":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"6:4398:12527":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"5:1595:11241":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:12816:11906":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:12319:1446":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:2255:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:11050:8385":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:12306:1352":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"1:3194:8723":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:8295:47249":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:6735:9956":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:50296:8396":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"5:6883:8571":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"9:0:2373":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"6:4206:12438":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:13536:12112":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"6:4335:12503":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"5:1349:7973":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"16:5815:9861":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"16:7483:9944":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"6:7220:13068":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:10374:10263":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:7192:11277":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:8303:655":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"17:11813:11626":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:10445:10288":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"6:487:12151":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:12118:11689":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:11585:11287":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"17:9371:13368":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:2588:11267":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"6:7243:13074":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:48054:178":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:13176:11997":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:4719:773":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:10749:8412":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"14:0:2377":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:7849:8888":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:50617:9066":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:11262:111":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"6:592:12210":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"6:5692:12828":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"6:5684:12827":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:39338:8517":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"1:11688:13220":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:9183:13370":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:12337:10288":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:21358:13182":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"5:6994:221":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:48130:7881":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:49338:13204":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"6:560:12194":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"6:4768:12657":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"16:5737:9856":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:6010:8980":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:51978:9206":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"6:507:12161":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"9:33:9644":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"5:6096:7881":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:7737:7660":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:56998:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:46401:196":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"14:215:13171":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:6217:8758":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"17:9223:47296":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:10921:1721":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:11036:8367":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"5:5371:229":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:13158:11993":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:1620:8565":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"16:6070:9874":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:2497:233":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:13518:12106":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:10604:1835":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"12:646:7974":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:21110:9294":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"16:5219:10850":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:2026:182":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"6:4605:12589":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:7841:8382":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"15:193:9739":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:2612:8708":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:12320:1447":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"6:4690:973":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:3230:8724":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:2856:8559":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:9347:8764":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:0:1344":{"crate_id":1,"path":["std"],"kind":"module"},"1:5169:8525":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"17:11576:11594":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"16:7396:10009":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"6:5504:12730":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"12:2178:12144":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:1707:8966":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:11841:11630":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"16:5447:9838":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:21739:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"2:4530:9390":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:247:13359":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:3199:9143":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:7079:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:1889:13441":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"0:164:1883":{"crate_id":0,"path":["httparse","parse_headers"],"kind":"function"},"6:5541:12744":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:10651:8643":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"6:4267:12468":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:46519:9124":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:12550:11787":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"17:13059:11966":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:47219:8497":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"6:5741:12848":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:9411:7978":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:12198:11709":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:8749:13426":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"2:54077:7529":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:52200:9234":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:7042:149":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"12:1029:8789":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"14:7:13411":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:6782:8989":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:10221:13391":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"2:2285:185":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:8545:207":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"17:11436:11548":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"14:202:9454":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:3174:9120":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"17:9488:10185":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:13031:11958":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"6:5861:12884":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:11235:11510":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:7102:7682":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"9:920:9552":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"6:6311:12926":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:9302:8761":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"16:7372:10143":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"6:7266:13080":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"18:515:10352":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:54103:7531":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:8526:10267":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:20023:60063":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:10394:10265":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"1:2515:8714":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:8694:9014":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"5:3350:7973":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:10599:1352":{"crate_id":2,"path":["core","str"],"kind":"module"},"16:7872:9950":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:10857:8722":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"7:32:44819":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:47190:8495":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:3249:10237":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"6:5443:12688":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:9526:215":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:49346:8533":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:48633:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"18:582:7856":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"6:7289:13083":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:12291:11718":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"16:5122:10839":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:8596:11012":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"5:6023:11241":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:1864:13439":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:3192:8722":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"16:5374:9933":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"5:6333:9432":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"1:8429:1593":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:2253:8911":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"6:4565:12567":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:3422:8653":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:2385:8915":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"17:9553:10198":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"16:7044:9791":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:8625:8747":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:8448:152":{"crate_id":1,"path":["std","net","ip_addr","IpAddr"],"kind":"enum"},"2:22003:9297":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"2:2674:108":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:2768:8620":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:3184:9123":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:900:7974":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:2916:10225":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:21937:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:3908:8696":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:49096:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:7735:7662":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"16:6463:9994":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:49051:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:10322:8967":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"18:548:140":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"16:4689:10765":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"18:80:13637":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:2869:8848":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:50022:7977":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:49966:8391":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:12060:11679":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"16:7909:9951":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:1771:10188":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"9:111:9611":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"6:4294:12481":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:9791:13154":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:50944:192":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:3968:9187":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"6:1505:12226":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:12304:307":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:11164:56454":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"6:135:39681":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:3956:9186":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"5:2989:8565":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:8272:10293":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:47098:8480":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:8973:8824":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:47528:13199":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:8590:8528":{"crate_id":1,"path":["std","net","socket_addr","SocketAddr"],"kind":"enum"},"16:5878:9863":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"6:5582:12765":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:8991:61538":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:12972:11944":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:47569:13091":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"16:7890:9949":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"17:8510:10850":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:678:13430":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:53222:9221":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"5:5634:8696":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"6:4496:12534":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:10476:47511":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"6:7237:13073":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:46888:9394":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"18:652:11381":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:1643:2521":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"6:5713:12840":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"6:4307:12487":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:13231:12012":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:52416:9200":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:3168:8476":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:50582:9063":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"5:1212:8789":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"16:4217:10886":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:484:11289":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"2:52884:9220":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:6785:8839":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:46918:9396":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"5:1359:7974":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:10799:11283":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"2:39334:9524":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"17:11217:11509":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:12237:11712":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:46560:8297":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"6:6277:12907":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:8339:47250":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:11893:11635":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:4262:9254":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:10490:11441":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:6604:163":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:10875:10231":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:5457:8489":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:11061:8383":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:3382:8518":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"1:9239:8647":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:20451:9104":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:47111:8481":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:2235:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:21313:58939":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:9722:1630":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:4059:9246":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"6:4475:12533":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:2969:9034":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"6:1636:12311":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:2652:8717":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:48241:7973":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:49084:109":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"16:2487:10102":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:9389:106":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"2:52018:10619":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:21391:9310":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:5709:8643":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:12148:11692":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:21216:10531":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:47167:13194":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:10123:7993":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:52000:9210":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:681:13432":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"1:7057:8865":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"16:3716:10768":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:4838:8857":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:11787:11622":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:49811:7970":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:2903:207":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"2:11970:8579":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"12:815:8782":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"16:7426:9958":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:11915:139":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:12321:1444":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:9021:13367":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"6:4581:12576":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:50402:9052":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:1828:13438":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:47269:8500":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:12298:366":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:8076:8599":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:3086:8732":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"12:659:7881":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:9261:7973":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"16:7166:9797":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"0:101:207":{"crate_id":0,"path":["httparse","Result"],"kind":"typedef"},"15:0:2378":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:12934:11937":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"12:98:9720":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"6:646:40016":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"0:238:1655":{"crate_id":0,"path":["httparse","Status","Partial"],"kind":"variant"},"17:12874:11920":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"17:11639:11605":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"6:4346:12508":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:11457:8647":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"12:738:8778":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"5:1044:13649":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:1825:8585":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:50339:8407":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:46546:9812":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"2:2445:2532":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:49170:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"1:11496:8851":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:20418:8529":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:2662:217":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:9437:13452":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"17:1962:10249":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"5:2050:9517":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:46605:9113":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"5:4945:8673":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"17:9193:61540":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:50330:8406":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"5:3805:7974":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:2444:8529":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"6:1686:12341":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"9:827:9550":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:353:8875":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:12836:11914":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:13459:12090":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:12211:11710":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"5:5526:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"12:1681:143":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"16:7469:9943":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"6:519:12165":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:48114:7973":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"6:4224:12450":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:8071:8908":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:8763:8668":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:50825:9338":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:2758:8572":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:20044:60065":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:598:8860":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"5:3911:7973":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"5:2030:60223":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:9536:8768":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:13100:11975":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:10108:10228":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:9897:13384":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"16:2282:9805":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"5:0:282":{"crate_id":5,"path":["alloc"],"kind":"module"},"17:10625:10173":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:4195:9248":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"11:44:9706":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"1:7955:8791":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"2:2991:8638":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:11601:13215":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"4:0:2371":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"9:977:9556":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"17:13413:12076":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"5:2919:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"18:644:11381":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:52037:9195":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"5:6771:9486":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"6:7279:13081":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"6:5772:12856":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"18:521:10349":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:11828:11629":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:12134:11690":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"16:6865:10139":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:10420:10321":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"16:3689:10735":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"16:2930:9872":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:3084:7968":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"16:6171:9979":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"17:9317:10301":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"5:5001:11251":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"17:8212:10286":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:47252:2281":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:7001:8493":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"5:2477:9520":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:13527:12110":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:11307:8648":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"12:751:8563":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:7924:16295":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:29328:9351":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:8601:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"1:965:8780":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"6:4659:12610":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:7166:13065":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:47559:11263":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"6:4644:12603":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"16:2341:10119":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"0:210:1630":{"crate_id":0,"path":["httparse","Error","Version"],"kind":"variant"},"1:4894:8590":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"6:6538:13037":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:12103:11685":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:49820:7971":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"16:3402:12136":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:52102:9239":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"5:1691:8564":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"5:1312:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"6:4575:12573":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"16:3010:10112":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:969:8781":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:2029:181":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"5:1415:8780":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"0:197:127":{"crate_id":0,"path":["httparse","Error"],"kind":"enum"},"12:1003:8788":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:20339:9104":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:574:8900":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:11528:11584":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"6:4804:12679":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:20292:8866":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"5:686:110":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:2401:8920":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:13047:11960":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:52802:9235":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:10997:8392":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"16:2557:10104":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"1:12310:629":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:1737:9359":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:11606:11597":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"16:6052:9985":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"16:4441:10734":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:48814:8285":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:12282:54731":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:10200:11264":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"6:1714:12353":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:11137:11493":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:3162:134":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"17:9764:13153":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"16:6017:9983":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"0:223:1642":{"crate_id":0,"path":["httparse","InvalidChunkSize"],"kind":"struct"},"6:4698:12629":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:8368:10165":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"6:539:12182":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:4653:12609":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"16:6654:9999":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"6:1574:12265":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:9274:13373":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:11826:8953":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:1811:597":{"crate_id":1,"path":["std","env"],"kind":"module"},"16:6517:9735":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:7860:54901":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"2:9372:7994":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:58299:13102":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"17:9885:13383":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:9433:13377":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:51769:9225":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"6:6409:12961":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"16:7847:10011":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:4191:204":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"6:4797:12676":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:20261:9106":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:49840:7984":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:11247:11513":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:46882:8406":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"5:271:11241":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"16:2367:10101":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:4014:8952":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:13404:12074":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"0:258:1665":{"crate_id":0,"path":["httparse","ParserConfig"],"kind":"struct"},"2:2822:8542":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:8505:8685":{"crate_id":1,"path":["std","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"12:1120:9719":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:9563:7979":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:3232:8725":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"16:5839:9862":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:11679:189":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:46299:9035":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:20290:8529":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:20210:9190":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:7962:17301":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:50769:8381":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:21706:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:58320:13103":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"2:54004:9201":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:48257:7881":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"16:7497:9939":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:52962:9208":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"16:4297:10767":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"16:6123:9932":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:21329:58931":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"1:4906:12948":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"17:8951:61544":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:12046:11678":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:54051:2350":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"5:6490:11256":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:10360:10320":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"6:5699:12829":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:12266:13539":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:13168:11996":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"16:5433:9837":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"6:4139:12396":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"6:545:12185":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:2484:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"6:5605:12778":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:50072:8399":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"16:7329:10008":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:8147:8718":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"12:387:13644":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:8946:8821":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:7156:156":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:10997:11464":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:50008:1593":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"6:5472:12712":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:20423:21489":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:1611:8563":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"16:7211:9798":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:11368:11546":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:10949:11449":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:2753:8615":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:8435:7977":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"6:4810:12681":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"6:6448:12978":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:13007:11950":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"12:697:8781":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:53428:9241":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"6:1500:12224":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"6:4611:12592":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:1114:8789":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"16:7435:9974":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:47284:8501":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:2673:222":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:49802:7972":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"17:12164:11696":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:5064:8612":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"5:1196:8787":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"16:7452:195":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:46963:9327":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:1552:8696":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:2833:8547":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"16:6816:10136":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:9382:11393":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:8442:8395":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"5:6830:7881":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"6:4621:12595":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:52324:9211":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"16:5510:9844":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:1967:8319":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:5227:7650":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:2938:7681":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:9315:8762":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:53072:9197":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:0:2380":{"crate_id":17,"path":["object"],"kind":"module"},"2:2817:8536":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"12:2190:61536":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:52148:9227":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:1474:1591":{"crate_id":2,"path":["core","mem"],"kind":"module"},"2:48405:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:50040:7981":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:3377:8696":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"6:5835:12869":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"6:5625:12794":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"5:1387:8777":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"0:200:1620":{"crate_id":0,"path":["httparse","Error","HeaderValue"],"kind":"variant"},"1:8488:8684":{"crate_id":1,"path":["std","net","ip_addr","Ipv6Addr"],"kind":"struct"},"18:564:10355":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:11268:8805":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"16:8069:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:4585:8971":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"9:622:9595":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"12:2053:8787":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:53928:9216":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"16:7117:9795":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"14:187:45556":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"5:6793:7881":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:52370:9196":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"6:4551:12562":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"9:382:9548":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"17:12695:11885":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:8222:8846":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"6:4102:12369":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:10062:13385":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"16:5780:9859":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:11909:11640":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:5380:8488":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:48595:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"17:10296:13397":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"16:2825:10110":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"16:2465:10125":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"5:870:7973":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:11056:8384":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:9631:10181":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:774:141":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"17:10434:13155":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"17:9293:10305":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:12609:11839":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"9:188:9619":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"17:11054:11478":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"5:6323:9431":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:9277:7881":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:12271:16300":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:9253:8648":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:50773:9336":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"16:7970:9947":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:2788:8629":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"0:235:1653":{"crate_id":0,"path":["httparse","Status","Complete"],"kind":"variant"},"2:49903:7985":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"18:719:10344":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:21057:9293":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"6:7226:13069":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:8471:8683":{"crate_id":1,"path":["std","net","ip_addr","Ipv4Addr"],"kind":"struct"},"18:590:11383":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:51899:9230":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"9:709:8818":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"5:4748:9461":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:9155:13369":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"16:4144:10834":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:19989:60009":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"16:7637:9948":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:52514:10528":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:12307:1430":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"16:5628:9851":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"12:300:9723":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:8131:8932":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:11873:11634":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:2250:8909":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"16:4888:10841":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:10973:11463":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:4592:12584":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"9:800:12150":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:524:11265":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:46260:8328":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:8774:10163":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:5178:8742":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"1:686:16298":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:56959:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:7059:7658":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"17:10608:10171":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"0:208:1628":{"crate_id":0,"path":["httparse","Error","TooManyHeaders"],"kind":"variant"},"17:9350:10304":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:12638:11850":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:54042:7527":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"5:2255:9521":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:13024:11957":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:47038:11257":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:46821:9098":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:2726:7678":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"16:4921:10773":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:5894:8759":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:50765:8380":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"12:1518:9729":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"6:6352:12953":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:14:2484":{"crate_id":2,"path":["core","write"],"kind":"macro"},"16:6034:9984":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:54031:7526":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"12:1044:9716":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"6:4126:12386":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:10445:13652":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:46944:9100":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:52294:9207":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:1938:8318":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:13354:12062":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"6:4231:12454":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:3269:8720":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:1636:576":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"16:2749:10108":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"16:2509:10114":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"16:2683:10105":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"5:2948:7973":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:21673:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"2:2827:8544":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"12:2080:8789":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:8962:8823":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"5:1954:9447":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"16:2320:9806":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"11:0:2375":{"crate_id":11,"path":["adler"],"kind":"module"},"17:9422:13376":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"16:7135:9796":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:46975:9328":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:12142:11290":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:3319:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:2713:7848":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:57024:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"18:491:13148":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:5013:8611":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:10860:8724":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"16:7603:9959":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"5:2739:13085":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:12756:11892":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:13557:12115":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:12514:11756":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:2812:8539":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"5:4072:8696":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"16:534:9858":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:9658:13379":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:6719:10132":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:8687:8528":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"6:4534:12554":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:47535:7942":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:12087:11683":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"9:19:9643":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"2:20858:7969":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"17:8701:11026":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"5:4105:11244":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:7805:11280":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:48793:8283":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:6393:9278":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:13492:12097":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"16:5525:9845":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:49377:13205":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:10207:13387":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"18:727:10345":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:8137:47248":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:11939:11659":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:46805:9096":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:49118:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:6043:8983":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"16:5184:45623":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:21904:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"5:3542:8564":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"1:4117:8960":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:2232:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"14:31:13411":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:5680:8641":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"17:8871:13364":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"5:4901:11241":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:9464:54284":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"6:575:12202":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"9:956:9551":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"16:6241:9989":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:7952:1119":{"crate_id":2,"path":["core","result"],"kind":"module"},"1:12314:721":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:47149:8485":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"17:12307:11720":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:11921:13113":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"5:6988:13086":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"12:2198:12147":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:51917:10529":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:10385:10264":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"17:10403:10166":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"17:11271:11515":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"5:630:13414":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"17:9700:10250":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:13071:11967":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"6:4816:12684":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:47181:8487":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"5:1426:8781":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"16:5235:12137":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"16:2631:10116":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"6:7249:13075":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:11070:8669":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:47544:13200":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:10245:13393":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:6441:13443":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:11070:11482":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"15:175:9738":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:50761:8379":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:2796:8633":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:11289:54272":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:11315:11532":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"16:5996:9982":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:20701:9107":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"1:9395:8899":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:50545:9062":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"6:6953:13052":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:8981:13366":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:7875:8898":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:8534:13107":{"crate_id":1,"path":["std","net","ip_addr","fmt","Span"],"kind":"struct"},"12:0:2376":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"17:8393:10220":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"1:8066:8873":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:51747:9237":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:48671:7559":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:1826:13437":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:4017:8953":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:11947:9747":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"12:1852:8565":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:8713:8954":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"6:581:12205":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"5:1405:8779":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:10786:8414":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:46537:8520":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:47577:13202":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"6:5782:12858":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:20173:9101":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"12:632:7973":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:8881:61541":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"14:40:11464":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"9:649:9596":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"1:4766:8680":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"16:7309:10006":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:9213:183":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:9031:61546":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:6430:7889":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:10139:10198":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"16:5411:9836":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:1615:8564":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"2:53570:9209":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:47320:8504":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:2928:1893":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:50630:8386":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:50650:8387":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"5:5212:9430":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:10860:7994":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:7896:7944":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:11106:11489":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:56589:9283":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"5:6911:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:53966:9236":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:3157:230":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:10332:10327":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"2:20442:8529":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:8904:8820":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:11847:8960":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:9384:13448":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"17:9691:10251":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"16:6743:10000":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:5887:8758":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"16:7319:10007":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"18:636:11392":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:6781:9953":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:29541:1592":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:10809:8411":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:52568:10608":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:13594:12122":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:3470:58293":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:5763:8645":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:11997:11671":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:53820:9233":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:9430:13451":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"6:4449:12531":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:6886:214":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:7300:13650":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"6:4527:12553":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"5:3764:11241":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:661:8320":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:5087:8601":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"18:538:10354":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:11107:9055":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"16:7659:9931":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:1626:8566":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:13039:11959":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"14:221:12141":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:9778:10253":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:1580:12267":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:51723:10622":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:1604:7973":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:5646:8639":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:21772:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:10902:7944":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:2290:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:50439:9056":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:12225:11711":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:8887:8819":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:6681:8993":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:9820:10309":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"16:7980:9813":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:10574:7961":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:8752:1593":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"16:6316:9961":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:8160:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:13214:12005":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:12176:11698":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"6:5587:12766":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:49912:7988":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:11099:8599":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"17:12884:11921":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:53008:9212":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:2411:8925":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"9:863:9553":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:10894:10230":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:5823:8649":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:8911:61547":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"13:0:2370":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:7786:11278":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:9805:10308":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"6:1525:12234":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:4:983":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:411:162":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:11704:11289":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"2:46911:9395":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:11640:10458":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:4312:8592":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"18:755:10347":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"5:6801:195":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:21970:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:4454:9019":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"6:6500:13018":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:8330:8733":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"16:5981:9868":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:9909:11397":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:12299:912":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"6:4629:12599":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:8441:10289":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:12008:11673":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:6544:203":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:1919:8870":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"17:9061:10198":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:11014:11467":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"5:5562:9473":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:4693:59059":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:9501:10196":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"5:2747:60159":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:11652:58899":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"17:9108:13368":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:2763:8618":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"5:677:228":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:47199:8490":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"6:6424:12966":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:5841:12870":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:9930:11399":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:11485:11573":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"17:11259:11514":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:8391:8705":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:11300:11526":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"6:6415:12963":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"6:5749:12850":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"7:79:44826":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"12:762:8564":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"17:11174:11499":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:50172:8402":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"5:7016:9452":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:1002:8786":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"17:11515:11582":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"17:13192:12000":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:46377:195":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"6:4191:12432":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"6:4096:12368":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:9738:10254":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"16:6690:9941":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"1:545:8895":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"17:386:13360":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"16:4606:10840":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"18:707:8385":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"6:4540:12557":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:50424:9053":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:973:8782":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"6:1511:12229":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"9:505:9543":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"1:4316:8586":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"6:5534:12740":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:8162:10234":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:11708:11611":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"17:8475:10175":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"5:1370:7881":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"16:7825:10010":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"18:660:10339":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:960:8779":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:10090:7992":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"5:286:7684":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"5:3339:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"5:2960:9444":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:49577:9403":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:21275:10613":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"6:6545:13040":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:12909:11929":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:47233:8498":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"16:2300:10126":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"5:6421:240":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:9450:9790":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:12964:11942":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:50314:8404":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"6:4489:8974":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:2383:8914":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"1:4505:8962":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:1678:12340":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"16:7357:9955":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"14:165:45550":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:8833:144":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"5:1078:9516":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:46421:199":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:1608:7881":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:9207:8644":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:48329:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:8546:8277":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:11631:33073":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:50144:7975":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:49751:9270":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:47158:8486":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:9824:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"16:2894:10117":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:6516:8479":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"6:4212:12441":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:10670:10291":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:13126:11985":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:10845:10288":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:46778:8406":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:48367:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"16:6903:9790":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:2399:8919":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"16:6472:9736":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"16:4817:10718":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:5506:187":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:11469:56452":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:8650:8956":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"5:4627:8696":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:1751:13088":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:8599:111":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:49033:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"6:4317:12494":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"5:5437:8563":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:4369:8299":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"16:6842:10732":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:50244:8401":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:51877:9226":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"6:131:39680":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"17:9283:13374":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"18:531:10353":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"0:154:1840":{"crate_id":0,"path":["httparse","EMPTY_HEADER"],"kind":"constant"},"17:10233:13392":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:562:11025":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:8241:10290":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:48519:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:6819:8801":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"12:1534:9730":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:8494:10760":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"1:12325:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"1:8554:9009":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"17:11356:11543":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:21163:10487":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:8645:8955":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:2670:7846":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:21871:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:46835:9398":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:54218:7536":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:3594:8687":{"crate_id":1,"path":["std","net","display_buffer","DisplayBuffer"],"kind":"struct"},"17:10708:10287":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:47068:7989":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"17:13082:11971":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:47294:8502":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:20298:8867":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:48122:7974":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:6079:8992":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:4126:8296":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:13148:11990":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"6:5523:12732":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"16:6284:9945":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"6:6322:12931":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"5:6779:60137":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:21267:13090":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"16:6137:9930":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"6:1722:12357":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"18:0:2381":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:2800:8635":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"16:6146:9978":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:10752:10166":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"16:7278:10003":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:11974:11670":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"17:10774:10164":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"5:1060:9515":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:5498:12727":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"16:7288:10004":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:3461:8277":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:11112:10370":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"17:13436:12089":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:11847:106":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:4904:12946":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:2792:8631":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"5:3485:9492":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:12323:1501":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"6:4737:12647":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:9250:13371":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:10088:11431":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"18:671:10340":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:944:8563":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"5:217:9481":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:29569:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"6:4280:12473":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"5:1241:8790":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:4403:9013":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:52392:9199":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"6:5480:12714":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:51017:8584":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"3:0:432":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"6:4379:12526":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:5574:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:8093:8600":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"16:2771:10109":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"1:5394:188":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:931:8778":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:2904:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"9:676:9641":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"16:6593:9997":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:6409:11275":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:50305:8408":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"8:0:2372":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"12:274:13173":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"16:7929:10012":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:8814:8808":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:47089:8478":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"6:6293:12919":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:47048:13429":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"1:9370:8988":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:1518:12232":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"16:7093:9792":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:4254:8588":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:11089:13207":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"1:3479:8659":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:2847:8554":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:8110:47244":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:11559:11591":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:46857:8407":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:12630:11849":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:11094:13209":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"17:12980:11946":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"18:690:10342":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:2481:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:46865:9393":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"1:4302:8591":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"6:4673:12618":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:2672:223":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"12:444:141":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:628:8522":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:5845:8491":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:11533:8768":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"1:6137:11268":{"crate_id":1,"path":["std","sync","mpmc","array","Channel"],"kind":"struct"},"1:12324:1091":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:12748:11891":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:50276:8395":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"1:12318:1445":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:13327:12050":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:2669:2525":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"12:834:8784":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:56972:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:11277:8645":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:1476:143":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:10159:11433":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"17:10532:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:8639:8954":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:1021:10306":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"5:1227:8788":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:2780:8626":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:1637:8568":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:3347:8730":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"1:3953:8744":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"6:586:12207":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:9283:8760":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:54141:7533":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:5695:8642":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:2839:8550":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:2564:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:11748:11618":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:9128:8529":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"16:6496:9995":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:48249:7974":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"1:6496:8758":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"1:1123:8790":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:11858:9278":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:57011:242":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:4324:8594":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"0:270:1715":{"crate_id":0,"path":["httparse","Request"],"kind":"struct"},"16:2993:10113":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:49385:13206":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"16:7267:10002":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"17:8561:10247":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:51029:8582":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"16:2727:10107":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"16:7543:9936":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:21379:9311":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:19976:7856":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:49992:8394":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"6:1701:12350":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:4317:9255":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"17:10270:13395":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:13366:12065":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:50745:8375":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:20249:8529":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"17:9303:10196":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"5:6465:11253":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"17:9671:10221":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:8055:10162":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:13580:12119":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:9836:11282":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:21252:9174":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:9280:7973":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"16:4327:10766":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:3370:8519":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"2:50607:9065":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"5:6958:9497":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"6:495:12156":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"16:4574:10983":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:50286:8397":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:20966:9105":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"5:2737:7930":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"12:320:9722":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"6:4515:12546":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"6:4239:12456":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:6567:9952":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:7736:7661":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"17:9165:61545":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:6563:9047":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:12955:11941":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:2774:8623":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:8613:8746":{"crate_id":1,"path":["std","net","socket_addr","SocketAddrV4"],"kind":"struct"},"1:8227:8719":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:11500:11577":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:20021:60067":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"6:7255:13076":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:8631:11046":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"6:7214:13067":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:2935:7680":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:5348:13442":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"12:985:8787":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"5:3430:11241":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:46793:9095":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"7:0:1491":{"crate_id":7,"path":["unwind"],"kind":"module"},"18:614:61549":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"5:1437:195":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"12:669:8780":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:11536:11586":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"18:699:10343":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:29583:9320":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"6:6269:12902":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:12485:11736":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:12316:718":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"12:1628:11239":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:4268:8590":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:49066:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"2:52772:9232":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:9526:10184":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:11199:11501":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"6:600:12215":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:7429:8327":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"0:206:1626":{"crate_id":0,"path":["httparse","Error","Token"],"kind":"variant"},"2:7038:133":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"16:3599:10848":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"6:6975:13053":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:6376:9993":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"16:5460:9839":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:47305:8503":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:13382:12069":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"12:1555:9731":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"16:2389:9803":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:12322:11724":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:8796:7651":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"6:5672:12820":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:6610:8776":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"17:9857:10236":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"16:6676:9940":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:8941:13365":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:9591:7980":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"16:5614:9850":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"0:233:1624":{"crate_id":0,"path":["httparse","Status"],"kind":"enum"},"1:4908:12950":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:50090:8398":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:49057:130":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"1:887:7973":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:50926:202":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:9555:8851":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"6:4247:12459":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:3404:8606":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:12312:723":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"17:10283:13396":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"5:4042:11244":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"6:1887:40991":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:11661:11606":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"6:4257:12465":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:1903:47334":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:9328:10302":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:21640:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:2805:8537":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:52545:10489":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:11154:8652":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"17:9577:10189":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"16:4662:10885":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:10257:13394":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:50936:208":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:50470:9060":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"5:6754:9485":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:21:665":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:8139:8716":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:51847:9238":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:918:8777":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:8719:8975":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"17:12739:11890":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:20042:60068":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"5:2981:8567":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"6:4115:12378":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"6:6998:13064":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:10825:8413":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:9574:8852":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"16:4385:10849":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:21240:9173":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:8822:61542":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"5:5823:21701":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:20706:21507":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"6:6479:13004":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"16:3566:10852":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"5:853:9484":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:359:8876":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"5:3363:7974":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:11149:11494":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:2490:132":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:12896:11924":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"6:1541:12242":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:54088:7530":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"6:1595:12279":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"0:320:1721":{"crate_id":0,"path":["httparse","Header"],"kind":"struct"},"16:4635:10720":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:8741:12935":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"5:1446:9513":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"16:5494:9841":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:52248:9219":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:54062:7528":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"18:609:13357":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:7978:13447":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"17:9458:10161":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"19:0:999":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:11763:8749":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"13:220:12143":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"18:766:10348":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:3236:9142":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:12305:1322":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"16:4519:10855":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:48443:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"5:6971:9498":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:20236:9244":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"17:11330:11538":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"5:6304:9430":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"17:13374:12068":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"16:6270:9935":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"11:36:12149":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"16:7298:10005":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"6:4761:12654":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"16:3026:10994":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:6640:13444":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"16:7942:10013":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:49154:8281":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"5:1982:9518":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:7945:8574":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"1:8083:8910":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"17:11721:11614":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"12:777:9708":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"16:2793:10111":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:49851:7991":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:5624:60039":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"16:2842:9870":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:50226:8400":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:21292:58935":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:13340:12056":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:10668:54694":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:48807:8284":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"6:1654:12323":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"5:2955:8566":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"6:1738:12362":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:46487:7966":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"5:3561:11241":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:54126:7532":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:8370:8731":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:7539:56155":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"6:4427:12529":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"18:624:61550":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:8412:8480":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"16:5761:9857":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:2917:8329":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"12:822:8783":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:11477:9336":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"16:6704:9954":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"5:4027:241":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:50792:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"5:2994:9445":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:6921:13444":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"6:6554:13043":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:12361:11734":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"6:6524:13028":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"16:4545:10836":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:8814:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:46904:8405":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:7748:13465":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:8611:191":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"17:1931:10182":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:50126:7979":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"6:4361:12515":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"6:1600:12281":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:13572:12116":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"18:96:13638":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:9637:13440":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:50987:9277":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"16:6668:10134":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:4657:8972":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"16:5596:9849":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:4262:8589":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:9522:7982":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:52178:9231":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:6709:8800":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:46784:13185":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"5:779:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:7939:16297":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:48800:8282":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:4003:8869":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"16:6345:9938":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:11853:11631":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"6:4506:12541":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:9446:13378":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:48172:7659":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:2932:7679":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"16:7343:9942":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:8868:8531":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:51815:9205":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:10863:8720":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"2:51703:10497":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:5826:8651":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:29641:9321":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"12:393:13645":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"17:11161:11497":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:2843:8552":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:1091:8787":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:5660:8640":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"17:9947:47439":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:8705:8965":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:49330:8534":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"16:2433:9804":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"12:2184:12145":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:9071:61543":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"5:5546:9461":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"0:295:1752":{"crate_id":0,"path":["httparse","Response"],"kind":"struct"},"16:6210:9988":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"5:6942:9328":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:11617:11598":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:3854:10719":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:13221:12007":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:21838:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"6:4329:12500":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"16:7567:9962":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"12:353:9721":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:11786:8952":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:11954:9747":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"6:4437:12530":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"6:4354:12513":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:910:7881":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"6:4417:12528":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"6:4778:12662":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"16:6200:9987":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:12301:1464":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:50741:8374":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"3:223:207":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:5510:12731":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:4744:8667":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:2851:8556":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"17:10796:10285":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"1:996:8785":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:50321:8405":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"12:1832:7973":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:47335:8494":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:6852:8949":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:12311:630":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"6:1668:12334":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"5:3473:8718":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:21365:9356":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:8106:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"6:4179:12429":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"6:5554:12753":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:12278:11717":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:12033:11676":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"6:567:12197":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"5:4949:8671":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:46958:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:7051:7683":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:2987:8637":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:52346:9214":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:11670:10428":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"16:2605:10156":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:8605:8283":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"0:202:1622":{"crate_id":0,"path":["httparse","Error","NewLine"],"kind":"variant"},"17:11951:11661":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"6:6302:12925":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:9515:164":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"12:1866:8567":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:4326:8298":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"17:12073:11680":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"12:1065:9717":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"5:36:9425":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"5:7088:9426":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"5:950:11241":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:11134:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:2784:8614":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"12:1836:7881":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"6:4152:12406":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:9118:61539":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"5:7071:8564":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"2:2681:7847":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:47210:8496":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:46845:9399":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:10121:10229":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:10321:10319":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:11704:13427":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:7005:8492":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"12:1859:8566":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"16:6298:9960":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:21184:9178":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:3160:8940":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"17:13279:12049":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:2321:179":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"6:4367:12517":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:11144:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:8737:8666":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"16:6186:9934":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:46361:197":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:48198:207":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"16:4786:10724":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"1:12313:720":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"16:5558:9847":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:10590:7963":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"16:3263:12135":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"17:10822:47252":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:2493:234":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:49998:8393":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:50813:8854":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"15:214:9743":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"16:5472:9840":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:12317:1448":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"16:5541:9846":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"0:195:1924":{"crate_id":0,"path":["httparse","parse_chunk_size"],"kind":"function"},"2:49877:7989":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"16:6109:9829":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:11264:13447":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"1:11607:8657":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"16:8056:9810":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:11343:11542":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"16:2261:9830":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:9442:1626":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"17:9751:10252":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:50518:9061":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:13091:11974":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"16:6619:9998":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"16:4749:10854":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:12781:11902":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"12:853:8785":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"12:119:9724":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"5:6895:8794":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"6:1608:12286":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:50453:9059":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:8596:111":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:4086:9247":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"5:7005:9451":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"6:4726:12641":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:51793:9217":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"5:782:9483":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:8666:10992":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:8217:8845":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:10854:10248":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:21200:13179":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:47139:8484":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:1672:1055":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:2905:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"17:10466:13157":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:3271:8721":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:5317:13442":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:5388:9835":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:7433:8775":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"16:6528:9996":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"5:2738:60164":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"17:487:13361":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"16:5203:10760":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:1632:8567":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:0:485":{"crate_id":2,"path":["core"],"kind":"module"},"2:39298:2531":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"17:10642:10294":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"6:1562:12257":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:20870:60012":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:8165:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"16:5703:9853":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"6:5720:12842":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:9138:219":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:49830:7983":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:49922:7986":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:5664:9852":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:12012:7863":{"crate_id":2,"path":["core","const_closure","ConstFnMutClosure"],"kind":"struct"},"6:4286:12476":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"6:6392:12956":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:49581:8003":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:47550:8730":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"17:12251:11713":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:7737:11025":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"5:2743:60158":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:48266:180":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"17:11800:11624":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"16:4721:10884":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"16:4357:10746":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"5:6763:8563":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:38124:180":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:8609:8285":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:9831:10311":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"12:1840:8563":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"5:4532:201":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"16:7249:9800":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"6:5568:12764":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:4425:9015":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:4433:9016":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:53038:9215":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:1643:12315":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:8819:140":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"17:11288:11523":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:719:16299":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"2:21805:7965":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:6759:8729":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:4272:8297":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"6:6430:12967":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:8123:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"16:6330:9991":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:4441:9018":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:8379:8652":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:49980:8390":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:51948:9218":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"17:242:13358":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:5660:12815":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:11594:11595":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"12:1085:9718":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"5:6809:9448":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:20449:9193":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:50753:8377":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:9331:8763":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:11034:11477":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:8329:9258":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"16:7388:9957":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:9605:7976":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"16:4413:10853":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:12349:11727":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"5:6928:9496":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:4672:16301":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"16:6790:10001":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:52648:9240":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:11373:11284":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"17:10455:10322":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"17:11125:11490":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"}},"external_crates":{"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}