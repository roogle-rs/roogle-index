{"root":"0:0:1629","crate_version":"0.3.66","includes_private":false,"index":{"1:13403:13445":{"id":"1:13403:13445","crate_id":1,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"4:15910:2086"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"1:49371:13418","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:1185:12065":{"id":"23:1185:12065","crate_id":23,"name":"ReaderOffset","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:1186:61786","23:1187:61787","23:1188:61788","23:1189:14294","23:1190:61789","23:1191:61790","23:1192:1518","23:1193:2730"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Ord","id":"1:2938:177","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Hash","id":"1:10507:142","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Add","id":"1:3318:9101","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AddAssign","id":"1:3349:9107","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sub","id":"1:3323:9106","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Self"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13493:60731":{"id":"1:13493:60731","crate_id":1,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"1:13015:13393","prim@char":"4:15910:2086"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13040:13410","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6103:61360":{"id":"5:6103:61360","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8359:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2847:97":{"id":"1:2847:97","crate_id":1,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2849:1967"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3255:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:740:1643":{"id":"0:740:1643","crate_id":0,"name":"PrintFmt","span":{"filename":"src/print.rs","begin":[27,0],"end":[34,1]},"visibility":"public","docs":"The styles of printing that we can print","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:741:2002","0:743:2004"],"impls":[]}},"1:13405:1932":{"id":"1:13405:1932","crate_id":1,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"1:49387:1972","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:337:1964":{"id":"0:337:1964","crate_id":0,"name":"gimli","span":{"filename":"src/symbolize/gimli.rs","begin":[1,0],"end":[462,1]},"visibility":{"restricted":{"parent":"0:44:1632","path":"::symbolize"}},"docs":"Support for symbolication using the `gimli` crate on crates.io\n\nThis is the default symbolication implementation for Rust.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"1:13474:60726":{"id":"1:13474:60726","crate_id":1,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:194":{"id":"0:194","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[127,16],"end":[127,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"print::BacktraceFmt","name":"BacktraceFmt","id":"0:161:1641","glob":false}},"25:3248:50193":{"id":"25:3248:50193","crate_id":25,"name":"FatArch","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:3249:13689","25:3250:15456","25:3251:15457","25:3252:957","25:3253:1297","25:3254:273","25:3255:61912","25:3256:13705","25:3257:2362"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:8344:14134":{"id":"1:8344:14134","crate_id":1,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8346:8501"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:4706:9020":{"id":"4:4706:9020","crate_id":4,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4707:57483","4:4708:3323","4:4709:57484","4:4710:57485"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:22836:14254":{"id":"1:22836:14254","crate_id":1,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:22837:14194","1:22838:1240","1:22839:1265"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3156:135":{"id":"1:3156:135","crate_id":1,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3158:681"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13475:60727":{"id":"1:13475:60727","crate_id":1,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"1:13015:13393","prim@char":"4:15910:2086"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"1:13045:13409","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13428:54427":{"id":"1:13428:54427","crate_id":1,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"1:13015:13393","`DoubleEndedIterator`":"1:8425:120","str::split_whitespace":"4:15916:2091","prim@char":"4:15910:2086","str::rsplit":"4:15916:2091"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"1:49401:13423","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"25:160:9141":{"id":"25:160:9141","crate_id":25,"name":"Pod","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3262:220":{"id":"1:3262:220","crate_id":1,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:2121:12083":{"id":"23:2121:12083","crate_id":23,"name":"EvaluationStorage","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:2123:61663","23:2124:61664","23:2125:205"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Reader","id":"23:1221:12062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:13397:56322":{"id":"1:13397:56322","crate_id":1,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:13449:60717":{"id":"1:13449:60717","crate_id":1,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13401:58820":{"id":"1:13401:58820","crate_id":1,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"4:15916:2091"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13496:1925":{"id":"1:13496:1925","crate_id":1,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"1:12954:3130","FromStr::Err":"1:12954:3130"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47564:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"1:12954:3130","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"1:12954:3130","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3323:9106":{"id":"1:3323:9106","crate_id":1,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3325:181","1:3326:1348"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:783:222":{"id":"5:783:222","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:1980","5:785:2804","5:786:13390"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3497:1654":{"id":"1:3497:1654","crate_id":1,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3498:578"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6106:57450":{"id":"5:6106:57450","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"4:15916:2091"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3629:9057":{"id":"1:3629:9057","crate_id":1,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3631:54657","1:3632:54658","1:3633:54659"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3255:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"4:1079:14431":{"id":"4:1079:14431","crate_id":4,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:1080:1980","4:1081:14424","4:1082:57450","4:1083:57451","4:1084:57452","4:1085:57453","4:1086:57454"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13464:60721":{"id":"1:13464:60721","crate_id":1,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"1:13015:13393","`DoubleEndedIterator`":"1:8425:120","prim@char":"4:15910:2086","str::match_indices":"4:15916:2091"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"1:49569:13430","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13040:13410","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10276:119":{"id":"1:10276:119","crate_id":1,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10277:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:6792:14453":{"id":"4:6792:14453","crate_id":4,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6793:57764","4:6794:57931"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10564:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:734:1974":{"id":"0:734:1974","crate_id":0,"name":"Wide","span":{"filename":"src/types.rs","begin":[21,4],"end":[21,19]},"visibility":"default","docs":"Wide strings typically from Windows.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u16"}}}}]}},"25:3988:9166":{"id":"25:3988:9166","crate_id":25,"name":"Section","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:3989:13689","25:3990:2480","25:3991:15475","25:3993:15467","25:3995:1864","25:3996:1297","25:3997:957","25:3998:273","25:3999:15476","25:4000:15477","25:4001:653","25:4002:899","25:4003:62023","25:4004:13705","25:4005:2362","25:4008:11887"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:8390:2370":{"id":"1:8390:2370","crate_id":1,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8392:2767","1:8394:13305","1:8395:13306"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:23429:41667":{"id":"1:23429:41667","crate_id":1,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:23430:56222","1:23431:56223","1:23432:56224"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdPartialOrd","id":"1:23424:14195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13380:2036":{"id":"1:13380:2036","crate_id":1,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6083":{"id":"5:6083","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5903:1333","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6084:61357","5:6085:13513","5:6088:61358","5:6091:61359","5:6103:61360","5:6104:61361","5:6105:14491","5:6106:57450","5:6107:57451"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:8857:2290":{"id":"1:8857:2290","crate_id":1,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3365:9110":{"id":"1:3365:9110","crate_id":1,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3367:1103"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:70:1647":{"id":"0:70:1647","crate_id":0,"name":"resolve_frame","span":{"filename":"src/symbolize/mod.rs","begin":[103,0],"end":[106,1]},"visibility":"public","docs":"Resolve a previously capture frame to a symbol, passing the symbol to the\nspecified closure.\n\nThis function performs the same function as `resolve` except that it takes a\n`Frame` as an argument instead of an address. This can allow some platform\nimplementations of backtracing to provide more accurate symbol information\nor information about inline frames for example. It's recommended to use this\nif you can.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.\n\n# Panics\n\nThis function strives to never panic, but if the `cb` provided panics then\nsome platforms will force a double panic to abort the process. Some\nplatforms use a C library which internally uses callbacks which cannot be\nunwound through, so panicking from `cb` may trigger a process abort.\n\n# Example\n\n```\nextern crate backtrace;\n\nfn main() {\n    backtrace::trace(|frame| {\n        backtrace::resolve_frame(frame, |symbol| {\n            // ...\n        });\n\n        false // only look at the top frame\n    });\n}\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["frame",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3503:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88:1635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":null}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:3382:9113":{"id":"1:3382:9113","crate_id":1,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3384:181","1:3385:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:8579:157":{"id":"1:8579:157","crate_id":1,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8580:13307","1:8581:922","1:8582:13308","1:8585:13309","1:8586:495","1:8588:13310","1:8591:13311","1:8592:13312","1:8593:13313","1:8594:13314","1:8596:13315","1:8598:13316","1:8599:13317","1:8601:841","1:8604:13318","1:8611:2701","1:8613:2569","1:8616:2568","1:8617:13319","1:8618:13320","1:8620:13321","1:8622:13322","1:8625:1301","1:8626:3089","1:8627:13323","1:8631:13324","1:8634:13325","1:8635:13326","1:8636:13327","1:8638:13328","1:8639:2308","1:8641:13329","1:8644:13330","1:8646:13331","1:8656:13332","1:8671:13333","1:8673:13334","1:8677:13335","1:8686:13336","1:8689:13337","1:8691:13338","1:8694:276","1:8701:294","1:8708:13339","1:8715:13340","1:8724:13341","1:8734:1014","1:8741:13342","1:8748:13292","1:8749:11925","1:8750:13294","1:8762:13293","1:8769:13291","1:8781:13290","1:8788:13343","1:8789:13344","1:8794:13345","1:8797:13346","1:8800:13347","1:8801:13348","1:8803:8501","1:8805:415","1:8808:13349","1:8811:997","1:8814:13350","1:8817:604","1:8820:13351","1:8823:907","1:8825:826","1:8827:792","1:8829:713","1:8831:696","1:8833:13352","1:8834:13353","1:8842:13354"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:729:1638":{"id":"0:729:1638","crate_id":0,"name":"BytesOrWideString","span":{"filename":"src/types.rs","begin":[17,0],"end":[22,1]},"visibility":"public","docs":"A platform independent representation of a string. When working with `std`\nenabled it is recommended to the convenience methods for providing\nconversions to `std` types.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:731:1972","0:734:1974"],"impls":[]}},"1:13473:60725":{"id":"1:13473:60725","crate_id":1,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10286:189":{"id":"1:10286:189","crate_id":1,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10287:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:12954:3130":{"id":"1:12954:3130","crate_id":1,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12955:126","1:12956:56533"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:7800:14567":{"id":"4:7800:14567","crate_id":4,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:7801:59920"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:8425:120":{"id":"1:8425:120","crate_id":1,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8426:13299","1:8427:13300","1:8428:13301","1:8429:13302","1:8433:13303","1:8436:13304"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"4:6866:9088":{"id":"4:6866:9088","crate_id":4,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6867:13562"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3345:9104":{"id":"1:3345:9104","crate_id":1,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3346:181","1:3347:913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:23096:14203":{"id":"1:23096:14203","crate_id":1,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"1:23733:14033","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:23087:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13452:60718":{"id":"1:13452:60718","crate_id":1,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13040:13410","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13504:14433":{"id":"1:13504:14433","crate_id":1,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"4:15910:2086"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"1:49709:13433","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3698:9124":{"id":"1:3698:9124","crate_id":1,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3255:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"1:3629:9057","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:10552:14113":{"id":"1:10552:14113","crate_id":1,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10553:146","1:10554:18173","1:10555:56415"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:5464:9163":{"id":"25:5464:9163","crate_id":25,"name":"ObjectSymbol","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5466:753","25:5467:61851","25:5468:899","25:5469:268","25:5470:1297","25:5471:782","25:5472:2515","25:5473:11886","25:5474:13716","25:5475:13717","25:5476:62095","25:5477:62096","25:5478:14004","25:5479:62097","25:5480:62098","25:5481:653"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5487:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:118:1637":{"id":"0:118:1637","crate_id":0,"name":"types","span":{"filename":"src/types.rs","begin":[1,0],"end":[83,1]},"visibility":"crate","docs":"Platform dependent types.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:729:1638"],"is_stripped":true}},"4:5740:9083":{"id":"4:5740:9083","crate_id":4,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5741:8973","4:5742:13558"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3562:9056":{"id":"1:3562:9056","crate_id":1,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3564:754"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3255:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"1:3558:9055","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:86:1633":{"id":"0:86:1633","crate_id":0,"name":"resolve_frame_unsynchronized","span":{"filename":"src/symbolize/mod.rs","begin":[174,0],"end":[179,1]},"visibility":"public","docs":"Same as `resolve_frame`, only unsafe as it's unsynchronized.\n\nThis function does not have synchronization guarantees but is available\nwhen the `std` feature of this crate isn't compiled in. See the\n`resolve_frame` function for more documentation and examples.\n\n# Panics\n\nSee information on `resolve_frame` for caveats on `cb` panicking.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["frame",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3503:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88:1635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":null}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"1:2938:177":{"id":"1:2938:177","crate_id":1,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2939:415","1:2940:13292","1:2941:11925","1:2942:13297"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2948:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13393:17359":{"id":"1:13393:17359","crate_id":1,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"1:47437:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:14127:141":{"id":"1:14127:141","crate_id":1,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:14128:277","1:14129:518","1:14130:280","1:14131:1079"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:4631:9018":{"id":"4:4631:9018","crate_id":4,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4632:2477","4:4633:59975","4:4635:59976","4:4636:59977","4:4637:9002","4:4638:19008","4:4639:19007","4:4641:59978","4:4642:13328","4:4643:1932","4:4644:13314","4:4646:3089"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:2657:11843":{"id":"25:2657:11843","crate_id":25,"name":"Rela","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2658:13689","25:2659:13690","25:2660:2480","25:2661:11790","25:2662:11791","25:2663:11792","25:2664:61900","25:2665:15600"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3159:228":{"id":"1:3159:228","crate_id":1,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3161:127","1:3162:1409"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:5794:14425":{"id":"4:5794:14425","crate_id":4,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5795:58039"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10564:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3258:218":{"id":"1:3258:218","crate_id":1,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3715:137":{"id":"1:3715:137","crate_id":1,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3717:687"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"1:3710:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:2576:127":{"id":"4:2576:127","crate_id":4,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:2577:56040","4:2579:1629","4:2580:58100","4:2581:58101","4:2582:57948"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"1:10276:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:236:1631":{"id":"0:236:1631","crate_id":0,"name":"Frame","span":{"filename":"src/backtrace/mod.rs","begin":[76,0],"end":[78,1]},"visibility":"public","docs":"A trait representing one frame of a backtrace, yielded to the `trace`\nfunction of this crate.\n\nThe tracing function's closure will be yielded frames, and the frame is\nvirtually dispatched as the underlying implementation is not always known\nuntil runtime.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:31":{"id":"0:31","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[116,0],"end":[116,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::symbolize::resolve_frame_unsynchronized","name":"resolve_frame_unsynchronized","id":"0:86:1633","glob":false}},"0:776:1648":{"id":"0:776:1648","crate_id":0,"name":"capture","span":{"filename":"src/capture.rs","begin":[1,0],"end":[555,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:864:1649","0:869:1650","0:884:1651"],"is_stripped":true}},"4:6795:9092":{"id":"4:6795:9092","crate_id":4,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6796:16755"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10564:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3408:9119":{"id":"1:3408:9119","crate_id":1,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3410:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3250:211":{"id":"1:3250:211","crate_id":1,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:457:12068":{"id":"23:457:12068","crate_id":23,"name":"UnwindSection","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:459:16014","23:460:13187","23:462:61801","23:463:61802","23:465:61803","23:467:61804","23:469:61805"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Reader","id":"23:1221:12062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"_UnwindSectionPrivate","id":"23:447:12067","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:4764:2289":{"id":"1:4764:2289","crate_id":1,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4765:13307","1:4766:56774","1:4767:13309"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:6864:9086":{"id":"4:6864:9086","crate_id":4,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6865:2606"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13484:58836":{"id":"1:13484:58836","crate_id":1,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"4:15910:2086","self::pattern":"1:13015:13393"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13040:13410","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:22:1630":{"id":"0:22:1630","crate_id":0,"name":"trace_unsynchronized","span":{"filename":"src/backtrace/mod.rs","begin":[65,0],"end":[67,1]},"visibility":"public","docs":"Same as `trace`, only unsafe as it's unsynchronized.\n\nThis function does not have synchronization guarantees but is available\nwhen the `std` feature of this crate isn't compiled in. See the `trace`\nfunction for more documentation and examples.\n\n# Panics\n\nSee information on `trace` for caveats on `cb` panicking.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3503:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":{"kind":"primitive","inner":"bool"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"25:27:2480":{"id":"25:27:2480","crate_id":25,"name":"Endian","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:28:62053","25:29:62054","25:30:13696","25:31:13695","25:32:61669","25:33:61670","25:34:61671","25:35:61673","25:36:61674","25:37:61675","25:38:62055","25:40:62056","25:42:62057","25:44:62058","25:46:62059","25:48:62060","25:50:54716","25:51:54717","25:52:54718","25:53:54722","25:54:54723","25:55:54724","25:56:62061","25:58:62062","25:60:62063","25:62:62064","25:64:62065","25:66:62066"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"1:3228:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3318:9101":{"id":"1:3318:9101","crate_id":1,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3320:181","1:3321:265"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3416:9121":{"id":"1:3416:9121","crate_id":1,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3418:1227"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13743:150":{"id":"1:13743:150","crate_id":1,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:13744:181","1:13745:150","1:13746:767"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13434:58830":{"id":"1:13434:58830","crate_id":1,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"str::split":"4:15916:2091","self::pattern":"1:13015:13393","`DoubleEndedIterator`":"1:8425:120","prim@char":"4:15910:2086"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"1:49419:13421","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13040:13410","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13455:2114":{"id":"1:13455:2114","crate_id":1,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"prim@char":"4:15910:2086","`DoubleEndedIterator`":"1:8425:120","str::matches":"4:15916:2091","self::pattern":"1:13015:13393"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"1:49605:13427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8450:2369":{"id":"1:8450:2369","crate_id":1,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8451:793","1:8452:2036"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6105:14491":{"id":"5:6105:14491","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8359:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:62:12057":{"id":"23:62:12057","crate_id":23,"name":"Endianity","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:63:13696","23:64:13695","23:65:61669","23:67:61670","23:69:61671","23:71:61672","23:73:61673","23:74:61674","23:75:61675","23:76:61676","23:77:61677","23:78:54716","23:79:54717","23:80:54718"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Default","id":"1:3228:115","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13387:1944":{"id":"1:13387:1944","crate_id":1,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"1:12486:1937"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13424:13304":{"id":"1:13424:13304","crate_id":1,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"1:47437:176","self::pattern":"1:13015:13393","prim@char":"4:15910:2086"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13040:13410","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:14201:2303":{"id":"1:14201:2303","crate_id":1,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:14202:2598","1:14203:56237","1:14204:56238","1:14205:56239","1:14206:56240","1:14207:56241","1:14208:13328"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:20:1645":{"id":"0:20:1645","crate_id":0,"name":"trace","span":{"filename":"src/backtrace/mod.rs","begin":[51,0],"end":[54,1]},"visibility":"public","docs":"Inspects the current call-stack, passing all active frames into the closure\nprovided to calculate a stack trace.\n\nThis function is the workhorse of this library in calculating the stack\ntraces for a program. The given closure `cb` is yielded instances of a\n`Frame` which represent information about that call frame on the stack. The\nclosure is yielded frames in a top-down fashion (most recently called\nfunctions first).\n\nThe closure's return value is an indication of whether the backtrace should\ncontinue. A return value of `false` will terminate the backtrace and return\nimmediately.\n\nOnce a `Frame` is acquired you will likely want to call `backtrace::resolve`\nto convert the `ip` (instruction pointer) or symbol address to a `Symbol`\nthrough which the name and/or filename/line number can be learned.\n\nNote that this is a relatively low-level function and if you'd like to, for\nexample, capture a backtrace to be inspected later, then the `Backtrace`\ntype may be more appropriate.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.\n\n# Panics\n\nThis function strives to never panic, but if the `cb` provided panics then\nsome platforms will force a double panic to abort the process. Some\nplatforms use a C library which internally uses callbacks which cannot be\nunwound through, so panicking from `cb` may trigger a process abort.\n\n# Example\n\n```\nextern crate backtrace;\n\nfn main() {\n    backtrace::trace(|frame| {\n        // ...\n\n        true // continue the backtrace\n    });\n}\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3503:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Frame","id":"0:236:1631","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":{"kind":"primitive","inner":"bool"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:741:2002":{"id":"0:741:2002","crate_id":0,"name":"Short","span":{"filename":"src/print.rs","begin":[29,4],"end":[29,9]},"visibility":"default","docs":"Prints a terser backtrace which ideally only contains relevant information","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"1:13481:2784":{"id":"1:13481:2784","crate_id":1,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"1:13015:13393","prim@char":"4:15910:2086"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13034:13411":{"id":"1:13034:13411","crate_id":1,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:13036:14096","1:13037:922","1:13038:54675","1:13039:54676"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3349:9107":{"id":"1:3349:9107","crate_id":1,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3351:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:9236:2850":{"id":"1:9236:2850","crate_id":1,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:5780:9081":{"id":"4:5780:9081","crate_id":4,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5781:13544","4:5782:13545","4:5783:13546","4:5784:13547"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:194:12063":{"id":"23:194:12063","crate_id":23,"name":"ArrayLike","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:195:13307"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"23:189:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"25:220:9149":{"id":"25:220:9149","crate_id":25,"name":"ReadRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:222:793","25:223:61864","25:224:61865","25:225:2724","25:226:2477","25:229:13540","25:231:54430","25:234:61866"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:736:1533":{"id":"0:736:1533","crate_id":0,"name":"0","span":{"filename":"src/types.rs","begin":[21,9],"end":[21,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u16"}}}}},"1:23048:41648":{"id":"1:23048:41648","crate_id":1,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:23049:16293","1:23050:56585","1:23051:56586"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:23041:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13408:3175":{"id":"1:13408:3175","crate_id":1,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"1:49655:3147","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13409:60714":{"id":"1:13409:60714","crate_id":1,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"1:49665:13420","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3147:75":{"id":"1:3147:75","crate_id":1,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3149:305"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3255:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:13499:57452":{"id":"1:13499:57452","crate_id":1,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"25:5458:9164":{"id":"25:5458:9164","crate_id":25,"name":"ObjectSymbolTable","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5460:1635","25:5461:9188","25:5462:2033","25:5463:61917"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5487:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"25:3537:14971":{"id":"25:3537:14971","crate_id":25,"name":"MachHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:3538:13689","25:3539:2480","25:3540:9165","25:3541:9166","25:3542:50194","25:3543:13691","25:3544:13696","25:3545:13695","25:3546:8965","25:3547:15456","25:3548:15457","25:3549:15460","25:3550:15351","25:3551:15461","25:3552:653","25:3553:1925","25:3556:13692","25:3557:2694","25:3558:62018","25:3561:15427"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3756:2294":{"id":"1:3756:2294","crate_id":1,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3255:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:3793:2295":{"id":"1:3793:2295","crate_id":1,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3339:9105":{"id":"1:3339:9105","crate_id":1,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3341:181","1:3342:1102"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:770":{"id":"0:770","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[133,43],"end":[133,57]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::capture::BacktraceFrame","name":"BacktraceFrame","id":"0:869:1650","glob":false}},"1:13395:56321":{"id":"1:13395:56321","crate_id":1,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"25:5450:9160":{"id":"25:5450:9160","crate_id":25,"name":"ObjectComdat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5452:9184","25:5453:782","25:5454:2034","25:5455:61851","25:5456:899","25:5457:2512"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5487:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13404:14103":{"id":"1:13404:14103","crate_id":1,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"4:15910:2086"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"1:49377:13417","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"25:4250:50194":{"id":"25:4250:50194","crate_id":25,"name":"Nlist","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:4251:13689","25:4252:2480","25:4253:15588","25:4254:2733","25:4255:15589","25:4256:15338","25:4257:15590","25:4258:899","25:4261:61999","25:4262:13716","25:4263:13717","25:4264:62000"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13461:60720":{"id":"1:13461:60720","crate_id":1,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"`DoubleEndedIterator`":"1:8425:120","str::rmatch_indices":"4:15916:2091","prim@char":"4:15910:2086","self::pattern":"1:13015:13393"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"1:49551:13429","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"25:5430:9161":{"id":"25:5430:9161","crate_id":25,"name":"ObjectSection","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5432:15391","25:5433:753","25:5434:268","25:5435:1297","25:5436:273","25:5437:13705","25:5438:2362","25:5439:9159","25:5440:62026","25:5441:62027","25:5442:62029","25:5443:61851","25:5444:899","25:5445:62028","25:5446:62023","25:5447:782","25:5448:11887","25:5449:653"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5487:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:22710:14253":{"id":"1:22710:14253","crate_id":1,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:22711:14194","1:22712:56656","1:22713:57151","1:22714:57152","1:22715:57153","1:22716:6372","1:22717:57154","1:22718:57155","1:22719:57156","1:22720:57157","1:22721:57158","1:22722:57159","1:22723:57160","1:22724:57161","1:22725:18508","1:22726:57162","1:22727:56696","1:22728:18836","1:22729:56223","1:22730:56222","1:22731:56224","1:22732:56657","1:22733:56658","1:22734:56659","1:22735:56660"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22812:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"4:6464:9093":{"id":"4:6464:9093","crate_id":4,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6465:13570","4:6466:3486","4:6467:13571","4:6468:13572","4:6469:13573","4:6470:1673"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10564:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3255:2368":{"id":"1:3255:2368","crate_id":1,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3540:2296":{"id":"1:3540:2296","crate_id":1,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3542:237","1:3543:206","1:3544:56134"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:5724:9080":{"id":"4:5724:9080","crate_id":4,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5725:13540","4:5726:13541","4:5727:13542","4:5728:13543"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:5837:13838":{"id":"5:5837:13838","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5839:181","5:5840:27773"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13407:18723":{"id":"1:13407:18723","crate_id":1,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"4:15916:2091"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"1:49684:13435","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5790:9079":{"id":"4:5790:9079","crate_id":4,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5791:13539"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:23424:14195":{"id":"1:23424:14195","crate_id":1,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:23425:1263","1:23426:1262","1:23427:1260","1:23428:1259"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdPartialEq","id":"1:22836:14254","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6091:61359":{"id":"5:6091:61359","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8359:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13406:18725":{"id":"1:13406:18725","crate_id":1,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"4:15916:2091"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"1:49675:13419","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13487:60729":{"id":"1:13487:60729","crate_id":1,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"4:15910:2086","self::pattern":"1:13015:13393"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13040:13410","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13469:60723":{"id":"1:13469:60723","crate_id":1,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:438:12066":{"id":"23:438:12066","crate_id":23,"name":"UnwindOffset","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:440:2708"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":{"kind":"primitive","inner":"usize"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReaderOffset","id":"23:1185:12065","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"1:2907:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13443:58832":{"id":"1:13443:58832","crate_id":1,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"1:13015:13393","str::rsplitn":"4:15916:2091","prim@char":"4:15910:2086"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"1:49505:13426","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:756":{"id":"0:756","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[131,8],"end":[131,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::backtrace::trace","name":"trace","id":"0:20:1645","glob":false}},"5:6084:61357":{"id":"5:6084:61357","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1658","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8097:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1658","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8097:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"25:2135:2671":{"id":"25:2135:2671","crate_id":25,"name":"SectionHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2136:2676","25:2137:13689","25:2138:2480","25:2139:8573","25:2140:8574","25:2141:2713","25:2142:8575","25:2143:8576","25:2144:8577","25:2145:8578","25:2146:8579","25:2147:8580","25:2148:8581","25:2149:899","25:2152:13705","25:2153:2362","25:2156:13706","25:2160:2696","25:2163:2033","25:2166:13707","25:2169:13708","25:2172:11827","25:2175:2732","25:2178:3613","25:2181:13709","25:2184:715","25:2187:13710","25:2190:9740","25:2193:13711","25:2196:13712","25:2199:13713"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"4:6442:9092":{"id":"4:6442:9092","crate_id":4,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6443:8583","4:6444:8584","4:6445:13564","4:6446:13565","4:6448:13566","4:6450:13567","4:6451:13568","4:6453:13569"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10564:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13471:60724":{"id":"1:13471:60724","crate_id":1,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3558:9055":{"id":"1:3558:9055","crate_id":1,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3560:181","1:3561:753"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3255:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:2902:183":{"id":"1:2902:183","crate_id":1,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2904:604","1:2905:907"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3255:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"4:6690:9082":{"id":"4:6690:9082","crate_id":4,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6691:58050","4:6692:8894","4:6693:8895","4:6694:8897","4:6695:8896","4:6696:8898","4:6697:8899","4:6698:8901","4:6699:2709","4:6700:8904","4:6701:8905","4:6702:8906","4:6703:8907","4:6704:8908","4:6705:8909","4:6706:8902","4:6707:8903"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:22799:14252":{"id":"1:22799:14252","crate_id":1,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:22800:56656","1:22801:1220","1:22802:1221","1:22803:56657","1:22804:56658","1:22805:56659","1:22806:56660","1:22807:56661","1:22808:56662","1:22809:56663"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22812:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:2872:104":{"id":"1:2872:104","crate_id":1,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2873:408","1:2874:410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3486:2240":{"id":"1:3486:2240","crate_id":1,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3487:545"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"1:3473:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3377:9112":{"id":"1:3377:9112","crate_id":1,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3379:181","1:3380:351"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:114:1639":{"id":"0:114:1639","crate_id":0,"name":"clear_symbol_cache","span":{"filename":"src/symbolize/mod.rs","begin":[459,0],"end":[464,1]},"visibility":"public","docs":"Attempt to reclaim that cached memory used to symbolicate addresses.\n\nThis method will attempt to release any global data structures that have\notherwise been cached globally or in the thread which typically represent\nparsed DWARF information or similar.\n\n# Caveats\n\nWhile this function is always available it doesn't actually do anything on\nmost implementations. Libraries like dbghelp or libbacktrace do not provide\nfacilities to deallocate state and manage the allocated memory. For now the\n`gimli-symbolize` feature of this crate is the only feature where this\nfunction has any effect.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:10517:146":{"id":"1:10517:146","crate_id":1,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10518:652","1:10519:1951","1:10520:54715","1:10521:54716","1:10522:54717","1:10523:54718","1:10524:54719","1:10525:54720","1:10526:54721","1:10527:54722","1:10528:54723","1:10529:54724","1:10530:54725","1:10531:54726","1:10532:54727","1:10533:1524"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:2877:2669":{"id":"25:2877:2669","crate_id":25,"name":"CompressionHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2878:13689","25:2879:2480","25:2880:2715","25:2881:2716","25:2882:8810"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:7905:14200":{"id":"1:7905:14200","crate_id":1,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7906:57258","1:7907:57259","1:7908:57256","1:7909:57254","1:7910:57260","1:7911:57257","1:7912:57255"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"1:2948:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3392:9116":{"id":"1:3392:9116","crate_id":1,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3394:181","1:3395:1226"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:10":{"id":"0:10","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[113,48],"end":[113,53]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::backtrace::Frame","name":"Frame","id":"0:236:1631","glob":false}},"0:763":{"id":"0:763","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[132,43],"end":[132,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::symbolize::resolve_frame","name":"resolve_frame","id":"0:70:1647","glob":false}},"0:175:1642":{"id":"0:175:1642","crate_id":0,"name":"BacktraceFrameFmt","span":{"filename":"src/print.rs","begin":[94,0],"end":[97,1]},"visibility":"public","docs":"A formatter for just one frame of a backtrace.\n\nThis type is created by the `BacktraceFmt::frame` function.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'fmt","kind":{"lifetime":{"outlives":[]}}},{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:731:1972":{"id":"0:731:1972","crate_id":0,"name":"Bytes","span":{"filename":"src/types.rs","begin":[19,4],"end":[19,19]},"visibility":"default","docs":"A slice, typically provided on Unix platforms.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]}},"25:2431:2673":{"id":"25:2431:2673","crate_id":25,"name":"Sym","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2432:13689","25:2433:2480","25:2434:2710","25:2435:8565","25:2436:13714","25:2437:2702","25:2438:8566","25:2439:13715","25:2440:2705","25:2441:2707","25:2442:2709","25:2443:899","25:2446:13716","25:2447:13717"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:760":{"id":"0:760","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[132,34],"end":[132,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::symbolize::resolve","name":"resolve","id":"0:68:1646","glob":false}},"1:13381:18506":{"id":"1:13381:18506","crate_id":1,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8864:14199":{"id":"1:8864:14199","crate_id":1,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"1:7905:14200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:2907:124":{"id":"1:2907:124","crate_id":1,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13440:60716":{"id":"1:13440:60716","crate_id":1,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"prim@char":"4:15910:2086","str::split":"4:15916:2091","str::split_terminator":"4:15916:2091","self::pattern":"1:13015:13393"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"1:49469:13422","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13040:13410","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"27:602:15052":{"id":"27:602:15052","crate_id":27,"name":"ResetPolicy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["27:603:62133"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3404:9118":{"id":"1:3404:9118","crate_id":1,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3406:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13458:60719":{"id":"1:13458:60719","crate_id":1,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"prim@char":"4:15910:2086","self::pattern":"1:13015:13393","str::matches":"4:15916:2091","`DoubleEndedIterator`":"1:8425:120"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"1:49623:13428","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13040:13410","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13446:58834":{"id":"1:13446:58834","crate_id":1,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"str::splitn":"4:15916:2091","prim@char":"4:15910:2086","self::pattern":"1:13015:13393"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"1:49523:13425","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13040:13410","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:4991:14434":{"id":"4:4991:14434","crate_id":4,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4992:3122","4:4993:60177"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:10290:13366":{"id":"1:10290:13366","crate_id":1,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10291:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:884:1651":{"id":"0:884:1651","crate_id":0,"name":"BacktraceSymbol","span":{"filename":"src/capture.rs","begin":[103,0],"end":[109,1]},"visibility":"public","docs":"Captured version of a symbol in a backtrace.\n\nThis type is returned as a list from `BacktraceFrame::symbols` and\nrepresents the metadata for a symbol in a backtrace.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"1:13437:60715":{"id":"1:13437:60715","crate_id":1,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"str::split":"4:15916:2091","self::pattern":"1:13015:13393","`DoubleEndedIterator`":"1:8425:120","str::rsplit_terminator":"4:15916:2091","prim@char":"4:15910:2086"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"1:49451:13424","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13384:60711":{"id":"1:13384:60711","crate_id":1,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"4:15916:2091"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13410:18448":{"id":"1:13410:18448","crate_id":1,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"1:49693:13431","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8381:151":{"id":"1:8381:151","crate_id":1,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8382:13307","1:8383:9062","1:8384:768"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:4620:15025":{"id":"25:4620:15025","crate_id":25,"name":"ImageNtHeaders","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:4621:50274","25:4622:15021","25:4623:13691","25:4624:62119","25:4625:15752","25:4626:15753","25:4627:15754","25:4628:1925","25:4631:2512","25:4634:2033"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13045:13409":{"id":"1:13045:13409","crate_id":1,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13040:13410","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"25:2839:11829":{"id":"25:2839:11829","crate_id":25,"name":"Dyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2840:13689","25:2841:2480","25:2842:11793","25:2843:11794","25:2844:62007","25:2845:62008","25:2846:62009","25:2847:2201","25:2850:62010"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"25:3777:9165":{"id":"25:3777:9165","crate_id":25,"name":"Segment","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:3778:13689","25:3779:2480","25:3780:9166","25:3781:61907","25:3782:8601","25:3783:15464","25:3784:15467","25:3786:15468","25:3787:15469","25:3788:15470","25:3789:15471","25:3790:15336","25:3791:15337","25:3792:15472","25:3793:653","25:3794:899","25:3795:13705","25:3796:2362","25:3799:2512"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13399:14513":{"id":"1:13399:14513","crate_id":1,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"4:15916:2091","str::slice_mut_unchecked":"4:15916:2091","crate::ops::Index":"1:3558:9055"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:3361:9108":{"id":"1:3361:9108","crate_id":1,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3363:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13505:60733":{"id":"1:13505:60733","crate_id":1,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"4:15910:2086"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"1:49718:13434","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13379:793":{"id":"1:13379:793","crate_id":1,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"4:15910:2086"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6107:57451":{"id":"5:6107:57451","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"4:15916:2091"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10284:13364":{"id":"1:10284:13364","crate_id":1,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10285:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:2946:11840":{"id":"25:2946:11840","crate_id":25,"name":"NoteHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2947:2480","25:2948:11814","25:2949:11815","25:2950:2733"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:1664:12072":{"id":"23:1664:12072","crate_id":23,"name":"LineProgram","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:1667:2714","23:1668:61660"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Offset","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"kind":"resolved_path","inner":{"name":"Reader","id":"23:1221:12062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Reader","id":"23:1221:12062","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Offset","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"Offset"}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Offset"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReaderOffset","id":"23:1185:12065","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:13467:60722":{"id":"1:13467:60722","crate_id":1,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13040:13410":{"id":"1:13040:13410","crate_id":1,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:13042:13299","1:13043:56643","1:13044:56644"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"1:13034:13411","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13378":{"id":"1:13378","crate_id":1,"name":null,"span":null,"visibility":{"restricted":{"parent":"1:12475:1333","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["1:13379:793","1:13380:2036","1:13381:18506","1:13382:60710","1:13384:60711","1:13387:1944","1:13388:60712","1:13389:304","1:13390:17371","1:13391:1670","1:13393:17359","1:13395:56321","1:13397:56322","1:13399:14513","1:13400:60713","1:13401:58820","1:13402:58821","1:13403:13445","1:13404:14103","1:13405:1932","1:13406:18725","1:13407:18723","1:13408:3175","1:13409:60714","1:13410:18448","1:13411:54659","1:13414:2718","1:13417:58473","1:13420:13339","1:13424:13304","1:13428:54427","1:13431:18724","1:13434:58830","1:13437:60715","1:13440:60716","1:13443:58832","1:13446:58834","1:13449:60717","1:13452:60718","1:13455:2114","1:13458:60719","1:13461:60720","1:13464:60721","1:13467:60722","1:13469:60723","1:13471:60724","1:13473:60725","1:13474:60726","1:13475:60727","1:13478:60728","1:13481:2784","1:13484:58836","1:13487:60729","1:13490:60730","1:13493:60731","1:13496:1925","1:13498:14424","1:13499:57452","1:13500:57453","1:13501:57454","1:13502:60732","1:13504:14433","1:13505:60733"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6085:13513":{"id":"5:6085:13513","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8359:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:68:1646":{"id":"0:68:1646","crate_id":0,"name":"resolve","span":{"filename":"src/symbolize/mod.rs","begin":[61,0],"end":[64,1]},"visibility":"public","docs":"Resolve an address to a symbol, passing the symbol to the specified\nclosure.\n\nThis function will look up the given address in areas such as the local\nsymbol table, dynamic symbol table, or DWARF debug info (depending on the\nactivated implementation) to find symbols to yield.\n\nThe closure may not be called if resolution could not be performed, and it\nalso may be called more than once in the case of inlined functions.\n\nSymbols yielded represent the execution at the specified `addr`, returning\nfile/line pairs for that address (if available).\n\nNote that if you have a `Frame` then it's recommended to use the\n`resolve_frame` function instead of this one.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.\n\n# Panics\n\nThis function strives to never panic, but if the `cb` provided panics then\nsome platforms will force a double panic to abort the process. Some\nplatforms use a C library which internally uses callbacks which cannot be\nunwound through, so panicking from `cb` may trigger a process abort.\n\n# Example\n\n```\nextern crate backtrace;\n\nfn main() {\n    backtrace::trace(|frame| {\n        let ip = frame.ip();\n\n        backtrace::resolve(ip, |symbol| {\n            // ...\n        });\n\n        false // only look at the top frame\n    });\n}\n```","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["addr",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"c_void","id":"1:5561:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3503:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88:1635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":null}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:13390:17371":{"id":"1:13390:17371","crate_id":1,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"4:15927:2100"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13388:60712":{"id":"1:13388:60712","crate_id":1,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:2948:184":{"id":"1:2948:184","crate_id":1,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2950:997","1:2951:826","1:2952:792","1:2953:713","1:2954:696"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3255:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"1:2902:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:267":{"id":"0:267","crate_id":0,"name":null,"span":{"filename":"src/backtrace/libunwind.rs","begin":[125,4],"end":[125,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::_Unwind_Reason_Code","name":"_Unwind_Reason_Code","id":"0:271:2421","glob":true}},"4:5802:14426":{"id":"4:5802:14426","crate_id":4,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5803:8973"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:5518:9158":{"id":"25:5518:9158","crate_id":25,"name":"SymbolMapEntry","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5519:268"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:1652:2670":{"id":"25:1652:2670","crate_id":25,"name":"FileHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:1653:13689","25:1654:13690","25:1655:2480","25:1656:11841","25:1657:2671","25:1658:2669","25:1659:11840","25:1660:11829","25:1661:2673","25:1662:11842","25:1663:11843","25:1664:13691","25:1665:8551","25:1666:8552","25:1667:8553","25:1668:8554","25:1669:8555","25:1670:8556","25:1671:8557","25:1672:8558","25:1673:8559","25:1674:8560","25:1675:8561","25:1676:8562","25:1677:8563","25:1678:8564","25:1679:1925","25:1682:13692","25:1683:13693","25:1684:13694","25:1685:13695","25:1686:13696","25:1687:2694","25:1688:13697","25:1691:13698","25:1694:13699","25:1697:13700","25:1700:13701","25:1703:13702","25:1706:13703","25:1709:2512","25:1712:13704"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:767":{"id":"0:767","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[133,32],"end":[133,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::capture::Backtrace","name":"Backtrace","id":"0:864:1649","glob":false}},"4:5658:1985":{"id":"4:5658:1985","crate_id":4,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5659:1986","4:5660:1944"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10564:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:12462:13582":{"id":"1:12462:13582","crate_id":1,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12463:13307","1:12464:56061"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:266:2410":{"id":"0:266:2410","crate_id":0,"name":"uw","span":{"filename":"src/backtrace/libunwind.rs","begin":[124,0],"end":[124,6]},"visibility":{"restricted":{"parent":"0:240:1844","path":"::backtrace::libunwind"}},"docs":"Unwind library interface used for backtraces\n\nNote that dead code is allowed as here are just bindings\niOS doesn't use all of them it but adding more\nplatform-specific configs pollutes the code too much","links":{},"attrs":["#[allow(non_camel_case_types)]","#[allow(non_snake_case)]","#[allow(dead_code)]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:267"],"is_stripped":true}},"1:22763:14191":{"id":"1:22763:14191","crate_id":1,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:22764:14194","1:22765:56656","1:22766:1220","1:22767:1221","1:22768:6372","1:22769:56693","1:22770:18679","1:22771:56694","1:22772:56695","1:22773:56696","1:22774:56657","1:22775:56658","1:22776:56659","1:22777:56660","1:22778:56661","1:22779:56662","1:22780:56663"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22812:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"25:2631:11842":{"id":"25:2631:11842","crate_id":25,"name":"Rel","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:2632:13689","25:2633:13690","25:2634:2480","25:2635:11790","25:2636:11791","25:2637:61900","25:2638:15600"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13025:13408":{"id":"1:13025:13408","crate_id":1,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:13027:13411","1:13028:57216","1:13029:57217","1:13030:57218","1:13031:57220","1:13032:57219","1:13033:57221"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:733:1533":{"id":"0:733:1533","crate_id":0,"name":"0","span":{"filename":"src/types.rs","begin":[19,10],"end":[19,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},"1:13728:138":{"id":"1:13728:138","crate_id":1,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:13729:181","1:13730:1013"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3259:217":{"id":"1:3259:217","crate_id":1,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:869:1650":{"id":"0:869:1650","crate_id":0,"name":"BacktraceFrame","span":{"filename":"src/capture.rs","begin":[49,0],"end":[52,1]},"visibility":"public","docs":"Captured version of a frame in a backtrace.\n\nThis type is returned as a list from `Backtrace::frames` and represents one\nstack frame in a captured backtrace.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"25:5419:9162":{"id":"25:5419:9162","crate_id":25,"name":"ObjectSegment","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5421:268","25:5422:1297","25:5423:273","25:5424:13705","25:5425:2362","25:5426:9159","25:5427:61851","25:5428:899","25:5429:653"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5487:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:2991:9166":{"id":"23:2991:9166","crate_id":23,"name":"Section","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:2993:2514","23:2994:2722","23:2995:61697","23:2996:814","23:2999:13107","23:3000:61698","23:3001:54426"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"1:3156:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"4:4713:14470":{"id":"4:4713:14470","crate_id":4,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4714:57766","4:4715:57767","4:4716:57768","4:4718:14469","4:4719:57769","4:4721:54427","4:4722:3175"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"4:4631:9018","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:773":{"id":"0:773","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[133,59],"end":[133,74]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::capture::BacktraceSymbol","name":"BacktraceSymbol","id":"0:884:1651","glob":false}},"1:3721:9126":{"id":"1:3721:9126","crate_id":1,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3723:55493"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13498:14424":{"id":"1:13498:14424","crate_id":1,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:88:1635":{"id":"0:88:1635","crate_id":0,"name":"Symbol","span":{"filename":"src/symbolize/mod.rs","begin":[190,0],"end":[195,1]},"visibility":"public","docs":"A trait representing the resolution of a symbol in a file.\n\nThis trait is yielded as a trait object to the closure given to the\n`backtrace::resolve` function, and it is virtually dispatched as it's\nunknown which implementation is behind it.\n\nA symbol can give contextual information about a function, for example the\nname, filename, line number, precise address, etc. Not all information is\nalways available in a symbol, however, so all methods return an `Option`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"4:9342:14447":{"id":"4:9342:14447","crate_id":4,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:9343:59865","4:9344:59866","4:9345:59867","4:9346:59868","4:9347:59869","4:9348:41983","4:9349:59864"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10564:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3085:3197":{"id":"1:3085:3197","crate_id":1,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:3084:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13389:304":{"id":"1:13389:304","crate_id":1,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"4:15916:2091","`u8`":"4:15927:2100"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3398:9117":{"id":"1:3398:9117","crate_id":1,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3400:181","1:3401:1229"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:10507:142":{"id":"1:10507:142","crate_id":1,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10508:715","1:10510:18483"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3412:9120":{"id":"1:3412:9120","crate_id":1,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3414:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:6964:9085":{"id":"4:6964:9085","crate_id":4,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6965:13561"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:23733:14033":{"id":"1:23733:14033","crate_id":1,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:23734:14194"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:23729:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"1:3260:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3228:115":{"id":"1:3228:115","crate_id":1,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3229:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:864:1649":{"id":"0:864:1649","crate_id":0,"name":"Backtrace","span":{"filename":"src/capture.rs","begin":[26,0],"end":[32,1]},"visibility":"public","docs":"Representation of an owned and self-contained backtrace.\n\nThis structure can be used to capture a backtrace at various points in a\nprogram and later used to inspect what the backtrace was at that time.\n\n`Backtrace` supports pretty-printing of backtraces through its `Debug`\nimplementation.\n\n# Required features\n\nThis function requires the `std` feature of the `backtrace` crate to be\nenabled, and the `std` feature is enabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"1:3353:9111":{"id":"1:3353:9111","crate_id":1,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3355:1349"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3260:106":{"id":"1:3260:106","crate_id":1,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6411:223":{"id":"5:6411:223","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6412:1390"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3150:74":{"id":"1:3150:74","crate_id":1,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3152:13298"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3255:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:13490:60730":{"id":"1:13490:60730","crate_id":1,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"4:15910:2086","self::pattern":"1:13015:13393"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9237:2849":{"id":"1:9237:2849","crate_id":1,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3506:132":{"id":"1:3506:132","crate_id":1,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3508:181","1:3509:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:35":{"id":"0:35","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[117,26],"end":[117,48]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::symbolize::resolve_unsynchronized","name":"resolve_unsynchronized","id":"0:84:1634","glob":false}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[117,50],"end":[117,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::symbolize::Symbol","name":"Symbol","id":"0:88:1635","glob":false}},"1:3328:9103":{"id":"1:3328:9103","crate_id":1,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3330:181","1:3331:892"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:5833:13837":{"id":"5:5833:13837","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5835:181","5:5836:432"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3255:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:8340:14135":{"id":"1:8340:14135","crate_id":1,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8342:13348"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:10282:13363":{"id":"1:10282:13363","crate_id":1,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10283:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3981:68":{"id":"1:3981:68","crate_id":1,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3982:1421"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"0:240:1844":{"id":"0:240:1844","crate_id":0,"name":"libunwind","span":{"filename":"src/backtrace/libunwind.rs","begin":[1,0],"end":[267,1]},"visibility":{"restricted":{"parent":"0:13:1629","path":"::backtrace"}},"docs":"Backtrace support using libunwind/gcc_s/etc APIs.\n\nThis module contains the ability to unwind the stack using libunwind-style\nAPIs. Note that there's a whole bunch of implementations of the\nlibunwind-like API, and this is just trying to be compatible with most of\nthem all at once instead of being picky.\n\nThe libunwind API is powered by `_Unwind_Backtrace` and is in practice very\nreliable at generating a backtrace. It's not entirely clear how it does it\n(frame pointers? eh_frame info? both?) but it seems to work!\n\nMost of the complexity of this module is handling the various platform\ndifferences across libunwind implementations. Otherwise this is a pretty\nstraightforward Rust binding to the libunwind APIs.\n\nThis is the default unwinding API for all non-Windows platforms currently.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"1:3503:131":{"id":"1:3503:131","crate_id":1,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3505:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"1:3506:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13414:2718":{"id":"1:13414:2718","crate_id":1,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"4:15910:2086","self::pattern":"1:13015:13393"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:4688:1950":{"id":"4:4688:1950","crate_id":4,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4689:1951","4:4690:57644","4:4692:57645","4:4693:14869","4:4694:57646","4:4695:19083","4:4696:2907","4:4705:13328"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:2850:12052":{"id":"1:2850:12052","crate_id":1,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2852:54422"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3255:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"1:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:0:1629":{"id":"0:0:1629","crate_id":0,"name":"backtrace","span":{"filename":"src/lib.rs","begin":[1,0],"end":[193,12]},"visibility":"public","docs":"A library for acquiring a backtrace at runtime\n\nThis library is meant to supplement the `RUST_BACKTRACE=1` support of the\nstandard library by allowing an acquisition of a backtrace at runtime\nprogrammatically. The backtraces generated by this library do not need to be\nparsed, for example, and expose the functionality of multiple backend\nimplementations.\n\n# Usage\n\nFirst, add this to your Cargo.toml\n\n```toml\n[dependencies]\nbacktrace = \"0.3\"\n```\n\nNext:\n\n```\nfn main() {\n# // Unsafe here so test passes on no_std.\n# #[cfg(feature = \"std\")] {\n    backtrace::trace(|frame| {\n        let ip = frame.ip();\n        let symbol_address = frame.symbol_address();\n\n        // Resolve this instruction pointer to a symbol name\n        backtrace::resolve_frame(frame, |symbol| {\n            if let Some(name) = symbol.name() {\n                // ...\n            }\n            if let Some(filename) = symbol.filename() {\n                // ...\n            }\n        });\n\n        true // keep going to the next frame\n    });\n}\n# }\n```\n\n# Backtrace accuracy\n\nThis crate implements best-effort attempts to get the native backtrace. This\nis not always guaranteed to work, and some platforms don't return any\nbacktrace at all. If your application requires accurate backtraces then it's\nrecommended to closely evaluate this crate to see whether it's suitable\nfor your use case on your target platforms.\n\nEven on supported platforms, there's a number of reasons that backtraces may\nbe less-than-accurate, including but not limited to:\n\n* Unwind information may not be available. This crate primarily implements\n  backtraces by unwinding the stack, but not all functions may have\n  unwinding information (e.g. DWARF unwinding information).\n\n* Rust code may be compiled without unwinding information for some\n  functions. This can also happen for Rust code compiled with\n  `-Cpanic=abort`. You can remedy this, however, with\n  `-Cforce-unwind-tables` as a compiler option.\n\n* Unwind information may be inaccurate or corrupt. In the worst case\n  inaccurate unwind information can lead this library to segfault. In the\n  best case inaccurate information will result in a truncated stack trace.\n\n* Backtraces may not report filenames/line numbers correctly due to missing\n  or corrupt debug information. This won't lead to segfaults unlike corrupt\n  unwinding information, but missing or malformed debug information will\n  mean that filenames and line numbers will not be available. This may be\n  because debug information wasn't generated by the compiler, or it's just\n  missing on the filesystem.\n\n* Not all platforms are supported. For example there's no way to get a\n  backtrace on WebAssembly at the moment.\n\n* Crate features may be disabled. Currently this crate supports using Gimli\n  libbacktrace on non-Windows platforms for reading debuginfo for\n  backtraces. If both crate features are disabled, however, then these\n  platforms will generate a backtrace but be unable to generate symbols for\n  it.\n\nIn most standard workflows for most standard platforms you generally don't\nneed to worry about these caveats. We'll try to fix ones where we can over\ntime, but otherwise it's important to be aware of the limitations of\nunwinding-based backtraces!","links":{},"attrs":["#![doc(html_root_url = \"https://docs.rs/backtrace\")]","#![deny(missing_docs)]","#![no_std]","#![warn(rust_2018_idioms)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:7","0:10","0:31","0:35","0:38","0:41","0:115","0:133","0:194","0:197","0:200","0:756","0:760","0:763","0:767","0:770","0:773"],"is_stripped":false}},"0:13:1629":{"id":"0:13:1629","crate_id":0,"name":"backtrace","span":{"filename":"src/backtrace/mod.rs","begin":[1,0],"end":[162,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:20:1645","0:22:1630","0:236:1631"],"is_stripped":true}},"0:100:1636":{"id":"0:100:1636","crate_id":0,"name":"SymbolName","span":{"filename":"src/symbolize/mod.rs","begin":[318,0],"end":[322,1]},"visibility":"public","docs":"A wrapper around a symbol name to provide ergonomic accessors to the\ndemangled name, the raw bytes, the raw string, etc.","links":{},"attrs":["#[allow(dead_code)]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"1:10911:214":{"id":"1:10911:214","crate_id":1,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:10913:181","1:10914:1670","1:10915:17359","1:10916:56321","1:10917:56322","1:10918:753","1:10919:754"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"1:3255:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10902:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6104:61361":{"id":"5:6104:61361","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:432:1658","`String`":"5:8359:216"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1658","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8097:2304","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13391:1670":{"id":"1:13391:1670","crate_id":1,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"1:47437:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"1:10911:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3387:9114":{"id":"1:3387:9114","crate_id":1,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3389:181","1:3390:356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6088:61358":{"id":"5:6088:61358","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8359:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8359:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10269:109":{"id":"1:10269:109","crate_id":1,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10270:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13478:60728":{"id":"1:13478:60728","crate_id":1,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"1:13015:13393","prim@char":"4:15910:2086"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13417:58473":{"id":"1:13417:58473","crate_id":1,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"4:15910:2086","self::pattern":"1:13015:13393"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"1:13040:13410","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13402:58821":{"id":"1:13402:58821","crate_id":1,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"4:15916:2091"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3500:130":{"id":"1:3500:130","crate_id":1,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3502:376"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3503:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"4:5746:9082":{"id":"4:5746:9082","crate_id":4,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5747:8606","4:5748:13539","4:5749:8973","4:5750:13548","4:5751:8583","4:5752:8584","4:5753:13549","4:5754:1297","4:5755:13550","4:5756:13551","4:5757:13552","4:5758:13553","4:5759:13554","4:5760:13555","4:5761:13556","4:5762:13557"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:6562:9094":{"id":"4:6562:9094","crate_id":4,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6563:13574","4:6564:13575"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:4637:50274":{"id":"25:4637:50274","crate_id":25,"name":"ImageOptionalHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:4638:8965","25:4639:15717","25:4640:15718","25:4641:15719","25:4642:15720","25:4643:15721","25:4644:15722","25:4645:15723","25:4646:15724","25:4647:2053","25:4648:15725","25:4649:15726","25:4650:15727","25:4651:15728","25:4652:15729","25:4653:15730","25:4654:15731","25:4655:15732","25:4656:15733","25:4657:15734","25:4658:15735","25:4659:15736","25:4660:15737","25:4661:15738","25:4662:15739","25:4663:15740","25:4664:15741","25:4665:15742","25:4666:15743","25:4667:15744"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:10219:1950":{"id":"1:10219:1950","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10220:1524","1:10221:56742","1:10223:2907"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3473:116":{"id":"1:3473:116","crate_id":1,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3474:221","1:3475:543"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13382:60710":{"id":"1:13382:60710","crate_id":1,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13431:18724":{"id":"1:13431:18724","crate_id":1,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"4:15910:2086","self::pattern":"1:13015:13393"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"1:12807:13436","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[127,49],"end":[127,57]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"print::PrintFmt","name":"PrintFmt","id":"0:740:1643","glob":false}},"1:3333:9102":{"id":"1:3333:9102","crate_id":1,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3335:181","1:3336:558"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:44:1632":{"id":"0:44:1632","crate_id":0,"name":"symbolize","span":{"filename":"src/symbolize/mod.rs","begin":[1,0],"end":[485,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:68:1646","0:70:1647","0:84:1634","0:86:1633","0:88:1635","0:100:1636","0:114:1639"],"is_stripped":true}},"1:13420:13339":{"id":"1:13420:13339","crate_id":1,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"1:13015:13393","`None`":"1:47437:176","prim@char":"4:15910:2086"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47437:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:133":{"id":"0:133","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[124,0],"end":[124,44]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"self::symbolize::clear_symbol_cache","name":"clear_symbol_cache","id":"0:114:1639","glob":false}},"25:1878:11841":{"id":"25:1878:11841","crate_id":25,"name":"ProgramHeader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:1879:2676","25:1880:13689","25:1881:2480","25:1882:8567","25:1883:8571","25:1884:8568","25:1885:2809","25:1886:8569","25:1887:8570","25:1888:2808","25:1889:8572","25:1890:13705","25:1891:2362","25:1894:13706","25:1898:9159","25:1901:11827","25:1904:2732"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:22899:14034":{"id":"1:22899:14034","crate_id":1,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:22889:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3291:2292":{"id":"1:3291:2292","crate_id":1,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:5142:15021":{"id":"25:5142:15021","crate_id":25,"name":"ImageThunkData","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5143:61","25:5144:61901","25:5145:15051","25:5146:268"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pod","id":"25:160:9141","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3370:9115":{"id":"1:3370:9115","crate_id":1,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3371:181","1:3372:952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3163:227":{"id":"1:3163:227","crate_id":1,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3165:127","1:3166:1408"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13501:57454":{"id":"1:13501:57454","crate_id":1,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:7":{"id":"0:7","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[113,26],"end":[113,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::backtrace::trace_unsynchronized","name":"trace_unsynchronized","id":"0:22:1630","glob":false}},"4:5732:9084":{"id":"4:5732:9084","crate_id":4,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5733:8973","4:5734:13559","4:5735:13560"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:1221:12062":{"id":"23:1221:12062","crate_id":23,"name":"Reader","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:1222:2480","23:1223:16014","23:1224:2694","23:1225:793","23:1226:13171","23:1227:3642","23:1228:54424","23:1229:54425","23:1230:54426","23:1231:13339","23:1232:1301","23:1233:54427","23:1234:54428","23:1235:1390","23:1236:54429","23:1237:54430","23:1238:61707","23:1240:2036","23:1241:61708","23:1243:61709","23:1245:61669","23:1247:61673","23:1249:61670","23:1251:61674","23:1253:61671","23:1255:61675","23:1257:61676","23:1259:61677","23:1261:61672","23:1263:61710","23:1264:61711","23:1265:61712","23:1266:61713","23:1268:61714","23:1269:61715","23:1270:61716","23:1273:61717","23:1274:61718","23:1275:61719","23:1276:61720","23:1277:61721"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"1:10269:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"1:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:136:1640":{"id":"0:136:1640","crate_id":0,"name":"print","span":{"filename":"src/print.rs","begin":[1,0],"end":[302,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:161:1641","0:740:1643","0:175:1642"],"is_stripped":true}},"1:10280:13362":{"id":"1:10280:13362","crate_id":1,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10281:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13411:54659":{"id":"1:13411:54659","crate_id":1,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"1:13015:13393","prim@char":"4:15910:2086"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"1:13025:13408","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6868:9089":{"id":"4:6868:9089","crate_id":4,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6869:13563"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3357:9109":{"id":"1:3357:9109","crate_id":1,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3359:893"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:743:2004":{"id":"0:743:2004","crate_id":0,"name":"Full","span":{"filename":"src/print.rs","begin":[31,4],"end":[31,8]},"visibility":"default","docs":"Prints a backtrace that contains all possible information","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"1:10288:13365":{"id":"1:10288:13365","crate_id":1,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10289:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:592:12069":{"id":"23:592:12069","crate_id":23,"name":"UnwindContextStorage","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:594:61665","23:595:61663"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Reader","id":"23:1221:12062","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:161:1641":{"id":"0:161:1641","crate_id":0,"name":"BacktraceFmt","span":{"filename":"src/print.rs","begin":[17,0],"end":[23,1]},"visibility":"public","docs":"A formatter for backtraces.\n\nThis type can be used to print a backtrace regardless of where the backtrace\nitself comes from. If you have a `Backtrace` type then its `Debug`\nimplementation already uses this printing format.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:41":{"id":"0:41","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[117,58],"end":[117,68]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::symbolize::SymbolName","name":"SymbolName","id":"0:100:1636","glob":false}},"1:8860:13671":{"id":"1:8860:13671","crate_id":1,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"1:8579:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:4032:14157":{"id":"1:4032:14157","crate_id":1,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4033:57948"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3421:9122":{"id":"1:3421:9122","crate_id":1,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3423:1230"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:8377:136":{"id":"1:8377:136","crate_id":1,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8379:684"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:84:1634":{"id":"0:84:1634","crate_id":0,"name":"resolve_unsynchronized","span":{"filename":"src/symbolize/mod.rs","begin":[158,0],"end":[163,1]},"visibility":"public","docs":"Same as `resolve`, only unsafe as it's unsynchronized.\n\nThis function does not have synchronization guarantees but is available when\nthe `std` feature of this crate isn't compiled in. See the `resolve`\nfunction for more documentation and examples.\n\n# Panics\n\nSee information on `resolve` for caveats on `cb` panicking.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["addr",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"c_void","id":"1:5561:1777","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],["cb",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"1:3503:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Symbol","id":"0:88:1635","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}],"output":null}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"1:13400:60713":{"id":"1:13400:60713","crate_id":1,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"crate::ops::IndexMut":"1:3562:9056","`str`":"4:15916:2091","str::slice_unchecked":"4:15916:2091"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:115":{"id":"0:115","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[120,0],"end":[120,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::types::BytesOrWideString","name":"BytesOrWideString","id":"0:729:1638","glob":false}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[127,30],"end":[127,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"print::BacktraceFrameFmt","name":"BacktraceFrameFmt","id":"0:175:1642","glob":false}},"1:10278:13361":{"id":"1:10278:13361","crate_id":1,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10279:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13500:57453":{"id":"1:13500:57453","crate_id":1,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13502:60732":{"id":"1:13502:60732","crate_id":1,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"4:15910:2086"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"1:49700:13432","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5652:1987":{"id":"4:5652:1987","crate_id":4,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5653:2772","4:5654:13283"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"4:10564:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3710:224":{"id":"1:3710:224","crate_id":1,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3711:181","1:3712:9126","1:3713:686","1:3714:369"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"1:3715:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"1:3710:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3153:149":{"id":"1:3153:149","crate_id":1,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3155:2708"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"25:5374:2509":{"id":"25:5374:2509","crate_id":25,"name":"Object","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["25:5377:9165","25:5378:9183","25:5379:9166","25:5380:9184","25:5381:9167","25:5382:9185","25:5383:1635","25:5384:9188","25:5385:9187","25:5386:9189","25:5387:61912","25:5388:61927","25:5389:13695","25:5390:61913","25:5391:782","25:5392:2548","25:5393:2727","25:5394:61914","25:5395:61915","25:5396:2512","25:5397:61916","25:5398:61918","25:5399:61917","25:5400:2033","25:5401:61919","25:5402:11891","25:5403:61923","25:5404:61928","25:5406:61920","25:5407:61921","25:5408:61922","25:5409:61924","25:5410:61925","25:5412:2680","25:5413:61929","25:5414:61930","25:5415:61931","25:5416:61926","25:5417:2573","25:5418:653"],"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}},{"name":"'file","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'data","bounds":[{"outlives":"'file"}]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"25:5487:14156","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"paths":{"25:10916:11847":{"crate_id":25,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"25:2839:11829":{"crate_id":25,"path":["object","read","elf","dynamic","Dyn"],"kind":"trait"},"6:5191:7259":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"24:6892:6800":{"crate_id":24,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:51708:14209":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"4:9593:15180":{"crate_id":4,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"16:3549:12120":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:10911:214":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"4:2462:13796":{"crate_id":4,"path":["std","env","ArgsOs"],"kind":"struct"},"5:4242:15143":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"25:12262:9155":{"crate_id":25,"path":["object","read","CodeView"],"kind":"struct"},"4:15923:2096":{"crate_id":4,"path":["std","i16"],"kind":"primitive"},"24:4234:6639":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"24:5462:7280":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:5015:2316":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"18:729:61658":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:12568:15558":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"25:12132:9197":{"crate_id":25,"path":["object","read","SymbolMap"],"kind":"struct"},"25:14251:15767":{"crate_id":25,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:13205:15767":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"5:783:222":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"4:11194:14443":{"crate_id":4,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"25:14844:15933":{"crate_id":25,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"16:6949:14946":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"24:5998:3400":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"16:3522:12117":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"25:13557:15551":{"crate_id":25,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"5:7257:15143":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"25:12595:9506":{"crate_id":25,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:22542:54532":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"25:12103:9196":{"crate_id":25,"path":["object","read","SymbolSection"],"kind":"enum"},"25:14267:15770":{"crate_id":25,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:46493:2236":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:50360:158":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:9961:9190":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"4:5780:9081":{"crate_id":4,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:49344:13416":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"5:6973:1493":{"crate_id":5,"path":["alloc","vec"],"kind":"module"},"25:11640:15385":{"crate_id":25,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"14:11:1849":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:3349:9107":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"16:7250:13079":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"4:14869:15189":{"crate_id":4,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:13598:15865":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:4047:14163":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"23:7279:13051":{"crate_id":23,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"4:2181:14524":{"crate_id":4,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"25:13257:15490":{"crate_id":25,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:11026:9191":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"23:8174:13079":{"crate_id":23,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"25:13984:15623":{"crate_id":25,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"16:5941:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"3:0:2136":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"12:1159:14894":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:51173:14239":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"24:6169:7689":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:57617:16619":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"16:6644:13062":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"23:7653:14939":{"crate_id":23,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"6:4401:6657":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"4:11246:57445":{"crate_id":4,"path":["std","net","parser","AddrKind"],"kind":"enum"},"16:5717:13022":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"23:6192:13008":{"crate_id":23,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"23:7491:14935":{"crate_id":23,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"23:8391:13090":{"crate_id":23,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:9133:9174":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"23:3162:12093":{"crate_id":23,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:48774:3118":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"4:15915:2090":{"crate_id":4,"path":["std","slice"],"kind":"primitive"},"25:14286:15771":{"crate_id":25,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"25:11843:15023":{"crate_id":25,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"23:8747:13099":{"crate_id":23,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"24:4299:6645":{"crate_id":24,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"4:11453:3108":{"crate_id":4,"path":["std","path","Prefix"],"kind":"enum"},"4:15924:2097":{"crate_id":4,"path":["std","i32"],"kind":"primitive"},"4:13573:14535":{"crate_id":4,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"16:5815:13027":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"25:12998:15453":{"crate_id":25,"path":["object","macho","FatHeader"],"kind":"struct"},"17:12982:15654":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"6:4101:6628":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"4:14930:14564":{"crate_id":4,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"4:1021:13998":{"crate_id":4,"path":["std","thread","Packet"],"kind":"struct"},"25:10880:16687":{"crate_id":25,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:10552:14113":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"6:4145:6632":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"23:5043:12633":{"crate_id":23,"path":["gimli","constants","DwAte"],"kind":"struct"},"6:4494:6667":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"23:6770:189":{"crate_id":23,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:9740:79":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"6:6910:6801":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:2171:578":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"6:584:3622":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"23:8852:13105":{"crate_id":23,"path":["gimli","read","value","Value"],"kind":"enum"},"24:4006:6617":{"crate_id":24,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"23:3702:12114":{"crate_id":23,"path":["gimli","common","SectionId"],"kind":"enum"},"25:9686:9171":{"crate_id":25,"path":["object","common","SymbolKind"],"kind":"enum"},"1:32258:9053":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"16:6110:13035":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"24:609:3627":{"crate_id":24,"path":["libc","unix","tms"],"kind":"struct"},"26:136:53840":{"crate_id":26,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"25:14810:15921":{"crate_id":25,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"4:10800:9000":{"crate_id":4,"path":["std","fs","OpenOptions"],"kind":"struct"},"5:6411:223":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"4:1079:14431":{"crate_id":4,"path":["std","ascii","AsciiExt"],"kind":"trait"},"5:3748:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:11981:15458":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:10801:16695":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"4:10564:14156":{"crate_id":4,"path":["std","sealed","Sealed"],"kind":"trait"},"1:46662:14052":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:9729:61642":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:11588:9505":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"17:12480:15546":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"4:1450:14536":{"crate_id":4,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"4:1306:143":{"crate_id":4,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"24:663:3658":{"crate_id":24,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:6870:14065":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"6:161:3284":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"20:47:1849":{"crate_id":20,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:10140:9187":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"24:1753:4524":{"crate_id":24,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"5:6652:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"4:1655:14549":{"crate_id":4,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"18:667:15007":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"13:120:49238":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"6:4033:6619":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"16:4417:12650":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:13245:27566":{"crate_id":1,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"4:4043:205":{"crate_id":4,"path":["std","io","error","Result"],"kind":"typedef"},"17:10407:11831":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"1:46633:14064":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"26:897:15001":{"crate_id":26,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"23:8908:127":{"crate_id":23,"path":["gimli","read","Error"],"kind":"enum"},"22:248:3152":{"crate_id":22,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:46915:16520":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:49523:13425":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"23:3089:12090":{"crate_id":23,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"5:8454:9059":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"6:4066:6624":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"24:518:3615":{"crate_id":24,"path":["libc","unix","timeval"],"kind":"struct"},"14:56:9218":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"5:1486:14549":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:48525:71":{"crate_id":1,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"17:10887:15385":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:8157:2314":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:45933:9123":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"23:7499:13058":{"crate_id":23,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"6:4005:6616":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"23:5924:12989":{"crate_id":23,"path":["gimli","constants","DwOp"],"kind":"struct"},"7:0:1472":{"crate_id":7,"path":["unwind"],"kind":"module"},"6:3966:6612":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:12208:15489":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:24594:169":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"26:152:53841":{"crate_id":26,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"23:7513:13059":{"crate_id":23,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"6:4439:6662":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"6:5945:3531":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"18:694:15008":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"6:88:3217":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"25:13748:15584":{"crate_id":25,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:46563:14044":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"17:11001:16706":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:24:600":{"crate_id":1,"path":["core","env"],"kind":"macro"},"17:11358:9206":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:10218:205":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"4:5732:9084":{"crate_id":4,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:11091:3122":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:49997:14092":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"16:4477:12660":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:49211:13585":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"18:829:14996":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:12010:15462":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"25:14604:15853":{"crate_id":25,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"12:160:14898":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"26:611:15003":{"crate_id":26,"path":["memchr","cow","CowBytes"],"kind":"struct"},"16:7571:13094":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:9659:61647":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:4359:9062":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"23:6393:13018":{"crate_id":23,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"23:5427:12742":{"crate_id":23,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:48078:2343":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"26:621:15259":{"crate_id":26,"path":["memchr","cow","Imp"],"kind":"struct"},"25:10489:61643":{"crate_id":25,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"4:14956:57945":{"crate_id":4,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"24:4220:6638":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:4511:6669":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:9368:9179":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"25:11990:127":{"crate_id":25,"path":["object","read","Error"],"kind":"struct"},"17:11678:9544":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"6:1572:4506":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:9440:9181":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"4:4713:14470":{"crate_id":4,"path":["std","io","BufRead"],"kind":"trait"},"24:6863:6796":{"crate_id":24,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:3339:9105":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"6:4431:6661":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:24492:170":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"25:10775:14976":{"crate_id":25,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"4:11294:14629":{"crate_id":4,"path":["std","net","Shutdown"],"kind":"enum"},"17:9088:9173":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:49371:13418":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"26:838:13411":{"crate_id":26,"path":["memchr","memmem","Searcher"],"kind":"struct"},"25:9717:9172":{"crate_id":25,"path":["object","common","SymbolScope"],"kind":"enum"},"23:4230:12121":{"crate_id":23,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:10253:11836":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:12507:15548":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:46285:14418":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"23:7174:13049":{"crate_id":23,"path":["gimli","read","line","LineRows"],"kind":"struct"},"16:5456:13013":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"16:6269:13050":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"4:15935:2108":{"crate_id":4,"path":["std","fn"],"kind":"primitive"},"17:10827:14970":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"18:857:14998":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:9799:9186":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:52024:14237":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:24027:16412":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"23:8140:13076":{"crate_id":23,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"4:12012:16385":{"crate_id":4,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"1:52071:14241":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:11260:13603":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"25:11924:15394":{"crate_id":25,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"4:10376:1636":{"crate_id":4,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"4:10451:1652":{"crate_id":4,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"6:4325:6647":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"6:1723:4520":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:3558:9055":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:46601:16516":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"24:4418:6660":{"crate_id":24,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"12:2005:3122":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"5:7840:15162":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:23729:14156":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"24:4053:6623":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"12:747:3122":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"6:3881:6605":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"4:14719:14452":{"crate_id":4,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"27:602:15052":{"crate_id":27,"path":["miniz_oxide","inflate","stream","ResetPolicy"],"kind":"trait"},"16:5330:2675":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"4:12211:9027":{"crate_id":4,"path":["std","time","SystemTime"],"kind":"struct"},"6:5292:7267":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:46724:14057":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:14127:141":{"crate_id":1,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"6:4281:6642":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"23:3139:12092":{"crate_id":23,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"12:1667:14908":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"16:7392:13086":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"4:6868:9089":{"crate_id":4,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"23:3560:12109":{"crate_id":23,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"6:6870:6796":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"25:12669:9544":{"crate_id":25,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:49451:13424":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"12:556:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:32359:56233":{"crate_id":1,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"1:3250:211":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"17:9005:9170":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"24:6880:6798":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:11767:9721":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"25:5393:2727":{"crate_id":25,"path":["object","read","traits","Object","section_by_name"],"kind":"foreign_type"},"4:2460:13795":{"crate_id":4,"path":["std","env","Args"],"kind":"struct"},"6:5371:7271":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"25:14691:15872":{"crate_id":25,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"16:7870:13102":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"23:6825:13029":{"crate_id":23,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"23:8495:13094":{"crate_id":23,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:10179:15349":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"23:457:12068":{"crate_id":23,"path":["gimli","read","cfi","UnwindSection"],"kind":"trait"},"4:10790:8997":{"crate_id":4,"path":["std","fs","Metadata"],"kind":"struct"},"16:5505:13016":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"5:6764:14461":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"25:11892:15391":{"crate_id":25,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"6:4317:6646":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"25:14226:15757":{"crate_id":25,"path":["object","pe","Guid"],"kind":"struct"},"4:9179:16747":{"crate_id":4,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"4:10938:14577":{"crate_id":4,"path":["std","io","error","Custom"],"kind":"struct"},"4:11051:14493":{"crate_id":4,"path":["std","io","util","Empty"],"kind":"struct"},"6:599:3624":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:8425:120":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"5:69:2305":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"4:1045:14000":{"crate_id":4,"path":["std","thread","JoinHandle"],"kind":"struct"},"4:11990:16384":{"crate_id":4,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"17:11231:9201":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"25:2631:11842":{"crate_id":25,"path":["object","read","elf","relocation","Rel"],"kind":"trait"},"1:46395:14301":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"23:6412:14911":{"crate_id":23,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"16:7264:13080":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"5:2218:14712":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"24:5234:7242":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:10211:16688":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"23:8728:13098":{"crate_id":23,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:49301:13597":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:47658:84":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"23:8685:13096":{"crate_id":23,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"4:15926:2099":{"crate_id":4,"path":["std","i128"],"kind":"primitive"},"23:3314:12099":{"crate_id":23,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"24:6178:7690":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"4:3333:9008":{"crate_id":4,"path":["std","fs","read_link"],"kind":"function"},"25:10479:9186":{"crate_id":25,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"16:2773:12088":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"4:7260:16746":{"crate_id":4,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"23:93:2479":{"crate_id":23,"path":["gimli","endianity","NativeEndian"],"kind":"typedef"},"4:2031:145":{"crate_id":4,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"23:6564:13023":{"crate_id":23,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"22:230:3151":{"crate_id":22,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:4157:14973":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"5:7611:9065":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:22836:14254":{"crate_id":1,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"17:10543:15031":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"25:2375:11838":{"crate_id":25,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"25:13503:15544":{"crate_id":25,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"18:650:15002":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:52102:14244":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"4:11363:14643":{"crate_id":4,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"4:11167:14441":{"crate_id":4,"path":["std","net","ip","IpAddr"],"kind":"enum"},"23:8794:13102":{"crate_id":23,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"24:3990:6615":{"crate_id":24,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:53358:16602":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:11118:9196":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"23:3027:12087":{"crate_id":23,"path":["gimli","common","Encoding"],"kind":"struct"},"11:54:14884":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"25:10946:11835":{"crate_id":25,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"20:250:2272":{"crate_id":20,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"16:2754:12087":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"4:1476:9060":{"crate_id":4,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"25:2135:2671":{"crate_id":25,"path":["object","read","elf","section","SectionHeader"],"kind":"trait"},"17:9332:2726":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"6:3862:6603":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"24:4463:6665":{"crate_id":24,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:46703:14056":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"23:592:12069":{"crate_id":23,"path":["gimli","read","cfi","UnwindContextStorage"],"kind":"trait"},"24:5203:7261":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"23:2991:9166":{"crate_id":23,"path":["gimli","read","Section"],"kind":"trait"},"24:6637:8055":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:49292:13594":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"24:4026:6619":{"crate_id":24,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"25:13379:15508":{"crate_id":25,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"24:4094:6628":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"16:7477:13091":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:4764:2289":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"16:3195:12105":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"27:613:15055":{"crate_id":27,"path":["miniz_oxide","inflate","stream","FullReset"],"kind":"struct"},"6:5969:3489":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"21:0:1644":{"crate_id":21,"path":["cfg_if"],"kind":"module"},"17:13402:15811":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:48207:13361":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"16:7158:13071":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"25:14874:15939":{"crate_id":25,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:11665:9543":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"6:6091:7684":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"25:14948:15960":{"crate_id":25,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"5:5837:13838":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"25:13363:15503":{"crate_id":25,"path":["object","macho","SymtabCommand"],"kind":"struct"},"23:7346:13053":{"crate_id":23,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"25:11222:11884":{"crate_id":25,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:10071:14981":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"4:11343:14674":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"4:13853:16790":{"crate_id":4,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"17:10814:14969":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:24088:16418":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"24:1610:4510":{"crate_id":24,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:9264:9152":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:12521:15551":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"25:13516:15546":{"crate_id":25,"path":["object","macho","UuidCommand"],"kind":"struct"},"6:511:3613":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"1:46316:14413":{"crate_id":1,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"26:645:15005":{"crate_id":26,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"4:15146:14515":{"crate_id":4,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:2902:183":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:0:1678":{"crate_id":17,"path":["object"],"kind":"module"},"25:9960:2675":{"crate_id":25,"path":["object","endian","BigEndian"],"kind":"struct"},"4:10701:14043":{"crate_id":4,"path":["std","error","Chain"],"kind":"struct"},"23:7729:13066":{"crate_id":23,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:13015:13393":{"crate_id":1,"path":["core","str","pattern"],"kind":"module"},"4:3997:14579":{"crate_id":4,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:13306:15786":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:3382:9113":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"4:70:1483":{"crate_id":4,"path":["std","prelude","v1"],"kind":"module"},"23:8266:13084":{"crate_id":23,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:10529:11885":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"25:14108:15716":{"crate_id":25,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"25:14087:15709":{"crate_id":25,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:12772:13441":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"4:15925:2098":{"crate_id":4,"path":["std","i64"],"kind":"primitive"},"16:5295:12058":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"4:1623:14546":{"crate_id":4,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"25:13087:15466":{"crate_id":25,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"5:8359:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"4:903:14006":{"crate_id":4,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:13272:15783":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"25:9944:9152":{"crate_id":25,"path":["object","endian","LittleEndian"],"kind":"struct"},"16:6731:14939":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"24:577:3622":{"crate_id":24,"path":["libc","unix","pollfd"],"kind":"struct"},"1:24181:2255":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"24:1701:4518":{"crate_id":24,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:22508:54494":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"6:5210:7261":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:22812:14156":{"crate_id":1,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"6:5359:7270":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"4:6087:14635":{"crate_id":4,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"25:160:9141":{"crate_id":25,"path":["object","pod","Pod"],"kind":"trait"},"18:774:15260":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"24:4424:6661":{"crate_id":24,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"16:6577:13058":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"25:14238:15762":{"crate_id":25,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"4:15908:2084":{"crate_id":4,"path":["std","bool"],"kind":"primitive"},"27:1016:11900":{"crate_id":27,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"14:250:2272":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"18:820:14995":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"4:11614:3125":{"crate_id":4,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:4:979":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"17:9210:9178":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:56342:236":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:2843:12091":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"4:5935:14670":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:12431:15539":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"12:469:61635":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"27:618:15056":{"crate_id":27,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"4:12334:13795":{"crate_id":4,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:46333:13433":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"25:3777:9165":{"crate_id":25,"path":["object","read","macho","segment","Segment"],"kind":"trait"},"17:9574:2674":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:53378:16604":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:3260:106":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"18:620:15259":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:8381:151":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:10290:13366":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"4:10821:129":{"crate_id":4,"path":["std","fs","FileType"],"kind":"struct"},"6:632:3629":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"24:4334:6649":{"crate_id":24,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"25:14396:15800":{"crate_id":25,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"6:4133:2794":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"25:10904:16689":{"crate_id":25,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"25:11315:14972":{"crate_id":25,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:51255:14215":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"4:15928:2101":{"crate_id":4,"path":["std","u16"],"kind":"primitive"},"23:3514:12107":{"crate_id":23,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"5:3336:14524":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:12685:15580":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"24:1540:4503":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"25:12631:9541":{"crate_id":25,"path":["object","elf","Rela32"],"kind":"struct"},"16:7185:13073":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"4:11939:181":{"crate_id":4,"path":["std","process","Output"],"kind":"struct"},"1:8864:14199":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"16:6252:13049":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:11738:9711":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"1:51660:14205":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:51945:14249":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"9:603:15056":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:13933:15975":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"25:12484:9440":{"crate_id":25,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:46615:14049":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"25:11149:11855":{"crate_id":25,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"24:4504:6669":{"crate_id":24,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:5130:7214":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"16:5753:13024":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:11835:9738":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:47826:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"18:152:53841":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:49850:14086":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"4:3134:2146":{"crate_id":4,"path":["std","fs"],"kind":"module"},"17:13488:15836":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"4:3317:2519":{"crate_id":4,"path":["std","fs","metadata"],"kind":"function"},"23:8377:13089":{"crate_id":23,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:49665:13420":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:14091:201":{"crate_id":1,"path":["core","task","ready","Ready"],"kind":"struct"},"5:1235:14736":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"24:3885:6606":{"crate_id":24,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:10200:16687":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:13898:15962":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"23:8780:13101":{"crate_id":23,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"5:8271:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"4:6702:8906":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"25:10339:61647":{"crate_id":25,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"5:7815:15157":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:46949:16523":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:8340:14135":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:51840:16552":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:11199:9200":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:3361:9108":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"23:7065:13042":{"crate_id":23,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"4:12045:3122":{"crate_id":4,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"16:7738:13095":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"16:5855:12059":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"16:3800:12183":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:3323:9106":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"4:8651:2345":{"crate_id":4,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"25:14824:15927":{"crate_id":25,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"27:796:14824":{"crate_id":27,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"24:5421:7278":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"23:3799:12117":{"crate_id":23,"path":["gimli","arch","Arm"],"kind":"struct"},"1:13034:13411":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"25:13618:15560":{"crate_id":25,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"25:9499:9153":{"crate_id":25,"path":["object","common","Architecture"],"kind":"enum"},"4:4359:14610":{"crate_id":4,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"24:4310:6646":{"crate_id":24,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"4:7682:14561":{"crate_id":4,"path":["std","process","Command"],"kind":"struct"},"1:46241:14296":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:47624:9062":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"17:13799:15938":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"16:6464:13054":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:45843:195":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:47470:13307":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"5:1607:13587":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"27:706:14783":{"crate_id":27,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"6:5312:7268":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"16:4641:12724":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:49833:14085":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"4:6864:9086":{"crate_id":4,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"17:12155:15482":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:12756:13439":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"4:15112:14508":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"6:4262:6640":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:3387:9114":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"24:4126:2794":{"crate_id":24,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"25:14306:15779":{"crate_id":25,"path":["object","pe","ImageSymbol"],"kind":"struct"},"24:5364:7271":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"18:766:15270":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"12:354:16289":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"23:8330:13087":{"crate_id":23,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"6:616:3627":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"4:12087:14589":{"crate_id":4,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"24:1520:4500":{"crate_id":24,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:37593:13289":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"12:1144:14548":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"4:4649:9017":{"crate_id":4,"path":["std","io","IoSliceMut"],"kind":"struct"},"4:11226:16362":{"crate_id":4,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"25:5430:9161":{"crate_id":25,"path":["object","read","traits","ObjectSection"],"kind":"trait"},"5:3300:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"4:15415:1631":{"crate_id":4,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"25:11955:54069":{"crate_id":25,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"16:3118:12102":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"6:537:3617":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:10229:134":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:11295:13421":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"25:11808:9202":{"crate_id":25,"path":["object","read","pe","export","Export"],"kind":"struct"},"23:5615:12780":{"crate_id":23,"path":["gimli","constants","DwLne"],"kind":"struct"},"16:4995:12803":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:10331:9187":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"24:4088:6627":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"25:14863:15938":{"crate_id":25,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"26:705:15260":{"crate_id":26,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"6:5548:7312":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"25:14330:15784":{"crate_id":25,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:11388:13425":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"16:7279:14951":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"16:6569:14935":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"25:6200:2667":{"crate_id":25,"path":["object","elf","NT_GNU_BUILD_ID"],"kind":"constant"},"17:11458:2678":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"7:85:48967":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"23:6956:13035":{"crate_id":23,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"5:8437:9058":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"1:3163:227":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"17:12632:15576":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"25:1351:14982":{"crate_id":25,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"17:13627:15872":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"16:7205:13075":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:3629:9057":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:46744:14059":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:7647:13315":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:47910:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"23:7613:13064":{"crate_id":23,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:45864:198":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:2314:11838":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"16:7514:13092":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"4:1646:14548":{"crate_id":4,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"4:15267:14625":{"crate_id":4,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"24:5413:7277":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"4:12231:14519":{"crate_id":4,"path":["std","time","SystemTimeError"],"kind":"struct"},"25:10651:61645":{"crate_id":25,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"4:14484:16388":{"crate_id":4,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"5:1674:14540":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:9528:1972":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"4:9144:2354":{"crate_id":4,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"6:5379:7272":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"12:2331:3129":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"23:7871:14946":{"crate_id":23,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:50337:14330":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"25:13231:15487":{"crate_id":25,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"16:2945:12095":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"25:9554:9150":{"crate_id":25,"path":["object","common","AddressSize"],"kind":"enum"},"27:27:14826":{"crate_id":27,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"1:46592:14047":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"6:4183:6634":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:5011:2315":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"25:13270:15492":{"crate_id":25,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:9280:2675":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"23:7098:13044":{"crate_id":23,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"23:8188:13080":{"crate_id":23,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"16:7174:13072":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"17:10788:16694":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"16:5360:13008":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"4:3194:8999":{"crate_id":4,"path":["std","fs","DirEntry"],"kind":"struct"},"25:11703:16702":{"crate_id":25,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"25:11617:15384":{"crate_id":25,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:4272:6641":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:6864:6795":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"5:3039:61602":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"25:14320:15783":{"crate_id":25,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"25:14611:15854":{"crate_id":25,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"23:5334:12724":{"crate_id":23,"path":["gimli","constants","DwAddr"],"kind":"struct"},"4:11933:14562":{"crate_id":4,"path":["std","process","CommandArgs"],"kind":"struct"},"14:189:1849":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:13540:15853":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"24:4286:6643":{"crate_id":24,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"9:927:2749":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:10304:11834":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"6:6887:6798":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"25:11405:50215":{"crate_id":25,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:49675:13419":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"4:3613:14477":{"crate_id":4,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:46960:16525":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"26:678:142":{"crate_id":26,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"25:5464:9163":{"crate_id":25,"path":["object","read","traits","ObjectSymbol"],"kind":"trait"},"5:3882:14480":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"24:562:3620":{"crate_id":24,"path":["libc","unix","hostent"],"kind":"struct"},"15:269:3156":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:5528:6519":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"26:886:15000":{"crate_id":26,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:32459:56235":{"crate_id":1,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"25:13131:15474":{"crate_id":25,"path":["object","macho","Section32"],"kind":"struct"},"5:3044:16781":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"16:3338:12111":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"25:5142:15021":{"crate_id":25,"path":["object","read","pe","import","ImageThunkData"],"kind":"trait"},"16:6636:13061":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"25:12985:15451":{"crate_id":25,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"4:6792:14453":{"crate_id":4,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"17:12712:15584":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"18:754:61655":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:50283:201":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"4:1194:16846":{"crate_id":4,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"16:4448:12656":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:10286:189":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"4:4365:14612":{"crate_id":4,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"16:3091:12101":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"23:7313:13052":{"crate_id":23,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"5:3038:1980":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"26:745:61656":{"crate_id":26,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"25:11754:16706":{"crate_id":25,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:24080:16417":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"25:13478:15541":{"crate_id":25,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:51808:16551":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:13924:15971":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"5:1011:3122":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"6:525:3615":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"24:6021:4465":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:3353:9111":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"25:11691:16701":{"crate_id":25,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"25:14836:15930":{"crate_id":25,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"4:2166:9060":{"crate_id":4,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:13386:15807":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"4:7337:186":{"crate_id":4,"path":["std","path","PathBuf"],"kind":"struct"},"4:1492:14538":{"crate_id":4,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:9476:9182":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:9358:13408":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"25:9581:9168":{"crate_id":25,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:46232:16505":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"25:702:1635":{"crate_id":25,"path":["object","read","any","Symbol"],"kind":"struct"},"25:9785:9174":{"crate_id":25,"path":["object","common","RelocationEncoding"],"kind":"enum"},"5:8241:3129":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"16:6620:14933":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"25:15042:15981":{"crate_id":25,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"25:14494:15822":{"crate_id":25,"path":["object","pe","ImageImportByName"],"kind":"struct"},"6:6881:6797":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"4:4399:14488":{"crate_id":4,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"4:1528:14544":{"crate_id":4,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"6:3905:6607":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"24:4016:6618":{"crate_id":24,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:4523:6671":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:5608:779":{"crate_id":1,"path":["core","iter"],"kind":"module"},"4:3701:14479":{"crate_id":4,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"5:8382:14689":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:1708:4518":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"4:8493:14587":{"crate_id":4,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:47952:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"23:6288:13013":{"crate_id":23,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:48036:92":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"23:7964:14950":{"crate_id":23,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:13506:15840":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"5:7633:9066":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"4:12067:14588":{"crate_id":4,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"5:3759:3122":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"24:4033:6620":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"25:12656:9543":{"crate_id":25,"path":["object","elf","Rela64"],"kind":"struct"},"1:53338:16600":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"27:947:2749":{"crate_id":27,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"27:234:14804":{"crate_id":27,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"1:23623:13583":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"24:4403:6658":{"crate_id":24,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"5:7111:15157":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"25:1878:11841":{"crate_id":25,"path":["object","read","elf","segment","ProgramHeader"],"kind":"trait"},"25:15027:15980":{"crate_id":25,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"4:11331:14435":{"crate_id":4,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"25:5903:2665":{"crate_id":25,"path":["object","elf","ELFCOMPRESS_ZLIB"],"kind":"constant"},"23:209:12064":{"crate_id":23,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"25:14618:15855":{"crate_id":25,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:3147:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"4:11982:14566":{"crate_id":4,"path":["std","process","ExitCode"],"kind":"struct"},"18:636:15260":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:13296:15785":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"4:14983:16395":{"crate_id":4,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"25:13543:15548":{"crate_id":25,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:4651:14461":{"crate_id":1,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"5:4443:3122":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"24:598:3625":{"crate_id":24,"path":["libc","unix","sigval"],"kind":"struct"},"17:11616:9507":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"24:4186:6635":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"4:5863:14667":{"crate_id":4,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"16:6219:13042":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"16:5346:13007":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"12:429:14899":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"23:6539:13022":{"crate_id":23,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"25:11566:14969":{"crate_id":25,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:48577:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"28:54:14884":{"crate_id":28,"path":["adler","Adler32"],"kind":"struct"},"6:5269:7264":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"23:8438:13092":{"crate_id":23,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"23:3067:12089":{"crate_id":23,"path":["gimli","common","Register"],"kind":"struct"},"25:12363:9207":{"crate_id":25,"path":["object","read","CompressedData"],"kind":"struct"},"4:1497:14539":{"crate_id":4,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:13819:187":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"17:510:9165":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"6:6614:3570":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"4:11435:3046":{"crate_id":4,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"1:12696:13440":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"25:11948:15396":{"crate_id":25,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"25:11059:11837":{"crate_id":25,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"17:12467:15544":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:12582:15560":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"6:6923:8242":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"25:10566:9188":{"crate_id":25,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"25:11978:15400":{"crate_id":25,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:11932:15443":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"24:5267:7265":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"6:5469:7280":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:2484:11869":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"18:849:14997":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"25:5450:9160":{"crate_id":25,"path":["object","read","traits","ObjectComdat"],"kind":"trait"},"4:14469:14455":{"crate_id":4,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"22:0:1676":{"crate_id":22,"path":["addr2line"],"kind":"module"},"12:1855:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"24:617:3628":{"crate_id":24,"path":["libc","unix","servent"],"kind":"struct"},"1:49781:14078":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"25:12343:9206":{"crate_id":25,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:49718:13434":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"23:7995:13068":{"crate_id":23,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:10584:14972":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"24:6629:8054":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"25:10761:2672":{"crate_id":25,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"23:7946:14949":{"crate_id":23,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"25:560:9166":{"crate_id":25,"path":["object","read","any","Section"],"kind":"struct"},"24:5521:6519":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"4:11597:3122":{"crate_id":4,"path":["std","path","Iter"],"kind":"struct"},"25:14646:15862":{"crate_id":25,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:22763:14191":{"crate_id":1,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"17:13842:15954":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"16:7073:13068":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:12456:15543":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"24:5962:3489":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"4:8385:13998":{"crate_id":4,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"6:591:3623":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:23041:14156":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"16:5407:13010":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"9:0:1677":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"18:744:61656":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:13637:15877":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"24:5214:7262":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:3145:12103":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"12:1180:14895":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"24:524:3616":{"crate_id":24,"path":["libc","unix","timespec"],"kind":"struct"},"23:5228:12668":{"crate_id":23,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"23:3391:12102":{"crate_id":23,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"4:14554:57942":{"crate_id":4,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"24:5400:7275":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"24:4380:6655":{"crate_id":24,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:9769:61651":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"16:6413:3148":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"4:5965:14673":{"crate_id":4,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"23:6583:13024":{"crate_id":23,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"25:10231:9154":{"crate_id":25,"path":["object","read","util","ByteString"],"kind":"struct"},"23:6354:13017":{"crate_id":23,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"25:14976:15969":{"crate_id":25,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"25:6193:2666":{"crate_id":25,"path":["object","elf","ELF_NOTE_GNU"],"kind":"static"},"1:11115:13587":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"25:13064:15463":{"crate_id":25,"path":["object","macho","LoadCommand"],"kind":"struct"},"12:2013:9060":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:3404:9118":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"24:1669:4515":{"crate_id":24,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:49987:14091":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:3715:137":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"5:5415:14461":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"4:5986:14676":{"crate_id":4,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"25:13573:15553":{"crate_id":25,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"24:5190:7260":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"12:396:14900":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"4:14160:14485":{"crate_id":4,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"17:13620:15870":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:11434:2677":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"25:12005:9192":{"crate_id":25,"path":["object","read","FileKind"],"kind":"enum"},"16:3041:12099":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"27:920:11973":{"crate_id":27,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"6:4470:6665":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"4:7620:14557":{"crate_id":4,"path":["std","process","Child"],"kind":"struct"},"4:10696:14744":{"crate_id":4,"path":["std","error","private","Internal"],"kind":"struct"},"4:4362:14611":{"crate_id":4,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"24:4370:6654":{"crate_id":24,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"4:15930:2103":{"crate_id":4,"path":["std","u64"],"kind":"primitive"},"6:6812:8216":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"16:5707:14912":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"4:4688:1950":{"crate_id":4,"path":["std","io","Write"],"kind":"trait"},"16:3264:12108":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"6:5953:4437":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"4:9633:15181":{"crate_id":4,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"25:10519:9187":{"crate_id":25,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:10149:9188":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:12783:15594":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:22540:54534":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"17:11947:15447":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"4:1161:43188":{"crate_id":4,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"18:811:14994":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"25:2946:11840":{"crate_id":25,"path":["object","read","elf","note","NoteHeader"],"kind":"trait"},"4:10576:58098":{"crate_id":4,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"25:11728:16704":{"crate_id":25,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"16:6136:13037":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"4:15910:2086":{"crate_id":4,"path":["std","char"],"kind":"primitive"},"25:13831:15601":{"crate_id":25,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"4:5740:9083":{"crate_id":4,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"16:6366:3149":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"12:840:14536":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"25:10623:61650":{"crate_id":25,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"4:12191:14518":{"crate_id":4,"path":["std","time","Instant"],"kind":"struct"},"24:1737:4523":{"crate_id":24,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"4:11386:3400":{"crate_id":4,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:10507:142":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"17:12659:15578":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"6:1744:4523":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"24:4248:2286":{"crate_id":24,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:14030:2299":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"4:2751:14427":{"crate_id":4,"path":["std","error","Report"],"kind":"struct"},"1:3085:3197":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"25:10012:2726":{"crate_id":25,"path":["object","endian","U32Bytes"],"kind":"struct"},"24:1693:4517":{"crate_id":24,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"25:11249:11885":{"crate_id":25,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:51336:16546":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:3710:224":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"18:0:2143":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:50390:2302":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"5:8151:9062":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:3698:9124":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:56329:236":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"23:3185:12094":{"crate_id":23,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"6:4060:6623":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"4:4991:14434":{"crate_id":4,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"23:3593:12110":{"crate_id":23,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:47868:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"6:4300:6644":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:9719:9184":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"18:660:15006":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"16:5488:13015":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"4:5379:14626":{"crate_id":4,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"4:4045:127":{"crate_id":4,"path":["std","io","error","Error"],"kind":"struct"},"17:9404:9180":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"23:5110:12650":{"crate_id":23,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:53367:16603":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"6:1554:4504":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"16:5421:13011":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"26:661:15006":{"crate_id":26,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"4:14847:15187":{"crate_id":4,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"23:6982:13037":{"crate_id":23,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"13:0:2139":{"crate_id":13,"path":["std_detect"],"kind":"module"},"4:11131:3147":{"crate_id":4,"path":["std","io","Lines"],"kind":"struct"},"24:5946:4437":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:49230:13593":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:12442:15541":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"25:12524:9497":{"crate_id":25,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"24:1526:4501":{"crate_id":24,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:12699:15583":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"6:6124:7687":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"23:6933:13033":{"crate_id":23,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"24:5980:7681":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:38750:3196":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"5:5903:1333":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"25:11986:9191":{"crate_id":25,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"25:12443:2678":{"crate_id":25,"path":["object","elf","FileHeader64"],"kind":"struct"},"23:3046:12088":{"crate_id":23,"path":["gimli","common","LineEncoding"],"kind":"struct"},"24:5305:7268":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"12:1235:14897":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"23:8219:13081":{"crate_id":23,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"4:4265:9019":{"crate_id":4,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"16:3429:12114":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"6:6893:6799":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"16:5766:13025":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:51119:14247":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"12:1651:14907":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"24:5123:7214":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:8141:56038":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"4:5794:14425":{"crate_id":4,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:25202:2249":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"23:7542:14933":{"crate_id":23,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:3159:228":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"25:14997:15975":{"crate_id":25,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"16:4230:12563":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:13282:15784":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"25:5419:9162":{"crate_id":25,"path":["object","read","traits","ObjectSegment"],"kind":"trait"},"25:11035:11839":{"crate_id":25,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"6:4127:6631":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"12:2309:16293":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"16:7303:13082":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"6:6106:7686":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:610:3626":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"4:5376:14625":{"crate_id":4,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"23:5648:12788":{"crate_id":23,"path":["gimli","constants","DwLnct"],"kind":"struct"},"24:63:2216":{"crate_id":24,"path":["libc","unix","c_int"],"kind":"typedef"},"1:52735:14250":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"25:13588:15557":{"crate_id":25,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"25:14477:15815":{"crate_id":25,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"23:8473:13093":{"crate_id":23,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"25:14509:15824":{"crate_id":25,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"23:5307:12722":{"crate_id":23,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:2847:97":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"1:5020:2317":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"4:897:14005":{"crate_id":4,"path":["std","thread","scoped","Scope"],"kind":"struct"},"24:3938:6609":{"crate_id":24,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"25:12729:9711":{"crate_id":25,"path":["object","elf","Versym"],"kind":"struct"},"17:13590:15864":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"6:1700:4517":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"25:10529:61648":{"crate_id":25,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"25:12576:9505":{"crate_id":25,"path":["object","elf","Sym64"],"kind":"struct"},"1:46644:14051":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"5:8112:14754":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"16:3287:12109":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:8084:14493":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"16:6166:13039":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"12:2045:14526":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"1:48473:67":{"crate_id":1,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"25:13343:15502":{"crate_id":25,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"16:6744:14940":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"5:3772:13587":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"25:11089:11831":{"crate_id":25,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"25:14584:15847":{"crate_id":25,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:51278:14219":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"25:11715:16703":{"crate_id":25,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"4:10426:1642":{"crate_id":4,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:1622:4511":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"24:6903:6801":{"crate_id":24,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:50969:16542":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"23:4036:12119":{"crate_id":23,"path":["gimli","arch","RiscV"],"kind":"struct"},"23:8119:13074":{"crate_id":23,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:9896:660":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"4:10807:9001":{"crate_id":4,"path":["std","fs","Permissions"],"kind":"struct"},"17:12741:15587":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"5:1472:14547":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"5:4306:13587":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"27:604:15053":{"crate_id":27,"path":["miniz_oxide","inflate","stream","MinReset"],"kind":"struct"},"6:5228:7263":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:46532:14043":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"25:13109:15473":{"crate_id":25,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"24:4388:6656":{"crate_id":24,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:48753:14115":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"4:15892:1643":{"crate_id":4,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:8860:13671":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:9551:9154":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"16:7236:13078":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"24:5340:7269":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"4:2170:9058":{"crate_id":4,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"1:49709:13433":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"23:3418:12103":{"crate_id":23,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"25:11768:16707":{"crate_id":25,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"16:6682:13063":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"25:9814:9175":{"crate_id":25,"path":["object","common","FileFlags"],"kind":"enum"},"25:14596:15850":{"crate_id":25,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"9:963:11899":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"25:9840:9176":{"crate_id":25,"path":["object","common","SegmentFlags"],"kind":"enum"},"24:1556:4505":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:3370:9115":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:51683:14208":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"6:4331:6648":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:14:1951":{"crate_id":1,"path":["core","write"],"kind":"macro"},"24:5352:7270":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"24:5221:7263":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"23:5483:12748":{"crate_id":23,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:6999:13067":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:46734:14058":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:46295:14419":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:9849:61648":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"25:11180:11880":{"crate_id":25,"path":["object","read","elf","version","Version"],"kind":"struct"},"6:1908:4662":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"24:4157:6633":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"4:1136:1649":{"crate_id":4,"path":["std","backtrace","Backtrace"],"kind":"struct"},"23:4407:12147":{"crate_id":23,"path":["gimli","constants","DwUt"],"kind":"struct"},"25:11964:15397":{"crate_id":25,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:13746:15921":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"24:6874:6797":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"25:10254:2674":{"crate_id":25,"path":["object","read","util","StringTable"],"kind":"struct"},"1:50109:13398":{"crate_id":1,"path":["core","str","LinesAnyMap"],"kind":"struct"},"14:244:2267":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"6:5522:7311":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:3377:9112":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:13318:15789":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"26:850:14997":{"crate_id":26,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"4:15389:58099":{"crate_id":4,"path":["std","panicking","Hook"],"kind":"enum"},"16:6152:13038":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"25:84:2479":{"crate_id":25,"path":["object","endian","NativeEndian"],"kind":"constant"},"24:4412:6659":{"crate_id":24,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"6:4459:6664":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"6:3945:6609":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:13370:15805":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:9162:9175":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"25:14529:15831":{"crate_id":25,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"25:12540:9498":{"crate_id":25,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"12:968:14544":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"16:3218:12106":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"5:2310:14769":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"25:13646:15565":{"crate_id":25,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"6:569:3620":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"4:2937:179":{"crate_id":4,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"24:1683:4516":{"crate_id":24,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"23:5583:12773":{"crate_id":23,"path":["gimli","constants","DwLns"],"kind":"struct"},"16:3365:12112":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"9:469:2748":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:13240:16758":{"crate_id":1,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"5:4643:15148":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:50113:13400":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"8:0:1644":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"12:112:61638":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"23:7288:3149":{"crate_id":23,"path":["gimli","read","line","LineRow"],"kind":"struct"},"25:11236:11857":{"crate_id":25,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"4:9068:2352":{"crate_id":4,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"4:4631:9018":{"crate_id":4,"path":["std","io","Read"],"kind":"trait"},"25:3920:14966":{"crate_id":25,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"4:7937:16784":{"crate_id":4,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"26:767:15270":{"crate_id":26,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:5166:2326":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:11254:9202":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"16:7042:14950":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"23:7191:13050":{"crate_id":23,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:11918:13602":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:4032:14157":{"crate_id":1,"path":["core","any","Provider"],"kind":"trait"},"23:6039:16010":{"crate_id":23,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"6:6176:7689":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"25:14404:15803":{"crate_id":25,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:51086:14214":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:23733:14033":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"28:46:15236":{"crate_id":28,"path":["adler","algo","U32X4"],"kind":"struct"},"1:5189:2327":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:9896:61646":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"6:4371:6653":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"4:3345:9013":{"crate_id":4,"path":["std","fs","read_dir"],"kind":"function"},"23:4632:12297":{"crate_id":23,"path":["gimli","constants","DwTag"],"kind":"struct"},"6:4449:6663":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"12:2025:14523":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"25:10984:11834":{"crate_id":25,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:8902:9150":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"14:216:2273":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"6:6028:4465":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"25:11913:15044":{"crate_id":25,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"25:12687:9545":{"crate_id":25,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"24:530:3617":{"crate_id":24,"path":["libc","unix","rlimit"],"kind":"struct"},"16:7894:13104":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"4:10609:13982":{"crate_id":4,"path":["std","thread","Thread"],"kind":"struct"},"16:7467:13090":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:11539:9497":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:11970:15455":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"16:4790:12748":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"15:230:3151":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"25:13218:15486":{"crate_id":25,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:10950:16702":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"26:755:61655":{"crate_id":26,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"16:5580:14911":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:24798:164":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"23:5079:12644":{"crate_id":23,"path":["gimli","constants","DwLle"],"kind":"struct"},"5:3951:9058":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"24:5184:7259":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:12645:15577":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"27:1040:11901":{"crate_id":27,"path":["miniz_oxide","MZError"],"kind":"enum"},"4:13837:14561":{"crate_id":4,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"25:4250:50194":{"crate_id":25,"path":["object","read","macho","symbol","Nlist"],"kind":"trait"},"6:0:798":{"crate_id":6,"path":["libc"],"kind":"module"},"16:7786:13097":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:3421:9122":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"23:5364:12729":{"crate_id":23,"path":["gimli","constants","DwId"],"kind":"struct"},"4:7800:14567":{"crate_id":4,"path":["std","process","Termination"],"kind":"trait"},"23:5455:12745":{"crate_id":23,"path":["gimli","constants","DwOrd"],"kind":"struct"},"24:1595:4509":{"crate_id":24,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:3562:9056":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"17:13685:15914":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:51317:14204":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"6:6200:7691":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:53457:16609":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"17:12195:15487":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"26:775:15260":{"crate_id":26,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"24:4340:6650":{"crate_id":24,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"25:14988:15971":{"crate_id":25,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:13574:15861":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"25:12289:9203":{"crate_id":25,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:12182:15486":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"24:4059:6624":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:46226:13433":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:46940:14494":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"25:12705:9601":{"crate_id":25,"path":["object","elf","Dyn32"],"kind":"struct"},"1:3345:9104":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"16:4922:12780":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"25:2657:11843":{"crate_id":25,"path":["object","read","elf","relocation","Rela"],"kind":"trait"},"16:7549:13093":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"23:62:12057":{"crate_id":23,"path":["gimli","endianity","Endianity"],"kind":"trait"},"4:8415:14760":{"crate_id":4,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"4:10675:13784":{"crate_id":4,"path":["std","env","VarError"],"kind":"enum"},"4:15041:14570":{"crate_id":4,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"24:603:3626":{"crate_id":24,"path":["libc","unix","itimerval"],"kind":"struct"},"25:10641:9190":{"crate_id":25,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"24:3971:6613":{"crate_id":24,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"14:194:2265":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"23:5988:12058":{"crate_id":23,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:49377:13417":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"24:4471:6666":{"crate_id":24,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"27:0:1677":{"crate_id":27,"path":["miniz_oxide"],"kind":"module"},"23:6947:13034":{"crate_id":23,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:9971:61645":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"4:10365:1635":{"crate_id":4,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"6:1665:4514":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:10279:2672":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"6:5563:7313":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:3333:9102":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"19:117:16239":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"1:11416:13588":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:10061:16685":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:10571:15035":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"24:6207:7692":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"24:6886:6799":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:3412:9120":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:50378:14190":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"23:7690:14942":{"crate_id":23,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:1563:4505":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:605:3625":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"24:4494:6668":{"crate_id":24,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:12385:15529":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"24:1565:4506":{"crate_id":24,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:11519:9441":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"24:5160:7257":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"24:6193:7691":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"25:10732:16684":{"crate_id":25,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"25:9740:9173":{"crate_id":25,"path":["object","common","RelocationKind"],"kind":"enum"},"4:5802:14426":{"crate_id":4,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"16:6518:13056":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:1236:16680":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"23:0:1964":{"crate_id":23,"path":["gimli"],"kind":"module"},"25:12619:9540":{"crate_id":25,"path":["object","elf","Rel32"],"kind":"struct"},"5:5:1493":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"16:7342:13084":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:49693:13431":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"26:812:14994":{"crate_id":26,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:10377:11837":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:47608:3122":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"9:776:14824":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"12:1688:14909":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:6611:56799":{"crate_id":1,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"26:730:61658":{"crate_id":26,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:47742:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"23:7640:14938":{"crate_id":23,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"4:12061:9062":{"crate_id":4,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:294:16678":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"24:1589:4508":{"crate_id":24,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:12795:15601":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"5:1939:9058":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"25:12607:9507":{"crate_id":25,"path":["object","elf","Syminfo64"],"kind":"struct"},"16:6014:13031":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:48458:70":{"crate_id":1,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"28:0:2141":{"crate_id":28,"path":["adler"],"kind":"module"},"6:4358:6651":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:5146:2325":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"25:14628:15858":{"crate_id":25,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:9237:2849":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:12807:13436":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"5:8188:9062":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"25:11209:11856":{"crate_id":25,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"16:6126:13036":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"23:4339:12129":{"crate_id":23,"path":["gimli","constants","DwSect"],"kind":"struct"},"23:6878:2478":{"crate_id":23,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:8377:136":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"24:4265:6641":{"crate_id":24,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"24:5178:7258":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:3357:9109":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:3392:9116":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"26:668:15007":{"crate_id":26,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"6:3978:6613":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:46362:14415":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"6:1527:4500":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"23:8662:13095":{"crate_id":23,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"24:3983:6614":{"crate_id":24,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"14:47:1849":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:2178:13684":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"24:4487:6667":{"crate_id":24,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"24:5248:7243":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"25:11934:54068":{"crate_id":25,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"1:48784:16536":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"24:1533:4502":{"crate_id":24,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:51635:14223":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:12552:15557":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"23:8710:13097":{"crate_id":23,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"20:194:2265":{"crate_id":20,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"5:6954:14678":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"25:12785:9725":{"crate_id":25,"path":["object","elf","Vernaux"],"kind":"struct"},"17:10236:11847":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:32299:13686":{"crate_id":1,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"27:829:3118":{"crate_id":27,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"25:13046:15462":{"crate_id":25,"path":["object","macho","MachHeader64"],"kind":"struct"},"4:15096:14507":{"crate_id":4,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:46053:14270":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"17:10468:11855":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:24128:19761":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:14040:14332":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"1:3497:1654":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:12262:15497":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"23:3364:12101":{"crate_id":23,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:47616:13587":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"1:3153:149":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"17:13497:15839":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"26:721:15262":{"crate_id":26,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"23:6756:13028":{"crate_id":23,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"6:3951:6610":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:23901:14342":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"25:14501:15823":{"crate_id":25,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"16:4671:12729":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"26:858:14998":{"crate_id":26,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"4:7446:185":{"crate_id":4,"path":["std","path","Path"],"kind":"struct"},"1:56264:236":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:3228:115":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"16:7360:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"16:6072:13032":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:52185:14229":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"25:14418:15805":{"crate_id":25,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:11328:9204":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"27:608:15054":{"crate_id":27,"path":["miniz_oxide","inflate","stream","ZeroReset"],"kind":"struct"},"25:14144:15745":{"crate_id":25,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"25:11878:15043":{"crate_id":25,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"6:4501:6668":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:52989:14238":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"25:12557:9504":{"crate_id":25,"path":["object","elf","Sym32"],"kind":"struct"},"5:8304:14365":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:6424:13053":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"5:4215:9060":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:22899:14034":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:51384:14248":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"6:157:3283":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"26:867:14999":{"crate_id":26,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"24:1547:4504":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"23:7144:13047":{"crate_id":23,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"5:3375:14710":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:46254:14297":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:47564:205":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"4:11111:14057":{"crate_id":4,"path":["std","io","Take"],"kind":"struct"},"24:4293:6644":{"crate_id":24,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:13609:15869":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"4:8644:2344":{"crate_id":4,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"23:3638:12112":{"crate_id":23,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:11186:9199":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:3714:12147":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"23:5199:12664":{"crate_id":23,"path":["gimli","constants","DwVis"],"kind":"struct"},"25:10797:14978":{"crate_id":25,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"4:11191:14442":{"crate_id":4,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"17:11159:9198":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"4:14964:9027":{"crate_id":4,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"23:648:14914":{"crate_id":23,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"6:6644:8055":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:24011:16409":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:50346:14331":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:7835:14040":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"24:3874:6605":{"crate_id":24,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:10912:16696":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"23:7054:13041":{"crate_id":23,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:12408:15538":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"6:6221:7693":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"25:14442:15809":{"crate_id":25,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:13356:15803":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:48762:146":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"24:3959:6612":{"crate_id":24,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:32293:9054":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"16:6807:13066":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:23994:14287":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"25:10741:16685":{"crate_id":25,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"25:10208:1972":{"crate_id":25,"path":["object","read","util","Bytes"],"kind":"struct"},"24:4452:6664":{"crate_id":24,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"25:13076:15465":{"crate_id":25,"path":["object","macho","LcStr"],"kind":"struct"},"20:11:1849":{"crate_id":20,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:48200:13362":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"16:2991:12097":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"18:677:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:49419:13421":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:12040:15465":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:53534:16612":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"12:2018:9058":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"17:8849:9153":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:13788:15934":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:11499:9440":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:52311:14221":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:11572:9504":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:13154:15751":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"4:13700:14569":{"crate_id":4,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"6:6239:7694":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"6:4083:6626":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"6:6051:4438":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"25:11832:15022":{"crate_id":25,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:9809:61643":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"25:10891:16688":{"crate_id":25,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"6:1547:4503":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"6:1760:4524":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"4:9765:15182":{"crate_id":4,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"25:11533:16695":{"crate_id":25,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"24:6214:7693":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:49220:13592":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"4:12116:14591":{"crate_id":4,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"6:1533:4501":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"25:13191:15482":{"crate_id":25,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:10962:16703":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"5:3970:15143":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:23830:14340":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:2267:14153":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"16:2794:12089":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"23:8808:13103":{"crate_id":23,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"6:3892:6606":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"18:801:14993":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"4:6704:8908":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"5:6672:2342":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"25:11367:15350":{"crate_id":25,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"6:1736:4522":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"4:14732:14566":{"crate_id":4,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"6:5459:7279":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"16:7884:13103":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"25:11102:11830":{"crate_id":25,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"6:563:3619":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"17:10353:11839":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"16:7856:13101":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"12:1118:14547":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"6:4377:6654":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"6:6185:7690":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"4:10795:8998":{"crate_id":4,"path":["std","fs","ReadDir"],"kind":"struct"},"1:49898:14087":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:51063:14226":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"24:1577:4507":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"25:14962:15962":{"crate_id":25,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"4:8913:1662":{"crate_id":4,"path":["std","sync","once","Once"],"kind":"struct"},"24:6845:6793":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:12917:15603":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"25:12085:9195":{"crate_id":25,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:5082:2322":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:11100:9195":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:50145:121":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"23:7440:13056":{"crate_id":23,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"12:930:14541":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"23:4465:12180":{"crate_id":23,"path":["gimli","constants","DwCfa"],"kind":"struct"},"6:4293:6643":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:2872:104":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:11140:13423":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"23:6320:13015":{"crate_id":23,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"15:0:1676":{"crate_id":15,"path":["addr2line"],"kind":"module"},"4:3192:128":{"crate_id":4,"path":["std","fs","File"],"kind":"struct"},"4:9732:14620":{"crate_id":4,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:46693:14055":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"5:4628:235":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"23:3783:12116":{"crate_id":23,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:24174:16430":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:11147:9197":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:3156:135":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"17:8954:9169":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"4:9065:2351":{"crate_id":4,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"4:15922:2095":{"crate_id":4,"path":["std","i8"],"kind":"primitive"},"16:3172:12104":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:12494:15547":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"4:11197:14533":{"crate_id":4,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"4:9342:14447":{"crate_id":4,"path":["std","std_float","StdFloat"],"kind":"trait"},"25:14906:15954":{"crate_id":25,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:11222:13589":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:51224:14227":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"16:4734:12742":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"6:4164:6633":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:49240:13600":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"25:3537:14971":{"crate_id":25,"path":["object","read","macho","file","MachHeader"],"kind":"trait"},"17:12307:15502":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"17:12275:15498":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:11045:9192":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:24196:2252":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"1:3278:3141":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"1:3506:132":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:13180:15757":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"24:3898:6607":{"crate_id":24,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"23:6023:2675":{"crate_id":23,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"25:13492:15543":{"crate_id":25,"path":["object","macho","TwolevelHint"],"kind":"struct"},"16:3392:12113":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"25:14209:15755":{"crate_id":25,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"4:8294:13998":{"crate_id":4,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"5:5875:15152":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"1:3291:2292":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"5:3048:16782":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"16:7119:13069":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:10975:16704":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"25:15064:15987":{"crate_id":25,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"23:6644:13027":{"crate_id":23,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"5:3341:14709":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"4:11338:14671":{"crate_id":4,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"24:4039:6621":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"6:4241:6639":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"23:6337:13016":{"crate_id":23,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"4:11349:14638":{"crate_id":4,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"1:10557:14114":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"5:6688:14694":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"23:5966:13006":{"crate_id":23,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:9745:86":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:49193:13586":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"6:5400:7274":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"24:5379:7273":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:11030:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:4721:14151":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:3416:9121":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"4:8930:14653":{"crate_id":4,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"5:8321:2280":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"16:6554:13057":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"24:154:3284":{"crate_id":24,"path":["libc","unix","fpos_t"],"kind":"enum"},"5:8121:9060":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"4:11504:3118":{"crate_id":4,"path":["std","path","State"],"kind":"enum"},"25:5518:9158":{"crate_id":25,"path":["object","read","SymbolMapEntry"],"kind":"trait"},"25:13707:15579":{"crate_id":25,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:48988:13609":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"14:0:1679":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:8857:2290":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"16:0:1964":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:53131:14242":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"5:5315:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"20:56:9218":{"crate_id":20,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"16:7295:13081":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"5:923:14752":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"24:150:3283":{"crate_id":24,"path":["libc","unix","FILE"],"kind":"enum"},"25:4620:15025":{"crate_id":25,"path":["object","read","pe","file","ImageNtHeaders"],"kind":"trait"},"12:2303:16292":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:23048:41648":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"17:12221:15490":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"16:3064:12100":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"16:3506:12116":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:49569:13430":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"23:5170:12660":{"crate_id":23,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:50167:14372":{"crate_id":1,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"4:14494:9000":{"crate_id":4,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"16:6780:13065":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"24:6851:6794":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:53280:14245":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:5386:7273":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:48737:14116":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"23:7130:13046":{"crate_id":23,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"1:2203:1050":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"25:14434:15807":{"crate_id":25,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"6:1617:4510":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"4:1463:14537":{"crate_id":4,"path":["std","collections","hash","map","Values"],"kind":"struct"},"5:3396:14526":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"4:15127:14509":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"4:11527:3119":{"crate_id":4,"path":["std","path","PrefixComponent"],"kind":"struct"},"4:15920:2093":{"crate_id":4,"path":["std","f32"],"kind":"primitive"},"4:8032:13998":{"crate_id":4,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"12:2315:61640":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"25:13323:15499":{"crate_id":25,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"6:4052:6622":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"24:6078:7683":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:2907:124":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"1:11374:13426":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"25:2877:2669":{"crate_id":25,"path":["object","read","elf","compression","CompressionHeader"],"kind":"trait"},"1:11402:13590":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:23424:14195":{"crate_id":1,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"17:10477:11854":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"4:11283:14627":{"crate_id":4,"path":["std","net","tcp","Incoming"],"kind":"struct"},"26:0:2143":{"crate_id":26,"path":["memchr"],"kind":"module"},"24:3998:6616":{"crate_id":24,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"18:739:16676":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"16:3320:12110":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:11822:9727":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"4:786:15184":{"crate_id":4,"path":["std","thread","local","fast","Key"],"kind":"struct"},"25:13006:15455":{"crate_id":25,"path":["object","macho","FatArch32"],"kind":"struct"},"4:13948:14562":{"crate_id":4,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"1:53068:14222":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:3727:9128":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"23:6918:13032":{"crate_id":23,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"24:3944:6610":{"crate_id":24,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:9951:14310":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"4:1501:14540":{"crate_id":4,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:5092:2323":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"24:4066:6625":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:23096:14203":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"5:7444:15143":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"25:12800:9726":{"crate_id":25,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:3972:6457":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"7:38:2421":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"6:3957:6611":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:10128:14979":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:12247:15494":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:2968:12096":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:11183:13436":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:51150:14235":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:1311:14982":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"23:3264:12097":{"crate_id":23,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"23:3491:12106":{"crate_id":23,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"25:10329:9183":{"crate_id":25,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"17:12118:15478":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"25:10721:16683":{"crate_id":25,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:53194:14207":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"4:11357:14627":{"crate_id":4,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"4:5973:14675":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"4:8808:162":{"crate_id":4,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"25:14020:15654":{"crate_id":25,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:3486:2240":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"25:10786:14977":{"crate_id":25,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"25:12758:9721":{"crate_id":25,"path":["object","elf","Verdaux"],"kind":"struct"},"17:8929:9168":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:24144:19770":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"23:7921:13067":{"crate_id":23,"path":["gimli","read","op","Piece"],"kind":"struct"},"16:6021:14927":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:5389:14410":{"crate_id":1,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"4:12156:2347":{"crate_id":4,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"23:6804:2513":{"crate_id":23,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:5522:13017":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"6:3990:6614":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"4:15932:2105":{"crate_id":4,"path":["std","isize"],"kind":"primitive"},"1:22523:54494":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"6:5998:7682":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"12:877:9058":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"25:10409:61642":{"crate_id":25,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"16:6605:13060":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:51485:14243":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:5561:1777":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"16:4614:12722":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"25:12322:9205":{"crate_id":25,"path":["object","read","CompressionFormat"],"kind":"enum"},"16:2912:12094":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"23:8316:13086":{"crate_id":23,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:47479:3122":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"17:2543:11853":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"18:704:15260":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:11628:9540":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"4:15326:14633":{"crate_id":4,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:53404:16606":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"25:11139:11882":{"crate_id":25,"path":["object","read","elf","note","Note"],"kind":"struct"},"6:4255:2286":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"23:6265:13012":{"crate_id":23,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"25:3988:9166":{"crate_id":25,"path":["object","read","macho","section","Section"],"kind":"trait"},"4:8695:2346":{"crate_id":4,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:6415:14048":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:13772:15930":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:48745:16533":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"4:11544:3120":{"crate_id":4,"path":["std","path","Component"],"kind":"enum"},"16:5975:2513":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:53241:14225":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"4:8978:2358":{"crate_id":4,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"12:761:13587":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"25:10576:61646":{"crate_id":25,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"6:4203:6636":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"5:1653:14538":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"4:5724:9080":{"crate_id":4,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"5:6475:9060":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"25:10997:11833":{"crate_id":25,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"24:504:3613":{"crate_id":24,"path":["libc","unix","group"],"kind":"struct"},"1:22799:14252":{"crate_id":1,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:2753:579":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:50180:14373":{"crate_id":1,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"25:11343:16692":{"crate_id":25,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"4:10668:14550":{"crate_id":4,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"5:2200:15145":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"4:15913:2088":{"crate_id":4,"path":["std","pointer"],"kind":"primitive"},"25:12741:9714":{"crate_id":25,"path":["object","elf","Verdef"],"kind":"struct"},"23:3218:12095":{"crate_id":23,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:46503:2237":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"12:949:14543":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"24:584:3623":{"crate_id":24,"path":["libc","unix","winsize"],"kind":"struct"},"23:7666:14940":{"crate_id":23,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:49655:3147":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"17:11640:9541":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"4:11164:14437":{"crate_id":4,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"17:11809:9726":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"5:7771:234":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"23:6216:13009":{"crate_id":23,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"17:13221:15770":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"4:13336:14639":{"crate_id":4,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"4:7512:119":{"crate_id":4,"path":["std","path","Display"],"kind":"struct"},"17:12771:9204":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"23:438:12066":{"crate_id":23,"path":["gimli","read","cfi","UnwindOffset"],"kind":"trait"},"17:12073:15473":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"11:46:15236":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"16:7146:13070":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"25:12313:9204":{"crate_id":25,"path":["object","read","Relocation"],"kind":"struct"},"25:12391:15415":{"crate_id":25,"path":["object","archive","Header"],"kind":"struct"},"4:3197:2477":{"crate_id":4,"path":["std","fs","read"],"kind":"function"},"17:10502:11884":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"23:8150:13077":{"crate_id":23,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"4:8479:202":{"crate_id":4,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"23:7604:13063":{"crate_id":23,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"4:15916:2091":{"crate_id":4,"path":["std","str"],"kind":"primitive"},"23:5141:12656":{"crate_id":23,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:3793:2295":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"24:4324:6648":{"crate_id":24,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:10041:16683":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:4046:6621":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:13924:54589":{"crate_id":1,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"25:14541:15832":{"crate_id":25,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:10611:16692":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"25:10959:2672":{"crate_id":25,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:49976:14090":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"4:12664:128":{"crate_id":4,"path":["std","sys","unix","fs","File"],"kind":"struct"},"4:10692:13791":{"crate_id":4,"path":["std","env","JoinPathsError"],"kind":"struct"},"4:823:15184":{"crate_id":4,"path":["std","thread","local","os","Key"],"kind":"struct"},"1:49142:14324":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"26:637:15260":{"crate_id":26,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:24832:2254":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:24052:2251":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"4:4706:9020":{"crate_id":4,"path":["std","io","Seek"],"kind":"trait"},"4:1486:9058":{"crate_id":4,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"5:4515:14722":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"1:12733:13442":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"6:5197:7260":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:542:9166":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"18:782:15260":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:11337:9205":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"23:6304:13014":{"crate_id":23,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"4:10839:118":{"crate_id":4,"path":["std","fs","DirBuilder"],"kind":"struct"},"27:467:2748":{"crate_id":27,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"4:2192:14526":{"crate_id":4,"path":["std","collections","hash","set","Union"],"kind":"struct"},"24:1615:4511":{"crate_id":24,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:45966:9125":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"24:6044:4438":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"4:8137:13998":{"crate_id":4,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"6:5420:7277":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"24:3950:6611":{"crate_id":24,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"5:5788:15143":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"25:5487:14156":{"crate_id":25,"path":["object","read","private","Sealed"],"kind":"trait"},"16:7406:13087":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"25:13298:15497":{"crate_id":25,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"23:6007:9152":{"crate_id":23,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:13041:15709":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:46922:1662":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"12:2009:9062":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"25:11852:15024":{"crate_id":25,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"13:232:16288":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:2948:184":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:51462:14240":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"4:8486:14586":{"crate_id":4,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"24:6093:7685":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"25:4187:16681":{"crate_id":25,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:37569:178":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"18:712:13289":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:607:9167":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"24:5515:7311":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"4:10591:13996":{"crate_id":4,"path":["std","thread","ThreadId"],"kind":"struct"},"4:10847:14605":{"crate_id":4,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"9:41:14827":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"24:556:3619":{"crate_id":24,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"9:1056:11902":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"25:11546:15382":{"crate_id":25,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"1:49266:13598":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"24:1729:4522":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:10160:15347":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"6:1540:4502":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"25:5899:2668":{"crate_id":25,"path":["object","elf","SHF_COMPRESSED"],"kind":"constant"},"12:892:14886":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"1:8390:2370":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"9:749:14787":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"17:11604:9506":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"16:4890:12773":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"4:10943:14481":{"crate_id":4,"path":["std","io","error","ErrorKind"],"kind":"enum"},"6:6068:4441":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"16:547:14914":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"9:809:3118":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"5:1685:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:46445:2241":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"25:10449:61651":{"crate_id":25,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"24:5452:7279":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"6:5221:7262":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:7024:14949":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:12462:13582":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"16:6491:13055":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"4:14544:9016":{"crate_id":4,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"23:5722:12812":{"crate_id":23,"path":["gimli","constants","DwRle"],"kind":"struct"},"23:5688:12803":{"crate_id":23,"path":["gimli","constants","DwMacro"],"kind":"struct"},"5:374:2307":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"12:1253:14549":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"25:10439:9185":{"crate_id":25,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"24:5275:7266":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"25:4637:50274":{"crate_id":25,"path":["object","read","pe","file","ImageOptionalHeader"],"kind":"trait"},"16:4304:12612":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"25:13311:15498":{"crate_id":25,"path":["object","macho","ThreadCommand"],"kind":"struct"},"4:1505:14541":{"crate_id":4,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"4:12171:1661":{"crate_id":4,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"16:2866:12092":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:3398:9117":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"23:6842:13030":{"crate_id":23,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:10489:11856":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"4:10565:14007":{"crate_id":4,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:49310:13595":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"4:15927:2100":{"crate_id":4,"path":["std","u8"],"kind":"primitive"},"1:4709:14150":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:10673:50215":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:46931:16521":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"4:14507:16393":{"crate_id":4,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"5:3362:14525":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"6:1584:4507":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"4:2366:600":{"crate_id":4,"path":["std","env"],"kind":"module"},"17:10516:11857":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"4:3623:15164":{"crate_id":4,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"24:4432:6662":{"crate_id":24,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:11915:15418":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"25:12770:9722":{"crate_id":25,"path":["object","elf","Verneed"],"kind":"struct"},"17:13453:15825":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:23972:16407":{"crate_id":1,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"17:11277:9155":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"6:6214:7692":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:2850:12052":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:543:3618":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"17:11653:9542":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"5:8159:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"5:1694:14733":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:46008:2323":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"25:10859:15349":{"crate_id":25,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"4:5503:14633":{"crate_id":4,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"25:627:9167":{"crate_id":25,"path":["object","read","any","Comdat"],"kind":"struct"},"24:4076:6626":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:10403:11844":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:24662:168":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:51015:14246":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"25:12067:9194":{"crate_id":25,"path":["object","read","SectionIndex"],"kind":"struct"},"17:3743:14966":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:12475:1333":{"crate_id":1,"path":["core","str"],"kind":"module"},"14:231:14691":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:9034:9171":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"25:14883:15941":{"crate_id":25,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"16:5433:13012":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"25:299:16679":{"crate_id":25,"path":["object","read","util","DebugLen"],"kind":"struct"},"5:3894:14761":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"25:13735:15583":{"crate_id":25,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"4:6690:9082":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:299:16679":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:11885:13601":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:49401:13423":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"16:7971:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"4:2793:14428":{"crate_id":4,"path":["std","error","Indented"],"kind":"struct"},"23:8129:13075":{"crate_id":23,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"26:791:14992":{"crate_id":26,"path":["memchr","memmem","FindIter"],"kind":"struct"},"4:1522:14543":{"crate_id":4,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"6:1690:4516":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"4:11603:3124":{"crate_id":4,"path":["std","path","Ancestors"],"kind":"struct"},"24:5285:7267":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"25:14638:15861":{"crate_id":25,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:2253:13528":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"12:976:14545":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:11555:9498":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"6:4227:6638":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"4:11124:13423":{"crate_id":4,"path":["std","io","Split"],"kind":"struct"},"1:53495:16611":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"16:2816:12090":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:47700:91":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"5:3370:14523":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:9592:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"1:5582:14201":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:49804:14079":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"16:6391:13052":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:32307:56234":{"crate_id":1,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"25:2608:11853":{"crate_id":25,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:24526:171":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"5:8370:14688":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"25:11278:15032":{"crate_id":25,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"25:10280:61644":{"crate_id":25,"path":["object","read","any","FileInternal"],"kind":"enum"},"6:4410:6658":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"16:6964:2590":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:10517:146":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"17:13520:15847":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:4008:16681":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"4:2437:13789":{"crate_id":4,"path":["std","env","SplitPaths"],"kind":"struct"},"23:3291:12098":{"crate_id":23,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"4:5658:1985":{"crate_id":4,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"4:6942:9090":{"crate_id":4,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:49925:14088":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"25:14354:15786":{"crate_id":25,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"4:3524:14476":{"crate_id":4,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:46713:14061":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:48221:13364":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"6:670:3658":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"25:9606:9169":{"crate_id":25,"path":["object","common","SectionKind"],"kind":"enum"},"1:57638:16620":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"1:10424:16757":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"17:12287:15499":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"4:8844:16747":{"crate_id":4,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"4:10855:14478":{"crate_id":4,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"25:14218:15756":{"crate_id":25,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:46339:14414":{"crate_id":1,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"24:5991:7682":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"4:13875:14563":{"crate_id":4,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"23:6867:14927":{"crate_id":23,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:38813:3142":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"6:6085:7683":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:10623:1302":{"crate_id":1,"path":["core","slice"],"kind":"module"},"25:14684:15870":{"crate_id":25,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:3408:9119":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"24:1515:4499":{"crate_id":24,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"9:996:11900":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:13331:15795":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:6488:14062":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"12:377:14901":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"25:27:2480":{"crate_id":25,"path":["object","endian","Endian"],"kind":"trait"},"5:3488:9058":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"17:11847:9739":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"6:3997:6615":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"23:3337:12100":{"crate_id":23,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"16:6718:14938":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"16:5996:13030":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"16:3604:12121":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"25:10613:9189":{"crate_id":25,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:11794:9725":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:10269:109":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"4:14021:15186":{"crate_id":4,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"5:8097:2304":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"4:2175:14523":{"crate_id":4,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"6:578:3621":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"23:8284:194":{"crate_id":23,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"27:1097:11904":{"crate_id":27,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"4:11994:57944":{"crate_id":4,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"17:681:1635":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"23:7702:13065":{"crate_id":23,"path":["gimli","read","op","DieReference"],"kind":"enum"},"25:11779:15041":{"crate_id":25,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"23:194:12063":{"crate_id":23,"path":["gimli","read","util","ArrayLike"],"kind":"trait"},"1:10282:13363":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"24:4138:6632":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:46369:14416":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"24:1651:4513":{"crate_id":24,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:47538:2847":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:12946:15623":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"16:5960:14919":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"25:10156:9182":{"crate_id":25,"path":["object","endian","I64Bytes"],"kind":"struct"},"24:5393:7274":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:49469:13422":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"6:1729:4521":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"9:900:11973":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"16:5595:13019":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"18:169:53842":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"16:2733:12060":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"4:8393:3118":{"crate_id":4,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"25:10048:9179":{"crate_id":25,"path":["object","endian","U64Bytes"],"kind":"struct"},"4:10863:14480":{"crate_id":4,"path":["std","io","cursor","Cursor"],"kind":"struct"},"23:189:14156":{"crate_id":23,"path":["gimli","read","util","sealed","Sealed"],"kind":"trait"},"25:9890:9178":{"crate_id":25,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:13377:15806":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:50293:16541":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"17:13986:15984":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"25:10272:128":{"crate_id":25,"path":["object","read","any","File"],"kind":"struct"},"23:8895:13106":{"crate_id":23,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"4:7634:14558":{"crate_id":4,"path":["std","process","ChildStdin"],"kind":"struct"},"25:12184:9200":{"crate_id":25,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:10219:1950":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"4:1419:3122":{"crate_id":4,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"24:5971:7680":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"25:294:16678":{"crate_id":25,"path":["object","read","util","DebugByte"],"kind":"struct"},"24:4274:6642":{"crate_id":24,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"23:7112:13045":{"crate_id":23,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"1:46653:14066":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:12486:1937":{"crate_id":1,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:22893:14032":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"9:692:14785":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"23:8257:13083":{"crate_id":23,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"25:15050:15984":{"crate_id":25,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"5:432:1658":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:52377:14206":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:49962:14089":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"4:10586:13988":{"crate_id":4,"path":["std","thread","Builder"],"kind":"struct"},"6:4120:6630":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:47994:85":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:50990:16543":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"16:4535:12668":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"23:6998:13038":{"crate_id":23,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"4:14943:14565":{"crate_id":4,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"25:10708:16682":{"crate_id":25,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:23087:14156":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:10599:16691":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"16:5029:12812":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:50125:13403":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"17:13172:15756":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:12610:15565":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"4:15140:14514":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"25:11116:11881":{"crate_id":25,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"4:11952:14564":{"crate_id":4,"path":["std","process","ExitStatus"],"kind":"struct"},"6:4073:6625":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"4:7932:13997":{"crate_id":4,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"17:13963:15980":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"5:5093:660":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"1:28013:2250":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:11304:9203":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"6:4387:6655":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:45994:13105":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"20:216:2273":{"crate_id":20,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:24209:2256":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:53472:16610":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:24696:165":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"17:13192:15762":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:9245:9151":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:13912:15969":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"5:8335:2281":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"4:2401:13778":{"crate_id":4,"path":["std","env","VarsOs"],"kind":"struct"},"17:13978:15981":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"1:47495:9062":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"6:519:3614":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"26:740:16676":{"crate_id":26,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"17:10001:50096":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"16:5561:13018":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"4:11289:14628":{"crate_id":4,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:22561:54537":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"16:6591:13059":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"25:12644:9542":{"crate_id":25,"path":["object","elf","Rel64"],"kind":"struct"},"25:12970:15447":{"crate_id":25,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:53347:16601":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"4:4475:14485":{"crate_id":4,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:49202:13584":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:46681:14054":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"5:1843:15143":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"9:234:14804":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"4:7122:3045":{"crate_id":4,"path":["std","panic","always_abort"],"kind":"function"},"16:3939:12297":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"6:1717:4519":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"25:14749:15914":{"crate_id":25,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"4:15917:2092":{"crate_id":4,"path":["std","tuple"],"kind":"primitive"},"17:11993:15459":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"23:8767:13100":{"crate_id":23,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:9065:9172":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"4:9717:14619":{"crate_id":4,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"17:13429:15815":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"24:6232:7694":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:10052:16684":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"4:14520:129":{"crate_id":4,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"23:8344:13088":{"crate_id":23,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:3981:68":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:51612:14220":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"5:2553:14741":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:12537:15553":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:50117:13401":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"16:7420:13088":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"25:3248:50193":{"crate_id":25,"path":["object","read","macho","fat","FatArch"],"kind":"trait"},"1:3739:14166":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"27:1076:11902":{"crate_id":27,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"4:15914:2089":{"crate_id":4,"path":["std","array"],"kind":"primitive"},"6:1522:4499":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"4:3647:14472":{"crate_id":4,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"25:14200:15751":{"crate_id":25,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"1:13728:138":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"23:8302:13085":{"crate_id":23,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"16:6691:13064":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:4946:1660":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"1:13045:13409":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"24:625:3629":{"crate_id":24,"path":["libc","unix","protoent"],"kind":"struct"},"24:4351:6651":{"crate_id":24,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"25:14570:15840":{"crate_id":25,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:13394:15809":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"4:6324:14642":{"crate_id":4,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"6:4112:6629":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:13547:15854":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:47504:2590":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"5:8129:14755":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"23:1221:12062":{"crate_id":23,"path":["gimli","read","reader","Reader"],"kind":"trait"},"4:4397:14487":{"crate_id":4,"path":["std","io","stdio","Stdin"],"kind":"struct"},"1:49359:13415":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:10448:11848":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"23:4175:12120":{"crate_id":23,"path":["gimli","arch","X86"],"kind":"struct"},"25:2577:11832":{"crate_id":25,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"23:2121:12083":{"crate_id":23,"path":["gimli","read","op","EvaluationStorage"],"kind":"trait"},"24:4113:6630":{"crate_id":24,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:47547:2633":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"24:4045:6622":{"crate_id":24,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"6:4517:6670":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"23:8068:13070":{"crate_id":23,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"20:204:1848":{"crate_id":20,"path":["rustc_demangle","try_demangle"],"kind":"function"},"5:994:14753":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"4:15921:2094":{"crate_id":4,"path":["std","f64"],"kind":"primitive"},"24:4442:6663":{"crate_id":24,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"23:5516:12756":{"crate_id":23,"path":["gimli","constants","DwIdx"],"kind":"struct"},"23:3006:12060":{"crate_id":23,"path":["gimli","common","Format"],"kind":"enum"},"25:10808:14979":{"crate_id":25,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"6:1630:4512":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"25:11790:15049":{"crate_id":25,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"5:2262:14738":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"4:6866:9088":{"crate_id":4,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"24:1901:4662":{"crate_id":24,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:13119:15750":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:12168:15355":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:4395:6656":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"16:5790:13026":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"23:6427:13019":{"crate_id":23,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:11406:15415":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"16:4704:12737":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:45726:9129":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:9600:61644":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"17:9886:9188":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"4:8743:2357":{"crate_id":4,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"4:11587:3121":{"crate_id":4,"path":["std","path","Components"],"kind":"struct"},"23:6596:13025":{"crate_id":23,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"4:4697:58155":{"crate_id":4,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"23:7413:13055":{"crate_id":23,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"20:244:2267":{"crate_id":20,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"25:14673:15869":{"crate_id":25,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:24560:172":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"6:6935:8243":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:3268:1929":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:23098:14194":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"4:11967:14565":{"crate_id":4,"path":["std","process","ExitStatusError"],"kind":"struct"},"16:4823:12756":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"4:10933:14576":{"crate_id":4,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:4306:6645":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"6:4095:6627":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"4:2187:14525":{"crate_id":4,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"17:9943:61650":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"23:3241:12096":{"crate_id":23,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"5:3329:3122":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:13810:15939":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"25:13668:15576":{"crate_id":25,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"22:269:3156":{"crate_id":22,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:10224:16689":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:49279:13599":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"20:0:1679":{"crate_id":20,"path":["rustc_demangle"],"kind":"module"},"25:11679:16700":{"crate_id":25,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"25:13819:15594":{"crate_id":25,"path":["object","macho","RelocationInfo"],"kind":"struct"},"27:742:14786":{"crate_id":27,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"16:7843:13100":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"4:12186:2356":{"crate_id":4,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:48792:16537":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"5:3839:15143":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"25:10084:9180":{"crate_id":25,"path":["object","endian","I16Bytes"],"kind":"struct"},"6:4347:6650":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"24:6857:6795":{"crate_id":24,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"5:8167:14683":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"5:1597:3122":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"25:12239:9202":{"crate_id":25,"path":["object","read","Export"],"kind":"struct"},"27:769:14787":{"crate_id":27,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"4:7737:14563":{"crate_id":4,"path":["std","process","Stdio"],"kind":"struct"},"1:51297:16545":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"6:6858:6794":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:13054:15715":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:46308:13434":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"11:0:2141":{"crate_id":11,"path":["adler"],"kind":"module"},"17:13554:15855":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"25:13204:15355":{"crate_id":25,"path":["object","macho","Dylib"],"kind":"struct"},"1:48440:67":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"17:13477:15832":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"4:11137:14435":{"crate_id":4,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"16:7333:13083":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"0:0:1629":{"crate_id":0,"path":["backtrace"],"kind":"module"},"1:47633:178":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"25:14344:15785":{"crate_id":25,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"25:10840:15347":{"crate_id":25,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"24:4516:6671":{"crate_id":24,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"25:13695:15578":{"crate_id":25,"path":["object","macho","IdentCommand"],"kind":"struct"},"25:11579:14970":{"crate_id":25,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"4:10652:43187":{"crate_id":4,"path":["std","backtrace","RawFrame"],"kind":"enum"},"18:866:14999":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"24:6084:7684":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"23:6619:13026":{"crate_id":23,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"6:5987:7681":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"4:11269:16368":{"crate_id":4,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"17:10266:11835":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:13091:14081":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:11333:13591":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"6:5428:7278":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"23:1185:12065":{"crate_id":23,"path":["gimli","read","reader","ReaderOffset"],"kind":"trait"},"17:13062:15716":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:56316:236":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:11082:9194":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:13819:15941":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"4:1432:13587":{"crate_id":4,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"4:15245:14444":{"crate_id":4,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"16:2889:12093":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"4:11408:9087":{"crate_id":4,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"25:2431:2673":{"crate_id":25,"path":["object","read","elf","symbol","Sym"],"kind":"trait"},"16:6176:13040":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"4:0:1324":{"crate_id":4,"path":["std"],"kind":"module"},"1:3328:9103":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"5:8289:2282":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:11779:9722":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:11726:9602":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"4:2934:180":{"crate_id":4,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"23:6504:13021":{"crate_id":23,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"25:13761:15585":{"crate_id":25,"path":["object","macho","NoteCommand"],"kind":"struct"},"23:6789:14919":{"crate_id":23,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"5:2330:14737":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"16:7928:13105":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"24:1710:4519":{"crate_id":24,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"16:4386:12644":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"5:1195:61545":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"12:1200:14896":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"18:837:13411":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"24:3861:6604":{"crate_id":24,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"16:7216:13076":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"4:14157:14489":{"crate_id":4,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"1:45802:196":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:50301:190":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"4:15380:16398":{"crate_id":4,"path":["std","alloc","System"],"kind":"struct"},"23:5397:12737":{"crate_id":23,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:48503:127":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:74:1427":{"crate_id":1,"path":["core","u32"],"kind":"module"},"1:56277:236":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:4852:12760":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"4:14863:15188":{"crate_id":4,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"25:10399:9184":{"crate_id":25,"path":["object","read","any","SectionIterator"],"kind":"struct"},"4:12053:14585":{"crate_id":4,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:2062:14461":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"25:11520:16694":{"crate_id":25,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"25:13681:15577":{"crate_id":25,"path":["object","macho","SymsegCommand"],"kind":"struct"},"6:4341:6649":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:46428:14365":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:2492:2298":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"4:15911:2087":{"crate_id":4,"path":["std","unit"],"kind":"primitive"},"17:10081:2672":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:4902:2331":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"25:10933:11836":{"crate_id":25,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:13564:15858":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"6:6155:7688":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"23:5545:12760":{"crate_id":23,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"25:14165:15750":{"crate_id":25,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"6:6899:6800":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"27:41:14827":{"crate_id":27,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"4:11101:14043":{"crate_id":4,"path":["std","io","Chain"],"kind":"struct"},"25:10820:9187":{"crate_id":25,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"4:14154:14487":{"crate_id":4,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"24:536:3618":{"crate_id":24,"path":["libc","unix","rusage"],"kind":"struct"},"25:14852:15934":{"crate_id":25,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"22:153:2299":{"crate_id":22,"path":["addr2line","Context"],"kind":"struct"},"1:46545:2412":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"4:4436:14489":{"crate_id":4,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:12373:15527":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"19:0:994":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"5:8254:14553":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"25:13283:15494":{"crate_id":25,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"25:220:9149":{"crate_id":25,"path":["object","read","read_ref","ReadRef"],"kind":"trait"},"25:13467:15539":{"crate_id":25,"path":["object","macho","DylibReference"],"kind":"struct"},"4:6964:9085":{"crate_id":4,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:46355:13432":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:51864:16553":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"23:4923:12563":{"crate_id":23,"path":["gimli","constants","DwAt"],"kind":"struct"},"4:1534:14545":{"crate_id":4,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:45818:194":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"25:526:9165":{"crate_id":25,"path":["object","read","any","Segment"],"kind":"struct"},"17:9649:9183":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"17:13098:15745":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"23:8109:13073":{"crate_id":23,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"5:2777:14740":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:10276:119":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"6:4478:6666":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"6:5255:7243":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"4:13482:13789":{"crate_id":4,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"26:651:15002":{"crate_id":26,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"6:6636:8054":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"23:7566:13062":{"crate_id":23,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:53393:16605":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"25:12419:2677":{"crate_id":25,"path":["object","elf","FileHeader32"],"kind":"struct"},"24:4394:6657":{"crate_id":24,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"4:5652:1987":{"crate_id":4,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"25:13777:15587":{"crate_id":25,"path":["object","macho","Nlist32"],"kind":"struct"},"16:3488:12115":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"16:7226:13077":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"24:512:3614":{"crate_id":24,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:13780:15933":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:3255:2368":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"1:51431:14236":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"16:5273:13006":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:10280:13362":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"1:46554:14063":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:10864:15384":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:8450:2369":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:2381:2329":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"16:3018:12098":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"23:3468:12105":{"crate_id":23,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"25:11158:11854":{"crate_id":25,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"26:830:14996":{"crate_id":26,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:12725:15585":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:50141:13407":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:9238:2848":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:13854:16759":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:3473:116":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"4:4572:14494":{"crate_id":4,"path":["std","io","util","Repeat"],"kind":"struct"},"12:2323:16295":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"1:48491:107":{"crate_id":1,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"24:3855:6603":{"crate_id":24,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"26:802:14993":{"crate_id":26,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"4:2159:3122":{"crate_id":4,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"4:12181:2355":{"crate_id":4,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"16:5736:13023":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"6:5347:7269":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"4:13501:16789":{"crate_id":4,"path":["std","sys","unix","os","Env"],"kind":"struct"},"24:4357:6652":{"crate_id":24,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"16:3772:12180":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"4:2598:16745":{"crate_id":4,"path":["std","error","from","StringError"],"kind":"struct"},"17:12327:15503":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"4:14537:118":{"crate_id":4,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:46415:2242":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:55906:14028":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"27:983:11899":{"crate_id":27,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:3262:220":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"1:49819:14082":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"4:12671:8998":{"crate_id":4,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"1:45910:199":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:3258:218":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:24730:166":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:13743:150":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"24:5152:7256":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:45887:197":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"4:11067:9016":{"crate_id":4,"path":["std","io","IoSlice"],"kind":"struct"},"23:6464:13020":{"crate_id":23,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"20:189:1849":{"crate_id":20,"path":["rustc_demangle","Demangle"],"kind":"struct"},"10:0:2140":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"23:7022:13040":{"crate_id":23,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"25:14366:15789":{"crate_id":25,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"25:5374:2509":{"crate_id":25,"path":["object","read","traits","Object"],"kind":"trait"},"23:3445:12104":{"crate_id":23,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"6:6005:3400":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"25:11861:9201":{"crate_id":25,"path":["object","read","pe","import","Import"],"kind":"enum"},"1:22563:54535":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"4:2576:127":{"crate_id":4,"path":["std","error","Error"],"kind":"trait"},"5:4599:15146":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"4:15305:14626":{"crate_id":4,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"17:13733:15915":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"4:15933:2106":{"crate_id":4,"path":["std","usize"],"kind":"primitive"},"17:10558:15034":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:50121:13402":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"18:644:15005":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"9:1075:11904":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"16:5314:9152":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"6:4419:6659":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"25:4337:14973":{"crate_id":25,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"25:13154:15478":{"crate_id":25,"path":["object","macho","Section64"],"kind":"struct"},"1:22495:13289":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"25:12813:9727":{"crate_id":25,"path":["object","elf","NoteHeader64"],"kind":"struct"},"4:12132:14592":{"crate_id":4,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"6:1676:4515":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"25:13721:15580":{"crate_id":25,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"16:5672:13021":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:13760:15927":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:3084:14156":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"4:11161:14436":{"crate_id":4,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"22:331:2590":{"crate_id":22,"path":["addr2line","Location"],"kind":"struct"},"1:13778:54591":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"4:12673:15185":{"crate_id":4,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:0:430":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"4:6464:9093":{"crate_id":4,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"24:5938:3531":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"16:7804:13098":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"17:12051:15466":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"25:12717:9602":{"crate_id":25,"path":["object","elf","Dyn64"],"kind":"struct"},"26:169:53842":{"crate_id":26,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"16:6032:2478":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"27:712:14785":{"crate_id":27,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"23:8401:13091":{"crate_id":23,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"16:5927:13028":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"4:15033:16396":{"crate_id":4,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"25:14079:15706":{"crate_id":25,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"24:6061:4441":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:46624:14050":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"6:5274:7265":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"25:11331:16691":{"crate_id":25,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:11714:9601":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"23:3961:12118":{"crate_id":23,"path":["gimli","arch","AArch64"],"kind":"struct"},"5:6257:9065":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"25:11355:16693":{"crate_id":25,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"4:15660:2482":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"9:722:14786":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"5:7373:9062":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:3365:9110":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"25:14100:15715":{"crate_id":25,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:50010:16765":{"crate_id":1,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"4:15003:14518":{"crate_id":4,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"17:13163:15755":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"25:11170:11883":{"crate_id":25,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:11962:15453":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"6:5241:7242":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"23:8098:13072":{"crate_id":23,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"24:6916:8242":{"crate_id":24,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"20:231:14691":{"crate_id":20,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"6:4364:6652":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:3503:131":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:48561:13360":{"crate_id":1,"path":["core","fmt","FlagV1"],"kind":"enum"},"25:12838:9739":{"crate_id":25,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:13025:13408":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"25:2549:11869":{"crate_id":25,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"4:7654:14559":{"crate_id":4,"path":["std","process","ChildStdout"],"kind":"struct"},"1:48464:133":{"crate_id":1,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"4:11079:9021":{"crate_id":4,"path":["std","io","SeekFrom"],"kind":"enum"},"4:1637:14547":{"crate_id":4,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"25:13604:15558":{"crate_id":25,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"6:1658:4513":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:10028:16682":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:10458:11882":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"6:5414:7276":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:11015:16707":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"25:13792:15591":{"crate_id":25,"path":["object","macho","Nlist64"],"kind":"struct"},"1:49684:13435":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"24:6117:7687":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"4:15931:2104":{"crate_id":4,"path":["std","u128"],"kind":"primitive"},"23:7012:13039":{"crate_id":23,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:52878:14218":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"6:4215:6637":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:8579:157":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"5:8353:16307":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"25:9925:9151":{"crate_id":25,"path":["object","endian","Endianness"],"kind":"enum"},"1:51038:14234":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:10938:16701":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:13240:15771":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"4:9860:15184":{"crate_id":4,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"23:6239:13010":{"crate_id":23,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:10317:11833":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:13532:15850":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"4:7980:15166":{"crate_id":4,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"1:51760:16550":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"23:6684:12059":{"crate_id":23,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"25:11597:9187":{"crate_id":25,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"16:6357:13051":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"25:5458:9164":{"crate_id":25,"path":["object","read","traits","ObjectSymbolTable"],"kind":"trait"},"1:52528:14230":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:24458:173":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"23:94:2479":{"crate_id":23,"path":["gimli","endianity","NativeEndian"],"kind":"constant"},"23:7886:2590":{"crate_id":23,"path":["gimli","read","op","Location"],"kind":"enum"},"17:10420:11830":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"6:4023:6618":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"23:6253:13011":{"crate_id":23,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"23:7335:3148":{"crate_id":23,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"6:5185:7258":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:47784:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:9236:2850":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"6:6852:6793":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"25:11818:15042":{"crate_id":25,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"25:11085:11844":{"crate_id":25,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"23:3765:12115":{"crate_id":23,"path":["gimli","common","DwoId"],"kind":"struct"},"6:1602:4509":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"24:5407:7276":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:10278:13361":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"1:7905:14200":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"24:6805:8216":{"crate_id":24,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"4:3335:2780":{"crate_id":4,"path":["std","fs","canonicalize"],"kind":"function"},"17:10623:16693":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:45754:2297":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"25:13409:15527":{"crate_id":25,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"12:1100:14546":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"5:8194:9062":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"16:5384:13009":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:0:488":{"crate_id":1,"path":["core"],"kind":"module"},"15:248:3152":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:4733:102":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"1:49320:13596":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:12234:15492":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"25:14450:15811":{"crate_id":25,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"5:1635:14536":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"4:1153:1650":{"crate_id":4,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:53319:14210":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"25:12042:9193":{"crate_id":25,"path":["object","read","ObjectKind"],"kind":"enum"},"25:13634:15563":{"crate_id":25,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"16:5231:12989":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"5:8106:9062":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"24:1722:4521":{"crate_id":24,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:9759:9185":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:8344:14134":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:46523:14060":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:14201:2303":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"25:11903:9204":{"crate_id":25,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:50133:13405":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:53419:16607":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"24:3911:6608":{"crate_id":24,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"25:14552:15836":{"crate_id":25,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"24:6607:3570":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"25:13029:15459":{"crate_id":25,"path":["object","macho","MachHeader32"],"kind":"struct"},"24:592:3624":{"crate_id":24,"path":["libc","unix","linger"],"kind":"struct"},"5:1663:14539":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"4:15876:2536":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"4:11118:1972":{"crate_id":4,"path":["std","io","Bytes"],"kind":"struct"},"1:49605:13427":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"1:10272:109":{"crate_id":1,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"23:8227:13082":{"crate_id":23,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"12:866:9060":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"5:0:277":{"crate_id":5,"path":["alloc"],"kind":"module"},"16:5632:13020":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"16:4762:12745":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"23:8080:13071":{"crate_id":23,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"23:8818:13104":{"crate_id":23,"path":["gimli","read","value","ValueType"],"kind":"enum"},"16:3241:12107":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"24:4105:6629":{"crate_id":24,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:52264:14217":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"4:7668:14560":{"crate_id":4,"path":["std","process","ChildStderr"],"kind":"struct"},"1:13040:13410":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"23:3665:12113":{"crate_id":23,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"25:0:1678":{"crate_id":25,"path":["object"],"kind":"module"},"17:11750:9714":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"23:3611:12111":{"crate_id":23,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"4:1511:14542":{"crate_id":4,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:46376:14417":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:10902:14156":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"12:937:14542":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"6:3918:6608":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:46270:14299":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"24:0:798":{"crate_id":24,"path":["libc"],"kind":"module"},"25:13444:15538":{"crate_id":25,"path":["object","macho","DylibModule64"],"kind":"struct"},"23:3116:12091":{"crate_id":23,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"17:14000:15987":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"25:9657:9170":{"crate_id":25,"path":["object","common","ComdatKind"],"kind":"enum"},"16:6768:14942":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"12:774:9062":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"4:6562:9094":{"crate_id":4,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"25:1652:2670":{"crate_id":25,"path":["object","read","elf","file","FileHeader"],"kind":"trait"},"4:9638:16848":{"crate_id":4,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"9:686:14783":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"4:12005:57446":{"crate_id":4,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"1:22889:14156":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"23:8203:14951":{"crate_id":23,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"9:1020:11901":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:3756:2294":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:10988:16705":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"12:925:14538":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"25:13955:15603":{"crate_id":25,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:1944:1991":{"crate_id":1,"path":["core","mem"],"kind":"module"},"4:8198:15166":{"crate_id":4,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"6:624:3628":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"24:6148:7688":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"25:14561:15839":{"crate_id":25,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:9956:14311":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:23635:54499":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"25:11388:15352":{"crate_id":25,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"12:2032:14524":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"25:14701:15877":{"crate_id":25,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"25:13530:15547":{"crate_id":25,"path":["object","macho","RpathCommand"],"kind":"struct"},"16:5472:13014":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"24:6099:7686":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"5:5833:13837":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:24065:14283":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"16:4506:12664":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"4:9466:16869":{"crate_id":4,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"23:6178:13007":{"crate_id":23,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:46573:14045":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"23:7558:13061":{"crate_id":23,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"6:5978:7680":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:53442:16608":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"4:6795:9092":{"crate_id":4,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"24:4318:6647":{"crate_id":24,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"5:7212:9060":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:10635:15350":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"4:15909:2085":{"crate_id":4,"path":["std","never"],"kind":"primitive"},"4:10658:14529":{"crate_id":4,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"16:4955:12788":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"27:157:14797":{"crate_id":27,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"1:22710:14253":{"crate_id":1,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:23429:41667":{"crate_id":1,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"25:13017:15458":{"crate_id":25,"path":["object","macho","FatArch64"],"kind":"struct"},"5:1618:9062":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"25:12216:9201":{"crate_id":25,"path":["object","read","Import"],"kind":"struct"},"17:10435:11881":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"6:4193:6635":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:10284:13364":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:48214:13363":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:9186:9177":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"5:1215:14735":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"4:7291:16746":{"crate_id":4,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"4:9626:16847":{"crate_id":4,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"1:46410:100":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"25:13178:15479":{"crate_id":25,"path":["object","macho","Fvmlib"],"kind":"struct"},"23:1664:12072":{"crate_id":23,"path":["gimli","read","line","LineProgram"],"kind":"trait"},"12:2039:14525":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:32118:2248":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"1:3540:2296":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"16:6238:13048":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"16:7761:13096":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"24:4208:6637":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:10926:16700":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:22952:14194":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"24:3965:6457":{"crate_id":24,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"25:13244:15489":{"crate_id":25,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:49700:13432":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"4:14715:13791":{"crate_id":4,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"24:5262:7264":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"4:1156:1651":{"crate_id":4,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"23:6860:13031":{"crate_id":23,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"6:5282:7266":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:46583:14046":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"6:6100:7685":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"25:12955:15443":{"crate_id":25,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:49387:1972":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"25:9866:9177":{"crate_id":25,"path":["object","common","SectionFlags"],"kind":"enum"},"4:699:3091":{"crate_id":4,"path":["std","thread","local","LocalKey"],"kind":"struct"},"4:15881:1638":{"crate_id":4,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:47556:188":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"17:11482:9218":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"23:4373:12138":{"crate_id":23,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"6:5407:7275":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"24:1658:4514":{"crate_id":24,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:3256:2293":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"1:51581:14216":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"25:10369:61649":{"crate_id":25,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"4:10637:43186":{"crate_id":4,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:45973:14158":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"25:12467:9218":{"crate_id":25,"path":["object","elf","Ident"],"kind":"struct"},"6:4425:6660":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"4:12100:14590":{"crate_id":4,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"23:6972:13036":{"crate_id":23,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:9839:9187":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"5:1644:14537":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:12671:15579":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"25:14797:15915":{"crate_id":25,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"25:15006:15977":{"crate_id":25,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"5:5889:15155":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"1:24764:167":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:51192:16544":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:49551:13429":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"25:9976:9156":{"crate_id":25,"path":["object","endian","U16Bytes"],"kind":"struct"},"24:1716:4520":{"crate_id":24,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"4:2399:13777":{"crate_id":4,"path":["std","env","Vars"],"kind":"struct"},"25:14425:15806":{"crate_id":25,"path":["object","pe","ImageRelocation"],"kind":"struct"},"16:6208:13041":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"23:7386:13054":{"crate_id":23,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:13446:15822":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:51534:14228":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:9933:9189":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:2276:13527":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"25:10751:14981":{"crate_id":25,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"23:8160:13078":{"crate_id":23,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:3259:217":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"4:6204:14641":{"crate_id":4,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"18:136:53840":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"4:2163:9062":{"crate_id":4,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"26:713:13289":{"crate_id":26,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"24:74:2446":{"crate_id":24,"path":["libc","unix","uintptr_t"],"kind":"typedef"},"25:14517:15825":{"crate_id":25,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:13348:15800":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"18:896:15001":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"12:1762:15141":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"4:11382:14454":{"crate_id":4,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"5:4699:15148":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"5:1457:14548":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"4:6620:1030":{"crate_id":4,"path":["std","os","unix","prelude"],"kind":"module"},"1:3150:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"16:6101:13034":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"4:11058:14495":{"crate_id":4,"path":["std","io","util","Sink"],"kind":"struct"},"12:784:14539":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"24:5541:7312":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:47437:176":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"25:14654:15864":{"crate_id":25,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"9:157:14797":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"24:4120:6631":{"crate_id":24,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:10844:9187":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:9689:61649":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"4:3200:9002":{"crate_id":4,"path":["std","fs","read_to_string"],"kind":"function"},"12:463:61639":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"23:7476:13057":{"crate_id":23,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:10095:14976":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"24:5556:7313":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:12598:15563":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"4:1442:9062":{"crate_id":4,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"5:1441:14546":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:12343:15508":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"25:12504:9441":{"crate_id":25,"path":["object","elf","SectionHeader64"],"kind":"struct"},"4:12176:2348":{"crate_id":4,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:24106:19769":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"25:10681:50096":{"crate_id":25,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:12954:3130":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:56303:236":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:24628:2253":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"1:46672:14053":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:9296:9156":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"23:7527:13060":{"crate_id":23,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"24:71:2796":{"crate_id":24,"path":["libc","unix","size_t"],"kind":"typedef"},"1:3721:9126":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:49623:13428":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"24:571:3621":{"crate_id":24,"path":["libc","unix","iovec"],"kind":"struct"},"26:821:14995":{"crate_id":26,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"6:1596:4508":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:3318:9101":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"4:9770:15183":{"crate_id":4,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"17:13582:15862":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:300:205":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"17:12756:15591":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"25:11196:11858":{"crate_id":25,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"24:5429:15998":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:52342:14224":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"25:83:2479":{"crate_id":25,"path":["object","endian","NativeEndian"],"kind":"typedef"},"17:2512:11832":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"24:81:3217":{"crate_id":24,"path":["libc","unix","DIR"],"kind":"enum"},"23:4997:12612":{"crate_id":23,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:10656:15352":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"25:11741:16705":{"crate_id":25,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"5:8137:60303":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"4:4438:14490":{"crate_id":4,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"4:5790:9079":{"crate_id":4,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:13258:15779":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"16:7378:13085":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"12:812:14540":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:5137:2324":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"25:12144:9198":{"crate_id":25,"path":["object","read","SymbolMapName"],"kind":"struct"},"25:13421:15529":{"crate_id":25,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:12018:15192":{"crate_id":1,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"25:14929:15955":{"crate_id":25,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"23:7084:13043":{"crate_id":23,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:13942:15977":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:7733:14068":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"24:5372:7272":{"crate_id":24,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"4:5957:14672":{"crate_id":4,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:46001:14024":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"25:12171:9199":{"crate_id":25,"path":["object","read","ObjectMap"],"kind":"struct"},"23:3537:12108":{"crate_id":23,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:12142:15479":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"5:5536:2342":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"25:10120:9181":{"crate_id":25,"path":["object","endian","I32Bytes"],"kind":"struct"},"4:14235:13982":{"crate_id":4,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"26:783:15260":{"crate_id":26,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"24:4510:6670":{"crate_id":24,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"18:885:15000":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"17:13465:15831":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"24:4176:6634":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"18:610:15003":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"16:4350:12633":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:10117:14978":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:50137:13406":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"9:27:14826":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"24:4196:6636":{"crate_id":24,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:11378:9207":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"6:5159:7256":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:49505:13426":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:10106:14977":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"4:3319:9005":{"crate_id":4,"path":["std","fs","symlink_metadata"],"kind":"function"},"16:7453:13089":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"23:7160:13048":{"crate_id":23,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"4:4477:14486":{"crate_id":4,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"6:5436:15998":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:2938:177":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"18:720:15262":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"5:1091:15143":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"23:447:12067":{"crate_id":23,"path":["gimli","read","cfi","_UnwindSectionPrivate"],"kind":"trait"},"25:11263:15031":{"crate_id":25,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"25:1275:16680":{"crate_id":25,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"26:695:15008":{"crate_id":26,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"25:12826:9738":{"crate_id":25,"path":["object","elf","HashHeader"],"kind":"struct"},"25:11302:15035":{"crate_id":25,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:48984:14422":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"4:5746:9082":{"crate_id":4,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"25:14379:15795":{"crate_id":25,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"4:4604:14461":{"crate_id":4,"path":["std","io","Guard"],"kind":"struct"},"4:7797:3338":{"crate_id":4,"path":["std","process","exit"],"kind":"function"},"6:3868:6604":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:3500:130":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"24:1623:4512":{"crate_id":24,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"23:4493:12183":{"crate_id":23,"path":["gimli","constants","DwChildren"],"kind":"struct"},"16:7823:13099":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"24:4364:6653":{"crate_id":24,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:12028:15463":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"12:0:2142":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"24:4255:6640":{"crate_id":24,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"4:15929:2102":{"crate_id":4,"path":["std","u32"],"kind":"primitive"},"4:6442:9092":{"crate_id":4,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"1:21:672":{"crate_id":1,"path":["core","format_args"],"kind":"macro"},"16:6087:13033":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"25:11011:9187":{"crate_id":25,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:11696:9545":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"4:14489:16390":{"crate_id":4,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"1:47487:13587":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"25:11129:11848":{"crate_id":25,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"4:6700:8904":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"5:3040:16303":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"4:15934:2107":{"crate_id":4,"path":["std","reference"],"kind":"primitive"},"16:7195:13074":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:10288:13365":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:12095:15474":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"25:10829:9188":{"crate_id":25,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"12:181:14902":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"18:790:14992":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"6:4013:6617":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"25:14662:15865":{"crate_id":25,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:13884:15960":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"6:4040:6620":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"6:5167:7257":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"25:11289:15034":{"crate_id":25,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"4:15404:1631":{"crate_id":4,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"6:531:3616":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"25:12906:15418":{"crate_id":25,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"25:11665:16696":{"crate_id":25,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"23:8041:13069":{"crate_id":23,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:13865:15955":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"24:6928:8243":{"crate_id":24,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:4866:2330":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:50129:13404":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"25:13807:9204":{"crate_id":25,"path":["object","macho","Relocation"],"kind":"struct"},"12:853:14537":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"1:56290:236":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"}},"external_crates":{"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"24":{"name":"libc","html_root_url":null},"28":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"23":{"name":"gimli","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"addr2line","html_root_url":null},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"26":{"name":"memchr","html_root_url":null},"4":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"rustc_demangle","html_root_url":null},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"27":{"name":"miniz_oxide","html_root_url":null},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"25":{"name":"object","html_root_url":null}},"format_version":16}